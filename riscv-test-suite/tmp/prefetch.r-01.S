
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Wed Oct 16 01:02:52 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/trdthg/repo/act/riscv-arch-test/coverage/dataset.cgf \
//                  --cgf /home/trdthg/repo/act/riscv-arch-test/coverage/cmo/cbop.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the prefetch.r instruction of the RISC-V RV64Zicbop_Zicsr extension for the prefetch.r covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IZicbop_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zicbop.*Zicsr.*);def TEST_CASE_1=True;",prefetch.r)

RVTEST_SIGBASE(x14,signature_x14_1)

inst_0:
// rs1==x8, imm_val == (-2**(12-1)) & 0b00000, imm_val == (2**(12-1)-1) & 0b00000, imm_val == 0, rs1_val < imm_val and rs1_val != 0
// opcode: prefetch.r ; op1:x8; dest:x10; op1val:-0xb504f332; immval:0x0
TEST_PREFETCH(x14,x8,prefetch.r,0x0)

inst_1:
// rs1==x11, imm_val == 1<<5, rs1_val == 4194304, imm_val == 32
// opcode: prefetch.r ; op1:x11; dest:x10; op1val:0x400000; immval:0x20
TEST_PREFETCH(x14,x11,prefetch.r,0x20)

inst_2:
// rs1==x22, rs1_val == 18446744073709551614, imm_val == 128
// opcode: prefetch.r ; op1:x22; dest:x10; op1val:0xfffffffffffffffe; immval:0x80
TEST_PREFETCH(x14,x22,prefetch.r,0x80)

inst_3:
// rs1==x23, rs1_val == 18446744073709551613, 
// opcode: prefetch.r ; op1:x23; dest:x10; op1val:0xfffffffffffffffd; immval:0x3e0
TEST_PREFETCH(x14,x23,prefetch.r,0x3e0)

inst_4:
// rs1==x19, rs1_val == 18446744073709551611, 
// opcode: prefetch.r ; op1:x19; dest:x10; op1val:0xfffffffffffffffb; immval:-0x140
TEST_PREFETCH(x14,x19,prefetch.r,-0x140)

inst_5:
// rs1==x26, rs1_val == 18446744073709551607, imm_val == 1024
// opcode: prefetch.r ; op1:x26; dest:x10; op1val:0xfffffffffffffff7; immval:0x400
TEST_PREFETCH(x14,x26,prefetch.r,0x400)

inst_6:
// rs1==x6, rs1_val == 18446744073709551599, 
// opcode: prefetch.r ; op1:x6; dest:x10; op1val:0xffffffffffffffef; immval:0x80
TEST_PREFETCH(x14,x6,prefetch.r,0x80)

inst_7:
// rs1==x4, rs1_val == 18446744073709551583, 
// opcode: prefetch.r ; op1:x4; dest:x10; op1val:0xffffffffffffffdf; immval:-0xe0
TEST_PREFETCH(x14,x4,prefetch.r,-0xe0)

inst_8:
// rs1==x5, rs1_val == 18446744073709551551, 
// opcode: prefetch.r ; op1:x5; dest:x10; op1val:0xffffffffffffffbf; immval:0x20
TEST_PREFETCH(x14,x5,prefetch.r,0x20)

inst_9:
// rs1==x7, rs1_val == 18446744073709551487, imm_val == -1376
// opcode: prefetch.r ; op1:x7; dest:x10; op1val:0xffffffffffffff7f; immval:-0x560
TEST_PREFETCH(x14,x7,prefetch.r,-0x560)

inst_10:
// rs1==x9, rs1_val == 18446744073709551359, 
// opcode: prefetch.r ; op1:x9; dest:x10; op1val:0xfffffffffffffeff; immval:0x60
TEST_PREFETCH(x14,x9,prefetch.r,0x60)

inst_11:
// rs1==x0, rs1_val == 18446744073709551103, rs1_val > imm_val and imm_val == 0
// opcode: prefetch.r ; op1:x0; dest:x10; op1val:0x0; immval:0x0
TEST_PREFETCH(x14,x0,prefetch.r,0x0)

inst_12:
// rs1==x17, rs1_val == 18446744073709550591, 
// opcode: prefetch.r ; op1:x17; dest:x10; op1val:0xfffffffffffffbff; immval:-0x140
TEST_PREFETCH(x14,x17,prefetch.r,-0x140)

inst_13:
// rs1==x3, rs1_val == 18446744073709549567, 
// opcode: prefetch.r ; op1:x3; dest:x10; op1val:0xfffffffffffff7ff; immval:-0xe0
TEST_PREFETCH(x14,x3,prefetch.r,-0xe0)

inst_14:
// rs1==x12, rs1_val == 18446744073709547519, 
// opcode: prefetch.r ; op1:x12; dest:x10; op1val:0xffffffffffffefff; immval:-0x20
TEST_PREFETCH(x14,x12,prefetch.r,-0x20)

inst_15:
// rs1==x24, rs1_val == 18446744073709543423, 
// opcode: prefetch.r ; op1:x24; dest:x10; op1val:0xffffffffffffdfff; immval:0x80
TEST_PREFETCH(x14,x24,prefetch.r,0x80)

inst_16:
// rs1==x16, rs1_val == 18446744073709535231, imm_val == -96
// opcode: prefetch.r ; op1:x16; dest:x10; op1val:0xffffffffffffbfff; immval:-0x60
TEST_PREFETCH(x14,x16,prefetch.r,-0x60)

inst_17:
// rs1==x2, rs1_val == 18446744073709518847, 
// opcode: prefetch.r ; op1:x2; dest:x10; op1val:0xffffffffffff7fff; immval:0x120
TEST_PREFETCH(x14,x2,prefetch.r,0x120)

inst_18:
// rs1==x30, rs1_val == 18446744073709486079, 
// opcode: prefetch.r ; op1:x30; dest:x10; op1val:0xfffffffffffeffff; immval:0x60
TEST_PREFETCH(x14,x30,prefetch.r,0x60)

inst_19:
// rs1==x28, rs1_val == 18446744073709420543, 
// opcode: prefetch.r ; op1:x28; dest:x10; op1val:0xfffffffffffdffff; immval:-0x60
TEST_PREFETCH(x14,x28,prefetch.r,-0x60)

inst_20:
// rs1==x25, rs1_val == 18446744073709289471, imm_val == 512
// opcode: prefetch.r ; op1:x25; dest:x10; op1val:0xfffffffffffbffff; immval:0x200
TEST_PREFETCH(x14,x25,prefetch.r,0x200)

inst_21:
// rs1==x13, rs1_val == 18446744073709027327, 
// opcode: prefetch.r ; op1:x13; dest:x10; op1val:0xfffffffffff7ffff; immval:0x200
TEST_PREFETCH(x14,x13,prefetch.r,0x200)

inst_22:
// rs1==x29, rs1_val == 18446744073708503039, imm_val == -288
// opcode: prefetch.r ; op1:x29; dest:x10; op1val:0xffffffffffefffff; immval:-0x120
TEST_PREFETCH(x14,x29,prefetch.r,-0x120)

inst_23:
// rs1==x15, rs1_val == 18446744073707454463, imm_val == 64
// opcode: prefetch.r ; op1:x15; dest:x10; op1val:0xffffffffffdfffff; immval:0x40
TEST_PREFETCH(x14,x15,prefetch.r,0x40)

inst_24:
// rs1==x21, rs1_val == 18446744073705357311, imm_val == 2016
// opcode: prefetch.r ; op1:x21; dest:x10; op1val:0xffffffffffbfffff; immval:0x7e0
TEST_PREFETCH(x14,x21,prefetch.r,0x7e0)

inst_25:
// rs1==x1, rs1_val == 18446744073701163007, 
// opcode: prefetch.r ; op1:x1; dest:x10; op1val:0xffffffffff7fffff; immval:0x20
TEST_PREFETCH(x14,x1,prefetch.r,0x20)

inst_26:
// rs1==x20, rs1_val == 18446744073692774399, imm_val == -2048
// opcode: prefetch.r ; op1:x20; dest:x10; op1val:0xfffffffffeffffff; immval:-0x800
TEST_PREFETCH(x14,x20,prefetch.r,-0x800)
RVTEST_SIGBASE(x1,signature_x1_0)

inst_27:
// rs1==x31, rs1_val == 18446744073675997183, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffffffdffffff; immval:-0x120
TEST_PREFETCH(x1,x31,prefetch.r,-0x120)

inst_28:
// rs1==x27, rs1_val == 18446744073642442751, 
// opcode: prefetch.r ; op1:x27; dest:x10; op1val:0xfffffffffbffffff; immval:-0x100
TEST_PREFETCH(x1,x27,prefetch.r,-0x100)

inst_29:
// rs1==x14, rs1_val == 18446744073575333887, 
// opcode: prefetch.r ; op1:x14; dest:x10; op1val:0xfffffffff7ffffff; immval:0x60
TEST_PREFETCH(x1,x14,prefetch.r,0x60)

inst_30:
// rs1==x18, rs1_val == 18446744073441116159, 
// opcode: prefetch.r ; op1:x18; dest:x10; op1val:0xffffffffefffffff; immval:0x120
TEST_PREFETCH(x1,x18,prefetch.r,0x120)

inst_31:
// rs1==x10, rs1_val == 18446744073172680703, 
// opcode: prefetch.r ; op1:x10; dest:x10; op1val:0xffffffffdfffffff; immval:-0xc0
TEST_PREFETCH(x1,x10,prefetch.r,-0xc0)

inst_32:
// rs1_val == 18446744072635809791, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffffffbfffffff; immval:0xa0
TEST_PREFETCH(x1,x31,prefetch.r,0xa0)

inst_33:
// rs1_val == 18446744071562067967, imm_val == -544
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffffff7fffffff; immval:-0x220
TEST_PREFETCH(x1,x31,prefetch.r,-0x220)

inst_34:
// rs1_val == 18446744069414584319, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffffeffffffff; immval:-0x60
TEST_PREFETCH(x1,x31,prefetch.r,-0x60)

inst_35:
// rs1_val == 18446744065119617023, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffffdffffffff; immval:-0x560
TEST_PREFETCH(x1,x31,prefetch.r,-0x560)

inst_36:
// rs1_val == 18446744056529682431, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffffbffffffff; immval:0x120
TEST_PREFETCH(x1,x31,prefetch.r,0x120)

inst_37:
// rs1_val == 18446744039349813247, imm_val == -64
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffff7ffffffff; immval:-0x40
TEST_PREFETCH(x1,x31,prefetch.r,-0x40)

inst_38:
// rs1_val == 18446744004990074879, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffffefffffffff; immval:0x80
TEST_PREFETCH(x1,x31,prefetch.r,0x80)

inst_39:
// rs1_val == 18446743936270598143, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffffdfffffffff; immval:-0x120
TEST_PREFETCH(x1,x31,prefetch.r,-0x120)

inst_40:
// rs1_val == 18446743798831644671, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffffbfffffffff; immval:0x60
TEST_PREFETCH(x1,x31,prefetch.r,0x60)

inst_41:
// rs1_val == 18446743523953737727, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffff7fffffffff; immval:-0x220
TEST_PREFETCH(x1,x31,prefetch.r,-0x220)

inst_42:
// rs1_val == 18446742974197923839, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffeffffffffff; immval:-0x80
TEST_PREFETCH(x1,x31,prefetch.r,-0x80)

inst_43:
// rs1_val == 18446741874686296063, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffdffffffffff; immval:0xe0
TEST_PREFETCH(x1,x31,prefetch.r,0xe0)

inst_44:
// rs1_val == 18446739675663040511, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffbffffffffff; immval:0x20
TEST_PREFETCH(x1,x31,prefetch.r,0x20)

inst_45:
// rs1_val == 18446735277616529407, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffff7ffffffffff; immval:-0x400
TEST_PREFETCH(x1,x31,prefetch.r,-0x400)

inst_46:
// rs1_val == 18446726481523507199, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffefffffffffff; immval:0x40
TEST_PREFETCH(x1,x31,prefetch.r,0x40)

inst_47:
// rs1_val == 18446708889337462783, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffdfffffffffff; immval:-0x140
TEST_PREFETCH(x1,x31,prefetch.r,-0x140)

inst_48:
// rs1_val == 18446673704965373951, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffbfffffffffff; immval:0x80
TEST_PREFETCH(x1,x31,prefetch.r,0x80)

inst_49:
// rs1_val == 18446603336221196287, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffff7fffffffffff; immval:0x40
TEST_PREFETCH(x1,x31,prefetch.r,0x40)

inst_50:
// rs1_val == 18446462598732840959, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffeffffffffffff; immval:-0x800
TEST_PREFETCH(x1,x31,prefetch.r,-0x800)

inst_51:
// rs1_val == 18446181123756130303, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffdffffffffffff; immval:-0x60
TEST_PREFETCH(x1,x31,prefetch.r,-0x60)

inst_52:
// rs1_val == 18445618173802708991, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffbffffffffffff; immval:-0x120
TEST_PREFETCH(x1,x31,prefetch.r,-0x120)

inst_53:
// rs1_val == 18444492273895866367, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfff7ffffffffffff; immval:-0x100
TEST_PREFETCH(x1,x31,prefetch.r,-0x100)

inst_54:
// rs1_val == 18442240474082181119, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffefffffffffffff; immval:0x3e0
TEST_PREFETCH(x1,x31,prefetch.r,0x3e0)

inst_55:
// rs1_val == 18437736874454810623, imm_val == 256
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffdfffffffffffff; immval:0x100
TEST_PREFETCH(x1,x31,prefetch.r,0x100)

inst_56:
// rs1_val == 18428729675200069631, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffbfffffffffffff; immval:0x400
TEST_PREFETCH(x1,x31,prefetch.r,0x400)

inst_57:
// rs1_val == 18410715276690587647, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xff7fffffffffffff; immval:0xc0
TEST_PREFETCH(x1,x31,prefetch.r,0xc0)

inst_58:
// rs1_val == 18374686479671623679, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfeffffffffffffff; immval:0xe0
TEST_PREFETCH(x1,x31,prefetch.r,0xe0)

inst_59:
// rs1_val == 18302628885633695743, imm_val == 1344
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfdffffffffffffff; immval:0x540
TEST_PREFETCH(x1,x31,prefetch.r,0x540)

inst_60:
// rs1_val == 18158513697557839871, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfbffffffffffffff; immval:0x20
TEST_PREFETCH(x1,x31,prefetch.r,0x20)

inst_61:
// rs1_val == 17870283321406128127, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xf7ffffffffffffff; immval:-0x60
TEST_PREFETCH(x1,x31,prefetch.r,-0x60)

inst_62:
// rs1_val == 17293822569102704639, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xefffffffffffffff; immval:0x40
TEST_PREFETCH(x1,x31,prefetch.r,0x40)

inst_63:
// rs1_val == 16140901064495857663, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xdfffffffffffffff; immval:-0x220
TEST_PREFETCH(x1,x31,prefetch.r,-0x220)

inst_64:
// rs1_val == 13835058055282163711, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xbfffffffffffffff; immval:0xa0
TEST_PREFETCH(x1,x31,prefetch.r,0xa0)

inst_65:
// rs1_val == 9223372036854775807, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x7fffffffffffffff; immval:-0x120
TEST_PREFETCH(x1,x31,prefetch.r,-0x120)

inst_66:
// imm_val == -160, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:-0xb504f333; immval:-0xa0
TEST_PREFETCH(x1,x31,prefetch.r,-0xa0)

inst_67:
// imm_val == -1056, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffffffdffffff; immval:-0x420
TEST_PREFETCH(x1,x31,prefetch.r,-0x420)

inst_68:
// rs1_val == 1, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x1; immval:0x80
TEST_PREFETCH(x1,x31,prefetch.r,0x80)

inst_69:
// rs1_val == 2, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x2; immval:-0x40
TEST_PREFETCH(x1,x31,prefetch.r,-0x40)

inst_70:
// rs1_val == 4, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x4; immval:-0x60
TEST_PREFETCH(x1,x31,prefetch.r,-0x60)

inst_71:
// rs1_val == 8, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x8; immval:0x0
TEST_PREFETCH(x1,x31,prefetch.r,0x0)

inst_72:
// rs1_val == 16, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x10; immval:0x0
TEST_PREFETCH(x1,x31,prefetch.r,0x0)

inst_73:
// rs1_val == 9007199254740992, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x20000000000000; immval:-0x20
TEST_PREFETCH(x1,x31,prefetch.r,-0x20)

inst_74:
// rs1_val == 18014398509481984, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x40000000000000; immval:-0x140
TEST_PREFETCH(x1,x31,prefetch.r,-0x140)

inst_75:
// rs1_val == 36028797018963968, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x80000000000000; immval:-0x20
TEST_PREFETCH(x1,x31,prefetch.r,-0x20)

inst_76:
// rs1_val == 72057594037927936, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x100000000000000; immval:-0xe0
TEST_PREFETCH(x1,x31,prefetch.r,-0xe0)

inst_77:
// rs1_val == 144115188075855872, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x200000000000000; immval:-0xe0
TEST_PREFETCH(x1,x31,prefetch.r,-0xe0)

inst_78:
// rs1_val == 288230376151711744, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x400000000000000; immval:0x3e0
TEST_PREFETCH(x1,x31,prefetch.r,0x3e0)

inst_79:
// rs1_val == 576460752303423488, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x800000000000000; immval:0x40
TEST_PREFETCH(x1,x31,prefetch.r,0x40)

inst_80:
// rs1_val == 1152921504606846976, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x1000000000000000; immval:0x80
TEST_PREFETCH(x1,x31,prefetch.r,0x80)

inst_81:
// rs1_val == 2305843009213693952, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x2000000000000000; immval:-0x800
TEST_PREFETCH(x1,x31,prefetch.r,-0x800)

inst_82:
// rs1_val == 4611686018427387904, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x4000000000000000; immval:0x40
TEST_PREFETCH(x1,x31,prefetch.r,0x40)

inst_83:
// rs1_val == 9223372036854775808, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x8000000000000000; immval:0x400
TEST_PREFETCH(x1,x31,prefetch.r,0x400)

inst_84:
// rs1_val == 6148914691236517205, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x5555555555555555; immval:-0x40
TEST_PREFETCH(x1,x31,prefetch.r,-0x40)

inst_85:
// rs1_val == 12297829382473034410, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xaaaaaaaaaaaaaaaa; immval:0xe0
TEST_PREFETCH(x1,x31,prefetch.r,0xe0)

inst_86:
// rs1_val == (2**(xlen)-1), 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xffffffffffffffff; immval:-0x80
TEST_PREFETCH(x1,x31,prefetch.r,-0x80)

inst_87:
// rs1_val == 0, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x0; immval:0x40
TEST_PREFETCH(x1,x31,prefetch.r,0x40)

inst_88:
// rs1_val == imm_val and rs1_val == 0, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x0; immval:0x0
TEST_PREFETCH(x1,x31,prefetch.r,0x0)

inst_89:
// rs1_val == 32, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x20; immval:0x60
TEST_PREFETCH(x1,x31,prefetch.r,0x60)

inst_90:
// rs1_val == 64, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x40; immval:0x200
TEST_PREFETCH(x1,x31,prefetch.r,0x200)

inst_91:
// rs1_val == 128, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x80; immval:-0x420
TEST_PREFETCH(x1,x31,prefetch.r,-0x420)

inst_92:
// rs1_val == 256, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x100; immval:0x20
TEST_PREFETCH(x1,x31,prefetch.r,0x20)

inst_93:
// rs1_val == 512, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x200; immval:-0x400
TEST_PREFETCH(x1,x31,prefetch.r,-0x400)

inst_94:
// rs1_val == 1024, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x400; immval:0x60
TEST_PREFETCH(x1,x31,prefetch.r,0x60)

inst_95:
// rs1_val == 2048, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x800; immval:-0x560
TEST_PREFETCH(x1,x31,prefetch.r,-0x560)

inst_96:
// rs1_val == 4096, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x1000; immval:0xe0
TEST_PREFETCH(x1,x31,prefetch.r,0xe0)

inst_97:
// rs1_val == 8192, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x2000; immval:-0x100
TEST_PREFETCH(x1,x31,prefetch.r,-0x100)

inst_98:
// rs1_val == 16384, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x4000; immval:-0x20
TEST_PREFETCH(x1,x31,prefetch.r,-0x20)

inst_99:
// rs1_val == 32768, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x8000; immval:-0x140
TEST_PREFETCH(x1,x31,prefetch.r,-0x140)

inst_100:
// rs1_val == 65536, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x10000; immval:-0x560
TEST_PREFETCH(x1,x31,prefetch.r,-0x560)

inst_101:
// rs1_val == 131072, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x20000; immval:0xa0
TEST_PREFETCH(x1,x31,prefetch.r,0xa0)

inst_102:
// rs1_val == 262144, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x40000; immval:-0xa0
TEST_PREFETCH(x1,x31,prefetch.r,-0xa0)

inst_103:
// rs1_val == 524288, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x80000; immval:0x20
TEST_PREFETCH(x1,x31,prefetch.r,0x20)

inst_104:
// rs1_val == 1048576, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x100000; immval:0xa0
TEST_PREFETCH(x1,x31,prefetch.r,0xa0)

inst_105:
// rs1_val == 2097152, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x200000; immval:0x100
TEST_PREFETCH(x1,x31,prefetch.r,0x100)

inst_106:
// rs1_val == 8388608, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x800000; immval:-0xa0
TEST_PREFETCH(x1,x31,prefetch.r,-0xa0)

inst_107:
// rs1_val == 16777216, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x1000000; immval:0x540
TEST_PREFETCH(x1,x31,prefetch.r,0x540)

inst_108:
// rs1_val == 33554432, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x2000000; immval:0x40
TEST_PREFETCH(x1,x31,prefetch.r,0x40)

inst_109:
// rs1_val == 67108864, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x4000000; immval:0xe0
TEST_PREFETCH(x1,x31,prefetch.r,0xe0)

inst_110:
// rs1_val == 134217728, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x8000000; immval:0x100
TEST_PREFETCH(x1,x31,prefetch.r,0x100)

inst_111:
// rs1_val == 268435456, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x10000000; immval:0x3e0
TEST_PREFETCH(x1,x31,prefetch.r,0x3e0)

inst_112:
// rs1_val == 536870912, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x20000000; immval:-0x400
TEST_PREFETCH(x1,x31,prefetch.r,-0x400)

inst_113:
// rs1_val == 1073741824, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x40000000; immval:0x200
TEST_PREFETCH(x1,x31,prefetch.r,0x200)

inst_114:
// rs1_val == 2147483648, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x80000000; immval:0x3e0
TEST_PREFETCH(x1,x31,prefetch.r,0x3e0)

inst_115:
// rs1_val == 4294967296, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x100000000; immval:-0x80
TEST_PREFETCH(x1,x31,prefetch.r,-0x80)

inst_116:
// rs1_val == 8589934592, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x200000000; immval:0x400
TEST_PREFETCH(x1,x31,prefetch.r,0x400)

inst_117:
// rs1_val == 17179869184, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x400000000; immval:-0x40
TEST_PREFETCH(x1,x31,prefetch.r,-0x40)

inst_118:
// rs1_val == 34359738368, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x800000000; immval:-0x80
TEST_PREFETCH(x1,x31,prefetch.r,-0x80)

inst_119:
// rs1_val == 68719476736, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x1000000000; immval:0x540
TEST_PREFETCH(x1,x31,prefetch.r,0x540)

inst_120:
// rs1_val == 137438953472, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x2000000000; immval:0x60
TEST_PREFETCH(x1,x31,prefetch.r,0x60)

inst_121:
// rs1_val == 274877906944, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x4000000000; immval:-0x20
TEST_PREFETCH(x1,x31,prefetch.r,-0x20)

inst_122:
// rs1_val == 549755813888, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x8000000000; immval:-0x60
TEST_PREFETCH(x1,x31,prefetch.r,-0x60)

inst_123:
// rs1_val == 1099511627776, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x10000000000; immval:0xe0
TEST_PREFETCH(x1,x31,prefetch.r,0xe0)

inst_124:
// rs1_val == 2199023255552, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x20000000000; immval:-0x20
TEST_PREFETCH(x1,x31,prefetch.r,-0x20)

inst_125:
// rs1_val == 4398046511104, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x40000000000; immval:-0xe0
TEST_PREFETCH(x1,x31,prefetch.r,-0xe0)

inst_126:
// rs1_val == 8796093022208, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x80000000000; immval:0x80
TEST_PREFETCH(x1,x31,prefetch.r,0x80)

inst_127:
// rs1_val == 17592186044416, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x100000000000; immval:0x0
TEST_PREFETCH(x1,x31,prefetch.r,0x0)

inst_128:
// rs1_val == 35184372088832, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x200000000000; immval:0x200
TEST_PREFETCH(x1,x31,prefetch.r,0x200)

inst_129:
// rs1_val == 70368744177664, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x400000000000; immval:-0x400
TEST_PREFETCH(x1,x31,prefetch.r,-0x400)

inst_130:
// rs1_val == 140737488355328, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x800000000000; immval:0xe0
TEST_PREFETCH(x1,x31,prefetch.r,0xe0)

inst_131:
// rs1_val == 281474976710656, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x1000000000000; immval:0x7e0
TEST_PREFETCH(x1,x31,prefetch.r,0x7e0)

inst_132:
// rs1_val == 562949953421312, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x2000000000000; immval:-0x560
TEST_PREFETCH(x1,x31,prefetch.r,-0x560)

inst_133:
// rs1_val == 1125899906842624, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x4000000000000; immval:0xe0
TEST_PREFETCH(x1,x31,prefetch.r,0xe0)

inst_134:
// rs1_val == 2251799813685248, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x8000000000000; immval:-0x100
TEST_PREFETCH(x1,x31,prefetch.r,-0x100)

inst_135:
// rs1_val == 4503599627370496, 
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0x10000000000000; immval:-0x60
TEST_PREFETCH(x1,x31,prefetch.r,-0x60)

inst_136:
// rs1_val == 18446744073709551103, rs1_val > imm_val and imm_val == 0
// opcode: prefetch.r ; op1:x31; dest:x10; op1val:0xfffffffffffffdff; immval:0x0
TEST_PREFETCH(x1,x31,prefetch.r,0x0)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x14_0:
    .fill 0*((XLEN/8)/4),4,0xdeadbeef


signature_x14_1:
    .fill 27*((XLEN/8)/4),4,0xdeadbeef


signature_x1_0:
    .fill 110*((XLEN/8)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
