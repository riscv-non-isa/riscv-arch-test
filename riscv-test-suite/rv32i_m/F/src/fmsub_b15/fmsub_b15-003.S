
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_1536:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdffe000; valaddr_reg:x3; val_offset:4608*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4608*0 + 3*0*FLEN/8, x4, x1, x2)

inst_1537:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdfff000; valaddr_reg:x3; val_offset:4611*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4611*0 + 3*1*FLEN/8, x4, x1, x2)

inst_1538:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdfff800; valaddr_reg:x3; val_offset:4614*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4614*0 + 3*2*FLEN/8, x4, x1, x2)

inst_1539:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdfffc00; valaddr_reg:x3; val_offset:4617*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4617*0 + 3*3*FLEN/8, x4, x1, x2)

inst_1540:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdfffe00; valaddr_reg:x3; val_offset:4620*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4620*0 + 3*4*FLEN/8, x4, x1, x2)

inst_1541:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdffff00; valaddr_reg:x3; val_offset:4623*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4623*0 + 3*5*FLEN/8, x4, x1, x2)

inst_1542:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdffff80; valaddr_reg:x3; val_offset:4626*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4626*0 + 3*6*FLEN/8, x4, x1, x2)

inst_1543:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdffffc0; valaddr_reg:x3; val_offset:4629*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4629*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1544:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdffffe0; valaddr_reg:x3; val_offset:4632*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4632*0 + 3*8*FLEN/8, x4, x1, x2)

inst_1545:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdfffff0; valaddr_reg:x3; val_offset:4635*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4635*0 + 3*9*FLEN/8, x4, x1, x2)

inst_1546:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdfffff8; valaddr_reg:x3; val_offset:4638*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4638*0 + 3*10*FLEN/8, x4, x1, x2)

inst_1547:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdfffffc; valaddr_reg:x3; val_offset:4641*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4641*0 + 3*11*FLEN/8, x4, x1, x2)

inst_1548:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdfffffe; valaddr_reg:x3; val_offset:4644*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4644*0 + 3*12*FLEN/8, x4, x1, x2)

inst_1549:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x66d758 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x0df34d and fs3 == 1 and fe3 == 0x9b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce6d758; op2val:0x820df34d;
op3val:0xcdffffff; valaddr_reg:x3; val_offset:4647*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4647*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1550:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb800000; valaddr_reg:x3; val_offset:4650*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4650*0 + 3*14*FLEN/8, x4, x1, x2)

inst_1551:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb800001; valaddr_reg:x3; val_offset:4653*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4653*0 + 3*15*FLEN/8, x4, x1, x2)

inst_1552:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb800003; valaddr_reg:x3; val_offset:4656*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4656*0 + 3*16*FLEN/8, x4, x1, x2)

inst_1553:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb800007; valaddr_reg:x3; val_offset:4659*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4659*0 + 3*17*FLEN/8, x4, x1, x2)

inst_1554:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb80000f; valaddr_reg:x3; val_offset:4662*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4662*0 + 3*18*FLEN/8, x4, x1, x2)

inst_1555:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb80001f; valaddr_reg:x3; val_offset:4665*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4665*0 + 3*19*FLEN/8, x4, x1, x2)

inst_1556:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb80003f; valaddr_reg:x3; val_offset:4668*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4668*0 + 3*20*FLEN/8, x4, x1, x2)

inst_1557:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb80007f; valaddr_reg:x3; val_offset:4671*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4671*0 + 3*21*FLEN/8, x4, x1, x2)

inst_1558:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb8000ff; valaddr_reg:x3; val_offset:4674*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4674*0 + 3*22*FLEN/8, x4, x1, x2)

inst_1559:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb8001ff; valaddr_reg:x3; val_offset:4677*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4677*0 + 3*23*FLEN/8, x4, x1, x2)

inst_1560:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb8003ff; valaddr_reg:x3; val_offset:4680*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4680*0 + 3*24*FLEN/8, x4, x1, x2)

inst_1561:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb8007ff; valaddr_reg:x3; val_offset:4683*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4683*0 + 3*25*FLEN/8, x4, x1, x2)

inst_1562:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb800fff; valaddr_reg:x3; val_offset:4686*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4686*0 + 3*26*FLEN/8, x4, x1, x2)

inst_1563:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb801fff; valaddr_reg:x3; val_offset:4689*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4689*0 + 3*27*FLEN/8, x4, x1, x2)

inst_1564:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb803fff; valaddr_reg:x3; val_offset:4692*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4692*0 + 3*28*FLEN/8, x4, x1, x2)

inst_1565:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb807fff; valaddr_reg:x3; val_offset:4695*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4695*0 + 3*29*FLEN/8, x4, x1, x2)

inst_1566:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb80ffff; valaddr_reg:x3; val_offset:4698*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4698*0 + 3*30*FLEN/8, x4, x1, x2)

inst_1567:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb81ffff; valaddr_reg:x3; val_offset:4701*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4701*0 + 3*31*FLEN/8, x4, x1, x2)

inst_1568:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb83ffff; valaddr_reg:x3; val_offset:4704*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4704*0 + 3*32*FLEN/8, x4, x1, x2)

inst_1569:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb87ffff; valaddr_reg:x3; val_offset:4707*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4707*0 + 3*33*FLEN/8, x4, x1, x2)

inst_1570:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb8fffff; valaddr_reg:x3; val_offset:4710*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4710*0 + 3*34*FLEN/8, x4, x1, x2)

inst_1571:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xeb9fffff; valaddr_reg:x3; val_offset:4713*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4713*0 + 3*35*FLEN/8, x4, x1, x2)

inst_1572:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebbfffff; valaddr_reg:x3; val_offset:4716*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4716*0 + 3*36*FLEN/8, x4, x1, x2)

inst_1573:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebc00000; valaddr_reg:x3; val_offset:4719*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4719*0 + 3*37*FLEN/8, x4, x1, x2)

inst_1574:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebe00000; valaddr_reg:x3; val_offset:4722*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4722*0 + 3*38*FLEN/8, x4, x1, x2)

inst_1575:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebf00000; valaddr_reg:x3; val_offset:4725*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4725*0 + 3*39*FLEN/8, x4, x1, x2)

inst_1576:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebf80000; valaddr_reg:x3; val_offset:4728*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4728*0 + 3*40*FLEN/8, x4, x1, x2)

inst_1577:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfc0000; valaddr_reg:x3; val_offset:4731*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4731*0 + 3*41*FLEN/8, x4, x1, x2)

inst_1578:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfe0000; valaddr_reg:x3; val_offset:4734*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4734*0 + 3*42*FLEN/8, x4, x1, x2)

inst_1579:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebff0000; valaddr_reg:x3; val_offset:4737*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4737*0 + 3*43*FLEN/8, x4, x1, x2)

inst_1580:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebff8000; valaddr_reg:x3; val_offset:4740*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4740*0 + 3*44*FLEN/8, x4, x1, x2)

inst_1581:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebffc000; valaddr_reg:x3; val_offset:4743*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4743*0 + 3*45*FLEN/8, x4, x1, x2)

inst_1582:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebffe000; valaddr_reg:x3; val_offset:4746*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4746*0 + 3*46*FLEN/8, x4, x1, x2)

inst_1583:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfff000; valaddr_reg:x3; val_offset:4749*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4749*0 + 3*47*FLEN/8, x4, x1, x2)

inst_1584:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfff800; valaddr_reg:x3; val_offset:4752*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4752*0 + 3*48*FLEN/8, x4, x1, x2)

inst_1585:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfffc00; valaddr_reg:x3; val_offset:4755*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4755*0 + 3*49*FLEN/8, x4, x1, x2)

inst_1586:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfffe00; valaddr_reg:x3; val_offset:4758*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4758*0 + 3*50*FLEN/8, x4, x1, x2)

inst_1587:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebffff00; valaddr_reg:x3; val_offset:4761*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4761*0 + 3*51*FLEN/8, x4, x1, x2)

inst_1588:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebffff80; valaddr_reg:x3; val_offset:4764*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4764*0 + 3*52*FLEN/8, x4, x1, x2)

inst_1589:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebffffc0; valaddr_reg:x3; val_offset:4767*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4767*0 + 3*53*FLEN/8, x4, x1, x2)

inst_1590:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebffffe0; valaddr_reg:x3; val_offset:4770*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4770*0 + 3*54*FLEN/8, x4, x1, x2)

inst_1591:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfffff0; valaddr_reg:x3; val_offset:4773*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4773*0 + 3*55*FLEN/8, x4, x1, x2)

inst_1592:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfffff8; valaddr_reg:x3; val_offset:4776*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4776*0 + 3*56*FLEN/8, x4, x1, x2)

inst_1593:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfffffc; valaddr_reg:x3; val_offset:4779*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4779*0 + 3*57*FLEN/8, x4, x1, x2)

inst_1594:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebfffffe; valaddr_reg:x3; val_offset:4782*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4782*0 + 3*58*FLEN/8, x4, x1, x2)

inst_1595:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xebffffff; valaddr_reg:x3; val_offset:4785*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4785*0 + 3*59*FLEN/8, x4, x1, x2)

inst_1596:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff000001; valaddr_reg:x3; val_offset:4788*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4788*0 + 3*60*FLEN/8, x4, x1, x2)

inst_1597:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff000003; valaddr_reg:x3; val_offset:4791*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4791*0 + 3*61*FLEN/8, x4, x1, x2)

inst_1598:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff000007; valaddr_reg:x3; val_offset:4794*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4794*0 + 3*62*FLEN/8, x4, x1, x2)

inst_1599:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff199999; valaddr_reg:x3; val_offset:4797*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4797*0 + 3*63*FLEN/8, x4, x1, x2)

inst_1600:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff249249; valaddr_reg:x3; val_offset:4800*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4800*0 + 3*64*FLEN/8, x4, x1, x2)

inst_1601:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff333333; valaddr_reg:x3; val_offset:4803*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4803*0 + 3*65*FLEN/8, x4, x1, x2)

inst_1602:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:4806*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4806*0 + 3*66*FLEN/8, x4, x1, x2)

inst_1603:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:4809*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4809*0 + 3*67*FLEN/8, x4, x1, x2)

inst_1604:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff444444; valaddr_reg:x3; val_offset:4812*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4812*0 + 3*68*FLEN/8, x4, x1, x2)

inst_1605:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:4815*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4815*0 + 3*69*FLEN/8, x4, x1, x2)

inst_1606:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:4818*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4818*0 + 3*70*FLEN/8, x4, x1, x2)

inst_1607:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff666666; valaddr_reg:x3; val_offset:4821*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4821*0 + 3*71*FLEN/8, x4, x1, x2)

inst_1608:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:4824*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4824*0 + 3*72*FLEN/8, x4, x1, x2)

inst_1609:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:4827*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4827*0 + 3*73*FLEN/8, x4, x1, x2)

inst_1610:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:4830*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4830*0 + 3*74*FLEN/8, x4, x1, x2)

inst_1611:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x704072 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0863e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf04072; op2val:0xc20863e8;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:4833*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4833*0 + 3*75*FLEN/8, x4, x1, x2)

inst_1612:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f000000; valaddr_reg:x3; val_offset:4836*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4836*0 + 3*76*FLEN/8, x4, x1, x2)

inst_1613:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f000001; valaddr_reg:x3; val_offset:4839*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4839*0 + 3*77*FLEN/8, x4, x1, x2)

inst_1614:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f000003; valaddr_reg:x3; val_offset:4842*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4842*0 + 3*78*FLEN/8, x4, x1, x2)

inst_1615:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f000007; valaddr_reg:x3; val_offset:4845*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4845*0 + 3*79*FLEN/8, x4, x1, x2)

inst_1616:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f00000f; valaddr_reg:x3; val_offset:4848*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4848*0 + 3*80*FLEN/8, x4, x1, x2)

inst_1617:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f00001f; valaddr_reg:x3; val_offset:4851*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4851*0 + 3*81*FLEN/8, x4, x1, x2)

inst_1618:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f00003f; valaddr_reg:x3; val_offset:4854*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4854*0 + 3*82*FLEN/8, x4, x1, x2)

inst_1619:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f00007f; valaddr_reg:x3; val_offset:4857*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4857*0 + 3*83*FLEN/8, x4, x1, x2)

inst_1620:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f0000ff; valaddr_reg:x3; val_offset:4860*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4860*0 + 3*84*FLEN/8, x4, x1, x2)

inst_1621:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f0001ff; valaddr_reg:x3; val_offset:4863*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4863*0 + 3*85*FLEN/8, x4, x1, x2)

inst_1622:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f0003ff; valaddr_reg:x3; val_offset:4866*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4866*0 + 3*86*FLEN/8, x4, x1, x2)

inst_1623:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f0007ff; valaddr_reg:x3; val_offset:4869*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4869*0 + 3*87*FLEN/8, x4, x1, x2)

inst_1624:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f000fff; valaddr_reg:x3; val_offset:4872*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4872*0 + 3*88*FLEN/8, x4, x1, x2)

inst_1625:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f001fff; valaddr_reg:x3; val_offset:4875*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4875*0 + 3*89*FLEN/8, x4, x1, x2)

inst_1626:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f003fff; valaddr_reg:x3; val_offset:4878*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4878*0 + 3*90*FLEN/8, x4, x1, x2)

inst_1627:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f007fff; valaddr_reg:x3; val_offset:4881*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4881*0 + 3*91*FLEN/8, x4, x1, x2)

inst_1628:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f00ffff; valaddr_reg:x3; val_offset:4884*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4884*0 + 3*92*FLEN/8, x4, x1, x2)

inst_1629:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f01ffff; valaddr_reg:x3; val_offset:4887*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4887*0 + 3*93*FLEN/8, x4, x1, x2)

inst_1630:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f03ffff; valaddr_reg:x3; val_offset:4890*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4890*0 + 3*94*FLEN/8, x4, x1, x2)

inst_1631:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f07ffff; valaddr_reg:x3; val_offset:4893*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4893*0 + 3*95*FLEN/8, x4, x1, x2)

inst_1632:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f0fffff; valaddr_reg:x3; val_offset:4896*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4896*0 + 3*96*FLEN/8, x4, x1, x2)

inst_1633:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f1fffff; valaddr_reg:x3; val_offset:4899*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4899*0 + 3*97*FLEN/8, x4, x1, x2)

inst_1634:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f3fffff; valaddr_reg:x3; val_offset:4902*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4902*0 + 3*98*FLEN/8, x4, x1, x2)

inst_1635:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f400000; valaddr_reg:x3; val_offset:4905*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4905*0 + 3*99*FLEN/8, x4, x1, x2)

inst_1636:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f600000; valaddr_reg:x3; val_offset:4908*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4908*0 + 3*100*FLEN/8, x4, x1, x2)

inst_1637:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f700000; valaddr_reg:x3; val_offset:4911*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4911*0 + 3*101*FLEN/8, x4, x1, x2)

inst_1638:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f780000; valaddr_reg:x3; val_offset:4914*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4914*0 + 3*102*FLEN/8, x4, x1, x2)

inst_1639:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7c0000; valaddr_reg:x3; val_offset:4917*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4917*0 + 3*103*FLEN/8, x4, x1, x2)

inst_1640:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7e0000; valaddr_reg:x3; val_offset:4920*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4920*0 + 3*104*FLEN/8, x4, x1, x2)

inst_1641:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7f0000; valaddr_reg:x3; val_offset:4923*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4923*0 + 3*105*FLEN/8, x4, x1, x2)

inst_1642:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7f8000; valaddr_reg:x3; val_offset:4926*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4926*0 + 3*106*FLEN/8, x4, x1, x2)

inst_1643:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7fc000; valaddr_reg:x3; val_offset:4929*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4929*0 + 3*107*FLEN/8, x4, x1, x2)

inst_1644:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7fe000; valaddr_reg:x3; val_offset:4932*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4932*0 + 3*108*FLEN/8, x4, x1, x2)

inst_1645:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7ff000; valaddr_reg:x3; val_offset:4935*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4935*0 + 3*109*FLEN/8, x4, x1, x2)

inst_1646:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7ff800; valaddr_reg:x3; val_offset:4938*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4938*0 + 3*110*FLEN/8, x4, x1, x2)

inst_1647:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7ffc00; valaddr_reg:x3; val_offset:4941*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4941*0 + 3*111*FLEN/8, x4, x1, x2)

inst_1648:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7ffe00; valaddr_reg:x3; val_offset:4944*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4944*0 + 3*112*FLEN/8, x4, x1, x2)

inst_1649:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7fff00; valaddr_reg:x3; val_offset:4947*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4947*0 + 3*113*FLEN/8, x4, x1, x2)

inst_1650:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7fff80; valaddr_reg:x3; val_offset:4950*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4950*0 + 3*114*FLEN/8, x4, x1, x2)

inst_1651:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7fffc0; valaddr_reg:x3; val_offset:4953*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4953*0 + 3*115*FLEN/8, x4, x1, x2)

inst_1652:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7fffe0; valaddr_reg:x3; val_offset:4956*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4956*0 + 3*116*FLEN/8, x4, x1, x2)

inst_1653:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7ffff0; valaddr_reg:x3; val_offset:4959*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4959*0 + 3*117*FLEN/8, x4, x1, x2)

inst_1654:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7ffff8; valaddr_reg:x3; val_offset:4962*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4962*0 + 3*118*FLEN/8, x4, x1, x2)

inst_1655:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7ffffc; valaddr_reg:x3; val_offset:4965*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4965*0 + 3*119*FLEN/8, x4, x1, x2)

inst_1656:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7ffffe; valaddr_reg:x3; val_offset:4968*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4968*0 + 3*120*FLEN/8, x4, x1, x2)

inst_1657:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x5e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x2f7fffff; valaddr_reg:x3; val_offset:4971*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4971*0 + 3*121*FLEN/8, x4, x1, x2)

inst_1658:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3f800001; valaddr_reg:x3; val_offset:4974*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4974*0 + 3*122*FLEN/8, x4, x1, x2)

inst_1659:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3f800003; valaddr_reg:x3; val_offset:4977*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4977*0 + 3*123*FLEN/8, x4, x1, x2)

inst_1660:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3f800007; valaddr_reg:x3; val_offset:4980*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4980*0 + 3*124*FLEN/8, x4, x1, x2)

inst_1661:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3f999999; valaddr_reg:x3; val_offset:4983*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4983*0 + 3*125*FLEN/8, x4, x1, x2)

inst_1662:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:4986*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4986*0 + 3*126*FLEN/8, x4, x1, x2)

inst_1663:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:4989*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4989*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_1664:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:4992*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4992*0 + 3*128*FLEN/8, x4, x1, x2)

inst_1665:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:4995*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4995*0 + 3*129*FLEN/8, x4, x1, x2)

inst_1666:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:4998*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4998*0 + 3*130*FLEN/8, x4, x1, x2)

inst_1667:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:5001*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5001*0 + 3*131*FLEN/8, x4, x1, x2)

inst_1668:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:5004*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5004*0 + 3*132*FLEN/8, x4, x1, x2)

inst_1669:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:5007*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5007*0 + 3*133*FLEN/8, x4, x1, x2)

inst_1670:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:5010*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5010*0 + 3*134*FLEN/8, x4, x1, x2)

inst_1671:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:5013*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5013*0 + 3*135*FLEN/8, x4, x1, x2)

inst_1672:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:5016*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5016*0 + 3*136*FLEN/8, x4, x1, x2)

inst_1673:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x7b2225 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x027aff and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cfb2225; op2val:0x2027aff;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:5019*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5019*0 + 3*137*FLEN/8, x4, x1, x2)

inst_1674:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000000; valaddr_reg:x3; val_offset:5022*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5022*0 + 3*138*FLEN/8, x4, x1, x2)

inst_1675:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000001; valaddr_reg:x3; val_offset:5025*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5025*0 + 3*139*FLEN/8, x4, x1, x2)

inst_1676:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000003; valaddr_reg:x3; val_offset:5028*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5028*0 + 3*140*FLEN/8, x4, x1, x2)

inst_1677:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000007; valaddr_reg:x3; val_offset:5031*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5031*0 + 3*141*FLEN/8, x4, x1, x2)

inst_1678:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00000f; valaddr_reg:x3; val_offset:5034*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5034*0 + 3*142*FLEN/8, x4, x1, x2)

inst_1679:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00001f; valaddr_reg:x3; val_offset:5037*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5037*0 + 3*143*FLEN/8, x4, x1, x2)

inst_1680:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00003f; valaddr_reg:x3; val_offset:5040*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5040*0 + 3*144*FLEN/8, x4, x1, x2)

inst_1681:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00007f; valaddr_reg:x3; val_offset:5043*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5043*0 + 3*145*FLEN/8, x4, x1, x2)

inst_1682:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0000ff; valaddr_reg:x3; val_offset:5046*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5046*0 + 3*146*FLEN/8, x4, x1, x2)

inst_1683:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0001ff; valaddr_reg:x3; val_offset:5049*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5049*0 + 3*147*FLEN/8, x4, x1, x2)

inst_1684:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0003ff; valaddr_reg:x3; val_offset:5052*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5052*0 + 3*148*FLEN/8, x4, x1, x2)

inst_1685:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0007ff; valaddr_reg:x3; val_offset:5055*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5055*0 + 3*149*FLEN/8, x4, x1, x2)

inst_1686:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe000fff; valaddr_reg:x3; val_offset:5058*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5058*0 + 3*150*FLEN/8, x4, x1, x2)

inst_1687:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe001fff; valaddr_reg:x3; val_offset:5061*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5061*0 + 3*151*FLEN/8, x4, x1, x2)

inst_1688:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe003fff; valaddr_reg:x3; val_offset:5064*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5064*0 + 3*152*FLEN/8, x4, x1, x2)

inst_1689:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe007fff; valaddr_reg:x3; val_offset:5067*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5067*0 + 3*153*FLEN/8, x4, x1, x2)

inst_1690:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe00ffff; valaddr_reg:x3; val_offset:5070*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5070*0 + 3*154*FLEN/8, x4, x1, x2)

inst_1691:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe01ffff; valaddr_reg:x3; val_offset:5073*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5073*0 + 3*155*FLEN/8, x4, x1, x2)

inst_1692:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe03ffff; valaddr_reg:x3; val_offset:5076*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5076*0 + 3*156*FLEN/8, x4, x1, x2)

inst_1693:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe07ffff; valaddr_reg:x3; val_offset:5079*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5079*0 + 3*157*FLEN/8, x4, x1, x2)

inst_1694:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe0fffff; valaddr_reg:x3; val_offset:5082*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5082*0 + 3*158*FLEN/8, x4, x1, x2)

inst_1695:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe1fffff; valaddr_reg:x3; val_offset:5085*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5085*0 + 3*159*FLEN/8, x4, x1, x2)

inst_1696:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe3fffff; valaddr_reg:x3; val_offset:5088*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5088*0 + 3*160*FLEN/8, x4, x1, x2)

inst_1697:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe400000; valaddr_reg:x3; val_offset:5091*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5091*0 + 3*161*FLEN/8, x4, x1, x2)

inst_1698:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe600000; valaddr_reg:x3; val_offset:5094*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5094*0 + 3*162*FLEN/8, x4, x1, x2)

inst_1699:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe700000; valaddr_reg:x3; val_offset:5097*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5097*0 + 3*163*FLEN/8, x4, x1, x2)

inst_1700:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe780000; valaddr_reg:x3; val_offset:5100*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5100*0 + 3*164*FLEN/8, x4, x1, x2)

inst_1701:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7c0000; valaddr_reg:x3; val_offset:5103*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5103*0 + 3*165*FLEN/8, x4, x1, x2)

inst_1702:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7e0000; valaddr_reg:x3; val_offset:5106*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5106*0 + 3*166*FLEN/8, x4, x1, x2)

inst_1703:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7f0000; valaddr_reg:x3; val_offset:5109*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5109*0 + 3*167*FLEN/8, x4, x1, x2)

inst_1704:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7f8000; valaddr_reg:x3; val_offset:5112*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5112*0 + 3*168*FLEN/8, x4, x1, x2)

inst_1705:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fc000; valaddr_reg:x3; val_offset:5115*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5115*0 + 3*169*FLEN/8, x4, x1, x2)

inst_1706:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fe000; valaddr_reg:x3; val_offset:5118*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5118*0 + 3*170*FLEN/8, x4, x1, x2)

inst_1707:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ff000; valaddr_reg:x3; val_offset:5121*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5121*0 + 3*171*FLEN/8, x4, x1, x2)

inst_1708:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ff800; valaddr_reg:x3; val_offset:5124*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5124*0 + 3*172*FLEN/8, x4, x1, x2)

inst_1709:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffc00; valaddr_reg:x3; val_offset:5127*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5127*0 + 3*173*FLEN/8, x4, x1, x2)

inst_1710:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffe00; valaddr_reg:x3; val_offset:5130*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5130*0 + 3*174*FLEN/8, x4, x1, x2)

inst_1711:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fff00; valaddr_reg:x3; val_offset:5133*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5133*0 + 3*175*FLEN/8, x4, x1, x2)

inst_1712:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fff80; valaddr_reg:x3; val_offset:5136*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5136*0 + 3*176*FLEN/8, x4, x1, x2)

inst_1713:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fffc0; valaddr_reg:x3; val_offset:5139*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5139*0 + 3*177*FLEN/8, x4, x1, x2)

inst_1714:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fffe0; valaddr_reg:x3; val_offset:5142*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5142*0 + 3*178*FLEN/8, x4, x1, x2)

inst_1715:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffff0; valaddr_reg:x3; val_offset:5145*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5145*0 + 3*179*FLEN/8, x4, x1, x2)

inst_1716:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffff8; valaddr_reg:x3; val_offset:5148*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5148*0 + 3*180*FLEN/8, x4, x1, x2)

inst_1717:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffffc; valaddr_reg:x3; val_offset:5151*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5151*0 + 3*181*FLEN/8, x4, x1, x2)

inst_1718:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7ffffe; valaddr_reg:x3; val_offset:5154*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5154*0 + 3*182*FLEN/8, x4, x1, x2)

inst_1719:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbe7fffff; valaddr_reg:x3; val_offset:5157*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5157*0 + 3*183*FLEN/8, x4, x1, x2)

inst_1720:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbf800001; valaddr_reg:x3; val_offset:5160*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5160*0 + 3*184*FLEN/8, x4, x1, x2)

inst_1721:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbf800003; valaddr_reg:x3; val_offset:5163*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5163*0 + 3*185*FLEN/8, x4, x1, x2)

inst_1722:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbf800007; valaddr_reg:x3; val_offset:5166*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5166*0 + 3*186*FLEN/8, x4, x1, x2)

inst_1723:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbf999999; valaddr_reg:x3; val_offset:5169*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5169*0 + 3*187*FLEN/8, x4, x1, x2)

inst_1724:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:5172*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5172*0 + 3*188*FLEN/8, x4, x1, x2)

inst_1725:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:5175*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5175*0 + 3*189*FLEN/8, x4, x1, x2)

inst_1726:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:5178*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5178*0 + 3*190*FLEN/8, x4, x1, x2)

inst_1727:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:5181*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5181*0 + 3*191*FLEN/8, x4, x1, x2)

inst_1728:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:5184*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5184*0 + 3*192*FLEN/8, x4, x1, x2)

inst_1729:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:5187*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5187*0 + 3*193*FLEN/8, x4, x1, x2)

inst_1730:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:5190*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5190*0 + 3*194*FLEN/8, x4, x1, x2)

inst_1731:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:5193*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5193*0 + 3*195*FLEN/8, x4, x1, x2)

inst_1732:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:5196*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5196*0 + 3*196*FLEN/8, x4, x1, x2)

inst_1733:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:5199*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5199*0 + 3*197*FLEN/8, x4, x1, x2)

inst_1734:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:5202*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5202*0 + 3*198*FLEN/8, x4, x1, x2)

inst_1735:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04a67d and fs2 == 1 and fe2 == 0x03 and fm2 == 0x77067d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d04a67d; op2val:0x81f7067d;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:5205*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5205*0 + 3*199*FLEN/8, x4, x1, x2)

inst_1736:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800000; valaddr_reg:x3; val_offset:5208*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5208*0 + 3*200*FLEN/8, x4, x1, x2)

inst_1737:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800001; valaddr_reg:x3; val_offset:5211*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5211*0 + 3*201*FLEN/8, x4, x1, x2)

inst_1738:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800003; valaddr_reg:x3; val_offset:5214*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5214*0 + 3*202*FLEN/8, x4, x1, x2)

inst_1739:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800007; valaddr_reg:x3; val_offset:5217*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5217*0 + 3*203*FLEN/8, x4, x1, x2)

inst_1740:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980000f; valaddr_reg:x3; val_offset:5220*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5220*0 + 3*204*FLEN/8, x4, x1, x2)

inst_1741:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980001f; valaddr_reg:x3; val_offset:5223*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5223*0 + 3*205*FLEN/8, x4, x1, x2)

inst_1742:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980003f; valaddr_reg:x3; val_offset:5226*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5226*0 + 3*206*FLEN/8, x4, x1, x2)

inst_1743:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980007f; valaddr_reg:x3; val_offset:5229*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5229*0 + 3*207*FLEN/8, x4, x1, x2)

inst_1744:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398000ff; valaddr_reg:x3; val_offset:5232*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5232*0 + 3*208*FLEN/8, x4, x1, x2)

inst_1745:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398001ff; valaddr_reg:x3; val_offset:5235*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5235*0 + 3*209*FLEN/8, x4, x1, x2)

inst_1746:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398003ff; valaddr_reg:x3; val_offset:5238*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5238*0 + 3*210*FLEN/8, x4, x1, x2)

inst_1747:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398007ff; valaddr_reg:x3; val_offset:5241*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5241*0 + 3*211*FLEN/8, x4, x1, x2)

inst_1748:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39800fff; valaddr_reg:x3; val_offset:5244*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5244*0 + 3*212*FLEN/8, x4, x1, x2)

inst_1749:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39801fff; valaddr_reg:x3; val_offset:5247*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5247*0 + 3*213*FLEN/8, x4, x1, x2)

inst_1750:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39803fff; valaddr_reg:x3; val_offset:5250*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5250*0 + 3*214*FLEN/8, x4, x1, x2)

inst_1751:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39807fff; valaddr_reg:x3; val_offset:5253*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5253*0 + 3*215*FLEN/8, x4, x1, x2)

inst_1752:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3980ffff; valaddr_reg:x3; val_offset:5256*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5256*0 + 3*216*FLEN/8, x4, x1, x2)

inst_1753:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3981ffff; valaddr_reg:x3; val_offset:5259*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5259*0 + 3*217*FLEN/8, x4, x1, x2)

inst_1754:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3983ffff; valaddr_reg:x3; val_offset:5262*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5262*0 + 3*218*FLEN/8, x4, x1, x2)

inst_1755:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3987ffff; valaddr_reg:x3; val_offset:5265*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5265*0 + 3*219*FLEN/8, x4, x1, x2)

inst_1756:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x398fffff; valaddr_reg:x3; val_offset:5268*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5268*0 + 3*220*FLEN/8, x4, x1, x2)

inst_1757:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x399fffff; valaddr_reg:x3; val_offset:5271*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5271*0 + 3*221*FLEN/8, x4, x1, x2)

inst_1758:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39bfffff; valaddr_reg:x3; val_offset:5274*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5274*0 + 3*222*FLEN/8, x4, x1, x2)

inst_1759:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39c00000; valaddr_reg:x3; val_offset:5277*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5277*0 + 3*223*FLEN/8, x4, x1, x2)

inst_1760:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39e00000; valaddr_reg:x3; val_offset:5280*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5280*0 + 3*224*FLEN/8, x4, x1, x2)

inst_1761:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39f00000; valaddr_reg:x3; val_offset:5283*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5283*0 + 3*225*FLEN/8, x4, x1, x2)

inst_1762:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39f80000; valaddr_reg:x3; val_offset:5286*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5286*0 + 3*226*FLEN/8, x4, x1, x2)

inst_1763:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fc0000; valaddr_reg:x3; val_offset:5289*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5289*0 + 3*227*FLEN/8, x4, x1, x2)

inst_1764:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fe0000; valaddr_reg:x3; val_offset:5292*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5292*0 + 3*228*FLEN/8, x4, x1, x2)

inst_1765:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ff0000; valaddr_reg:x3; val_offset:5295*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5295*0 + 3*229*FLEN/8, x4, x1, x2)

inst_1766:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ff8000; valaddr_reg:x3; val_offset:5298*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5298*0 + 3*230*FLEN/8, x4, x1, x2)

inst_1767:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffc000; valaddr_reg:x3; val_offset:5301*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5301*0 + 3*231*FLEN/8, x4, x1, x2)

inst_1768:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffe000; valaddr_reg:x3; val_offset:5304*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5304*0 + 3*232*FLEN/8, x4, x1, x2)

inst_1769:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fff000; valaddr_reg:x3; val_offset:5307*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5307*0 + 3*233*FLEN/8, x4, x1, x2)

inst_1770:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fff800; valaddr_reg:x3; val_offset:5310*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5310*0 + 3*234*FLEN/8, x4, x1, x2)

inst_1771:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffc00; valaddr_reg:x3; val_offset:5313*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5313*0 + 3*235*FLEN/8, x4, x1, x2)

inst_1772:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffe00; valaddr_reg:x3; val_offset:5316*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5316*0 + 3*236*FLEN/8, x4, x1, x2)

inst_1773:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffff00; valaddr_reg:x3; val_offset:5319*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5319*0 + 3*237*FLEN/8, x4, x1, x2)

inst_1774:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffff80; valaddr_reg:x3; val_offset:5322*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5322*0 + 3*238*FLEN/8, x4, x1, x2)

inst_1775:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffffc0; valaddr_reg:x3; val_offset:5325*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5325*0 + 3*239*FLEN/8, x4, x1, x2)

inst_1776:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffffe0; valaddr_reg:x3; val_offset:5328*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5328*0 + 3*240*FLEN/8, x4, x1, x2)

inst_1777:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffff0; valaddr_reg:x3; val_offset:5331*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5331*0 + 3*241*FLEN/8, x4, x1, x2)

inst_1778:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffff8; valaddr_reg:x3; val_offset:5334*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5334*0 + 3*242*FLEN/8, x4, x1, x2)

inst_1779:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffffc; valaddr_reg:x3; val_offset:5337*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5337*0 + 3*243*FLEN/8, x4, x1, x2)

inst_1780:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39fffffe; valaddr_reg:x3; val_offset:5340*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5340*0 + 3*244*FLEN/8, x4, x1, x2)

inst_1781:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x73 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x39ffffff; valaddr_reg:x3; val_offset:5343*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5343*0 + 3*245*FLEN/8, x4, x1, x2)

inst_1782:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3f800001; valaddr_reg:x3; val_offset:5346*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5346*0 + 3*246*FLEN/8, x4, x1, x2)

inst_1783:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3f800003; valaddr_reg:x3; val_offset:5349*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5349*0 + 3*247*FLEN/8, x4, x1, x2)

inst_1784:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3f800007; valaddr_reg:x3; val_offset:5352*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5352*0 + 3*248*FLEN/8, x4, x1, x2)

inst_1785:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3f999999; valaddr_reg:x3; val_offset:5355*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5355*0 + 3*249*FLEN/8, x4, x1, x2)

inst_1786:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:5358*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5358*0 + 3*250*FLEN/8, x4, x1, x2)

inst_1787:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:5361*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5361*0 + 3*251*FLEN/8, x4, x1, x2)

inst_1788:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:5364*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5364*0 + 3*252*FLEN/8, x4, x1, x2)

inst_1789:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:5367*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5367*0 + 3*253*FLEN/8, x4, x1, x2)

inst_1790:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:5370*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5370*0 + 3*254*FLEN/8, x4, x1, x2)

inst_1791:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:5373*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5373*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_1792:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:5376*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5376*0 + 3*256*FLEN/8, x4, x1, x2)

inst_1793:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:5379*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5379*0 + 3*257*FLEN/8, x4, x1, x2)

inst_1794:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:5382*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5382*0 + 3*258*FLEN/8, x4, x1, x2)

inst_1795:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:5385*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5385*0 + 3*259*FLEN/8, x4, x1, x2)

inst_1796:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:5388*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5388*0 + 3*260*FLEN/8, x4, x1, x2)

inst_1797:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c9ced and fs2 == 0 and fe2 == 0x03 and fm2 == 0x69096a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0c9ced; op2val:0x1e9096a;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:5391*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5391*0 + 3*261*FLEN/8, x4, x1, x2)

inst_1798:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69000000; valaddr_reg:x3; val_offset:5394*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5394*0 + 3*262*FLEN/8, x4, x1, x2)

inst_1799:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69000001; valaddr_reg:x3; val_offset:5397*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5397*0 + 3*263*FLEN/8, x4, x1, x2)

inst_1800:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69000003; valaddr_reg:x3; val_offset:5400*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5400*0 + 3*264*FLEN/8, x4, x1, x2)

inst_1801:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69000007; valaddr_reg:x3; val_offset:5403*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5403*0 + 3*265*FLEN/8, x4, x1, x2)

inst_1802:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x6900000f; valaddr_reg:x3; val_offset:5406*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5406*0 + 3*266*FLEN/8, x4, x1, x2)

inst_1803:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x6900001f; valaddr_reg:x3; val_offset:5409*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5409*0 + 3*267*FLEN/8, x4, x1, x2)

inst_1804:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x6900003f; valaddr_reg:x3; val_offset:5412*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5412*0 + 3*268*FLEN/8, x4, x1, x2)

inst_1805:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x6900007f; valaddr_reg:x3; val_offset:5415*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5415*0 + 3*269*FLEN/8, x4, x1, x2)

inst_1806:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x690000ff; valaddr_reg:x3; val_offset:5418*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5418*0 + 3*270*FLEN/8, x4, x1, x2)

inst_1807:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x690001ff; valaddr_reg:x3; val_offset:5421*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5421*0 + 3*271*FLEN/8, x4, x1, x2)

inst_1808:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x690003ff; valaddr_reg:x3; val_offset:5424*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5424*0 + 3*272*FLEN/8, x4, x1, x2)

inst_1809:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x690007ff; valaddr_reg:x3; val_offset:5427*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5427*0 + 3*273*FLEN/8, x4, x1, x2)

inst_1810:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69000fff; valaddr_reg:x3; val_offset:5430*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5430*0 + 3*274*FLEN/8, x4, x1, x2)

inst_1811:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69001fff; valaddr_reg:x3; val_offset:5433*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5433*0 + 3*275*FLEN/8, x4, x1, x2)

inst_1812:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69003fff; valaddr_reg:x3; val_offset:5436*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5436*0 + 3*276*FLEN/8, x4, x1, x2)

inst_1813:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69007fff; valaddr_reg:x3; val_offset:5439*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5439*0 + 3*277*FLEN/8, x4, x1, x2)

inst_1814:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x6900ffff; valaddr_reg:x3; val_offset:5442*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5442*0 + 3*278*FLEN/8, x4, x1, x2)

inst_1815:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x6901ffff; valaddr_reg:x3; val_offset:5445*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5445*0 + 3*279*FLEN/8, x4, x1, x2)

inst_1816:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x6903ffff; valaddr_reg:x3; val_offset:5448*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5448*0 + 3*280*FLEN/8, x4, x1, x2)

inst_1817:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x6907ffff; valaddr_reg:x3; val_offset:5451*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5451*0 + 3*281*FLEN/8, x4, x1, x2)

inst_1818:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x690fffff; valaddr_reg:x3; val_offset:5454*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5454*0 + 3*282*FLEN/8, x4, x1, x2)

inst_1819:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x691fffff; valaddr_reg:x3; val_offset:5457*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5457*0 + 3*283*FLEN/8, x4, x1, x2)

inst_1820:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x693fffff; valaddr_reg:x3; val_offset:5460*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5460*0 + 3*284*FLEN/8, x4, x1, x2)

inst_1821:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69400000; valaddr_reg:x3; val_offset:5463*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5463*0 + 3*285*FLEN/8, x4, x1, x2)

inst_1822:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69600000; valaddr_reg:x3; val_offset:5466*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5466*0 + 3*286*FLEN/8, x4, x1, x2)

inst_1823:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69700000; valaddr_reg:x3; val_offset:5469*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5469*0 + 3*287*FLEN/8, x4, x1, x2)

inst_1824:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x69780000; valaddr_reg:x3; val_offset:5472*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5472*0 + 3*288*FLEN/8, x4, x1, x2)

inst_1825:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697c0000; valaddr_reg:x3; val_offset:5475*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5475*0 + 3*289*FLEN/8, x4, x1, x2)

inst_1826:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697e0000; valaddr_reg:x3; val_offset:5478*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5478*0 + 3*290*FLEN/8, x4, x1, x2)

inst_1827:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697f0000; valaddr_reg:x3; val_offset:5481*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5481*0 + 3*291*FLEN/8, x4, x1, x2)

inst_1828:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697f8000; valaddr_reg:x3; val_offset:5484*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5484*0 + 3*292*FLEN/8, x4, x1, x2)

inst_1829:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697fc000; valaddr_reg:x3; val_offset:5487*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5487*0 + 3*293*FLEN/8, x4, x1, x2)

inst_1830:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697fe000; valaddr_reg:x3; val_offset:5490*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5490*0 + 3*294*FLEN/8, x4, x1, x2)

inst_1831:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697ff000; valaddr_reg:x3; val_offset:5493*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5493*0 + 3*295*FLEN/8, x4, x1, x2)

inst_1832:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697ff800; valaddr_reg:x3; val_offset:5496*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5496*0 + 3*296*FLEN/8, x4, x1, x2)

inst_1833:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697ffc00; valaddr_reg:x3; val_offset:5499*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5499*0 + 3*297*FLEN/8, x4, x1, x2)

inst_1834:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697ffe00; valaddr_reg:x3; val_offset:5502*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5502*0 + 3*298*FLEN/8, x4, x1, x2)

inst_1835:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697fff00; valaddr_reg:x3; val_offset:5505*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5505*0 + 3*299*FLEN/8, x4, x1, x2)

inst_1836:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697fff80; valaddr_reg:x3; val_offset:5508*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5508*0 + 3*300*FLEN/8, x4, x1, x2)

inst_1837:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697fffc0; valaddr_reg:x3; val_offset:5511*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5511*0 + 3*301*FLEN/8, x4, x1, x2)

inst_1838:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697fffe0; valaddr_reg:x3; val_offset:5514*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5514*0 + 3*302*FLEN/8, x4, x1, x2)

inst_1839:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697ffff0; valaddr_reg:x3; val_offset:5517*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5517*0 + 3*303*FLEN/8, x4, x1, x2)

inst_1840:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697ffff8; valaddr_reg:x3; val_offset:5520*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5520*0 + 3*304*FLEN/8, x4, x1, x2)

inst_1841:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697ffffc; valaddr_reg:x3; val_offset:5523*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5523*0 + 3*305*FLEN/8, x4, x1, x2)

inst_1842:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697ffffe; valaddr_reg:x3; val_offset:5526*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5526*0 + 3*306*FLEN/8, x4, x1, x2)

inst_1843:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x697fffff; valaddr_reg:x3; val_offset:5529*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5529*0 + 3*307*FLEN/8, x4, x1, x2)

inst_1844:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f000001; valaddr_reg:x3; val_offset:5532*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5532*0 + 3*308*FLEN/8, x4, x1, x2)

inst_1845:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f000003; valaddr_reg:x3; val_offset:5535*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5535*0 + 3*309*FLEN/8, x4, x1, x2)

inst_1846:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f000007; valaddr_reg:x3; val_offset:5538*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5538*0 + 3*310*FLEN/8, x4, x1, x2)

inst_1847:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f199999; valaddr_reg:x3; val_offset:5541*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5541*0 + 3*311*FLEN/8, x4, x1, x2)

inst_1848:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f249249; valaddr_reg:x3; val_offset:5544*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5544*0 + 3*312*FLEN/8, x4, x1, x2)

inst_1849:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f333333; valaddr_reg:x3; val_offset:5547*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5547*0 + 3*313*FLEN/8, x4, x1, x2)

inst_1850:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:5550*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5550*0 + 3*314*FLEN/8, x4, x1, x2)

inst_1851:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:5553*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5553*0 + 3*315*FLEN/8, x4, x1, x2)

inst_1852:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f444444; valaddr_reg:x3; val_offset:5556*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5556*0 + 3*316*FLEN/8, x4, x1, x2)

inst_1853:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:5559*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5559*0 + 3*317*FLEN/8, x4, x1, x2)

inst_1854:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:5562*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5562*0 + 3*318*FLEN/8, x4, x1, x2)

inst_1855:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f666666; valaddr_reg:x3; val_offset:5565*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5565*0 + 3*319*FLEN/8, x4, x1, x2)

inst_1856:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:5568*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5568*0 + 3*320*FLEN/8, x4, x1, x2)

inst_1857:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:5571*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5571*0 + 3*321*FLEN/8, x4, x1, x2)

inst_1858:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:5574*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5574*0 + 3*322*FLEN/8, x4, x1, x2)

inst_1859:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0dcb9f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x6717f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0dcb9f; op2val:0x41e717f0;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:5577*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5577*0 + 3*323*FLEN/8, x4, x1, x2)

inst_1860:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:5580*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5580*0 + 3*324*FLEN/8, x4, x1, x2)

inst_1861:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:5583*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5583*0 + 3*325*FLEN/8, x4, x1, x2)

inst_1862:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:5586*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5586*0 + 3*326*FLEN/8, x4, x1, x2)

inst_1863:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:5589*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5589*0 + 3*327*FLEN/8, x4, x1, x2)

inst_1864:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:5592*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5592*0 + 3*328*FLEN/8, x4, x1, x2)

inst_1865:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:5595*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5595*0 + 3*329*FLEN/8, x4, x1, x2)

inst_1866:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:5598*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5598*0 + 3*330*FLEN/8, x4, x1, x2)

inst_1867:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:5601*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5601*0 + 3*331*FLEN/8, x4, x1, x2)

inst_1868:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:5604*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5604*0 + 3*332*FLEN/8, x4, x1, x2)

inst_1869:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:5607*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5607*0 + 3*333*FLEN/8, x4, x1, x2)

inst_1870:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:5610*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5610*0 + 3*334*FLEN/8, x4, x1, x2)

inst_1871:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:5613*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5613*0 + 3*335*FLEN/8, x4, x1, x2)

inst_1872:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:5616*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5616*0 + 3*336*FLEN/8, x4, x1, x2)

inst_1873:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:5619*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5619*0 + 3*337*FLEN/8, x4, x1, x2)

inst_1874:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:5622*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5622*0 + 3*338*FLEN/8, x4, x1, x2)

inst_1875:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:5625*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5625*0 + 3*339*FLEN/8, x4, x1, x2)

inst_1876:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d800000; valaddr_reg:x3; val_offset:5628*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5628*0 + 3*340*FLEN/8, x4, x1, x2)

inst_1877:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d800001; valaddr_reg:x3; val_offset:5631*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5631*0 + 3*341*FLEN/8, x4, x1, x2)

inst_1878:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d800003; valaddr_reg:x3; val_offset:5634*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5634*0 + 3*342*FLEN/8, x4, x1, x2)

inst_1879:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d800007; valaddr_reg:x3; val_offset:5637*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5637*0 + 3*343*FLEN/8, x4, x1, x2)

inst_1880:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d80000f; valaddr_reg:x3; val_offset:5640*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5640*0 + 3*344*FLEN/8, x4, x1, x2)

inst_1881:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d80001f; valaddr_reg:x3; val_offset:5643*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5643*0 + 3*345*FLEN/8, x4, x1, x2)

inst_1882:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d80003f; valaddr_reg:x3; val_offset:5646*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5646*0 + 3*346*FLEN/8, x4, x1, x2)

inst_1883:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d80007f; valaddr_reg:x3; val_offset:5649*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5649*0 + 3*347*FLEN/8, x4, x1, x2)

inst_1884:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d8000ff; valaddr_reg:x3; val_offset:5652*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5652*0 + 3*348*FLEN/8, x4, x1, x2)

inst_1885:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d8001ff; valaddr_reg:x3; val_offset:5655*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5655*0 + 3*349*FLEN/8, x4, x1, x2)

inst_1886:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d8003ff; valaddr_reg:x3; val_offset:5658*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5658*0 + 3*350*FLEN/8, x4, x1, x2)

inst_1887:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d8007ff; valaddr_reg:x3; val_offset:5661*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5661*0 + 3*351*FLEN/8, x4, x1, x2)

inst_1888:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d800fff; valaddr_reg:x3; val_offset:5664*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5664*0 + 3*352*FLEN/8, x4, x1, x2)

inst_1889:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d801fff; valaddr_reg:x3; val_offset:5667*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5667*0 + 3*353*FLEN/8, x4, x1, x2)

inst_1890:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d803fff; valaddr_reg:x3; val_offset:5670*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5670*0 + 3*354*FLEN/8, x4, x1, x2)

inst_1891:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d807fff; valaddr_reg:x3; val_offset:5673*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5673*0 + 3*355*FLEN/8, x4, x1, x2)

inst_1892:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d80ffff; valaddr_reg:x3; val_offset:5676*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5676*0 + 3*356*FLEN/8, x4, x1, x2)

inst_1893:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d81ffff; valaddr_reg:x3; val_offset:5679*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5679*0 + 3*357*FLEN/8, x4, x1, x2)

inst_1894:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d83ffff; valaddr_reg:x3; val_offset:5682*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5682*0 + 3*358*FLEN/8, x4, x1, x2)

inst_1895:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d87ffff; valaddr_reg:x3; val_offset:5685*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5685*0 + 3*359*FLEN/8, x4, x1, x2)

inst_1896:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d8fffff; valaddr_reg:x3; val_offset:5688*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5688*0 + 3*360*FLEN/8, x4, x1, x2)

inst_1897:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8d9fffff; valaddr_reg:x3; val_offset:5691*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5691*0 + 3*361*FLEN/8, x4, x1, x2)

inst_1898:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dbfffff; valaddr_reg:x3; val_offset:5694*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5694*0 + 3*362*FLEN/8, x4, x1, x2)

inst_1899:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dc00000; valaddr_reg:x3; val_offset:5697*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5697*0 + 3*363*FLEN/8, x4, x1, x2)

inst_1900:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8de00000; valaddr_reg:x3; val_offset:5700*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5700*0 + 3*364*FLEN/8, x4, x1, x2)

inst_1901:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8df00000; valaddr_reg:x3; val_offset:5703*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5703*0 + 3*365*FLEN/8, x4, x1, x2)

inst_1902:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8df80000; valaddr_reg:x3; val_offset:5706*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5706*0 + 3*366*FLEN/8, x4, x1, x2)

inst_1903:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfc0000; valaddr_reg:x3; val_offset:5709*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5709*0 + 3*367*FLEN/8, x4, x1, x2)

inst_1904:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfe0000; valaddr_reg:x3; val_offset:5712*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5712*0 + 3*368*FLEN/8, x4, x1, x2)

inst_1905:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dff0000; valaddr_reg:x3; val_offset:5715*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5715*0 + 3*369*FLEN/8, x4, x1, x2)

inst_1906:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dff8000; valaddr_reg:x3; val_offset:5718*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5718*0 + 3*370*FLEN/8, x4, x1, x2)

inst_1907:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dffc000; valaddr_reg:x3; val_offset:5721*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5721*0 + 3*371*FLEN/8, x4, x1, x2)

inst_1908:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dffe000; valaddr_reg:x3; val_offset:5724*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5724*0 + 3*372*FLEN/8, x4, x1, x2)

inst_1909:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfff000; valaddr_reg:x3; val_offset:5727*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5727*0 + 3*373*FLEN/8, x4, x1, x2)

inst_1910:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfff800; valaddr_reg:x3; val_offset:5730*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5730*0 + 3*374*FLEN/8, x4, x1, x2)

inst_1911:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfffc00; valaddr_reg:x3; val_offset:5733*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5733*0 + 3*375*FLEN/8, x4, x1, x2)

inst_1912:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfffe00; valaddr_reg:x3; val_offset:5736*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5736*0 + 3*376*FLEN/8, x4, x1, x2)

inst_1913:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dffff00; valaddr_reg:x3; val_offset:5739*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5739*0 + 3*377*FLEN/8, x4, x1, x2)

inst_1914:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dffff80; valaddr_reg:x3; val_offset:5742*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5742*0 + 3*378*FLEN/8, x4, x1, x2)

inst_1915:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dffffc0; valaddr_reg:x3; val_offset:5745*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5745*0 + 3*379*FLEN/8, x4, x1, x2)

inst_1916:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dffffe0; valaddr_reg:x3; val_offset:5748*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5748*0 + 3*380*FLEN/8, x4, x1, x2)

inst_1917:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfffff0; valaddr_reg:x3; val_offset:5751*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5751*0 + 3*381*FLEN/8, x4, x1, x2)

inst_1918:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfffff8; valaddr_reg:x3; val_offset:5754*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5754*0 + 3*382*FLEN/8, x4, x1, x2)

inst_1919:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfffffc; valaddr_reg:x3; val_offset:5757*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5757*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_1920:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dfffffe; valaddr_reg:x3; val_offset:5760*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5760*0 + 3*384*FLEN/8, x4, x1, x2)

inst_1921:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fee30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d0fee30; op2val:0x80000000;
op3val:0x8dffffff; valaddr_reg:x3; val_offset:5763*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5763*0 + 3*385*FLEN/8, x4, x1, x2)

inst_1922:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26000000; valaddr_reg:x3; val_offset:5766*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5766*0 + 3*386*FLEN/8, x4, x1, x2)

inst_1923:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26000001; valaddr_reg:x3; val_offset:5769*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5769*0 + 3*387*FLEN/8, x4, x1, x2)

inst_1924:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26000003; valaddr_reg:x3; val_offset:5772*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5772*0 + 3*388*FLEN/8, x4, x1, x2)

inst_1925:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26000007; valaddr_reg:x3; val_offset:5775*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5775*0 + 3*389*FLEN/8, x4, x1, x2)

inst_1926:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x2600000f; valaddr_reg:x3; val_offset:5778*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5778*0 + 3*390*FLEN/8, x4, x1, x2)

inst_1927:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x2600001f; valaddr_reg:x3; val_offset:5781*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5781*0 + 3*391*FLEN/8, x4, x1, x2)

inst_1928:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x2600003f; valaddr_reg:x3; val_offset:5784*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5784*0 + 3*392*FLEN/8, x4, x1, x2)

inst_1929:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x2600007f; valaddr_reg:x3; val_offset:5787*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5787*0 + 3*393*FLEN/8, x4, x1, x2)

inst_1930:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x260000ff; valaddr_reg:x3; val_offset:5790*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5790*0 + 3*394*FLEN/8, x4, x1, x2)

inst_1931:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x260001ff; valaddr_reg:x3; val_offset:5793*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5793*0 + 3*395*FLEN/8, x4, x1, x2)

inst_1932:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x260003ff; valaddr_reg:x3; val_offset:5796*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5796*0 + 3*396*FLEN/8, x4, x1, x2)

inst_1933:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x260007ff; valaddr_reg:x3; val_offset:5799*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5799*0 + 3*397*FLEN/8, x4, x1, x2)

inst_1934:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26000fff; valaddr_reg:x3; val_offset:5802*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5802*0 + 3*398*FLEN/8, x4, x1, x2)

inst_1935:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26001fff; valaddr_reg:x3; val_offset:5805*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5805*0 + 3*399*FLEN/8, x4, x1, x2)

inst_1936:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26003fff; valaddr_reg:x3; val_offset:5808*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5808*0 + 3*400*FLEN/8, x4, x1, x2)

inst_1937:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26007fff; valaddr_reg:x3; val_offset:5811*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5811*0 + 3*401*FLEN/8, x4, x1, x2)

inst_1938:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x2600ffff; valaddr_reg:x3; val_offset:5814*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5814*0 + 3*402*FLEN/8, x4, x1, x2)

inst_1939:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x2601ffff; valaddr_reg:x3; val_offset:5817*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5817*0 + 3*403*FLEN/8, x4, x1, x2)

inst_1940:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x2603ffff; valaddr_reg:x3; val_offset:5820*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5820*0 + 3*404*FLEN/8, x4, x1, x2)

inst_1941:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x2607ffff; valaddr_reg:x3; val_offset:5823*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5823*0 + 3*405*FLEN/8, x4, x1, x2)

inst_1942:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x260fffff; valaddr_reg:x3; val_offset:5826*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5826*0 + 3*406*FLEN/8, x4, x1, x2)

inst_1943:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x261fffff; valaddr_reg:x3; val_offset:5829*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5829*0 + 3*407*FLEN/8, x4, x1, x2)

inst_1944:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x263fffff; valaddr_reg:x3; val_offset:5832*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5832*0 + 3*408*FLEN/8, x4, x1, x2)

inst_1945:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26400000; valaddr_reg:x3; val_offset:5835*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5835*0 + 3*409*FLEN/8, x4, x1, x2)

inst_1946:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26600000; valaddr_reg:x3; val_offset:5838*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5838*0 + 3*410*FLEN/8, x4, x1, x2)

inst_1947:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26700000; valaddr_reg:x3; val_offset:5841*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5841*0 + 3*411*FLEN/8, x4, x1, x2)

inst_1948:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x26780000; valaddr_reg:x3; val_offset:5844*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5844*0 + 3*412*FLEN/8, x4, x1, x2)

inst_1949:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267c0000; valaddr_reg:x3; val_offset:5847*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5847*0 + 3*413*FLEN/8, x4, x1, x2)

inst_1950:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267e0000; valaddr_reg:x3; val_offset:5850*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5850*0 + 3*414*FLEN/8, x4, x1, x2)

inst_1951:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267f0000; valaddr_reg:x3; val_offset:5853*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5853*0 + 3*415*FLEN/8, x4, x1, x2)

inst_1952:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267f8000; valaddr_reg:x3; val_offset:5856*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5856*0 + 3*416*FLEN/8, x4, x1, x2)

inst_1953:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267fc000; valaddr_reg:x3; val_offset:5859*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5859*0 + 3*417*FLEN/8, x4, x1, x2)

inst_1954:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267fe000; valaddr_reg:x3; val_offset:5862*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5862*0 + 3*418*FLEN/8, x4, x1, x2)

inst_1955:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267ff000; valaddr_reg:x3; val_offset:5865*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5865*0 + 3*419*FLEN/8, x4, x1, x2)

inst_1956:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267ff800; valaddr_reg:x3; val_offset:5868*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5868*0 + 3*420*FLEN/8, x4, x1, x2)

inst_1957:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267ffc00; valaddr_reg:x3; val_offset:5871*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5871*0 + 3*421*FLEN/8, x4, x1, x2)

inst_1958:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267ffe00; valaddr_reg:x3; val_offset:5874*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5874*0 + 3*422*FLEN/8, x4, x1, x2)

inst_1959:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267fff00; valaddr_reg:x3; val_offset:5877*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5877*0 + 3*423*FLEN/8, x4, x1, x2)

inst_1960:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267fff80; valaddr_reg:x3; val_offset:5880*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5880*0 + 3*424*FLEN/8, x4, x1, x2)

inst_1961:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267fffc0; valaddr_reg:x3; val_offset:5883*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5883*0 + 3*425*FLEN/8, x4, x1, x2)

inst_1962:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267fffe0; valaddr_reg:x3; val_offset:5886*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5886*0 + 3*426*FLEN/8, x4, x1, x2)

inst_1963:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267ffff0; valaddr_reg:x3; val_offset:5889*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5889*0 + 3*427*FLEN/8, x4, x1, x2)

inst_1964:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267ffff8; valaddr_reg:x3; val_offset:5892*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5892*0 + 3*428*FLEN/8, x4, x1, x2)

inst_1965:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267ffffc; valaddr_reg:x3; val_offset:5895*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5895*0 + 3*429*FLEN/8, x4, x1, x2)

inst_1966:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267ffffe; valaddr_reg:x3; val_offset:5898*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5898*0 + 3*430*FLEN/8, x4, x1, x2)

inst_1967:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x4c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x267fffff; valaddr_reg:x3; val_offset:5901*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5901*0 + 3*431*FLEN/8, x4, x1, x2)

inst_1968:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3f800001; valaddr_reg:x3; val_offset:5904*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5904*0 + 3*432*FLEN/8, x4, x1, x2)

inst_1969:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3f800003; valaddr_reg:x3; val_offset:5907*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5907*0 + 3*433*FLEN/8, x4, x1, x2)

inst_1970:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3f800007; valaddr_reg:x3; val_offset:5910*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5910*0 + 3*434*FLEN/8, x4, x1, x2)

inst_1971:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3f999999; valaddr_reg:x3; val_offset:5913*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5913*0 + 3*435*FLEN/8, x4, x1, x2)

inst_1972:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:5916*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5916*0 + 3*436*FLEN/8, x4, x1, x2)

inst_1973:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:5919*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5919*0 + 3*437*FLEN/8, x4, x1, x2)

inst_1974:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:5922*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5922*0 + 3*438*FLEN/8, x4, x1, x2)

inst_1975:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:5925*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5925*0 + 3*439*FLEN/8, x4, x1, x2)

inst_1976:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:5928*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5928*0 + 3*440*FLEN/8, x4, x1, x2)

inst_1977:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:5931*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5931*0 + 3*441*FLEN/8, x4, x1, x2)

inst_1978:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:5934*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5934*0 + 3*442*FLEN/8, x4, x1, x2)

inst_1979:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:5937*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5937*0 + 3*443*FLEN/8, x4, x1, x2)

inst_1980:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:5940*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5940*0 + 3*444*FLEN/8, x4, x1, x2)

inst_1981:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:5943*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5943*0 + 3*445*FLEN/8, x4, x1, x2)

inst_1982:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:5946*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5946*0 + 3*446*FLEN/8, x4, x1, x2)

inst_1983:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x16407d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x5a164a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d16407d; op2val:0x1da164a;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:5949*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5949*0 + 3*447*FLEN/8, x4, x1, x2)

inst_1984:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72800000; valaddr_reg:x3; val_offset:5952*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5952*0 + 3*448*FLEN/8, x4, x1, x2)

inst_1985:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72800001; valaddr_reg:x3; val_offset:5955*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5955*0 + 3*449*FLEN/8, x4, x1, x2)

inst_1986:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72800003; valaddr_reg:x3; val_offset:5958*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5958*0 + 3*450*FLEN/8, x4, x1, x2)

inst_1987:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72800007; valaddr_reg:x3; val_offset:5961*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5961*0 + 3*451*FLEN/8, x4, x1, x2)

inst_1988:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7280000f; valaddr_reg:x3; val_offset:5964*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5964*0 + 3*452*FLEN/8, x4, x1, x2)

inst_1989:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7280001f; valaddr_reg:x3; val_offset:5967*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5967*0 + 3*453*FLEN/8, x4, x1, x2)

inst_1990:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7280003f; valaddr_reg:x3; val_offset:5970*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5970*0 + 3*454*FLEN/8, x4, x1, x2)

inst_1991:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7280007f; valaddr_reg:x3; val_offset:5973*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5973*0 + 3*455*FLEN/8, x4, x1, x2)

inst_1992:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x728000ff; valaddr_reg:x3; val_offset:5976*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5976*0 + 3*456*FLEN/8, x4, x1, x2)

inst_1993:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x728001ff; valaddr_reg:x3; val_offset:5979*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5979*0 + 3*457*FLEN/8, x4, x1, x2)

inst_1994:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x728003ff; valaddr_reg:x3; val_offset:5982*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5982*0 + 3*458*FLEN/8, x4, x1, x2)

inst_1995:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x728007ff; valaddr_reg:x3; val_offset:5985*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5985*0 + 3*459*FLEN/8, x4, x1, x2)

inst_1996:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72800fff; valaddr_reg:x3; val_offset:5988*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5988*0 + 3*460*FLEN/8, x4, x1, x2)

inst_1997:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72801fff; valaddr_reg:x3; val_offset:5991*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5991*0 + 3*461*FLEN/8, x4, x1, x2)

inst_1998:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72803fff; valaddr_reg:x3; val_offset:5994*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5994*0 + 3*462*FLEN/8, x4, x1, x2)

inst_1999:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72807fff; valaddr_reg:x3; val_offset:5997*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 5997*0 + 3*463*FLEN/8, x4, x1, x2)

inst_2000:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7280ffff; valaddr_reg:x3; val_offset:6000*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6000*0 + 3*464*FLEN/8, x4, x1, x2)

inst_2001:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7281ffff; valaddr_reg:x3; val_offset:6003*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6003*0 + 3*465*FLEN/8, x4, x1, x2)

inst_2002:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7283ffff; valaddr_reg:x3; val_offset:6006*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6006*0 + 3*466*FLEN/8, x4, x1, x2)

inst_2003:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7287ffff; valaddr_reg:x3; val_offset:6009*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6009*0 + 3*467*FLEN/8, x4, x1, x2)

inst_2004:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x728fffff; valaddr_reg:x3; val_offset:6012*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6012*0 + 3*468*FLEN/8, x4, x1, x2)

inst_2005:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x729fffff; valaddr_reg:x3; val_offset:6015*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6015*0 + 3*469*FLEN/8, x4, x1, x2)

inst_2006:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72bfffff; valaddr_reg:x3; val_offset:6018*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6018*0 + 3*470*FLEN/8, x4, x1, x2)

inst_2007:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72c00000; valaddr_reg:x3; val_offset:6021*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6021*0 + 3*471*FLEN/8, x4, x1, x2)

inst_2008:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72e00000; valaddr_reg:x3; val_offset:6024*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6024*0 + 3*472*FLEN/8, x4, x1, x2)

inst_2009:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72f00000; valaddr_reg:x3; val_offset:6027*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6027*0 + 3*473*FLEN/8, x4, x1, x2)

inst_2010:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72f80000; valaddr_reg:x3; val_offset:6030*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6030*0 + 3*474*FLEN/8, x4, x1, x2)

inst_2011:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fc0000; valaddr_reg:x3; val_offset:6033*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6033*0 + 3*475*FLEN/8, x4, x1, x2)

inst_2012:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fe0000; valaddr_reg:x3; val_offset:6036*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6036*0 + 3*476*FLEN/8, x4, x1, x2)

inst_2013:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72ff0000; valaddr_reg:x3; val_offset:6039*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6039*0 + 3*477*FLEN/8, x4, x1, x2)

inst_2014:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72ff8000; valaddr_reg:x3; val_offset:6042*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6042*0 + 3*478*FLEN/8, x4, x1, x2)

inst_2015:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72ffc000; valaddr_reg:x3; val_offset:6045*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6045*0 + 3*479*FLEN/8, x4, x1, x2)

inst_2016:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72ffe000; valaddr_reg:x3; val_offset:6048*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6048*0 + 3*480*FLEN/8, x4, x1, x2)

inst_2017:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fff000; valaddr_reg:x3; val_offset:6051*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6051*0 + 3*481*FLEN/8, x4, x1, x2)

inst_2018:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fff800; valaddr_reg:x3; val_offset:6054*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6054*0 + 3*482*FLEN/8, x4, x1, x2)

inst_2019:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fffc00; valaddr_reg:x3; val_offset:6057*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6057*0 + 3*483*FLEN/8, x4, x1, x2)

inst_2020:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fffe00; valaddr_reg:x3; val_offset:6060*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6060*0 + 3*484*FLEN/8, x4, x1, x2)

inst_2021:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72ffff00; valaddr_reg:x3; val_offset:6063*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6063*0 + 3*485*FLEN/8, x4, x1, x2)

inst_2022:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72ffff80; valaddr_reg:x3; val_offset:6066*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6066*0 + 3*486*FLEN/8, x4, x1, x2)

inst_2023:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72ffffc0; valaddr_reg:x3; val_offset:6069*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6069*0 + 3*487*FLEN/8, x4, x1, x2)

inst_2024:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72ffffe0; valaddr_reg:x3; val_offset:6072*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6072*0 + 3*488*FLEN/8, x4, x1, x2)

inst_2025:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fffff0; valaddr_reg:x3; val_offset:6075*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6075*0 + 3*489*FLEN/8, x4, x1, x2)

inst_2026:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fffff8; valaddr_reg:x3; val_offset:6078*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6078*0 + 3*490*FLEN/8, x4, x1, x2)

inst_2027:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fffffc; valaddr_reg:x3; val_offset:6081*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6081*0 + 3*491*FLEN/8, x4, x1, x2)

inst_2028:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72fffffe; valaddr_reg:x3; val_offset:6084*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6084*0 + 3*492*FLEN/8, x4, x1, x2)

inst_2029:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xe5 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x72ffffff; valaddr_reg:x3; val_offset:6087*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6087*0 + 3*493*FLEN/8, x4, x1, x2)

inst_2030:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f000001; valaddr_reg:x3; val_offset:6090*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6090*0 + 3*494*FLEN/8, x4, x1, x2)

inst_2031:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f000003; valaddr_reg:x3; val_offset:6093*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6093*0 + 3*495*FLEN/8, x4, x1, x2)

inst_2032:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f000007; valaddr_reg:x3; val_offset:6096*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6096*0 + 3*496*FLEN/8, x4, x1, x2)

inst_2033:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f199999; valaddr_reg:x3; val_offset:6099*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6099*0 + 3*497*FLEN/8, x4, x1, x2)

inst_2034:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f249249; valaddr_reg:x3; val_offset:6102*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6102*0 + 3*498*FLEN/8, x4, x1, x2)

inst_2035:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f333333; valaddr_reg:x3; val_offset:6105*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6105*0 + 3*499*FLEN/8, x4, x1, x2)

inst_2036:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:6108*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6108*0 + 3*500*FLEN/8, x4, x1, x2)

inst_2037:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:6111*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6111*0 + 3*501*FLEN/8, x4, x1, x2)

inst_2038:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f444444; valaddr_reg:x3; val_offset:6114*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6114*0 + 3*502*FLEN/8, x4, x1, x2)

inst_2039:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:6117*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6117*0 + 3*503*FLEN/8, x4, x1, x2)

inst_2040:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:6120*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6120*0 + 3*504*FLEN/8, x4, x1, x2)

inst_2041:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f666666; valaddr_reg:x3; val_offset:6123*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6123*0 + 3*505*FLEN/8, x4, x1, x2)

inst_2042:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:6126*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6126*0 + 3*506*FLEN/8, x4, x1, x2)

inst_2043:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:6129*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6129*0 + 3*507*FLEN/8, x4, x1, x2)

inst_2044:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:6132*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6132*0 + 3*508*FLEN/8, x4, x1, x2)

inst_2045:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x18e211 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x56556e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d18e211; op2val:0x41d6556e;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:6135*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6135*0 + 3*509*FLEN/8, x4, x1, x2)

inst_2046:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c800000; valaddr_reg:x3; val_offset:6138*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6138*0 + 3*510*FLEN/8, x4, x1, x2)

inst_2047:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c800001; valaddr_reg:x3; val_offset:6141*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6141*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_2048:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c800003; valaddr_reg:x3; val_offset:6144*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6144*0 + 3*512*FLEN/8, x4, x1, x2)

inst_2049:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c800007; valaddr_reg:x3; val_offset:6147*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6147*0 + 3*513*FLEN/8, x4, x1, x2)

inst_2050:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c80000f; valaddr_reg:x3; val_offset:6150*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6150*0 + 3*514*FLEN/8, x4, x1, x2)

inst_2051:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c80001f; valaddr_reg:x3; val_offset:6153*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6153*0 + 3*515*FLEN/8, x4, x1, x2)

inst_2052:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c80003f; valaddr_reg:x3; val_offset:6156*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6156*0 + 3*516*FLEN/8, x4, x1, x2)

inst_2053:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c80007f; valaddr_reg:x3; val_offset:6159*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6159*0 + 3*517*FLEN/8, x4, x1, x2)

inst_2054:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c8000ff; valaddr_reg:x3; val_offset:6162*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6162*0 + 3*518*FLEN/8, x4, x1, x2)

inst_2055:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c8001ff; valaddr_reg:x3; val_offset:6165*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6165*0 + 3*519*FLEN/8, x4, x1, x2)

inst_2056:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c8003ff; valaddr_reg:x3; val_offset:6168*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6168*0 + 3*520*FLEN/8, x4, x1, x2)

inst_2057:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c8007ff; valaddr_reg:x3; val_offset:6171*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6171*0 + 3*521*FLEN/8, x4, x1, x2)

inst_2058:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c800fff; valaddr_reg:x3; val_offset:6174*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6174*0 + 3*522*FLEN/8, x4, x1, x2)

inst_2059:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c801fff; valaddr_reg:x3; val_offset:6177*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6177*0 + 3*523*FLEN/8, x4, x1, x2)

inst_2060:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c803fff; valaddr_reg:x3; val_offset:6180*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6180*0 + 3*524*FLEN/8, x4, x1, x2)

inst_2061:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c807fff; valaddr_reg:x3; val_offset:6183*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6183*0 + 3*525*FLEN/8, x4, x1, x2)

inst_2062:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c80ffff; valaddr_reg:x3; val_offset:6186*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6186*0 + 3*526*FLEN/8, x4, x1, x2)

inst_2063:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c81ffff; valaddr_reg:x3; val_offset:6189*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6189*0 + 3*527*FLEN/8, x4, x1, x2)

inst_2064:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c83ffff; valaddr_reg:x3; val_offset:6192*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6192*0 + 3*528*FLEN/8, x4, x1, x2)

inst_2065:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c87ffff; valaddr_reg:x3; val_offset:6195*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6195*0 + 3*529*FLEN/8, x4, x1, x2)

inst_2066:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c8fffff; valaddr_reg:x3; val_offset:6198*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6198*0 + 3*530*FLEN/8, x4, x1, x2)

inst_2067:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7c9fffff; valaddr_reg:x3; val_offset:6201*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6201*0 + 3*531*FLEN/8, x4, x1, x2)

inst_2068:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cbfffff; valaddr_reg:x3; val_offset:6204*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6204*0 + 3*532*FLEN/8, x4, x1, x2)

inst_2069:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cc00000; valaddr_reg:x3; val_offset:6207*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6207*0 + 3*533*FLEN/8, x4, x1, x2)

inst_2070:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7ce00000; valaddr_reg:x3; val_offset:6210*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6210*0 + 3*534*FLEN/8, x4, x1, x2)

inst_2071:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cf00000; valaddr_reg:x3; val_offset:6213*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6213*0 + 3*535*FLEN/8, x4, x1, x2)

inst_2072:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cf80000; valaddr_reg:x3; val_offset:6216*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6216*0 + 3*536*FLEN/8, x4, x1, x2)

inst_2073:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfc0000; valaddr_reg:x3; val_offset:6219*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6219*0 + 3*537*FLEN/8, x4, x1, x2)

inst_2074:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfe0000; valaddr_reg:x3; val_offset:6222*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6222*0 + 3*538*FLEN/8, x4, x1, x2)

inst_2075:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cff0000; valaddr_reg:x3; val_offset:6225*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6225*0 + 3*539*FLEN/8, x4, x1, x2)

inst_2076:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cff8000; valaddr_reg:x3; val_offset:6228*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6228*0 + 3*540*FLEN/8, x4, x1, x2)

inst_2077:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cffc000; valaddr_reg:x3; val_offset:6231*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6231*0 + 3*541*FLEN/8, x4, x1, x2)

inst_2078:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cffe000; valaddr_reg:x3; val_offset:6234*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6234*0 + 3*542*FLEN/8, x4, x1, x2)

inst_2079:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfff000; valaddr_reg:x3; val_offset:6237*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6237*0 + 3*543*FLEN/8, x4, x1, x2)

inst_2080:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfff800; valaddr_reg:x3; val_offset:6240*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6240*0 + 3*544*FLEN/8, x4, x1, x2)

inst_2081:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfffc00; valaddr_reg:x3; val_offset:6243*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6243*0 + 3*545*FLEN/8, x4, x1, x2)

inst_2082:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfffe00; valaddr_reg:x3; val_offset:6246*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6246*0 + 3*546*FLEN/8, x4, x1, x2)

inst_2083:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cffff00; valaddr_reg:x3; val_offset:6249*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6249*0 + 3*547*FLEN/8, x4, x1, x2)

inst_2084:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cffff80; valaddr_reg:x3; val_offset:6252*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6252*0 + 3*548*FLEN/8, x4, x1, x2)

inst_2085:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cffffc0; valaddr_reg:x3; val_offset:6255*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6255*0 + 3*549*FLEN/8, x4, x1, x2)

inst_2086:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cffffe0; valaddr_reg:x3; val_offset:6258*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6258*0 + 3*550*FLEN/8, x4, x1, x2)

inst_2087:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfffff0; valaddr_reg:x3; val_offset:6261*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6261*0 + 3*551*FLEN/8, x4, x1, x2)

inst_2088:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfffff8; valaddr_reg:x3; val_offset:6264*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6264*0 + 3*552*FLEN/8, x4, x1, x2)

inst_2089:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfffffc; valaddr_reg:x3; val_offset:6267*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6267*0 + 3*553*FLEN/8, x4, x1, x2)

inst_2090:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cfffffe; valaddr_reg:x3; val_offset:6270*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6270*0 + 3*554*FLEN/8, x4, x1, x2)

inst_2091:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7cffffff; valaddr_reg:x3; val_offset:6273*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6273*0 + 3*555*FLEN/8, x4, x1, x2)

inst_2092:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f000001; valaddr_reg:x3; val_offset:6276*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6276*0 + 3*556*FLEN/8, x4, x1, x2)

inst_2093:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f000003; valaddr_reg:x3; val_offset:6279*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6279*0 + 3*557*FLEN/8, x4, x1, x2)

inst_2094:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f000007; valaddr_reg:x3; val_offset:6282*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6282*0 + 3*558*FLEN/8, x4, x1, x2)

inst_2095:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f199999; valaddr_reg:x3; val_offset:6285*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6285*0 + 3*559*FLEN/8, x4, x1, x2)

inst_2096:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f249249; valaddr_reg:x3; val_offset:6288*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6288*0 + 3*560*FLEN/8, x4, x1, x2)

inst_2097:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f333333; valaddr_reg:x3; val_offset:6291*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6291*0 + 3*561*FLEN/8, x4, x1, x2)

inst_2098:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:6294*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6294*0 + 3*562*FLEN/8, x4, x1, x2)

inst_2099:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:6297*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6297*0 + 3*563*FLEN/8, x4, x1, x2)

inst_2100:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f444444; valaddr_reg:x3; val_offset:6300*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6300*0 + 3*564*FLEN/8, x4, x1, x2)

inst_2101:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:6303*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6303*0 + 3*565*FLEN/8, x4, x1, x2)

inst_2102:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:6306*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6306*0 + 3*566*FLEN/8, x4, x1, x2)

inst_2103:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f666666; valaddr_reg:x3; val_offset:6309*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6309*0 + 3*567*FLEN/8, x4, x1, x2)

inst_2104:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:6312*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6312*0 + 3*568*FLEN/8, x4, x1, x2)

inst_2105:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:6315*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6315*0 + 3*569*FLEN/8, x4, x1, x2)

inst_2106:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:6318*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6318*0 + 3*570*FLEN/8, x4, x1, x2)

inst_2107:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x234c07 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x48aa40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d234c07; op2val:0x41c8aa40;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:6321*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6321*0 + 3*571*FLEN/8, x4, x1, x2)

inst_2108:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:6324*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6324*0 + 3*572*FLEN/8, x4, x1, x2)

inst_2109:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:6327*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6327*0 + 3*573*FLEN/8, x4, x1, x2)

inst_2110:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:6330*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6330*0 + 3*574*FLEN/8, x4, x1, x2)

inst_2111:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:6333*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6333*0 + 3*575*FLEN/8, x4, x1, x2)

inst_2112:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:6336*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6336*0 + 3*576*FLEN/8, x4, x1, x2)

inst_2113:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:6339*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6339*0 + 3*577*FLEN/8, x4, x1, x2)

inst_2114:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:6342*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6342*0 + 3*578*FLEN/8, x4, x1, x2)

inst_2115:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:6345*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6345*0 + 3*579*FLEN/8, x4, x1, x2)

inst_2116:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:6348*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6348*0 + 3*580*FLEN/8, x4, x1, x2)

inst_2117:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:6351*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6351*0 + 3*581*FLEN/8, x4, x1, x2)

inst_2118:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:6354*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6354*0 + 3*582*FLEN/8, x4, x1, x2)

inst_2119:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:6357*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6357*0 + 3*583*FLEN/8, x4, x1, x2)

inst_2120:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:6360*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6360*0 + 3*584*FLEN/8, x4, x1, x2)

inst_2121:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:6363*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6363*0 + 3*585*FLEN/8, x4, x1, x2)

inst_2122:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:6366*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6366*0 + 3*586*FLEN/8, x4, x1, x2)

inst_2123:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:6369*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6369*0 + 3*587*FLEN/8, x4, x1, x2)

inst_2124:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9000000; valaddr_reg:x3; val_offset:6372*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6372*0 + 3*588*FLEN/8, x4, x1, x2)

inst_2125:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9000001; valaddr_reg:x3; val_offset:6375*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6375*0 + 3*589*FLEN/8, x4, x1, x2)

inst_2126:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9000003; valaddr_reg:x3; val_offset:6378*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6378*0 + 3*590*FLEN/8, x4, x1, x2)

inst_2127:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9000007; valaddr_reg:x3; val_offset:6381*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6381*0 + 3*591*FLEN/8, x4, x1, x2)

inst_2128:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x900000f; valaddr_reg:x3; val_offset:6384*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6384*0 + 3*592*FLEN/8, x4, x1, x2)

inst_2129:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x900001f; valaddr_reg:x3; val_offset:6387*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6387*0 + 3*593*FLEN/8, x4, x1, x2)

inst_2130:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x900003f; valaddr_reg:x3; val_offset:6390*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6390*0 + 3*594*FLEN/8, x4, x1, x2)

inst_2131:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x900007f; valaddr_reg:x3; val_offset:6393*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6393*0 + 3*595*FLEN/8, x4, x1, x2)

inst_2132:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x90000ff; valaddr_reg:x3; val_offset:6396*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6396*0 + 3*596*FLEN/8, x4, x1, x2)

inst_2133:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x90001ff; valaddr_reg:x3; val_offset:6399*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6399*0 + 3*597*FLEN/8, x4, x1, x2)

inst_2134:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x90003ff; valaddr_reg:x3; val_offset:6402*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6402*0 + 3*598*FLEN/8, x4, x1, x2)

inst_2135:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x90007ff; valaddr_reg:x3; val_offset:6405*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6405*0 + 3*599*FLEN/8, x4, x1, x2)

inst_2136:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9000fff; valaddr_reg:x3; val_offset:6408*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6408*0 + 3*600*FLEN/8, x4, x1, x2)

inst_2137:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9001fff; valaddr_reg:x3; val_offset:6411*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6411*0 + 3*601*FLEN/8, x4, x1, x2)

inst_2138:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9003fff; valaddr_reg:x3; val_offset:6414*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6414*0 + 3*602*FLEN/8, x4, x1, x2)

inst_2139:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9007fff; valaddr_reg:x3; val_offset:6417*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6417*0 + 3*603*FLEN/8, x4, x1, x2)

inst_2140:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x900ffff; valaddr_reg:x3; val_offset:6420*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6420*0 + 3*604*FLEN/8, x4, x1, x2)

inst_2141:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x901ffff; valaddr_reg:x3; val_offset:6423*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6423*0 + 3*605*FLEN/8, x4, x1, x2)

inst_2142:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x903ffff; valaddr_reg:x3; val_offset:6426*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6426*0 + 3*606*FLEN/8, x4, x1, x2)

inst_2143:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x907ffff; valaddr_reg:x3; val_offset:6429*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6429*0 + 3*607*FLEN/8, x4, x1, x2)

inst_2144:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x90fffff; valaddr_reg:x3; val_offset:6432*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6432*0 + 3*608*FLEN/8, x4, x1, x2)

inst_2145:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x91fffff; valaddr_reg:x3; val_offset:6435*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6435*0 + 3*609*FLEN/8, x4, x1, x2)

inst_2146:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x93fffff; valaddr_reg:x3; val_offset:6438*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6438*0 + 3*610*FLEN/8, x4, x1, x2)

inst_2147:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9400000; valaddr_reg:x3; val_offset:6441*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6441*0 + 3*611*FLEN/8, x4, x1, x2)

inst_2148:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9600000; valaddr_reg:x3; val_offset:6444*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6444*0 + 3*612*FLEN/8, x4, x1, x2)

inst_2149:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9700000; valaddr_reg:x3; val_offset:6447*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6447*0 + 3*613*FLEN/8, x4, x1, x2)

inst_2150:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x9780000; valaddr_reg:x3; val_offset:6450*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6450*0 + 3*614*FLEN/8, x4, x1, x2)

inst_2151:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97c0000; valaddr_reg:x3; val_offset:6453*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6453*0 + 3*615*FLEN/8, x4, x1, x2)

inst_2152:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97e0000; valaddr_reg:x3; val_offset:6456*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6456*0 + 3*616*FLEN/8, x4, x1, x2)

inst_2153:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97f0000; valaddr_reg:x3; val_offset:6459*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6459*0 + 3*617*FLEN/8, x4, x1, x2)

inst_2154:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97f8000; valaddr_reg:x3; val_offset:6462*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6462*0 + 3*618*FLEN/8, x4, x1, x2)

inst_2155:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97fc000; valaddr_reg:x3; val_offset:6465*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6465*0 + 3*619*FLEN/8, x4, x1, x2)

inst_2156:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97fe000; valaddr_reg:x3; val_offset:6468*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6468*0 + 3*620*FLEN/8, x4, x1, x2)

inst_2157:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97ff000; valaddr_reg:x3; val_offset:6471*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6471*0 + 3*621*FLEN/8, x4, x1, x2)

inst_2158:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97ff800; valaddr_reg:x3; val_offset:6474*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6474*0 + 3*622*FLEN/8, x4, x1, x2)

inst_2159:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97ffc00; valaddr_reg:x3; val_offset:6477*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6477*0 + 3*623*FLEN/8, x4, x1, x2)

inst_2160:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97ffe00; valaddr_reg:x3; val_offset:6480*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6480*0 + 3*624*FLEN/8, x4, x1, x2)

inst_2161:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97fff00; valaddr_reg:x3; val_offset:6483*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6483*0 + 3*625*FLEN/8, x4, x1, x2)

inst_2162:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97fff80; valaddr_reg:x3; val_offset:6486*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6486*0 + 3*626*FLEN/8, x4, x1, x2)

inst_2163:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97fffc0; valaddr_reg:x3; val_offset:6489*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6489*0 + 3*627*FLEN/8, x4, x1, x2)

inst_2164:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97fffe0; valaddr_reg:x3; val_offset:6492*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6492*0 + 3*628*FLEN/8, x4, x1, x2)

inst_2165:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97ffff0; valaddr_reg:x3; val_offset:6495*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6495*0 + 3*629*FLEN/8, x4, x1, x2)

inst_2166:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97ffff8; valaddr_reg:x3; val_offset:6498*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6498*0 + 3*630*FLEN/8, x4, x1, x2)

inst_2167:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97ffffc; valaddr_reg:x3; val_offset:6501*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6501*0 + 3*631*FLEN/8, x4, x1, x2)

inst_2168:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97ffffe; valaddr_reg:x3; val_offset:6504*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6504*0 + 3*632*FLEN/8, x4, x1, x2)

inst_2169:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2621cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2621cd; op2val:0x0;
op3val:0x97fffff; valaddr_reg:x3; val_offset:6507*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6507*0 + 3*633*FLEN/8, x4, x1, x2)

inst_2170:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:6510*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6510*0 + 3*634*FLEN/8, x4, x1, x2)

inst_2171:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:6513*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6513*0 + 3*635*FLEN/8, x4, x1, x2)

inst_2172:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:6516*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6516*0 + 3*636*FLEN/8, x4, x1, x2)

inst_2173:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:6519*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6519*0 + 3*637*FLEN/8, x4, x1, x2)

inst_2174:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:6522*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6522*0 + 3*638*FLEN/8, x4, x1, x2)

inst_2175:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:6525*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6525*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_2176:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:6528*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6528*0 + 3*640*FLEN/8, x4, x1, x2)

inst_2177:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:6531*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6531*0 + 3*641*FLEN/8, x4, x1, x2)

inst_2178:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:6534*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6534*0 + 3*642*FLEN/8, x4, x1, x2)

inst_2179:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:6537*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6537*0 + 3*643*FLEN/8, x4, x1, x2)

inst_2180:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:6540*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6540*0 + 3*644*FLEN/8, x4, x1, x2)

inst_2181:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:6543*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6543*0 + 3*645*FLEN/8, x4, x1, x2)

inst_2182:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:6546*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6546*0 + 3*646*FLEN/8, x4, x1, x2)

inst_2183:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:6549*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6549*0 + 3*647*FLEN/8, x4, x1, x2)

inst_2184:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:6552*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6552*0 + 3*648*FLEN/8, x4, x1, x2)

inst_2185:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:6555*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6555*0 + 3*649*FLEN/8, x4, x1, x2)

inst_2186:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d000000; valaddr_reg:x3; val_offset:6558*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6558*0 + 3*650*FLEN/8, x4, x1, x2)

inst_2187:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d000001; valaddr_reg:x3; val_offset:6561*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6561*0 + 3*651*FLEN/8, x4, x1, x2)

inst_2188:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d000003; valaddr_reg:x3; val_offset:6564*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6564*0 + 3*652*FLEN/8, x4, x1, x2)

inst_2189:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d000007; valaddr_reg:x3; val_offset:6567*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6567*0 + 3*653*FLEN/8, x4, x1, x2)

inst_2190:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d00000f; valaddr_reg:x3; val_offset:6570*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6570*0 + 3*654*FLEN/8, x4, x1, x2)

inst_2191:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d00001f; valaddr_reg:x3; val_offset:6573*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6573*0 + 3*655*FLEN/8, x4, x1, x2)

inst_2192:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d00003f; valaddr_reg:x3; val_offset:6576*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6576*0 + 3*656*FLEN/8, x4, x1, x2)

inst_2193:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d00007f; valaddr_reg:x3; val_offset:6579*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6579*0 + 3*657*FLEN/8, x4, x1, x2)

inst_2194:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d0000ff; valaddr_reg:x3; val_offset:6582*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6582*0 + 3*658*FLEN/8, x4, x1, x2)

inst_2195:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d0001ff; valaddr_reg:x3; val_offset:6585*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6585*0 + 3*659*FLEN/8, x4, x1, x2)

inst_2196:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d0003ff; valaddr_reg:x3; val_offset:6588*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6588*0 + 3*660*FLEN/8, x4, x1, x2)

inst_2197:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d0007ff; valaddr_reg:x3; val_offset:6591*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6591*0 + 3*661*FLEN/8, x4, x1, x2)

inst_2198:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d000fff; valaddr_reg:x3; val_offset:6594*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6594*0 + 3*662*FLEN/8, x4, x1, x2)

inst_2199:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d001fff; valaddr_reg:x3; val_offset:6597*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6597*0 + 3*663*FLEN/8, x4, x1, x2)

inst_2200:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d003fff; valaddr_reg:x3; val_offset:6600*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6600*0 + 3*664*FLEN/8, x4, x1, x2)

inst_2201:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d007fff; valaddr_reg:x3; val_offset:6603*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6603*0 + 3*665*FLEN/8, x4, x1, x2)

inst_2202:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d00ffff; valaddr_reg:x3; val_offset:6606*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6606*0 + 3*666*FLEN/8, x4, x1, x2)

inst_2203:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d01ffff; valaddr_reg:x3; val_offset:6609*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6609*0 + 3*667*FLEN/8, x4, x1, x2)

inst_2204:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d03ffff; valaddr_reg:x3; val_offset:6612*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6612*0 + 3*668*FLEN/8, x4, x1, x2)

inst_2205:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d07ffff; valaddr_reg:x3; val_offset:6615*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6615*0 + 3*669*FLEN/8, x4, x1, x2)

inst_2206:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d0fffff; valaddr_reg:x3; val_offset:6618*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6618*0 + 3*670*FLEN/8, x4, x1, x2)

inst_2207:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d1fffff; valaddr_reg:x3; val_offset:6621*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6621*0 + 3*671*FLEN/8, x4, x1, x2)

inst_2208:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d3fffff; valaddr_reg:x3; val_offset:6624*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6624*0 + 3*672*FLEN/8, x4, x1, x2)

inst_2209:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d400000; valaddr_reg:x3; val_offset:6627*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6627*0 + 3*673*FLEN/8, x4, x1, x2)

inst_2210:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d600000; valaddr_reg:x3; val_offset:6630*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6630*0 + 3*674*FLEN/8, x4, x1, x2)

inst_2211:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d700000; valaddr_reg:x3; val_offset:6633*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6633*0 + 3*675*FLEN/8, x4, x1, x2)

inst_2212:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d780000; valaddr_reg:x3; val_offset:6636*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6636*0 + 3*676*FLEN/8, x4, x1, x2)

inst_2213:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7c0000; valaddr_reg:x3; val_offset:6639*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6639*0 + 3*677*FLEN/8, x4, x1, x2)

inst_2214:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7e0000; valaddr_reg:x3; val_offset:6642*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6642*0 + 3*678*FLEN/8, x4, x1, x2)

inst_2215:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7f0000; valaddr_reg:x3; val_offset:6645*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6645*0 + 3*679*FLEN/8, x4, x1, x2)

inst_2216:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7f8000; valaddr_reg:x3; val_offset:6648*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6648*0 + 3*680*FLEN/8, x4, x1, x2)

inst_2217:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7fc000; valaddr_reg:x3; val_offset:6651*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6651*0 + 3*681*FLEN/8, x4, x1, x2)

inst_2218:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7fe000; valaddr_reg:x3; val_offset:6654*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6654*0 + 3*682*FLEN/8, x4, x1, x2)

inst_2219:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7ff000; valaddr_reg:x3; val_offset:6657*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6657*0 + 3*683*FLEN/8, x4, x1, x2)

inst_2220:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7ff800; valaddr_reg:x3; val_offset:6660*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6660*0 + 3*684*FLEN/8, x4, x1, x2)

inst_2221:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7ffc00; valaddr_reg:x3; val_offset:6663*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6663*0 + 3*685*FLEN/8, x4, x1, x2)

inst_2222:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7ffe00; valaddr_reg:x3; val_offset:6666*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6666*0 + 3*686*FLEN/8, x4, x1, x2)

inst_2223:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7fff00; valaddr_reg:x3; val_offset:6669*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6669*0 + 3*687*FLEN/8, x4, x1, x2)

inst_2224:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7fff80; valaddr_reg:x3; val_offset:6672*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6672*0 + 3*688*FLEN/8, x4, x1, x2)

inst_2225:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7fffc0; valaddr_reg:x3; val_offset:6675*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6675*0 + 3*689*FLEN/8, x4, x1, x2)

inst_2226:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7fffe0; valaddr_reg:x3; val_offset:6678*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6678*0 + 3*690*FLEN/8, x4, x1, x2)

inst_2227:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7ffff0; valaddr_reg:x3; val_offset:6681*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6681*0 + 3*691*FLEN/8, x4, x1, x2)

inst_2228:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7ffff8; valaddr_reg:x3; val_offset:6684*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6684*0 + 3*692*FLEN/8, x4, x1, x2)

inst_2229:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7ffffc; valaddr_reg:x3; val_offset:6687*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6687*0 + 3*693*FLEN/8, x4, x1, x2)

inst_2230:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7ffffe; valaddr_reg:x3; val_offset:6690*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6690*0 + 3*694*FLEN/8, x4, x1, x2)

inst_2231:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2db9cd; op2val:0x0;
op3val:0x7d7fffff; valaddr_reg:x3; val_offset:6693*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6693*0 + 3*695*FLEN/8, x4, x1, x2)

inst_2232:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c000000; valaddr_reg:x3; val_offset:6696*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6696*0 + 3*696*FLEN/8, x4, x1, x2)

inst_2233:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c000001; valaddr_reg:x3; val_offset:6699*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6699*0 + 3*697*FLEN/8, x4, x1, x2)

inst_2234:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c000003; valaddr_reg:x3; val_offset:6702*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6702*0 + 3*698*FLEN/8, x4, x1, x2)

inst_2235:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c000007; valaddr_reg:x3; val_offset:6705*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6705*0 + 3*699*FLEN/8, x4, x1, x2)

inst_2236:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c00000f; valaddr_reg:x3; val_offset:6708*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6708*0 + 3*700*FLEN/8, x4, x1, x2)

inst_2237:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c00001f; valaddr_reg:x3; val_offset:6711*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6711*0 + 3*701*FLEN/8, x4, x1, x2)

inst_2238:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c00003f; valaddr_reg:x3; val_offset:6714*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6714*0 + 3*702*FLEN/8, x4, x1, x2)

inst_2239:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c00007f; valaddr_reg:x3; val_offset:6717*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6717*0 + 3*703*FLEN/8, x4, x1, x2)

inst_2240:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c0000ff; valaddr_reg:x3; val_offset:6720*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6720*0 + 3*704*FLEN/8, x4, x1, x2)

inst_2241:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c0001ff; valaddr_reg:x3; val_offset:6723*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6723*0 + 3*705*FLEN/8, x4, x1, x2)

inst_2242:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c0003ff; valaddr_reg:x3; val_offset:6726*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6726*0 + 3*706*FLEN/8, x4, x1, x2)

inst_2243:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c0007ff; valaddr_reg:x3; val_offset:6729*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6729*0 + 3*707*FLEN/8, x4, x1, x2)

inst_2244:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c000fff; valaddr_reg:x3; val_offset:6732*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6732*0 + 3*708*FLEN/8, x4, x1, x2)

inst_2245:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c001fff; valaddr_reg:x3; val_offset:6735*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6735*0 + 3*709*FLEN/8, x4, x1, x2)

inst_2246:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c003fff; valaddr_reg:x3; val_offset:6738*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6738*0 + 3*710*FLEN/8, x4, x1, x2)

inst_2247:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c007fff; valaddr_reg:x3; val_offset:6741*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6741*0 + 3*711*FLEN/8, x4, x1, x2)

inst_2248:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c00ffff; valaddr_reg:x3; val_offset:6744*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6744*0 + 3*712*FLEN/8, x4, x1, x2)

inst_2249:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c01ffff; valaddr_reg:x3; val_offset:6747*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6747*0 + 3*713*FLEN/8, x4, x1, x2)

inst_2250:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c03ffff; valaddr_reg:x3; val_offset:6750*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6750*0 + 3*714*FLEN/8, x4, x1, x2)

inst_2251:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c07ffff; valaddr_reg:x3; val_offset:6753*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6753*0 + 3*715*FLEN/8, x4, x1, x2)

inst_2252:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c0fffff; valaddr_reg:x3; val_offset:6756*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6756*0 + 3*716*FLEN/8, x4, x1, x2)

inst_2253:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c1fffff; valaddr_reg:x3; val_offset:6759*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6759*0 + 3*717*FLEN/8, x4, x1, x2)

inst_2254:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c3fffff; valaddr_reg:x3; val_offset:6762*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6762*0 + 3*718*FLEN/8, x4, x1, x2)

inst_2255:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c400000; valaddr_reg:x3; val_offset:6765*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6765*0 + 3*719*FLEN/8, x4, x1, x2)

inst_2256:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c600000; valaddr_reg:x3; val_offset:6768*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6768*0 + 3*720*FLEN/8, x4, x1, x2)

inst_2257:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c700000; valaddr_reg:x3; val_offset:6771*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6771*0 + 3*721*FLEN/8, x4, x1, x2)

inst_2258:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c780000; valaddr_reg:x3; val_offset:6774*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6774*0 + 3*722*FLEN/8, x4, x1, x2)

inst_2259:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7c0000; valaddr_reg:x3; val_offset:6777*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6777*0 + 3*723*FLEN/8, x4, x1, x2)

inst_2260:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7e0000; valaddr_reg:x3; val_offset:6780*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6780*0 + 3*724*FLEN/8, x4, x1, x2)

inst_2261:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7f0000; valaddr_reg:x3; val_offset:6783*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6783*0 + 3*725*FLEN/8, x4, x1, x2)

inst_2262:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7f8000; valaddr_reg:x3; val_offset:6786*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6786*0 + 3*726*FLEN/8, x4, x1, x2)

inst_2263:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7fc000; valaddr_reg:x3; val_offset:6789*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6789*0 + 3*727*FLEN/8, x4, x1, x2)

inst_2264:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7fe000; valaddr_reg:x3; val_offset:6792*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6792*0 + 3*728*FLEN/8, x4, x1, x2)

inst_2265:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7ff000; valaddr_reg:x3; val_offset:6795*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6795*0 + 3*729*FLEN/8, x4, x1, x2)

inst_2266:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7ff800; valaddr_reg:x3; val_offset:6798*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6798*0 + 3*730*FLEN/8, x4, x1, x2)

inst_2267:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7ffc00; valaddr_reg:x3; val_offset:6801*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6801*0 + 3*731*FLEN/8, x4, x1, x2)

inst_2268:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7ffe00; valaddr_reg:x3; val_offset:6804*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6804*0 + 3*732*FLEN/8, x4, x1, x2)

inst_2269:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7fff00; valaddr_reg:x3; val_offset:6807*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6807*0 + 3*733*FLEN/8, x4, x1, x2)

inst_2270:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7fff80; valaddr_reg:x3; val_offset:6810*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6810*0 + 3*734*FLEN/8, x4, x1, x2)

inst_2271:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7fffc0; valaddr_reg:x3; val_offset:6813*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6813*0 + 3*735*FLEN/8, x4, x1, x2)

inst_2272:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7fffe0; valaddr_reg:x3; val_offset:6816*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6816*0 + 3*736*FLEN/8, x4, x1, x2)

inst_2273:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7ffff0; valaddr_reg:x3; val_offset:6819*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6819*0 + 3*737*FLEN/8, x4, x1, x2)

inst_2274:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7ffff8; valaddr_reg:x3; val_offset:6822*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6822*0 + 3*738*FLEN/8, x4, x1, x2)

inst_2275:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7ffffc; valaddr_reg:x3; val_offset:6825*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6825*0 + 3*739*FLEN/8, x4, x1, x2)

inst_2276:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7ffffe; valaddr_reg:x3; val_offset:6828*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6828*0 + 3*740*FLEN/8, x4, x1, x2)

inst_2277:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x2c7fffff; valaddr_reg:x3; val_offset:6831*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6831*0 + 3*741*FLEN/8, x4, x1, x2)

inst_2278:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3f800001; valaddr_reg:x3; val_offset:6834*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6834*0 + 3*742*FLEN/8, x4, x1, x2)

inst_2279:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3f800003; valaddr_reg:x3; val_offset:6837*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6837*0 + 3*743*FLEN/8, x4, x1, x2)

inst_2280:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3f800007; valaddr_reg:x3; val_offset:6840*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6840*0 + 3*744*FLEN/8, x4, x1, x2)

inst_2281:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3f999999; valaddr_reg:x3; val_offset:6843*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6843*0 + 3*745*FLEN/8, x4, x1, x2)

inst_2282:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:6846*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6846*0 + 3*746*FLEN/8, x4, x1, x2)

inst_2283:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:6849*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6849*0 + 3*747*FLEN/8, x4, x1, x2)

inst_2284:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:6852*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6852*0 + 3*748*FLEN/8, x4, x1, x2)

inst_2285:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:6855*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6855*0 + 3*749*FLEN/8, x4, x1, x2)

inst_2286:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:6858*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6858*0 + 3*750*FLEN/8, x4, x1, x2)

inst_2287:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:6861*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6861*0 + 3*751*FLEN/8, x4, x1, x2)

inst_2288:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:6864*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6864*0 + 3*752*FLEN/8, x4, x1, x2)

inst_2289:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:6867*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6867*0 + 3*753*FLEN/8, x4, x1, x2)

inst_2290:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:6870*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6870*0 + 3*754*FLEN/8, x4, x1, x2)

inst_2291:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:6873*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6873*0 + 3*755*FLEN/8, x4, x1, x2)

inst_2292:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:6876*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6876*0 + 3*756*FLEN/8, x4, x1, x2)

inst_2293:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e7a83 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3bce28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2e7a83; op2val:0x1bbce28;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:6879*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6879*0 + 3*757*FLEN/8, x4, x1, x2)

inst_2294:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb1000000; valaddr_reg:x3; val_offset:6882*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6882*0 + 3*758*FLEN/8, x4, x1, x2)

inst_2295:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb1000001; valaddr_reg:x3; val_offset:6885*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6885*0 + 3*759*FLEN/8, x4, x1, x2)

inst_2296:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb1000003; valaddr_reg:x3; val_offset:6888*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6888*0 + 3*760*FLEN/8, x4, x1, x2)

inst_2297:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb1000007; valaddr_reg:x3; val_offset:6891*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6891*0 + 3*761*FLEN/8, x4, x1, x2)

inst_2298:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb100000f; valaddr_reg:x3; val_offset:6894*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6894*0 + 3*762*FLEN/8, x4, x1, x2)

inst_2299:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb100001f; valaddr_reg:x3; val_offset:6897*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6897*0 + 3*763*FLEN/8, x4, x1, x2)

inst_2300:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb100003f; valaddr_reg:x3; val_offset:6900*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6900*0 + 3*764*FLEN/8, x4, x1, x2)

inst_2301:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb100007f; valaddr_reg:x3; val_offset:6903*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6903*0 + 3*765*FLEN/8, x4, x1, x2)

inst_2302:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb10000ff; valaddr_reg:x3; val_offset:6906*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6906*0 + 3*766*FLEN/8, x4, x1, x2)

inst_2303:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x384aa9 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x31ce1c and fs3 == 1 and fe3 == 0x62 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d384aa9; op2val:0x81b1ce1c;
op3val:0xb10001ff; valaddr_reg:x3; val_offset:6909*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 6909*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456098304,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456102400,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456104448,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456105472,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456105984,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456106240,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456106368,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456106432,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456106464,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456106480,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456106488,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456106492,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456106494,32,FLEN)
NAN_BOXED(2095503192,32,FLEN)
NAN_BOXED(2181952333,32,FLEN)
NAN_BOXED(3456106495,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034368,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034369,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034371,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034375,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034383,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034399,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034431,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034495,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034623,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951034879,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951035391,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951036415,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951038463,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951042559,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951050751,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951067135,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951099903,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951165439,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951296511,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3951558655,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3952082943,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3953131519,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3955228671,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3955228672,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3957325824,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3958374400,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3958898688,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959160832,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959291904,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959357440,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959390208,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959406592,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959414784,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959418880,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959420928,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959421952,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422464,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422720,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422848,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422912,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422944,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422960,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422968,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422972,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422974,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(3959422975,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2096119922,32,FLEN)
NAN_BOXED(3255329768,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529152,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529153,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529155,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529159,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529167,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529183,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529215,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529279,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529407,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788529663,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788530175,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788531199,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788533247,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788537343,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788545535,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788561919,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788594687,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788660223,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(788791295,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(789053439,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(789577727,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(790626303,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(792723455,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(792723456,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(794820608,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(795869184,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796393472,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796655616,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796786688,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796852224,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796884992,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796901376,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796909568,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796913664,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796915712,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796916736,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917248,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917504,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917632,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917696,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917728,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917744,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917752,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917756,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917758,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(796917759,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2096833061,32,FLEN)
NAN_BOXED(33716991,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671040,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671041,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671043,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671047,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671055,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671071,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671103,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671167,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671295,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187671551,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187672063,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187673087,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187675135,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187679231,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187687423,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187703807,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187736575,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187802111,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3187933183,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3188195327,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3188719615,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3189768191,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3191865343,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3191865344,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3193962496,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195011072,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195535360,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195797504,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195928576,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3195994112,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196026880,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196043264,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196051456,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196055552,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196057600,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196058624,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059136,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059392,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059520,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059584,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059616,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059632,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059640,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059644,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059646,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3196059647,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2097456765,32,FLEN)
NAN_BOXED(2180449917,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689920,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689921,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689923,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689927,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689935,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689951,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964689983,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964690047,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964690175,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964690431,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964690943,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964691967,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964694015,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964698111,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964706303,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964722687,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964755455,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964820991,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(964952063,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(965214207,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(965738495,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(966787071,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(968884223,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(968884224,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(970981376,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(972029952,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(972554240,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(972816384,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(972947456,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973012992,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973045760,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973062144,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973070336,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973074432,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973076480,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973077504,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078016,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078272,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078400,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078464,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078496,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078512,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078520,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078524,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078526,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(973078527,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2097978605,32,FLEN)
NAN_BOXED(32049514,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761607680,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761607681,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761607683,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761607687,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761607695,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761607711,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761607743,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761607807,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761607935,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761608191,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761608703,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761609727,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761611775,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761615871,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761624063,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761640447,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761673215,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761738751,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1761869823,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1762131967,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1762656255,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1763704831,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1765801983,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1765801984,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1767899136,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1768947712,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769472000,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769734144,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769865216,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769930752,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769963520,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769979904,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769988096,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769992192,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769994240,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769995264,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769995776,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769996032,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769996160,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769996224,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769996256,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769996272,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769996280,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769996284,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769996286,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(1769996287,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2098056095,32,FLEN)
NAN_BOXED(1105663984,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976064,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976065,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976067,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976071,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976079,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976095,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976127,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976191,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976319,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976575,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373977087,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373978111,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373980159,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373984255,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373992447,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374008831,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374041599,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374107135,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374238207,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374500351,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2375024639,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2376073215,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170367,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170368,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2380267520,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381316096,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381840384,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382102528,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382233600,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382299136,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382331904,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382348288,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382356480,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382360576,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382362624,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382363648,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364160,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364416,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364544,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364608,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364640,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364656,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364664,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364668,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364670,32,FLEN)
NAN_BOXED(2098196016,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364671,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534208,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534209,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534211,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534215,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534223,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534239,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534271,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534335,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534463,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637534719,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637535231,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637536255,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637538303,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637542399,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637550591,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637566975,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637599743,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637665279,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(637796351,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(638058495,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(638582783,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(639631359,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(641728511,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(641728512,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(643825664,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(644874240,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645398528,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645660672,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645791744,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645857280,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645890048,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645906432,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645914624,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645918720,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645920768,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645921792,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922304,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922560,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922688,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922752,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922784,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922800,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922808,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922812,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922814,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(645922815,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2098610301,32,FLEN)
NAN_BOXED(31069770,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991232,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991233,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991235,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991239,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991247,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991263,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991295,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991359,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991487,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920991743,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920992255,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920993279,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920995327,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1920999423,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1921007615,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1921023999,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1921056767,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1921122303,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1921253375,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1921515519,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1922039807,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1923088383,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1925185535,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1925185536,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1927282688,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1928331264,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1928855552,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929117696,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929248768,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929314304,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929347072,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929363456,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929371648,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929375744,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929377792,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929378816,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379328,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379584,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379712,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379776,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379808,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379824,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379832,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379836,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379838,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(1929379839,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2098782737,32,FLEN)
NAN_BOXED(1104565614,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763392,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763393,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763395,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763399,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763407,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763423,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763455,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763519,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763647,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088763903,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088764415,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088765439,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088767487,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088771583,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088779775,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088796159,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088828927,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2088894463,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2089025535,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2089287679,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2089811967,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2090860543,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2092957695,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2092957696,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2095054848,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2096103424,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2096627712,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2096889856,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097020928,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097086464,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097119232,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097135616,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097143808,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097147904,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097149952,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097150976,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151488,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151744,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151872,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151936,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151968,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151984,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151992,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151996,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151998,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2097151999,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2099465223,32,FLEN)
NAN_BOXED(1103669824,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994944,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994945,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994947,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994951,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994959,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994975,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995007,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995071,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995199,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995455,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995967,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150996991,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150999039,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151003135,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151011327,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151027711,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151060479,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151126015,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151257087,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151519231,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(152043519,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(153092095,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(155189247,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(155189248,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(157286400,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(158334976,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(158859264,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159121408,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159252480,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159318016,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159350784,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159367168,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159375360,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159379456,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159381504,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159382528,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383040,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383296,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383424,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383488,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383520,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383536,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383544,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383548,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383550,32,FLEN)
NAN_BOXED(2099651021,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383551,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152000,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152001,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152003,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152007,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152015,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152031,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152063,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152127,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152255,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097152511,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097153023,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097154047,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097156095,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097160191,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097168383,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097184767,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097217535,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097283071,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097414143,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2097676287,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2098200575,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2099249151,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2101346303,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2101346304,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2103443456,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2104492032,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105016320,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105278464,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105409536,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105475072,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105507840,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105524224,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105532416,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105536512,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105538560,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105539584,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540096,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540352,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540480,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540544,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540576,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540592,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540600,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540604,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540606,32,FLEN)
NAN_BOXED(2100148685,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2105540607,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738197504,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738197505,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738197507,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738197511,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738197519,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738197535,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738197567,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738197631,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738197759,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738198015,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738198527,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738199551,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738201599,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738205695,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738213887,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738230271,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738263039,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738328575,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738459647,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(738721791,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(739246079,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(740294655,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(742391807,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(742391808,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(744488960,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(745537536,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746061824,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746323968,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746455040,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746520576,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746553344,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746569728,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746577920,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746582016,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746584064,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746585088,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746585600,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746585856,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746585984,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746586048,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746586080,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746586096,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746586104,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746586108,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746586110,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(746586111,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2100198019,32,FLEN)
NAN_BOXED(29085224,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567232,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567233,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567235,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567239,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567247,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567263,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567295,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567359,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567487,32,FLEN)
NAN_BOXED(2100841129,32,FLEN)
NAN_BOXED(2175913500,32,FLEN)
NAN_BOXED(2969567743,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
