
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_27648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x6a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xb57fffff; valaddr_reg:x3; val_offset:82944*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82944*0 + 3*0*FLEN/8, x4, x1, x2)

inst_27649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbf800001; valaddr_reg:x3; val_offset:82947*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82947*0 + 3*1*FLEN/8, x4, x1, x2)

inst_27650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbf800003; valaddr_reg:x3; val_offset:82950*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82950*0 + 3*2*FLEN/8, x4, x1, x2)

inst_27651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbf800007; valaddr_reg:x3; val_offset:82953*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82953*0 + 3*3*FLEN/8, x4, x1, x2)

inst_27652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbf999999; valaddr_reg:x3; val_offset:82956*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82956*0 + 3*4*FLEN/8, x4, x1, x2)

inst_27653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:82959*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82959*0 + 3*5*FLEN/8, x4, x1, x2)

inst_27654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:82962*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82962*0 + 3*6*FLEN/8, x4, x1, x2)

inst_27655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:82965*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82965*0 + 3*7*FLEN/8, x4, x1, x2)

inst_27656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:82968*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82968*0 + 3*8*FLEN/8, x4, x1, x2)

inst_27657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:82971*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82971*0 + 3*9*FLEN/8, x4, x1, x2)

inst_27658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:82974*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82974*0 + 3*10*FLEN/8, x4, x1, x2)

inst_27659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:82977*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82977*0 + 3*11*FLEN/8, x4, x1, x2)

inst_27660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:82980*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82980*0 + 3*12*FLEN/8, x4, x1, x2)

inst_27661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:82983*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82983*0 + 3*13*FLEN/8, x4, x1, x2)

inst_27662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:82986*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82986*0 + 3*14*FLEN/8, x4, x1, x2)

inst_27663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:82989*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82989*0 + 3*15*FLEN/8, x4, x1, x2)

inst_27664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aecaa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3af7a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aecaa; op2val:0x803af7a0;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:82992*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82992*0 + 3*16*FLEN/8, x4, x1, x2)

inst_27665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:82995*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82995*0 + 3*17*FLEN/8, x4, x1, x2)

inst_27666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:82998*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 82998*0 + 3*18*FLEN/8, x4, x1, x2)

inst_27667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:83001*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83001*0 + 3*19*FLEN/8, x4, x1, x2)

inst_27668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:83004*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83004*0 + 3*20*FLEN/8, x4, x1, x2)

inst_27669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:83007*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83007*0 + 3*21*FLEN/8, x4, x1, x2)

inst_27670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:83010*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83010*0 + 3*22*FLEN/8, x4, x1, x2)

inst_27671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:83013*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83013*0 + 3*23*FLEN/8, x4, x1, x2)

inst_27672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:83016*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83016*0 + 3*24*FLEN/8, x4, x1, x2)

inst_27673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:83019*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83019*0 + 3*25*FLEN/8, x4, x1, x2)

inst_27674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:83022*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83022*0 + 3*26*FLEN/8, x4, x1, x2)

inst_27675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:83025*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83025*0 + 3*27*FLEN/8, x4, x1, x2)

inst_27676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:83028*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83028*0 + 3*28*FLEN/8, x4, x1, x2)

inst_27677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:83031*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83031*0 + 3*29*FLEN/8, x4, x1, x2)

inst_27678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:83034*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83034*0 + 3*30*FLEN/8, x4, x1, x2)

inst_27679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:83037*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83037*0 + 3*31*FLEN/8, x4, x1, x2)

inst_27680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:83040*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83040*0 + 3*32*FLEN/8, x4, x1, x2)

inst_27681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a000000; valaddr_reg:x3; val_offset:83043*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83043*0 + 3*33*FLEN/8, x4, x1, x2)

inst_27682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a000001; valaddr_reg:x3; val_offset:83046*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83046*0 + 3*34*FLEN/8, x4, x1, x2)

inst_27683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a000003; valaddr_reg:x3; val_offset:83049*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83049*0 + 3*35*FLEN/8, x4, x1, x2)

inst_27684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a000007; valaddr_reg:x3; val_offset:83052*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83052*0 + 3*36*FLEN/8, x4, x1, x2)

inst_27685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a00000f; valaddr_reg:x3; val_offset:83055*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83055*0 + 3*37*FLEN/8, x4, x1, x2)

inst_27686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a00001f; valaddr_reg:x3; val_offset:83058*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83058*0 + 3*38*FLEN/8, x4, x1, x2)

inst_27687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a00003f; valaddr_reg:x3; val_offset:83061*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83061*0 + 3*39*FLEN/8, x4, x1, x2)

inst_27688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a00007f; valaddr_reg:x3; val_offset:83064*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83064*0 + 3*40*FLEN/8, x4, x1, x2)

inst_27689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a0000ff; valaddr_reg:x3; val_offset:83067*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83067*0 + 3*41*FLEN/8, x4, x1, x2)

inst_27690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a0001ff; valaddr_reg:x3; val_offset:83070*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83070*0 + 3*42*FLEN/8, x4, x1, x2)

inst_27691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a0003ff; valaddr_reg:x3; val_offset:83073*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83073*0 + 3*43*FLEN/8, x4, x1, x2)

inst_27692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a0007ff; valaddr_reg:x3; val_offset:83076*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83076*0 + 3*44*FLEN/8, x4, x1, x2)

inst_27693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a000fff; valaddr_reg:x3; val_offset:83079*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83079*0 + 3*45*FLEN/8, x4, x1, x2)

inst_27694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a001fff; valaddr_reg:x3; val_offset:83082*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83082*0 + 3*46*FLEN/8, x4, x1, x2)

inst_27695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a003fff; valaddr_reg:x3; val_offset:83085*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83085*0 + 3*47*FLEN/8, x4, x1, x2)

inst_27696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a007fff; valaddr_reg:x3; val_offset:83088*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83088*0 + 3*48*FLEN/8, x4, x1, x2)

inst_27697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a00ffff; valaddr_reg:x3; val_offset:83091*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83091*0 + 3*49*FLEN/8, x4, x1, x2)

inst_27698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a01ffff; valaddr_reg:x3; val_offset:83094*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83094*0 + 3*50*FLEN/8, x4, x1, x2)

inst_27699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a03ffff; valaddr_reg:x3; val_offset:83097*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83097*0 + 3*51*FLEN/8, x4, x1, x2)

inst_27700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a07ffff; valaddr_reg:x3; val_offset:83100*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83100*0 + 3*52*FLEN/8, x4, x1, x2)

inst_27701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a0fffff; valaddr_reg:x3; val_offset:83103*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83103*0 + 3*53*FLEN/8, x4, x1, x2)

inst_27702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a1fffff; valaddr_reg:x3; val_offset:83106*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83106*0 + 3*54*FLEN/8, x4, x1, x2)

inst_27703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a3fffff; valaddr_reg:x3; val_offset:83109*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83109*0 + 3*55*FLEN/8, x4, x1, x2)

inst_27704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a400000; valaddr_reg:x3; val_offset:83112*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83112*0 + 3*56*FLEN/8, x4, x1, x2)

inst_27705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a600000; valaddr_reg:x3; val_offset:83115*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83115*0 + 3*57*FLEN/8, x4, x1, x2)

inst_27706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a700000; valaddr_reg:x3; val_offset:83118*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83118*0 + 3*58*FLEN/8, x4, x1, x2)

inst_27707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a780000; valaddr_reg:x3; val_offset:83121*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83121*0 + 3*59*FLEN/8, x4, x1, x2)

inst_27708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7c0000; valaddr_reg:x3; val_offset:83124*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83124*0 + 3*60*FLEN/8, x4, x1, x2)

inst_27709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7e0000; valaddr_reg:x3; val_offset:83127*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83127*0 + 3*61*FLEN/8, x4, x1, x2)

inst_27710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7f0000; valaddr_reg:x3; val_offset:83130*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83130*0 + 3*62*FLEN/8, x4, x1, x2)

inst_27711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7f8000; valaddr_reg:x3; val_offset:83133*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83133*0 + 3*63*FLEN/8, x4, x1, x2)

inst_27712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7fc000; valaddr_reg:x3; val_offset:83136*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83136*0 + 3*64*FLEN/8, x4, x1, x2)

inst_27713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7fe000; valaddr_reg:x3; val_offset:83139*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83139*0 + 3*65*FLEN/8, x4, x1, x2)

inst_27714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7ff000; valaddr_reg:x3; val_offset:83142*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83142*0 + 3*66*FLEN/8, x4, x1, x2)

inst_27715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7ff800; valaddr_reg:x3; val_offset:83145*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83145*0 + 3*67*FLEN/8, x4, x1, x2)

inst_27716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7ffc00; valaddr_reg:x3; val_offset:83148*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83148*0 + 3*68*FLEN/8, x4, x1, x2)

inst_27717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7ffe00; valaddr_reg:x3; val_offset:83151*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83151*0 + 3*69*FLEN/8, x4, x1, x2)

inst_27718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7fff00; valaddr_reg:x3; val_offset:83154*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83154*0 + 3*70*FLEN/8, x4, x1, x2)

inst_27719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7fff80; valaddr_reg:x3; val_offset:83157*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83157*0 + 3*71*FLEN/8, x4, x1, x2)

inst_27720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7fffc0; valaddr_reg:x3; val_offset:83160*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83160*0 + 3*72*FLEN/8, x4, x1, x2)

inst_27721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7fffe0; valaddr_reg:x3; val_offset:83163*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83163*0 + 3*73*FLEN/8, x4, x1, x2)

inst_27722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7ffff0; valaddr_reg:x3; val_offset:83166*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83166*0 + 3*74*FLEN/8, x4, x1, x2)

inst_27723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7ffff8; valaddr_reg:x3; val_offset:83169*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83169*0 + 3*75*FLEN/8, x4, x1, x2)

inst_27724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7ffffc; valaddr_reg:x3; val_offset:83172*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83172*0 + 3*76*FLEN/8, x4, x1, x2)

inst_27725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7ffffe; valaddr_reg:x3; val_offset:83175*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83175*0 + 3*77*FLEN/8, x4, x1, x2)

inst_27726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b5eb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x14 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b5eb5; op2val:0x80000000;
op3val:0x8a7fffff; valaddr_reg:x3; val_offset:83178*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83178*0 + 3*78*FLEN/8, x4, x1, x2)

inst_27727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbf800001; valaddr_reg:x3; val_offset:83181*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83181*0 + 3*79*FLEN/8, x4, x1, x2)

inst_27728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbf800003; valaddr_reg:x3; val_offset:83184*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83184*0 + 3*80*FLEN/8, x4, x1, x2)

inst_27729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbf800007; valaddr_reg:x3; val_offset:83187*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83187*0 + 3*81*FLEN/8, x4, x1, x2)

inst_27730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbf999999; valaddr_reg:x3; val_offset:83190*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83190*0 + 3*82*FLEN/8, x4, x1, x2)

inst_27731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:83193*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83193*0 + 3*83*FLEN/8, x4, x1, x2)

inst_27732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:83196*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83196*0 + 3*84*FLEN/8, x4, x1, x2)

inst_27733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:83199*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83199*0 + 3*85*FLEN/8, x4, x1, x2)

inst_27734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:83202*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83202*0 + 3*86*FLEN/8, x4, x1, x2)

inst_27735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:83205*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83205*0 + 3*87*FLEN/8, x4, x1, x2)

inst_27736:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:83208*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83208*0 + 3*88*FLEN/8, x4, x1, x2)

inst_27737:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:83211*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83211*0 + 3*89*FLEN/8, x4, x1, x2)

inst_27738:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:83214*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83214*0 + 3*90*FLEN/8, x4, x1, x2)

inst_27739:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:83217*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83217*0 + 3*91*FLEN/8, x4, x1, x2)

inst_27740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:83220*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83220*0 + 3*92*FLEN/8, x4, x1, x2)

inst_27741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:83223*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83223*0 + 3*93*FLEN/8, x4, x1, x2)

inst_27742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:83226*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83226*0 + 3*94*FLEN/8, x4, x1, x2)

inst_27743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8000000; valaddr_reg:x3; val_offset:83229*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83229*0 + 3*95*FLEN/8, x4, x1, x2)

inst_27744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8000001; valaddr_reg:x3; val_offset:83232*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83232*0 + 3*96*FLEN/8, x4, x1, x2)

inst_27745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8000003; valaddr_reg:x3; val_offset:83235*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83235*0 + 3*97*FLEN/8, x4, x1, x2)

inst_27746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8000007; valaddr_reg:x3; val_offset:83238*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83238*0 + 3*98*FLEN/8, x4, x1, x2)

inst_27747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc800000f; valaddr_reg:x3; val_offset:83241*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83241*0 + 3*99*FLEN/8, x4, x1, x2)

inst_27748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc800001f; valaddr_reg:x3; val_offset:83244*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83244*0 + 3*100*FLEN/8, x4, x1, x2)

inst_27749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc800003f; valaddr_reg:x3; val_offset:83247*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83247*0 + 3*101*FLEN/8, x4, x1, x2)

inst_27750:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc800007f; valaddr_reg:x3; val_offset:83250*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83250*0 + 3*102*FLEN/8, x4, x1, x2)

inst_27751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc80000ff; valaddr_reg:x3; val_offset:83253*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83253*0 + 3*103*FLEN/8, x4, x1, x2)

inst_27752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc80001ff; valaddr_reg:x3; val_offset:83256*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83256*0 + 3*104*FLEN/8, x4, x1, x2)

inst_27753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc80003ff; valaddr_reg:x3; val_offset:83259*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83259*0 + 3*105*FLEN/8, x4, x1, x2)

inst_27754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc80007ff; valaddr_reg:x3; val_offset:83262*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83262*0 + 3*106*FLEN/8, x4, x1, x2)

inst_27755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8000fff; valaddr_reg:x3; val_offset:83265*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83265*0 + 3*107*FLEN/8, x4, x1, x2)

inst_27756:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8001fff; valaddr_reg:x3; val_offset:83268*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83268*0 + 3*108*FLEN/8, x4, x1, x2)

inst_27757:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8003fff; valaddr_reg:x3; val_offset:83271*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83271*0 + 3*109*FLEN/8, x4, x1, x2)

inst_27758:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8007fff; valaddr_reg:x3; val_offset:83274*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83274*0 + 3*110*FLEN/8, x4, x1, x2)

inst_27759:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc800ffff; valaddr_reg:x3; val_offset:83277*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83277*0 + 3*111*FLEN/8, x4, x1, x2)

inst_27760:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc801ffff; valaddr_reg:x3; val_offset:83280*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83280*0 + 3*112*FLEN/8, x4, x1, x2)

inst_27761:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc803ffff; valaddr_reg:x3; val_offset:83283*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83283*0 + 3*113*FLEN/8, x4, x1, x2)

inst_27762:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc807ffff; valaddr_reg:x3; val_offset:83286*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83286*0 + 3*114*FLEN/8, x4, x1, x2)

inst_27763:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc80fffff; valaddr_reg:x3; val_offset:83289*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83289*0 + 3*115*FLEN/8, x4, x1, x2)

inst_27764:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc81fffff; valaddr_reg:x3; val_offset:83292*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83292*0 + 3*116*FLEN/8, x4, x1, x2)

inst_27765:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc83fffff; valaddr_reg:x3; val_offset:83295*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83295*0 + 3*117*FLEN/8, x4, x1, x2)

inst_27766:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8400000; valaddr_reg:x3; val_offset:83298*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83298*0 + 3*118*FLEN/8, x4, x1, x2)

inst_27767:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8600000; valaddr_reg:x3; val_offset:83301*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83301*0 + 3*119*FLEN/8, x4, x1, x2)

inst_27768:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8700000; valaddr_reg:x3; val_offset:83304*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83304*0 + 3*120*FLEN/8, x4, x1, x2)

inst_27769:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc8780000; valaddr_reg:x3; val_offset:83307*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83307*0 + 3*121*FLEN/8, x4, x1, x2)

inst_27770:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87c0000; valaddr_reg:x3; val_offset:83310*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83310*0 + 3*122*FLEN/8, x4, x1, x2)

inst_27771:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87e0000; valaddr_reg:x3; val_offset:83313*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83313*0 + 3*123*FLEN/8, x4, x1, x2)

inst_27772:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87f0000; valaddr_reg:x3; val_offset:83316*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83316*0 + 3*124*FLEN/8, x4, x1, x2)

inst_27773:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87f8000; valaddr_reg:x3; val_offset:83319*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83319*0 + 3*125*FLEN/8, x4, x1, x2)

inst_27774:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87fc000; valaddr_reg:x3; val_offset:83322*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83322*0 + 3*126*FLEN/8, x4, x1, x2)

inst_27775:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87fe000; valaddr_reg:x3; val_offset:83325*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83325*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_27776:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87ff000; valaddr_reg:x3; val_offset:83328*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83328*0 + 3*128*FLEN/8, x4, x1, x2)

inst_27777:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87ff800; valaddr_reg:x3; val_offset:83331*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83331*0 + 3*129*FLEN/8, x4, x1, x2)

inst_27778:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87ffc00; valaddr_reg:x3; val_offset:83334*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83334*0 + 3*130*FLEN/8, x4, x1, x2)

inst_27779:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87ffe00; valaddr_reg:x3; val_offset:83337*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83337*0 + 3*131*FLEN/8, x4, x1, x2)

inst_27780:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87fff00; valaddr_reg:x3; val_offset:83340*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83340*0 + 3*132*FLEN/8, x4, x1, x2)

inst_27781:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87fff80; valaddr_reg:x3; val_offset:83343*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83343*0 + 3*133*FLEN/8, x4, x1, x2)

inst_27782:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87fffc0; valaddr_reg:x3; val_offset:83346*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83346*0 + 3*134*FLEN/8, x4, x1, x2)

inst_27783:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87fffe0; valaddr_reg:x3; val_offset:83349*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83349*0 + 3*135*FLEN/8, x4, x1, x2)

inst_27784:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87ffff0; valaddr_reg:x3; val_offset:83352*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83352*0 + 3*136*FLEN/8, x4, x1, x2)

inst_27785:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87ffff8; valaddr_reg:x3; val_offset:83355*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83355*0 + 3*137*FLEN/8, x4, x1, x2)

inst_27786:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87ffffc; valaddr_reg:x3; val_offset:83358*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83358*0 + 3*138*FLEN/8, x4, x1, x2)

inst_27787:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87ffffe; valaddr_reg:x3; val_offset:83361*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83361*0 + 3*139*FLEN/8, x4, x1, x2)

inst_27788:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bbcde and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9fc4 and fs3 == 1 and fe3 == 0x90 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bbcde; op2val:0x803a9fc4;
op3val:0xc87fffff; valaddr_reg:x3; val_offset:83364*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83364*0 + 3*140*FLEN/8, x4, x1, x2)

inst_27789:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff000000; valaddr_reg:x3; val_offset:83367*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83367*0 + 3*141*FLEN/8, x4, x1, x2)

inst_27790:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff000001; valaddr_reg:x3; val_offset:83370*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83370*0 + 3*142*FLEN/8, x4, x1, x2)

inst_27791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff000003; valaddr_reg:x3; val_offset:83373*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83373*0 + 3*143*FLEN/8, x4, x1, x2)

inst_27792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff000007; valaddr_reg:x3; val_offset:83376*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83376*0 + 3*144*FLEN/8, x4, x1, x2)

inst_27793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff00000f; valaddr_reg:x3; val_offset:83379*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83379*0 + 3*145*FLEN/8, x4, x1, x2)

inst_27794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff00001f; valaddr_reg:x3; val_offset:83382*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83382*0 + 3*146*FLEN/8, x4, x1, x2)

inst_27795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff00003f; valaddr_reg:x3; val_offset:83385*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83385*0 + 3*147*FLEN/8, x4, x1, x2)

inst_27796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff00007f; valaddr_reg:x3; val_offset:83388*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83388*0 + 3*148*FLEN/8, x4, x1, x2)

inst_27797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff0000ff; valaddr_reg:x3; val_offset:83391*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83391*0 + 3*149*FLEN/8, x4, x1, x2)

inst_27798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff0001ff; valaddr_reg:x3; val_offset:83394*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83394*0 + 3*150*FLEN/8, x4, x1, x2)

inst_27799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff0003ff; valaddr_reg:x3; val_offset:83397*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83397*0 + 3*151*FLEN/8, x4, x1, x2)

inst_27800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff0007ff; valaddr_reg:x3; val_offset:83400*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83400*0 + 3*152*FLEN/8, x4, x1, x2)

inst_27801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff000fff; valaddr_reg:x3; val_offset:83403*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83403*0 + 3*153*FLEN/8, x4, x1, x2)

inst_27802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff001fff; valaddr_reg:x3; val_offset:83406*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83406*0 + 3*154*FLEN/8, x4, x1, x2)

inst_27803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff003fff; valaddr_reg:x3; val_offset:83409*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83409*0 + 3*155*FLEN/8, x4, x1, x2)

inst_27804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff007fff; valaddr_reg:x3; val_offset:83412*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83412*0 + 3*156*FLEN/8, x4, x1, x2)

inst_27805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff00ffff; valaddr_reg:x3; val_offset:83415*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83415*0 + 3*157*FLEN/8, x4, x1, x2)

inst_27806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff01ffff; valaddr_reg:x3; val_offset:83418*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83418*0 + 3*158*FLEN/8, x4, x1, x2)

inst_27807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff03ffff; valaddr_reg:x3; val_offset:83421*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83421*0 + 3*159*FLEN/8, x4, x1, x2)

inst_27808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff07ffff; valaddr_reg:x3; val_offset:83424*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83424*0 + 3*160*FLEN/8, x4, x1, x2)

inst_27809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff0fffff; valaddr_reg:x3; val_offset:83427*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83427*0 + 3*161*FLEN/8, x4, x1, x2)

inst_27810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff199999; valaddr_reg:x3; val_offset:83430*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83430*0 + 3*162*FLEN/8, x4, x1, x2)

inst_27811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff1fffff; valaddr_reg:x3; val_offset:83433*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83433*0 + 3*163*FLEN/8, x4, x1, x2)

inst_27812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff249249; valaddr_reg:x3; val_offset:83436*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83436*0 + 3*164*FLEN/8, x4, x1, x2)

inst_27813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff333333; valaddr_reg:x3; val_offset:83439*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83439*0 + 3*165*FLEN/8, x4, x1, x2)

inst_27814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:83442*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83442*0 + 3*166*FLEN/8, x4, x1, x2)

inst_27815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:83445*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83445*0 + 3*167*FLEN/8, x4, x1, x2)

inst_27816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff3fffff; valaddr_reg:x3; val_offset:83448*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83448*0 + 3*168*FLEN/8, x4, x1, x2)

inst_27817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff400000; valaddr_reg:x3; val_offset:83451*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83451*0 + 3*169*FLEN/8, x4, x1, x2)

inst_27818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff444444; valaddr_reg:x3; val_offset:83454*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83454*0 + 3*170*FLEN/8, x4, x1, x2)

inst_27819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:83457*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83457*0 + 3*171*FLEN/8, x4, x1, x2)

inst_27820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:83460*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83460*0 + 3*172*FLEN/8, x4, x1, x2)

inst_27821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff600000; valaddr_reg:x3; val_offset:83463*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83463*0 + 3*173*FLEN/8, x4, x1, x2)

inst_27822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff666666; valaddr_reg:x3; val_offset:83466*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83466*0 + 3*174*FLEN/8, x4, x1, x2)

inst_27823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:83469*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83469*0 + 3*175*FLEN/8, x4, x1, x2)

inst_27824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff700000; valaddr_reg:x3; val_offset:83472*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83472*0 + 3*176*FLEN/8, x4, x1, x2)

inst_27825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff780000; valaddr_reg:x3; val_offset:83475*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83475*0 + 3*177*FLEN/8, x4, x1, x2)

inst_27826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7c0000; valaddr_reg:x3; val_offset:83478*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83478*0 + 3*178*FLEN/8, x4, x1, x2)

inst_27827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7e0000; valaddr_reg:x3; val_offset:83481*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83481*0 + 3*179*FLEN/8, x4, x1, x2)

inst_27828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7f0000; valaddr_reg:x3; val_offset:83484*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83484*0 + 3*180*FLEN/8, x4, x1, x2)

inst_27829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7f8000; valaddr_reg:x3; val_offset:83487*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83487*0 + 3*181*FLEN/8, x4, x1, x2)

inst_27830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7fc000; valaddr_reg:x3; val_offset:83490*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83490*0 + 3*182*FLEN/8, x4, x1, x2)

inst_27831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7fe000; valaddr_reg:x3; val_offset:83493*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83493*0 + 3*183*FLEN/8, x4, x1, x2)

inst_27832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7ff000; valaddr_reg:x3; val_offset:83496*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83496*0 + 3*184*FLEN/8, x4, x1, x2)

inst_27833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7ff800; valaddr_reg:x3; val_offset:83499*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83499*0 + 3*185*FLEN/8, x4, x1, x2)

inst_27834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7ffc00; valaddr_reg:x3; val_offset:83502*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83502*0 + 3*186*FLEN/8, x4, x1, x2)

inst_27835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7ffe00; valaddr_reg:x3; val_offset:83505*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83505*0 + 3*187*FLEN/8, x4, x1, x2)

inst_27836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7fff00; valaddr_reg:x3; val_offset:83508*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83508*0 + 3*188*FLEN/8, x4, x1, x2)

inst_27837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7fff80; valaddr_reg:x3; val_offset:83511*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83511*0 + 3*189*FLEN/8, x4, x1, x2)

inst_27838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7fffc0; valaddr_reg:x3; val_offset:83514*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83514*0 + 3*190*FLEN/8, x4, x1, x2)

inst_27839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7fffe0; valaddr_reg:x3; val_offset:83517*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83517*0 + 3*191*FLEN/8, x4, x1, x2)

inst_27840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7ffff0; valaddr_reg:x3; val_offset:83520*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83520*0 + 3*192*FLEN/8, x4, x1, x2)

inst_27841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:83523*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83523*0 + 3*193*FLEN/8, x4, x1, x2)

inst_27842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:83526*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83526*0 + 3*194*FLEN/8, x4, x1, x2)

inst_27843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:83529*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83529*0 + 3*195*FLEN/8, x4, x1, x2)

inst_27844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc164 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a777a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc164; op2val:0xbfea777a;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:83532*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83532*0 + 3*196*FLEN/8, x4, x1, x2)

inst_27845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbf800001; valaddr_reg:x3; val_offset:83535*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83535*0 + 3*197*FLEN/8, x4, x1, x2)

inst_27846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbf800003; valaddr_reg:x3; val_offset:83538*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83538*0 + 3*198*FLEN/8, x4, x1, x2)

inst_27847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbf800007; valaddr_reg:x3; val_offset:83541*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83541*0 + 3*199*FLEN/8, x4, x1, x2)

inst_27848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbf999999; valaddr_reg:x3; val_offset:83544*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83544*0 + 3*200*FLEN/8, x4, x1, x2)

inst_27849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:83547*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83547*0 + 3*201*FLEN/8, x4, x1, x2)

inst_27850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:83550*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83550*0 + 3*202*FLEN/8, x4, x1, x2)

inst_27851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:83553*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83553*0 + 3*203*FLEN/8, x4, x1, x2)

inst_27852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:83556*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83556*0 + 3*204*FLEN/8, x4, x1, x2)

inst_27853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:83559*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83559*0 + 3*205*FLEN/8, x4, x1, x2)

inst_27854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:83562*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83562*0 + 3*206*FLEN/8, x4, x1, x2)

inst_27855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:83565*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83565*0 + 3*207*FLEN/8, x4, x1, x2)

inst_27856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:83568*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83568*0 + 3*208*FLEN/8, x4, x1, x2)

inst_27857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:83571*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83571*0 + 3*209*FLEN/8, x4, x1, x2)

inst_27858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:83574*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83574*0 + 3*210*FLEN/8, x4, x1, x2)

inst_27859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:83577*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83577*0 + 3*211*FLEN/8, x4, x1, x2)

inst_27860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:83580*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83580*0 + 3*212*FLEN/8, x4, x1, x2)

inst_27861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2800000; valaddr_reg:x3; val_offset:83583*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83583*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2800001; valaddr_reg:x3; val_offset:83586*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83586*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2800003; valaddr_reg:x3; val_offset:83589*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83589*0 + 3*215*FLEN/8, x4, x1, x2)

inst_27864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2800007; valaddr_reg:x3; val_offset:83592*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83592*0 + 3*216*FLEN/8, x4, x1, x2)

inst_27865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc280000f; valaddr_reg:x3; val_offset:83595*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83595*0 + 3*217*FLEN/8, x4, x1, x2)

inst_27866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc280001f; valaddr_reg:x3; val_offset:83598*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83598*0 + 3*218*FLEN/8, x4, x1, x2)

inst_27867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc280003f; valaddr_reg:x3; val_offset:83601*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83601*0 + 3*219*FLEN/8, x4, x1, x2)

inst_27868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc280007f; valaddr_reg:x3; val_offset:83604*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83604*0 + 3*220*FLEN/8, x4, x1, x2)

inst_27869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc28000ff; valaddr_reg:x3; val_offset:83607*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83607*0 + 3*221*FLEN/8, x4, x1, x2)

inst_27870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc28001ff; valaddr_reg:x3; val_offset:83610*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83610*0 + 3*222*FLEN/8, x4, x1, x2)

inst_27871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc28003ff; valaddr_reg:x3; val_offset:83613*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83613*0 + 3*223*FLEN/8, x4, x1, x2)

inst_27872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc28007ff; valaddr_reg:x3; val_offset:83616*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83616*0 + 3*224*FLEN/8, x4, x1, x2)

inst_27873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2800fff; valaddr_reg:x3; val_offset:83619*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83619*0 + 3*225*FLEN/8, x4, x1, x2)

inst_27874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2801fff; valaddr_reg:x3; val_offset:83622*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83622*0 + 3*226*FLEN/8, x4, x1, x2)

inst_27875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2803fff; valaddr_reg:x3; val_offset:83625*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83625*0 + 3*227*FLEN/8, x4, x1, x2)

inst_27876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2807fff; valaddr_reg:x3; val_offset:83628*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83628*0 + 3*228*FLEN/8, x4, x1, x2)

inst_27877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc280ffff; valaddr_reg:x3; val_offset:83631*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83631*0 + 3*229*FLEN/8, x4, x1, x2)

inst_27878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc281ffff; valaddr_reg:x3; val_offset:83634*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83634*0 + 3*230*FLEN/8, x4, x1, x2)

inst_27879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc283ffff; valaddr_reg:x3; val_offset:83637*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83637*0 + 3*231*FLEN/8, x4, x1, x2)

inst_27880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc287ffff; valaddr_reg:x3; val_offset:83640*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83640*0 + 3*232*FLEN/8, x4, x1, x2)

inst_27881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc28fffff; valaddr_reg:x3; val_offset:83643*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83643*0 + 3*233*FLEN/8, x4, x1, x2)

inst_27882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc29fffff; valaddr_reg:x3; val_offset:83646*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83646*0 + 3*234*FLEN/8, x4, x1, x2)

inst_27883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2bfffff; valaddr_reg:x3; val_offset:83649*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83649*0 + 3*235*FLEN/8, x4, x1, x2)

inst_27884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2c00000; valaddr_reg:x3; val_offset:83652*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83652*0 + 3*236*FLEN/8, x4, x1, x2)

inst_27885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2e00000; valaddr_reg:x3; val_offset:83655*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83655*0 + 3*237*FLEN/8, x4, x1, x2)

inst_27886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2f00000; valaddr_reg:x3; val_offset:83658*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83658*0 + 3*238*FLEN/8, x4, x1, x2)

inst_27887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2f80000; valaddr_reg:x3; val_offset:83661*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83661*0 + 3*239*FLEN/8, x4, x1, x2)

inst_27888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fc0000; valaddr_reg:x3; val_offset:83664*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83664*0 + 3*240*FLEN/8, x4, x1, x2)

inst_27889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fe0000; valaddr_reg:x3; val_offset:83667*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83667*0 + 3*241*FLEN/8, x4, x1, x2)

inst_27890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2ff0000; valaddr_reg:x3; val_offset:83670*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83670*0 + 3*242*FLEN/8, x4, x1, x2)

inst_27891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2ff8000; valaddr_reg:x3; val_offset:83673*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83673*0 + 3*243*FLEN/8, x4, x1, x2)

inst_27892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2ffc000; valaddr_reg:x3; val_offset:83676*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83676*0 + 3*244*FLEN/8, x4, x1, x2)

inst_27893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2ffe000; valaddr_reg:x3; val_offset:83679*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83679*0 + 3*245*FLEN/8, x4, x1, x2)

inst_27894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fff000; valaddr_reg:x3; val_offset:83682*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83682*0 + 3*246*FLEN/8, x4, x1, x2)

inst_27895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fff800; valaddr_reg:x3; val_offset:83685*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83685*0 + 3*247*FLEN/8, x4, x1, x2)

inst_27896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fffc00; valaddr_reg:x3; val_offset:83688*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83688*0 + 3*248*FLEN/8, x4, x1, x2)

inst_27897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fffe00; valaddr_reg:x3; val_offset:83691*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83691*0 + 3*249*FLEN/8, x4, x1, x2)

inst_27898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2ffff00; valaddr_reg:x3; val_offset:83694*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83694*0 + 3*250*FLEN/8, x4, x1, x2)

inst_27899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2ffff80; valaddr_reg:x3; val_offset:83697*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83697*0 + 3*251*FLEN/8, x4, x1, x2)

inst_27900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2ffffc0; valaddr_reg:x3; val_offset:83700*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83700*0 + 3*252*FLEN/8, x4, x1, x2)

inst_27901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2ffffe0; valaddr_reg:x3; val_offset:83703*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83703*0 + 3*253*FLEN/8, x4, x1, x2)

inst_27902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fffff0; valaddr_reg:x3; val_offset:83706*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83706*0 + 3*254*FLEN/8, x4, x1, x2)

inst_27903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fffff8; valaddr_reg:x3; val_offset:83709*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83709*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_27904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fffffc; valaddr_reg:x3; val_offset:83712*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83712*0 + 3*256*FLEN/8, x4, x1, x2)

inst_27905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2fffffe; valaddr_reg:x3; val_offset:83715*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83715*0 + 3*257*FLEN/8, x4, x1, x2)

inst_27906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc267 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3a9d72 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc267; op2val:0x803a9d72;
op3val:0xc2ffffff; valaddr_reg:x3; val_offset:83718*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83718*0 + 3*258*FLEN/8, x4, x1, x2)

inst_27907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:83721*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83721*0 + 3*259*FLEN/8, x4, x1, x2)

inst_27908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:83724*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83724*0 + 3*260*FLEN/8, x4, x1, x2)

inst_27909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:83727*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83727*0 + 3*261*FLEN/8, x4, x1, x2)

inst_27910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:83730*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83730*0 + 3*262*FLEN/8, x4, x1, x2)

inst_27911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:83733*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83733*0 + 3*263*FLEN/8, x4, x1, x2)

inst_27912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:83736*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83736*0 + 3*264*FLEN/8, x4, x1, x2)

inst_27913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:83739*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83739*0 + 3*265*FLEN/8, x4, x1, x2)

inst_27914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:83742*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83742*0 + 3*266*FLEN/8, x4, x1, x2)

inst_27915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:83745*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83745*0 + 3*267*FLEN/8, x4, x1, x2)

inst_27916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:83748*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83748*0 + 3*268*FLEN/8, x4, x1, x2)

inst_27917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:83751*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83751*0 + 3*269*FLEN/8, x4, x1, x2)

inst_27918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:83754*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83754*0 + 3*270*FLEN/8, x4, x1, x2)

inst_27919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:83757*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83757*0 + 3*271*FLEN/8, x4, x1, x2)

inst_27920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:83760*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83760*0 + 3*272*FLEN/8, x4, x1, x2)

inst_27921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:83763*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83763*0 + 3*273*FLEN/8, x4, x1, x2)

inst_27922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:83766*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83766*0 + 3*274*FLEN/8, x4, x1, x2)

inst_27923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d000000; valaddr_reg:x3; val_offset:83769*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83769*0 + 3*275*FLEN/8, x4, x1, x2)

inst_27924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d000001; valaddr_reg:x3; val_offset:83772*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83772*0 + 3*276*FLEN/8, x4, x1, x2)

inst_27925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d000003; valaddr_reg:x3; val_offset:83775*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83775*0 + 3*277*FLEN/8, x4, x1, x2)

inst_27926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d000007; valaddr_reg:x3; val_offset:83778*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83778*0 + 3*278*FLEN/8, x4, x1, x2)

inst_27927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d00000f; valaddr_reg:x3; val_offset:83781*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83781*0 + 3*279*FLEN/8, x4, x1, x2)

inst_27928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d00001f; valaddr_reg:x3; val_offset:83784*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83784*0 + 3*280*FLEN/8, x4, x1, x2)

inst_27929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d00003f; valaddr_reg:x3; val_offset:83787*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83787*0 + 3*281*FLEN/8, x4, x1, x2)

inst_27930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d00007f; valaddr_reg:x3; val_offset:83790*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83790*0 + 3*282*FLEN/8, x4, x1, x2)

inst_27931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d0000ff; valaddr_reg:x3; val_offset:83793*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83793*0 + 3*283*FLEN/8, x4, x1, x2)

inst_27932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d0001ff; valaddr_reg:x3; val_offset:83796*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83796*0 + 3*284*FLEN/8, x4, x1, x2)

inst_27933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d0003ff; valaddr_reg:x3; val_offset:83799*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83799*0 + 3*285*FLEN/8, x4, x1, x2)

inst_27934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d0007ff; valaddr_reg:x3; val_offset:83802*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83802*0 + 3*286*FLEN/8, x4, x1, x2)

inst_27935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d000fff; valaddr_reg:x3; val_offset:83805*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83805*0 + 3*287*FLEN/8, x4, x1, x2)

inst_27936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d001fff; valaddr_reg:x3; val_offset:83808*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83808*0 + 3*288*FLEN/8, x4, x1, x2)

inst_27937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d003fff; valaddr_reg:x3; val_offset:83811*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83811*0 + 3*289*FLEN/8, x4, x1, x2)

inst_27938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d007fff; valaddr_reg:x3; val_offset:83814*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83814*0 + 3*290*FLEN/8, x4, x1, x2)

inst_27939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d00ffff; valaddr_reg:x3; val_offset:83817*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83817*0 + 3*291*FLEN/8, x4, x1, x2)

inst_27940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d01ffff; valaddr_reg:x3; val_offset:83820*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83820*0 + 3*292*FLEN/8, x4, x1, x2)

inst_27941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d03ffff; valaddr_reg:x3; val_offset:83823*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83823*0 + 3*293*FLEN/8, x4, x1, x2)

inst_27942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d07ffff; valaddr_reg:x3; val_offset:83826*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83826*0 + 3*294*FLEN/8, x4, x1, x2)

inst_27943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d0fffff; valaddr_reg:x3; val_offset:83829*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83829*0 + 3*295*FLEN/8, x4, x1, x2)

inst_27944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d1fffff; valaddr_reg:x3; val_offset:83832*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83832*0 + 3*296*FLEN/8, x4, x1, x2)

inst_27945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d3fffff; valaddr_reg:x3; val_offset:83835*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83835*0 + 3*297*FLEN/8, x4, x1, x2)

inst_27946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d400000; valaddr_reg:x3; val_offset:83838*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83838*0 + 3*298*FLEN/8, x4, x1, x2)

inst_27947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d600000; valaddr_reg:x3; val_offset:83841*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83841*0 + 3*299*FLEN/8, x4, x1, x2)

inst_27948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d700000; valaddr_reg:x3; val_offset:83844*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83844*0 + 3*300*FLEN/8, x4, x1, x2)

inst_27949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d780000; valaddr_reg:x3; val_offset:83847*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83847*0 + 3*301*FLEN/8, x4, x1, x2)

inst_27950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7c0000; valaddr_reg:x3; val_offset:83850*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83850*0 + 3*302*FLEN/8, x4, x1, x2)

inst_27951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7e0000; valaddr_reg:x3; val_offset:83853*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83853*0 + 3*303*FLEN/8, x4, x1, x2)

inst_27952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7f0000; valaddr_reg:x3; val_offset:83856*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83856*0 + 3*304*FLEN/8, x4, x1, x2)

inst_27953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7f8000; valaddr_reg:x3; val_offset:83859*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83859*0 + 3*305*FLEN/8, x4, x1, x2)

inst_27954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7fc000; valaddr_reg:x3; val_offset:83862*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83862*0 + 3*306*FLEN/8, x4, x1, x2)

inst_27955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7fe000; valaddr_reg:x3; val_offset:83865*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83865*0 + 3*307*FLEN/8, x4, x1, x2)

inst_27956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7ff000; valaddr_reg:x3; val_offset:83868*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83868*0 + 3*308*FLEN/8, x4, x1, x2)

inst_27957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7ff800; valaddr_reg:x3; val_offset:83871*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83871*0 + 3*309*FLEN/8, x4, x1, x2)

inst_27958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7ffc00; valaddr_reg:x3; val_offset:83874*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83874*0 + 3*310*FLEN/8, x4, x1, x2)

inst_27959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7ffe00; valaddr_reg:x3; val_offset:83877*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83877*0 + 3*311*FLEN/8, x4, x1, x2)

inst_27960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7fff00; valaddr_reg:x3; val_offset:83880*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83880*0 + 3*312*FLEN/8, x4, x1, x2)

inst_27961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7fff80; valaddr_reg:x3; val_offset:83883*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83883*0 + 3*313*FLEN/8, x4, x1, x2)

inst_27962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7fffc0; valaddr_reg:x3; val_offset:83886*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83886*0 + 3*314*FLEN/8, x4, x1, x2)

inst_27963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7fffe0; valaddr_reg:x3; val_offset:83889*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83889*0 + 3*315*FLEN/8, x4, x1, x2)

inst_27964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7ffff0; valaddr_reg:x3; val_offset:83892*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83892*0 + 3*316*FLEN/8, x4, x1, x2)

inst_27965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7ffff8; valaddr_reg:x3; val_offset:83895*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83895*0 + 3*317*FLEN/8, x4, x1, x2)

inst_27966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7ffffc; valaddr_reg:x3; val_offset:83898*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83898*0 + 3*318*FLEN/8, x4, x1, x2)

inst_27967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7ffffe; valaddr_reg:x3; val_offset:83901*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83901*0 + 3*319*FLEN/8, x4, x1, x2)

inst_27968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc873 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0bc873; op2val:0x80000000;
op3val:0x8d7fffff; valaddr_reg:x3; val_offset:83904*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83904*0 + 3*320*FLEN/8, x4, x1, x2)

inst_27969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20000000; valaddr_reg:x3; val_offset:83907*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83907*0 + 3*321*FLEN/8, x4, x1, x2)

inst_27970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20000001; valaddr_reg:x3; val_offset:83910*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83910*0 + 3*322*FLEN/8, x4, x1, x2)

inst_27971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20000003; valaddr_reg:x3; val_offset:83913*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83913*0 + 3*323*FLEN/8, x4, x1, x2)

inst_27972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20000007; valaddr_reg:x3; val_offset:83916*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83916*0 + 3*324*FLEN/8, x4, x1, x2)

inst_27973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x2000000f; valaddr_reg:x3; val_offset:83919*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83919*0 + 3*325*FLEN/8, x4, x1, x2)

inst_27974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x2000001f; valaddr_reg:x3; val_offset:83922*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83922*0 + 3*326*FLEN/8, x4, x1, x2)

inst_27975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x2000003f; valaddr_reg:x3; val_offset:83925*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83925*0 + 3*327*FLEN/8, x4, x1, x2)

inst_27976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x2000007f; valaddr_reg:x3; val_offset:83928*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83928*0 + 3*328*FLEN/8, x4, x1, x2)

inst_27977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x200000ff; valaddr_reg:x3; val_offset:83931*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83931*0 + 3*329*FLEN/8, x4, x1, x2)

inst_27978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x200001ff; valaddr_reg:x3; val_offset:83934*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83934*0 + 3*330*FLEN/8, x4, x1, x2)

inst_27979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x200003ff; valaddr_reg:x3; val_offset:83937*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83937*0 + 3*331*FLEN/8, x4, x1, x2)

inst_27980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x200007ff; valaddr_reg:x3; val_offset:83940*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83940*0 + 3*332*FLEN/8, x4, x1, x2)

inst_27981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20000fff; valaddr_reg:x3; val_offset:83943*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83943*0 + 3*333*FLEN/8, x4, x1, x2)

inst_27982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20001fff; valaddr_reg:x3; val_offset:83946*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83946*0 + 3*334*FLEN/8, x4, x1, x2)

inst_27983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20003fff; valaddr_reg:x3; val_offset:83949*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83949*0 + 3*335*FLEN/8, x4, x1, x2)

inst_27984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20007fff; valaddr_reg:x3; val_offset:83952*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83952*0 + 3*336*FLEN/8, x4, x1, x2)

inst_27985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x2000ffff; valaddr_reg:x3; val_offset:83955*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83955*0 + 3*337*FLEN/8, x4, x1, x2)

inst_27986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x2001ffff; valaddr_reg:x3; val_offset:83958*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83958*0 + 3*338*FLEN/8, x4, x1, x2)

inst_27987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x2003ffff; valaddr_reg:x3; val_offset:83961*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83961*0 + 3*339*FLEN/8, x4, x1, x2)

inst_27988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x2007ffff; valaddr_reg:x3; val_offset:83964*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83964*0 + 3*340*FLEN/8, x4, x1, x2)

inst_27989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x200fffff; valaddr_reg:x3; val_offset:83967*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83967*0 + 3*341*FLEN/8, x4, x1, x2)

inst_27990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x201fffff; valaddr_reg:x3; val_offset:83970*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83970*0 + 3*342*FLEN/8, x4, x1, x2)

inst_27991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x203fffff; valaddr_reg:x3; val_offset:83973*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83973*0 + 3*343*FLEN/8, x4, x1, x2)

inst_27992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20400000; valaddr_reg:x3; val_offset:83976*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83976*0 + 3*344*FLEN/8, x4, x1, x2)

inst_27993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20600000; valaddr_reg:x3; val_offset:83979*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83979*0 + 3*345*FLEN/8, x4, x1, x2)

inst_27994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20700000; valaddr_reg:x3; val_offset:83982*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83982*0 + 3*346*FLEN/8, x4, x1, x2)

inst_27995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x20780000; valaddr_reg:x3; val_offset:83985*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83985*0 + 3*347*FLEN/8, x4, x1, x2)

inst_27996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207c0000; valaddr_reg:x3; val_offset:83988*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83988*0 + 3*348*FLEN/8, x4, x1, x2)

inst_27997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207e0000; valaddr_reg:x3; val_offset:83991*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83991*0 + 3*349*FLEN/8, x4, x1, x2)

inst_27998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207f0000; valaddr_reg:x3; val_offset:83994*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83994*0 + 3*350*FLEN/8, x4, x1, x2)

inst_27999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207f8000; valaddr_reg:x3; val_offset:83997*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 83997*0 + 3*351*FLEN/8, x4, x1, x2)

inst_28000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207fc000; valaddr_reg:x3; val_offset:84000*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84000*0 + 3*352*FLEN/8, x4, x1, x2)

inst_28001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207fe000; valaddr_reg:x3; val_offset:84003*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84003*0 + 3*353*FLEN/8, x4, x1, x2)

inst_28002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207ff000; valaddr_reg:x3; val_offset:84006*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84006*0 + 3*354*FLEN/8, x4, x1, x2)

inst_28003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207ff800; valaddr_reg:x3; val_offset:84009*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84009*0 + 3*355*FLEN/8, x4, x1, x2)

inst_28004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207ffc00; valaddr_reg:x3; val_offset:84012*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84012*0 + 3*356*FLEN/8, x4, x1, x2)

inst_28005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207ffe00; valaddr_reg:x3; val_offset:84015*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84015*0 + 3*357*FLEN/8, x4, x1, x2)

inst_28006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207fff00; valaddr_reg:x3; val_offset:84018*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84018*0 + 3*358*FLEN/8, x4, x1, x2)

inst_28007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207fff80; valaddr_reg:x3; val_offset:84021*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84021*0 + 3*359*FLEN/8, x4, x1, x2)

inst_28008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207fffc0; valaddr_reg:x3; val_offset:84024*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84024*0 + 3*360*FLEN/8, x4, x1, x2)

inst_28009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207fffe0; valaddr_reg:x3; val_offset:84027*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84027*0 + 3*361*FLEN/8, x4, x1, x2)

inst_28010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207ffff0; valaddr_reg:x3; val_offset:84030*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84030*0 + 3*362*FLEN/8, x4, x1, x2)

inst_28011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207ffff8; valaddr_reg:x3; val_offset:84033*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84033*0 + 3*363*FLEN/8, x4, x1, x2)

inst_28012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207ffffc; valaddr_reg:x3; val_offset:84036*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84036*0 + 3*364*FLEN/8, x4, x1, x2)

inst_28013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207ffffe; valaddr_reg:x3; val_offset:84039*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84039*0 + 3*365*FLEN/8, x4, x1, x2)

inst_28014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x40 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x207fffff; valaddr_reg:x3; val_offset:84042*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84042*0 + 3*366*FLEN/8, x4, x1, x2)

inst_28015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3f800001; valaddr_reg:x3; val_offset:84045*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84045*0 + 3*367*FLEN/8, x4, x1, x2)

inst_28016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3f800003; valaddr_reg:x3; val_offset:84048*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84048*0 + 3*368*FLEN/8, x4, x1, x2)

inst_28017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3f800007; valaddr_reg:x3; val_offset:84051*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84051*0 + 3*369*FLEN/8, x4, x1, x2)

inst_28018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3f999999; valaddr_reg:x3; val_offset:84054*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84054*0 + 3*370*FLEN/8, x4, x1, x2)

inst_28019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:84057*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84057*0 + 3*371*FLEN/8, x4, x1, x2)

inst_28020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:84060*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84060*0 + 3*372*FLEN/8, x4, x1, x2)

inst_28021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:84063*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84063*0 + 3*373*FLEN/8, x4, x1, x2)

inst_28022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:84066*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84066*0 + 3*374*FLEN/8, x4, x1, x2)

inst_28023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:84069*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84069*0 + 3*375*FLEN/8, x4, x1, x2)

inst_28024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:84072*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84072*0 + 3*376*FLEN/8, x4, x1, x2)

inst_28025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:84075*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84075*0 + 3*377*FLEN/8, x4, x1, x2)

inst_28026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:84078*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84078*0 + 3*378*FLEN/8, x4, x1, x2)

inst_28027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:84081*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84081*0 + 3*379*FLEN/8, x4, x1, x2)

inst_28028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:84084*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84084*0 + 3*380*FLEN/8, x4, x1, x2)

inst_28029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:84087*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84087*0 + 3*381*FLEN/8, x4, x1, x2)

inst_28030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c56a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a5f85 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c56a9; op2val:0x3a5f85;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:84090*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84090*0 + 3*382*FLEN/8, x4, x1, x2)

inst_28031:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:84093*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84093*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_28032:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:84096*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84096*0 + 3*384*FLEN/8, x4, x1, x2)

inst_28033:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:84099*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84099*0 + 3*385*FLEN/8, x4, x1, x2)

inst_28034:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:84102*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84102*0 + 3*386*FLEN/8, x4, x1, x2)

inst_28035:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:84105*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84105*0 + 3*387*FLEN/8, x4, x1, x2)

inst_28036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:84108*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84108*0 + 3*388*FLEN/8, x4, x1, x2)

inst_28037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:84111*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84111*0 + 3*389*FLEN/8, x4, x1, x2)

inst_28038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:84114*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84114*0 + 3*390*FLEN/8, x4, x1, x2)

inst_28039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:84117*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84117*0 + 3*391*FLEN/8, x4, x1, x2)

inst_28040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:84120*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84120*0 + 3*392*FLEN/8, x4, x1, x2)

inst_28041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:84123*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84123*0 + 3*393*FLEN/8, x4, x1, x2)

inst_28042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:84126*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84126*0 + 3*394*FLEN/8, x4, x1, x2)

inst_28043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:84129*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84129*0 + 3*395*FLEN/8, x4, x1, x2)

inst_28044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:84132*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84132*0 + 3*396*FLEN/8, x4, x1, x2)

inst_28045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:84135*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84135*0 + 3*397*FLEN/8, x4, x1, x2)

inst_28046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:84138*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84138*0 + 3*398*FLEN/8, x4, x1, x2)

inst_28047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9000000; valaddr_reg:x3; val_offset:84141*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84141*0 + 3*399*FLEN/8, x4, x1, x2)

inst_28048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9000001; valaddr_reg:x3; val_offset:84144*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84144*0 + 3*400*FLEN/8, x4, x1, x2)

inst_28049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9000003; valaddr_reg:x3; val_offset:84147*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84147*0 + 3*401*FLEN/8, x4, x1, x2)

inst_28050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9000007; valaddr_reg:x3; val_offset:84150*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84150*0 + 3*402*FLEN/8, x4, x1, x2)

inst_28051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x900000f; valaddr_reg:x3; val_offset:84153*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84153*0 + 3*403*FLEN/8, x4, x1, x2)

inst_28052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x900001f; valaddr_reg:x3; val_offset:84156*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84156*0 + 3*404*FLEN/8, x4, x1, x2)

inst_28053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x900003f; valaddr_reg:x3; val_offset:84159*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84159*0 + 3*405*FLEN/8, x4, x1, x2)

inst_28054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x900007f; valaddr_reg:x3; val_offset:84162*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84162*0 + 3*406*FLEN/8, x4, x1, x2)

inst_28055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x90000ff; valaddr_reg:x3; val_offset:84165*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84165*0 + 3*407*FLEN/8, x4, x1, x2)

inst_28056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x90001ff; valaddr_reg:x3; val_offset:84168*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84168*0 + 3*408*FLEN/8, x4, x1, x2)

inst_28057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x90003ff; valaddr_reg:x3; val_offset:84171*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84171*0 + 3*409*FLEN/8, x4, x1, x2)

inst_28058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x90007ff; valaddr_reg:x3; val_offset:84174*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84174*0 + 3*410*FLEN/8, x4, x1, x2)

inst_28059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9000fff; valaddr_reg:x3; val_offset:84177*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84177*0 + 3*411*FLEN/8, x4, x1, x2)

inst_28060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9001fff; valaddr_reg:x3; val_offset:84180*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84180*0 + 3*412*FLEN/8, x4, x1, x2)

inst_28061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9003fff; valaddr_reg:x3; val_offset:84183*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84183*0 + 3*413*FLEN/8, x4, x1, x2)

inst_28062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9007fff; valaddr_reg:x3; val_offset:84186*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84186*0 + 3*414*FLEN/8, x4, x1, x2)

inst_28063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x900ffff; valaddr_reg:x3; val_offset:84189*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84189*0 + 3*415*FLEN/8, x4, x1, x2)

inst_28064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x901ffff; valaddr_reg:x3; val_offset:84192*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84192*0 + 3*416*FLEN/8, x4, x1, x2)

inst_28065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x903ffff; valaddr_reg:x3; val_offset:84195*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84195*0 + 3*417*FLEN/8, x4, x1, x2)

inst_28066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x907ffff; valaddr_reg:x3; val_offset:84198*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84198*0 + 3*418*FLEN/8, x4, x1, x2)

inst_28067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x90fffff; valaddr_reg:x3; val_offset:84201*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84201*0 + 3*419*FLEN/8, x4, x1, x2)

inst_28068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x91fffff; valaddr_reg:x3; val_offset:84204*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84204*0 + 3*420*FLEN/8, x4, x1, x2)

inst_28069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x93fffff; valaddr_reg:x3; val_offset:84207*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84207*0 + 3*421*FLEN/8, x4, x1, x2)

inst_28070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9400000; valaddr_reg:x3; val_offset:84210*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84210*0 + 3*422*FLEN/8, x4, x1, x2)

inst_28071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9600000; valaddr_reg:x3; val_offset:84213*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84213*0 + 3*423*FLEN/8, x4, x1, x2)

inst_28072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9700000; valaddr_reg:x3; val_offset:84216*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84216*0 + 3*424*FLEN/8, x4, x1, x2)

inst_28073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x9780000; valaddr_reg:x3; val_offset:84219*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84219*0 + 3*425*FLEN/8, x4, x1, x2)

inst_28074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97c0000; valaddr_reg:x3; val_offset:84222*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84222*0 + 3*426*FLEN/8, x4, x1, x2)

inst_28075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97e0000; valaddr_reg:x3; val_offset:84225*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84225*0 + 3*427*FLEN/8, x4, x1, x2)

inst_28076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97f0000; valaddr_reg:x3; val_offset:84228*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84228*0 + 3*428*FLEN/8, x4, x1, x2)

inst_28077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97f8000; valaddr_reg:x3; val_offset:84231*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84231*0 + 3*429*FLEN/8, x4, x1, x2)

inst_28078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97fc000; valaddr_reg:x3; val_offset:84234*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84234*0 + 3*430*FLEN/8, x4, x1, x2)

inst_28079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97fe000; valaddr_reg:x3; val_offset:84237*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84237*0 + 3*431*FLEN/8, x4, x1, x2)

inst_28080:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97ff000; valaddr_reg:x3; val_offset:84240*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84240*0 + 3*432*FLEN/8, x4, x1, x2)

inst_28081:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97ff800; valaddr_reg:x3; val_offset:84243*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84243*0 + 3*433*FLEN/8, x4, x1, x2)

inst_28082:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97ffc00; valaddr_reg:x3; val_offset:84246*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84246*0 + 3*434*FLEN/8, x4, x1, x2)

inst_28083:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97ffe00; valaddr_reg:x3; val_offset:84249*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84249*0 + 3*435*FLEN/8, x4, x1, x2)

inst_28084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97fff00; valaddr_reg:x3; val_offset:84252*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84252*0 + 3*436*FLEN/8, x4, x1, x2)

inst_28085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97fff80; valaddr_reg:x3; val_offset:84255*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84255*0 + 3*437*FLEN/8, x4, x1, x2)

inst_28086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97fffc0; valaddr_reg:x3; val_offset:84258*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84258*0 + 3*438*FLEN/8, x4, x1, x2)

inst_28087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97fffe0; valaddr_reg:x3; val_offset:84261*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84261*0 + 3*439*FLEN/8, x4, x1, x2)

inst_28088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97ffff0; valaddr_reg:x3; val_offset:84264*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84264*0 + 3*440*FLEN/8, x4, x1, x2)

inst_28089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97ffff8; valaddr_reg:x3; val_offset:84267*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84267*0 + 3*441*FLEN/8, x4, x1, x2)

inst_28090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97ffffc; valaddr_reg:x3; val_offset:84270*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84270*0 + 3*442*FLEN/8, x4, x1, x2)

inst_28091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97ffffe; valaddr_reg:x3; val_offset:84273*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84273*0 + 3*443*FLEN/8, x4, x1, x2)

inst_28092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c90f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c90f0; op2val:0x0;
op3val:0x97fffff; valaddr_reg:x3; val_offset:84276*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84276*0 + 3*444*FLEN/8, x4, x1, x2)

inst_28093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:84279*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84279*0 + 3*445*FLEN/8, x4, x1, x2)

inst_28094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:84282*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84282*0 + 3*446*FLEN/8, x4, x1, x2)

inst_28095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:84285*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84285*0 + 3*447*FLEN/8, x4, x1, x2)

inst_28096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:84288*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84288*0 + 3*448*FLEN/8, x4, x1, x2)

inst_28097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:84291*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84291*0 + 3*449*FLEN/8, x4, x1, x2)

inst_28098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:84294*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84294*0 + 3*450*FLEN/8, x4, x1, x2)

inst_28099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:84297*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84297*0 + 3*451*FLEN/8, x4, x1, x2)

inst_28100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:84300*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84300*0 + 3*452*FLEN/8, x4, x1, x2)

inst_28101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:84303*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84303*0 + 3*453*FLEN/8, x4, x1, x2)

inst_28102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:84306*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84306*0 + 3*454*FLEN/8, x4, x1, x2)

inst_28103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:84309*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84309*0 + 3*455*FLEN/8, x4, x1, x2)

inst_28104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:84312*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84312*0 + 3*456*FLEN/8, x4, x1, x2)

inst_28105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:84315*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84315*0 + 3*457*FLEN/8, x4, x1, x2)

inst_28106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:84318*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84318*0 + 3*458*FLEN/8, x4, x1, x2)

inst_28107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:84321*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84321*0 + 3*459*FLEN/8, x4, x1, x2)

inst_28108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:84324*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84324*0 + 3*460*FLEN/8, x4, x1, x2)

inst_28109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83000000; valaddr_reg:x3; val_offset:84327*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84327*0 + 3*461*FLEN/8, x4, x1, x2)

inst_28110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83000001; valaddr_reg:x3; val_offset:84330*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84330*0 + 3*462*FLEN/8, x4, x1, x2)

inst_28111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83000003; valaddr_reg:x3; val_offset:84333*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84333*0 + 3*463*FLEN/8, x4, x1, x2)

inst_28112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83000007; valaddr_reg:x3; val_offset:84336*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84336*0 + 3*464*FLEN/8, x4, x1, x2)

inst_28113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x8300000f; valaddr_reg:x3; val_offset:84339*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84339*0 + 3*465*FLEN/8, x4, x1, x2)

inst_28114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x8300001f; valaddr_reg:x3; val_offset:84342*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84342*0 + 3*466*FLEN/8, x4, x1, x2)

inst_28115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x8300003f; valaddr_reg:x3; val_offset:84345*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84345*0 + 3*467*FLEN/8, x4, x1, x2)

inst_28116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x8300007f; valaddr_reg:x3; val_offset:84348*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84348*0 + 3*468*FLEN/8, x4, x1, x2)

inst_28117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x830000ff; valaddr_reg:x3; val_offset:84351*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84351*0 + 3*469*FLEN/8, x4, x1, x2)

inst_28118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x830001ff; valaddr_reg:x3; val_offset:84354*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84354*0 + 3*470*FLEN/8, x4, x1, x2)

inst_28119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x830003ff; valaddr_reg:x3; val_offset:84357*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84357*0 + 3*471*FLEN/8, x4, x1, x2)

inst_28120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x830007ff; valaddr_reg:x3; val_offset:84360*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84360*0 + 3*472*FLEN/8, x4, x1, x2)

inst_28121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83000fff; valaddr_reg:x3; val_offset:84363*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84363*0 + 3*473*FLEN/8, x4, x1, x2)

inst_28122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83001fff; valaddr_reg:x3; val_offset:84366*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84366*0 + 3*474*FLEN/8, x4, x1, x2)

inst_28123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83003fff; valaddr_reg:x3; val_offset:84369*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84369*0 + 3*475*FLEN/8, x4, x1, x2)

inst_28124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83007fff; valaddr_reg:x3; val_offset:84372*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84372*0 + 3*476*FLEN/8, x4, x1, x2)

inst_28125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x8300ffff; valaddr_reg:x3; val_offset:84375*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84375*0 + 3*477*FLEN/8, x4, x1, x2)

inst_28126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x8301ffff; valaddr_reg:x3; val_offset:84378*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84378*0 + 3*478*FLEN/8, x4, x1, x2)

inst_28127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x8303ffff; valaddr_reg:x3; val_offset:84381*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84381*0 + 3*479*FLEN/8, x4, x1, x2)

inst_28128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x8307ffff; valaddr_reg:x3; val_offset:84384*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84384*0 + 3*480*FLEN/8, x4, x1, x2)

inst_28129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x830fffff; valaddr_reg:x3; val_offset:84387*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84387*0 + 3*481*FLEN/8, x4, x1, x2)

inst_28130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x831fffff; valaddr_reg:x3; val_offset:84390*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84390*0 + 3*482*FLEN/8, x4, x1, x2)

inst_28131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x833fffff; valaddr_reg:x3; val_offset:84393*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84393*0 + 3*483*FLEN/8, x4, x1, x2)

inst_28132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83400000; valaddr_reg:x3; val_offset:84396*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84396*0 + 3*484*FLEN/8, x4, x1, x2)

inst_28133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83600000; valaddr_reg:x3; val_offset:84399*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84399*0 + 3*485*FLEN/8, x4, x1, x2)

inst_28134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83700000; valaddr_reg:x3; val_offset:84402*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84402*0 + 3*486*FLEN/8, x4, x1, x2)

inst_28135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x83780000; valaddr_reg:x3; val_offset:84405*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84405*0 + 3*487*FLEN/8, x4, x1, x2)

inst_28136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837c0000; valaddr_reg:x3; val_offset:84408*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84408*0 + 3*488*FLEN/8, x4, x1, x2)

inst_28137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837e0000; valaddr_reg:x3; val_offset:84411*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84411*0 + 3*489*FLEN/8, x4, x1, x2)

inst_28138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837f0000; valaddr_reg:x3; val_offset:84414*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84414*0 + 3*490*FLEN/8, x4, x1, x2)

inst_28139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837f8000; valaddr_reg:x3; val_offset:84417*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84417*0 + 3*491*FLEN/8, x4, x1, x2)

inst_28140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837fc000; valaddr_reg:x3; val_offset:84420*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84420*0 + 3*492*FLEN/8, x4, x1, x2)

inst_28141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837fe000; valaddr_reg:x3; val_offset:84423*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84423*0 + 3*493*FLEN/8, x4, x1, x2)

inst_28142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837ff000; valaddr_reg:x3; val_offset:84426*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84426*0 + 3*494*FLEN/8, x4, x1, x2)

inst_28143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837ff800; valaddr_reg:x3; val_offset:84429*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84429*0 + 3*495*FLEN/8, x4, x1, x2)

inst_28144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837ffc00; valaddr_reg:x3; val_offset:84432*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84432*0 + 3*496*FLEN/8, x4, x1, x2)

inst_28145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837ffe00; valaddr_reg:x3; val_offset:84435*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84435*0 + 3*497*FLEN/8, x4, x1, x2)

inst_28146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837fff00; valaddr_reg:x3; val_offset:84438*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84438*0 + 3*498*FLEN/8, x4, x1, x2)

inst_28147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837fff80; valaddr_reg:x3; val_offset:84441*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84441*0 + 3*499*FLEN/8, x4, x1, x2)

inst_28148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837fffc0; valaddr_reg:x3; val_offset:84444*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84444*0 + 3*500*FLEN/8, x4, x1, x2)

inst_28149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837fffe0; valaddr_reg:x3; val_offset:84447*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84447*0 + 3*501*FLEN/8, x4, x1, x2)

inst_28150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837ffff0; valaddr_reg:x3; val_offset:84450*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84450*0 + 3*502*FLEN/8, x4, x1, x2)

inst_28151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837ffff8; valaddr_reg:x3; val_offset:84453*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84453*0 + 3*503*FLEN/8, x4, x1, x2)

inst_28152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837ffffc; valaddr_reg:x3; val_offset:84456*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84456*0 + 3*504*FLEN/8, x4, x1, x2)

inst_28153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837ffffe; valaddr_reg:x3; val_offset:84459*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84459*0 + 3*505*FLEN/8, x4, x1, x2)

inst_28154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c9b89 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c9b89; op2val:0x80000000;
op3val:0x837fffff; valaddr_reg:x3; val_offset:84462*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84462*0 + 3*506*FLEN/8, x4, x1, x2)

inst_28155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc800000; valaddr_reg:x3; val_offset:84465*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84465*0 + 3*507*FLEN/8, x4, x1, x2)

inst_28156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc800001; valaddr_reg:x3; val_offset:84468*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84468*0 + 3*508*FLEN/8, x4, x1, x2)

inst_28157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc800003; valaddr_reg:x3; val_offset:84471*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84471*0 + 3*509*FLEN/8, x4, x1, x2)

inst_28158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc800007; valaddr_reg:x3; val_offset:84474*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84474*0 + 3*510*FLEN/8, x4, x1, x2)

inst_28159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc80000f; valaddr_reg:x3; val_offset:84477*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84477*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_28160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc80001f; valaddr_reg:x3; val_offset:84480*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84480*0 + 3*512*FLEN/8, x4, x1, x2)

inst_28161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc80003f; valaddr_reg:x3; val_offset:84483*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84483*0 + 3*513*FLEN/8, x4, x1, x2)

inst_28162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc80007f; valaddr_reg:x3; val_offset:84486*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84486*0 + 3*514*FLEN/8, x4, x1, x2)

inst_28163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc8000ff; valaddr_reg:x3; val_offset:84489*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84489*0 + 3*515*FLEN/8, x4, x1, x2)

inst_28164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc8001ff; valaddr_reg:x3; val_offset:84492*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84492*0 + 3*516*FLEN/8, x4, x1, x2)

inst_28165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc8003ff; valaddr_reg:x3; val_offset:84495*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84495*0 + 3*517*FLEN/8, x4, x1, x2)

inst_28166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc8007ff; valaddr_reg:x3; val_offset:84498*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84498*0 + 3*518*FLEN/8, x4, x1, x2)

inst_28167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc800fff; valaddr_reg:x3; val_offset:84501*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84501*0 + 3*519*FLEN/8, x4, x1, x2)

inst_28168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc801fff; valaddr_reg:x3; val_offset:84504*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84504*0 + 3*520*FLEN/8, x4, x1, x2)

inst_28169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc803fff; valaddr_reg:x3; val_offset:84507*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84507*0 + 3*521*FLEN/8, x4, x1, x2)

inst_28170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc807fff; valaddr_reg:x3; val_offset:84510*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84510*0 + 3*522*FLEN/8, x4, x1, x2)

inst_28171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc80ffff; valaddr_reg:x3; val_offset:84513*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84513*0 + 3*523*FLEN/8, x4, x1, x2)

inst_28172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc81ffff; valaddr_reg:x3; val_offset:84516*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84516*0 + 3*524*FLEN/8, x4, x1, x2)

inst_28173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc83ffff; valaddr_reg:x3; val_offset:84519*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84519*0 + 3*525*FLEN/8, x4, x1, x2)

inst_28174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc87ffff; valaddr_reg:x3; val_offset:84522*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84522*0 + 3*526*FLEN/8, x4, x1, x2)

inst_28175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc8fffff; valaddr_reg:x3; val_offset:84525*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84525*0 + 3*527*FLEN/8, x4, x1, x2)

inst_28176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfc9fffff; valaddr_reg:x3; val_offset:84528*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84528*0 + 3*528*FLEN/8, x4, x1, x2)

inst_28177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcbfffff; valaddr_reg:x3; val_offset:84531*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84531*0 + 3*529*FLEN/8, x4, x1, x2)

inst_28178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcc00000; valaddr_reg:x3; val_offset:84534*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84534*0 + 3*530*FLEN/8, x4, x1, x2)

inst_28179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfce00000; valaddr_reg:x3; val_offset:84537*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84537*0 + 3*531*FLEN/8, x4, x1, x2)

inst_28180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcf00000; valaddr_reg:x3; val_offset:84540*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84540*0 + 3*532*FLEN/8, x4, x1, x2)

inst_28181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcf80000; valaddr_reg:x3; val_offset:84543*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84543*0 + 3*533*FLEN/8, x4, x1, x2)

inst_28182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfc0000; valaddr_reg:x3; val_offset:84546*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84546*0 + 3*534*FLEN/8, x4, x1, x2)

inst_28183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfe0000; valaddr_reg:x3; val_offset:84549*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84549*0 + 3*535*FLEN/8, x4, x1, x2)

inst_28184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcff0000; valaddr_reg:x3; val_offset:84552*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84552*0 + 3*536*FLEN/8, x4, x1, x2)

inst_28185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcff8000; valaddr_reg:x3; val_offset:84555*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84555*0 + 3*537*FLEN/8, x4, x1, x2)

inst_28186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcffc000; valaddr_reg:x3; val_offset:84558*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84558*0 + 3*538*FLEN/8, x4, x1, x2)

inst_28187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcffe000; valaddr_reg:x3; val_offset:84561*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84561*0 + 3*539*FLEN/8, x4, x1, x2)

inst_28188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfff000; valaddr_reg:x3; val_offset:84564*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84564*0 + 3*540*FLEN/8, x4, x1, x2)

inst_28189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfff800; valaddr_reg:x3; val_offset:84567*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84567*0 + 3*541*FLEN/8, x4, x1, x2)

inst_28190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfffc00; valaddr_reg:x3; val_offset:84570*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84570*0 + 3*542*FLEN/8, x4, x1, x2)

inst_28191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfffe00; valaddr_reg:x3; val_offset:84573*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84573*0 + 3*543*FLEN/8, x4, x1, x2)

inst_28192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcffff00; valaddr_reg:x3; val_offset:84576*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84576*0 + 3*544*FLEN/8, x4, x1, x2)

inst_28193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcffff80; valaddr_reg:x3; val_offset:84579*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84579*0 + 3*545*FLEN/8, x4, x1, x2)

inst_28194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcffffc0; valaddr_reg:x3; val_offset:84582*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84582*0 + 3*546*FLEN/8, x4, x1, x2)

inst_28195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcffffe0; valaddr_reg:x3; val_offset:84585*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84585*0 + 3*547*FLEN/8, x4, x1, x2)

inst_28196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfffff0; valaddr_reg:x3; val_offset:84588*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84588*0 + 3*548*FLEN/8, x4, x1, x2)

inst_28197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfffff8; valaddr_reg:x3; val_offset:84591*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84591*0 + 3*549*FLEN/8, x4, x1, x2)

inst_28198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfffffc; valaddr_reg:x3; val_offset:84594*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84594*0 + 3*550*FLEN/8, x4, x1, x2)

inst_28199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcfffffe; valaddr_reg:x3; val_offset:84597*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84597*0 + 3*551*FLEN/8, x4, x1, x2)

inst_28200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xf9 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xfcffffff; valaddr_reg:x3; val_offset:84600*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84600*0 + 3*552*FLEN/8, x4, x1, x2)

inst_28201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff000001; valaddr_reg:x3; val_offset:84603*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84603*0 + 3*553*FLEN/8, x4, x1, x2)

inst_28202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff000003; valaddr_reg:x3; val_offset:84606*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84606*0 + 3*554*FLEN/8, x4, x1, x2)

inst_28203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff000007; valaddr_reg:x3; val_offset:84609*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84609*0 + 3*555*FLEN/8, x4, x1, x2)

inst_28204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff199999; valaddr_reg:x3; val_offset:84612*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84612*0 + 3*556*FLEN/8, x4, x1, x2)

inst_28205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff249249; valaddr_reg:x3; val_offset:84615*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84615*0 + 3*557*FLEN/8, x4, x1, x2)

inst_28206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff333333; valaddr_reg:x3; val_offset:84618*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84618*0 + 3*558*FLEN/8, x4, x1, x2)

inst_28207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:84621*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84621*0 + 3*559*FLEN/8, x4, x1, x2)

inst_28208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:84624*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84624*0 + 3*560*FLEN/8, x4, x1, x2)

inst_28209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff444444; valaddr_reg:x3; val_offset:84627*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84627*0 + 3*561*FLEN/8, x4, x1, x2)

inst_28210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:84630*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84630*0 + 3*562*FLEN/8, x4, x1, x2)

inst_28211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:84633*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84633*0 + 3*563*FLEN/8, x4, x1, x2)

inst_28212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff666666; valaddr_reg:x3; val_offset:84636*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84636*0 + 3*564*FLEN/8, x4, x1, x2)

inst_28213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:84639*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84639*0 + 3*565*FLEN/8, x4, x1, x2)

inst_28214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:84642*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84642*0 + 3*566*FLEN/8, x4, x1, x2)

inst_28215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:84645*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84645*0 + 3*567*FLEN/8, x4, x1, x2)

inst_28216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cfabb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x686e5b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cfabb; op2val:0xbfe86e5b;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:84648*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84648*0 + 3*568*FLEN/8, x4, x1, x2)

inst_28217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31800000; valaddr_reg:x3; val_offset:84651*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84651*0 + 3*569*FLEN/8, x4, x1, x2)

inst_28218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31800001; valaddr_reg:x3; val_offset:84654*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84654*0 + 3*570*FLEN/8, x4, x1, x2)

inst_28219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31800003; valaddr_reg:x3; val_offset:84657*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84657*0 + 3*571*FLEN/8, x4, x1, x2)

inst_28220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31800007; valaddr_reg:x3; val_offset:84660*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84660*0 + 3*572*FLEN/8, x4, x1, x2)

inst_28221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3180000f; valaddr_reg:x3; val_offset:84663*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84663*0 + 3*573*FLEN/8, x4, x1, x2)

inst_28222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3180001f; valaddr_reg:x3; val_offset:84666*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84666*0 + 3*574*FLEN/8, x4, x1, x2)

inst_28223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3180003f; valaddr_reg:x3; val_offset:84669*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84669*0 + 3*575*FLEN/8, x4, x1, x2)

inst_28224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3180007f; valaddr_reg:x3; val_offset:84672*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84672*0 + 3*576*FLEN/8, x4, x1, x2)

inst_28225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x318000ff; valaddr_reg:x3; val_offset:84675*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84675*0 + 3*577*FLEN/8, x4, x1, x2)

inst_28226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x318001ff; valaddr_reg:x3; val_offset:84678*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84678*0 + 3*578*FLEN/8, x4, x1, x2)

inst_28227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x318003ff; valaddr_reg:x3; val_offset:84681*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84681*0 + 3*579*FLEN/8, x4, x1, x2)

inst_28228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x318007ff; valaddr_reg:x3; val_offset:84684*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84684*0 + 3*580*FLEN/8, x4, x1, x2)

inst_28229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31800fff; valaddr_reg:x3; val_offset:84687*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84687*0 + 3*581*FLEN/8, x4, x1, x2)

inst_28230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31801fff; valaddr_reg:x3; val_offset:84690*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84690*0 + 3*582*FLEN/8, x4, x1, x2)

inst_28231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31803fff; valaddr_reg:x3; val_offset:84693*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84693*0 + 3*583*FLEN/8, x4, x1, x2)

inst_28232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31807fff; valaddr_reg:x3; val_offset:84696*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84696*0 + 3*584*FLEN/8, x4, x1, x2)

inst_28233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3180ffff; valaddr_reg:x3; val_offset:84699*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84699*0 + 3*585*FLEN/8, x4, x1, x2)

inst_28234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3181ffff; valaddr_reg:x3; val_offset:84702*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84702*0 + 3*586*FLEN/8, x4, x1, x2)

inst_28235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3183ffff; valaddr_reg:x3; val_offset:84705*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84705*0 + 3*587*FLEN/8, x4, x1, x2)

inst_28236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3187ffff; valaddr_reg:x3; val_offset:84708*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84708*0 + 3*588*FLEN/8, x4, x1, x2)

inst_28237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x318fffff; valaddr_reg:x3; val_offset:84711*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84711*0 + 3*589*FLEN/8, x4, x1, x2)

inst_28238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x319fffff; valaddr_reg:x3; val_offset:84714*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84714*0 + 3*590*FLEN/8, x4, x1, x2)

inst_28239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31bfffff; valaddr_reg:x3; val_offset:84717*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84717*0 + 3*591*FLEN/8, x4, x1, x2)

inst_28240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31c00000; valaddr_reg:x3; val_offset:84720*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84720*0 + 3*592*FLEN/8, x4, x1, x2)

inst_28241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31e00000; valaddr_reg:x3; val_offset:84723*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84723*0 + 3*593*FLEN/8, x4, x1, x2)

inst_28242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31f00000; valaddr_reg:x3; val_offset:84726*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84726*0 + 3*594*FLEN/8, x4, x1, x2)

inst_28243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31f80000; valaddr_reg:x3; val_offset:84729*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84729*0 + 3*595*FLEN/8, x4, x1, x2)

inst_28244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fc0000; valaddr_reg:x3; val_offset:84732*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84732*0 + 3*596*FLEN/8, x4, x1, x2)

inst_28245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fe0000; valaddr_reg:x3; val_offset:84735*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84735*0 + 3*597*FLEN/8, x4, x1, x2)

inst_28246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31ff0000; valaddr_reg:x3; val_offset:84738*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84738*0 + 3*598*FLEN/8, x4, x1, x2)

inst_28247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31ff8000; valaddr_reg:x3; val_offset:84741*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84741*0 + 3*599*FLEN/8, x4, x1, x2)

inst_28248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31ffc000; valaddr_reg:x3; val_offset:84744*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84744*0 + 3*600*FLEN/8, x4, x1, x2)

inst_28249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31ffe000; valaddr_reg:x3; val_offset:84747*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84747*0 + 3*601*FLEN/8, x4, x1, x2)

inst_28250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fff000; valaddr_reg:x3; val_offset:84750*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84750*0 + 3*602*FLEN/8, x4, x1, x2)

inst_28251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fff800; valaddr_reg:x3; val_offset:84753*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84753*0 + 3*603*FLEN/8, x4, x1, x2)

inst_28252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fffc00; valaddr_reg:x3; val_offset:84756*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84756*0 + 3*604*FLEN/8, x4, x1, x2)

inst_28253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fffe00; valaddr_reg:x3; val_offset:84759*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84759*0 + 3*605*FLEN/8, x4, x1, x2)

inst_28254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31ffff00; valaddr_reg:x3; val_offset:84762*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84762*0 + 3*606*FLEN/8, x4, x1, x2)

inst_28255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31ffff80; valaddr_reg:x3; val_offset:84765*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84765*0 + 3*607*FLEN/8, x4, x1, x2)

inst_28256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31ffffc0; valaddr_reg:x3; val_offset:84768*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84768*0 + 3*608*FLEN/8, x4, x1, x2)

inst_28257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31ffffe0; valaddr_reg:x3; val_offset:84771*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84771*0 + 3*609*FLEN/8, x4, x1, x2)

inst_28258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fffff0; valaddr_reg:x3; val_offset:84774*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84774*0 + 3*610*FLEN/8, x4, x1, x2)

inst_28259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fffff8; valaddr_reg:x3; val_offset:84777*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84777*0 + 3*611*FLEN/8, x4, x1, x2)

inst_28260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fffffc; valaddr_reg:x3; val_offset:84780*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84780*0 + 3*612*FLEN/8, x4, x1, x2)

inst_28261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31fffffe; valaddr_reg:x3; val_offset:84783*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84783*0 + 3*613*FLEN/8, x4, x1, x2)

inst_28262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x31ffffff; valaddr_reg:x3; val_offset:84786*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84786*0 + 3*614*FLEN/8, x4, x1, x2)

inst_28263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3f800001; valaddr_reg:x3; val_offset:84789*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84789*0 + 3*615*FLEN/8, x4, x1, x2)

inst_28264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3f800003; valaddr_reg:x3; val_offset:84792*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84792*0 + 3*616*FLEN/8, x4, x1, x2)

inst_28265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3f800007; valaddr_reg:x3; val_offset:84795*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84795*0 + 3*617*FLEN/8, x4, x1, x2)

inst_28266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3f999999; valaddr_reg:x3; val_offset:84798*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84798*0 + 3*618*FLEN/8, x4, x1, x2)

inst_28267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:84801*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84801*0 + 3*619*FLEN/8, x4, x1, x2)

inst_28268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:84804*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84804*0 + 3*620*FLEN/8, x4, x1, x2)

inst_28269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:84807*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84807*0 + 3*621*FLEN/8, x4, x1, x2)

inst_28270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:84810*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84810*0 + 3*622*FLEN/8, x4, x1, x2)

inst_28271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:84813*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84813*0 + 3*623*FLEN/8, x4, x1, x2)

inst_28272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:84816*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84816*0 + 3*624*FLEN/8, x4, x1, x2)

inst_28273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:84819*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84819*0 + 3*625*FLEN/8, x4, x1, x2)

inst_28274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:84822*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84822*0 + 3*626*FLEN/8, x4, x1, x2)

inst_28275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:84825*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84825*0 + 3*627*FLEN/8, x4, x1, x2)

inst_28276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:84828*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84828*0 + 3*628*FLEN/8, x4, x1, x2)

inst_28277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:84831*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84831*0 + 3*629*FLEN/8, x4, x1, x2)

inst_28278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d1440 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3a1114 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d1440; op2val:0x3a1114;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:84834*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84834*0 + 3*630*FLEN/8, x4, x1, x2)

inst_28279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:84837*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84837*0 + 3*631*FLEN/8, x4, x1, x2)

inst_28280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:84840*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84840*0 + 3*632*FLEN/8, x4, x1, x2)

inst_28281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:84843*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84843*0 + 3*633*FLEN/8, x4, x1, x2)

inst_28282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:84846*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84846*0 + 3*634*FLEN/8, x4, x1, x2)

inst_28283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:84849*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84849*0 + 3*635*FLEN/8, x4, x1, x2)

inst_28284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:84852*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84852*0 + 3*636*FLEN/8, x4, x1, x2)

inst_28285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:84855*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84855*0 + 3*637*FLEN/8, x4, x1, x2)

inst_28286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:84858*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84858*0 + 3*638*FLEN/8, x4, x1, x2)

inst_28287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:84861*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84861*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_28288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:84864*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84864*0 + 3*640*FLEN/8, x4, x1, x2)

inst_28289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:84867*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84867*0 + 3*641*FLEN/8, x4, x1, x2)

inst_28290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:84870*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84870*0 + 3*642*FLEN/8, x4, x1, x2)

inst_28291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:84873*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84873*0 + 3*643*FLEN/8, x4, x1, x2)

inst_28292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:84876*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84876*0 + 3*644*FLEN/8, x4, x1, x2)

inst_28293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:84879*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84879*0 + 3*645*FLEN/8, x4, x1, x2)

inst_28294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:84882*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84882*0 + 3*646*FLEN/8, x4, x1, x2)

inst_28295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1000000; valaddr_reg:x3; val_offset:84885*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84885*0 + 3*647*FLEN/8, x4, x1, x2)

inst_28296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1000001; valaddr_reg:x3; val_offset:84888*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84888*0 + 3*648*FLEN/8, x4, x1, x2)

inst_28297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1000003; valaddr_reg:x3; val_offset:84891*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84891*0 + 3*649*FLEN/8, x4, x1, x2)

inst_28298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1000007; valaddr_reg:x3; val_offset:84894*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84894*0 + 3*650*FLEN/8, x4, x1, x2)

inst_28299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x100000f; valaddr_reg:x3; val_offset:84897*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84897*0 + 3*651*FLEN/8, x4, x1, x2)

inst_28300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x100001f; valaddr_reg:x3; val_offset:84900*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84900*0 + 3*652*FLEN/8, x4, x1, x2)

inst_28301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x100003f; valaddr_reg:x3; val_offset:84903*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84903*0 + 3*653*FLEN/8, x4, x1, x2)

inst_28302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x100007f; valaddr_reg:x3; val_offset:84906*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84906*0 + 3*654*FLEN/8, x4, x1, x2)

inst_28303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x10000ff; valaddr_reg:x3; val_offset:84909*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84909*0 + 3*655*FLEN/8, x4, x1, x2)

inst_28304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x10001ff; valaddr_reg:x3; val_offset:84912*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84912*0 + 3*656*FLEN/8, x4, x1, x2)

inst_28305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x10003ff; valaddr_reg:x3; val_offset:84915*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84915*0 + 3*657*FLEN/8, x4, x1, x2)

inst_28306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x10007ff; valaddr_reg:x3; val_offset:84918*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84918*0 + 3*658*FLEN/8, x4, x1, x2)

inst_28307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1000fff; valaddr_reg:x3; val_offset:84921*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84921*0 + 3*659*FLEN/8, x4, x1, x2)

inst_28308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1001fff; valaddr_reg:x3; val_offset:84924*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84924*0 + 3*660*FLEN/8, x4, x1, x2)

inst_28309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1003fff; valaddr_reg:x3; val_offset:84927*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84927*0 + 3*661*FLEN/8, x4, x1, x2)

inst_28310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1007fff; valaddr_reg:x3; val_offset:84930*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84930*0 + 3*662*FLEN/8, x4, x1, x2)

inst_28311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x100ffff; valaddr_reg:x3; val_offset:84933*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84933*0 + 3*663*FLEN/8, x4, x1, x2)

inst_28312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x101ffff; valaddr_reg:x3; val_offset:84936*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84936*0 + 3*664*FLEN/8, x4, x1, x2)

inst_28313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x103ffff; valaddr_reg:x3; val_offset:84939*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84939*0 + 3*665*FLEN/8, x4, x1, x2)

inst_28314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x107ffff; valaddr_reg:x3; val_offset:84942*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84942*0 + 3*666*FLEN/8, x4, x1, x2)

inst_28315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x10fffff; valaddr_reg:x3; val_offset:84945*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84945*0 + 3*667*FLEN/8, x4, x1, x2)

inst_28316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x11fffff; valaddr_reg:x3; val_offset:84948*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84948*0 + 3*668*FLEN/8, x4, x1, x2)

inst_28317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x13fffff; valaddr_reg:x3; val_offset:84951*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84951*0 + 3*669*FLEN/8, x4, x1, x2)

inst_28318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1400000; valaddr_reg:x3; val_offset:84954*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84954*0 + 3*670*FLEN/8, x4, x1, x2)

inst_28319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1600000; valaddr_reg:x3; val_offset:84957*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84957*0 + 3*671*FLEN/8, x4, x1, x2)

inst_28320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1700000; valaddr_reg:x3; val_offset:84960*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84960*0 + 3*672*FLEN/8, x4, x1, x2)

inst_28321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x1780000; valaddr_reg:x3; val_offset:84963*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84963*0 + 3*673*FLEN/8, x4, x1, x2)

inst_28322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17c0000; valaddr_reg:x3; val_offset:84966*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84966*0 + 3*674*FLEN/8, x4, x1, x2)

inst_28323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17e0000; valaddr_reg:x3; val_offset:84969*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84969*0 + 3*675*FLEN/8, x4, x1, x2)

inst_28324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17f0000; valaddr_reg:x3; val_offset:84972*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84972*0 + 3*676*FLEN/8, x4, x1, x2)

inst_28325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17f8000; valaddr_reg:x3; val_offset:84975*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84975*0 + 3*677*FLEN/8, x4, x1, x2)

inst_28326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17fc000; valaddr_reg:x3; val_offset:84978*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84978*0 + 3*678*FLEN/8, x4, x1, x2)

inst_28327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17fe000; valaddr_reg:x3; val_offset:84981*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84981*0 + 3*679*FLEN/8, x4, x1, x2)

inst_28328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17ff000; valaddr_reg:x3; val_offset:84984*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84984*0 + 3*680*FLEN/8, x4, x1, x2)

inst_28329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17ff800; valaddr_reg:x3; val_offset:84987*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84987*0 + 3*681*FLEN/8, x4, x1, x2)

inst_28330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17ffc00; valaddr_reg:x3; val_offset:84990*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84990*0 + 3*682*FLEN/8, x4, x1, x2)

inst_28331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17ffe00; valaddr_reg:x3; val_offset:84993*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84993*0 + 3*683*FLEN/8, x4, x1, x2)

inst_28332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17fff00; valaddr_reg:x3; val_offset:84996*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84996*0 + 3*684*FLEN/8, x4, x1, x2)

inst_28333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17fff80; valaddr_reg:x3; val_offset:84999*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 84999*0 + 3*685*FLEN/8, x4, x1, x2)

inst_28334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17fffc0; valaddr_reg:x3; val_offset:85002*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85002*0 + 3*686*FLEN/8, x4, x1, x2)

inst_28335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17fffe0; valaddr_reg:x3; val_offset:85005*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85005*0 + 3*687*FLEN/8, x4, x1, x2)

inst_28336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17ffff0; valaddr_reg:x3; val_offset:85008*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85008*0 + 3*688*FLEN/8, x4, x1, x2)

inst_28337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17ffff8; valaddr_reg:x3; val_offset:85011*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85011*0 + 3*689*FLEN/8, x4, x1, x2)

inst_28338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17ffffc; valaddr_reg:x3; val_offset:85014*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85014*0 + 3*690*FLEN/8, x4, x1, x2)

inst_28339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17ffffe; valaddr_reg:x3; val_offset:85017*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85017*0 + 3*691*FLEN/8, x4, x1, x2)

inst_28340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d4e65; op2val:0x0;
op3val:0x17fffff; valaddr_reg:x3; val_offset:85020*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85020*0 + 3*692*FLEN/8, x4, x1, x2)

inst_28341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee800000; valaddr_reg:x3; val_offset:85023*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85023*0 + 3*693*FLEN/8, x4, x1, x2)

inst_28342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee800001; valaddr_reg:x3; val_offset:85026*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85026*0 + 3*694*FLEN/8, x4, x1, x2)

inst_28343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee800003; valaddr_reg:x3; val_offset:85029*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85029*0 + 3*695*FLEN/8, x4, x1, x2)

inst_28344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee800007; valaddr_reg:x3; val_offset:85032*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85032*0 + 3*696*FLEN/8, x4, x1, x2)

inst_28345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee80000f; valaddr_reg:x3; val_offset:85035*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85035*0 + 3*697*FLEN/8, x4, x1, x2)

inst_28346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee80001f; valaddr_reg:x3; val_offset:85038*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85038*0 + 3*698*FLEN/8, x4, x1, x2)

inst_28347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee80003f; valaddr_reg:x3; val_offset:85041*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85041*0 + 3*699*FLEN/8, x4, x1, x2)

inst_28348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee80007f; valaddr_reg:x3; val_offset:85044*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85044*0 + 3*700*FLEN/8, x4, x1, x2)

inst_28349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee8000ff; valaddr_reg:x3; val_offset:85047*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85047*0 + 3*701*FLEN/8, x4, x1, x2)

inst_28350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee8001ff; valaddr_reg:x3; val_offset:85050*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85050*0 + 3*702*FLEN/8, x4, x1, x2)

inst_28351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee8003ff; valaddr_reg:x3; val_offset:85053*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85053*0 + 3*703*FLEN/8, x4, x1, x2)

inst_28352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee8007ff; valaddr_reg:x3; val_offset:85056*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85056*0 + 3*704*FLEN/8, x4, x1, x2)

inst_28353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee800fff; valaddr_reg:x3; val_offset:85059*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85059*0 + 3*705*FLEN/8, x4, x1, x2)

inst_28354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee801fff; valaddr_reg:x3; val_offset:85062*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85062*0 + 3*706*FLEN/8, x4, x1, x2)

inst_28355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee803fff; valaddr_reg:x3; val_offset:85065*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85065*0 + 3*707*FLEN/8, x4, x1, x2)

inst_28356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee807fff; valaddr_reg:x3; val_offset:85068*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85068*0 + 3*708*FLEN/8, x4, x1, x2)

inst_28357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee80ffff; valaddr_reg:x3; val_offset:85071*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85071*0 + 3*709*FLEN/8, x4, x1, x2)

inst_28358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee81ffff; valaddr_reg:x3; val_offset:85074*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85074*0 + 3*710*FLEN/8, x4, x1, x2)

inst_28359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee83ffff; valaddr_reg:x3; val_offset:85077*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85077*0 + 3*711*FLEN/8, x4, x1, x2)

inst_28360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee87ffff; valaddr_reg:x3; val_offset:85080*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85080*0 + 3*712*FLEN/8, x4, x1, x2)

inst_28361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee8fffff; valaddr_reg:x3; val_offset:85083*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85083*0 + 3*713*FLEN/8, x4, x1, x2)

inst_28362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xee9fffff; valaddr_reg:x3; val_offset:85086*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85086*0 + 3*714*FLEN/8, x4, x1, x2)

inst_28363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeebfffff; valaddr_reg:x3; val_offset:85089*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85089*0 + 3*715*FLEN/8, x4, x1, x2)

inst_28364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeec00000; valaddr_reg:x3; val_offset:85092*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85092*0 + 3*716*FLEN/8, x4, x1, x2)

inst_28365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeee00000; valaddr_reg:x3; val_offset:85095*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85095*0 + 3*717*FLEN/8, x4, x1, x2)

inst_28366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeef00000; valaddr_reg:x3; val_offset:85098*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85098*0 + 3*718*FLEN/8, x4, x1, x2)

inst_28367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeef80000; valaddr_reg:x3; val_offset:85101*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85101*0 + 3*719*FLEN/8, x4, x1, x2)

inst_28368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefc0000; valaddr_reg:x3; val_offset:85104*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85104*0 + 3*720*FLEN/8, x4, x1, x2)

inst_28369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefe0000; valaddr_reg:x3; val_offset:85107*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85107*0 + 3*721*FLEN/8, x4, x1, x2)

inst_28370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeeff0000; valaddr_reg:x3; val_offset:85110*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85110*0 + 3*722*FLEN/8, x4, x1, x2)

inst_28371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeeff8000; valaddr_reg:x3; val_offset:85113*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85113*0 + 3*723*FLEN/8, x4, x1, x2)

inst_28372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeeffc000; valaddr_reg:x3; val_offset:85116*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85116*0 + 3*724*FLEN/8, x4, x1, x2)

inst_28373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeeffe000; valaddr_reg:x3; val_offset:85119*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85119*0 + 3*725*FLEN/8, x4, x1, x2)

inst_28374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefff000; valaddr_reg:x3; val_offset:85122*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85122*0 + 3*726*FLEN/8, x4, x1, x2)

inst_28375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefff800; valaddr_reg:x3; val_offset:85125*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85125*0 + 3*727*FLEN/8, x4, x1, x2)

inst_28376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefffc00; valaddr_reg:x3; val_offset:85128*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85128*0 + 3*728*FLEN/8, x4, x1, x2)

inst_28377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefffe00; valaddr_reg:x3; val_offset:85131*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85131*0 + 3*729*FLEN/8, x4, x1, x2)

inst_28378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeeffff00; valaddr_reg:x3; val_offset:85134*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85134*0 + 3*730*FLEN/8, x4, x1, x2)

inst_28379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeeffff80; valaddr_reg:x3; val_offset:85137*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85137*0 + 3*731*FLEN/8, x4, x1, x2)

inst_28380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeeffffc0; valaddr_reg:x3; val_offset:85140*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85140*0 + 3*732*FLEN/8, x4, x1, x2)

inst_28381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeeffffe0; valaddr_reg:x3; val_offset:85143*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85143*0 + 3*733*FLEN/8, x4, x1, x2)

inst_28382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefffff0; valaddr_reg:x3; val_offset:85146*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85146*0 + 3*734*FLEN/8, x4, x1, x2)

inst_28383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefffff8; valaddr_reg:x3; val_offset:85149*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85149*0 + 3*735*FLEN/8, x4, x1, x2)

inst_28384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefffffc; valaddr_reg:x3; val_offset:85152*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85152*0 + 3*736*FLEN/8, x4, x1, x2)

inst_28385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeefffffe; valaddr_reg:x3; val_offset:85155*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85155*0 + 3*737*FLEN/8, x4, x1, x2)

inst_28386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xeeffffff; valaddr_reg:x3; val_offset:85158*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85158*0 + 3*738*FLEN/8, x4, x1, x2)

inst_28387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff000001; valaddr_reg:x3; val_offset:85161*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85161*0 + 3*739*FLEN/8, x4, x1, x2)

inst_28388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff000003; valaddr_reg:x3; val_offset:85164*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85164*0 + 3*740*FLEN/8, x4, x1, x2)

inst_28389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff000007; valaddr_reg:x3; val_offset:85167*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85167*0 + 3*741*FLEN/8, x4, x1, x2)

inst_28390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff199999; valaddr_reg:x3; val_offset:85170*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85170*0 + 3*742*FLEN/8, x4, x1, x2)

inst_28391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff249249; valaddr_reg:x3; val_offset:85173*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85173*0 + 3*743*FLEN/8, x4, x1, x2)

inst_28392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff333333; valaddr_reg:x3; val_offset:85176*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85176*0 + 3*744*FLEN/8, x4, x1, x2)

inst_28393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:85179*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85179*0 + 3*745*FLEN/8, x4, x1, x2)

inst_28394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:85182*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85182*0 + 3*746*FLEN/8, x4, x1, x2)

inst_28395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff444444; valaddr_reg:x3; val_offset:85185*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85185*0 + 3*747*FLEN/8, x4, x1, x2)

inst_28396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:85188*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85188*0 + 3*748*FLEN/8, x4, x1, x2)

inst_28397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:85191*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85191*0 + 3*749*FLEN/8, x4, x1, x2)

inst_28398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff666666; valaddr_reg:x3; val_offset:85194*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85194*0 + 3*750*FLEN/8, x4, x1, x2)

inst_28399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:85197*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85197*0 + 3*751*FLEN/8, x4, x1, x2)

inst_28400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:85200*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85200*0 + 3*752*FLEN/8, x4, x1, x2)

inst_28401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:85203*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85203*0 + 3*753*FLEN/8, x4, x1, x2)

inst_28402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d694a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x67b8a2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0d694a; op2val:0xbfe7b8a2;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:85206*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85206*0 + 3*754*FLEN/8, x4, x1, x2)

inst_28403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:85209*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85209*0 + 3*755*FLEN/8, x4, x1, x2)

inst_28404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:85212*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85212*0 + 3*756*FLEN/8, x4, x1, x2)

inst_28405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:85215*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85215*0 + 3*757*FLEN/8, x4, x1, x2)

inst_28406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:85218*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85218*0 + 3*758*FLEN/8, x4, x1, x2)

inst_28407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:85221*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85221*0 + 3*759*FLEN/8, x4, x1, x2)

inst_28408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:85224*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85224*0 + 3*760*FLEN/8, x4, x1, x2)

inst_28409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:85227*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85227*0 + 3*761*FLEN/8, x4, x1, x2)

inst_28410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:85230*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85230*0 + 3*762*FLEN/8, x4, x1, x2)

inst_28411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:85233*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85233*0 + 3*763*FLEN/8, x4, x1, x2)

inst_28412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:85236*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85236*0 + 3*764*FLEN/8, x4, x1, x2)

inst_28413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:85239*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85239*0 + 3*765*FLEN/8, x4, x1, x2)

inst_28414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:85242*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85242*0 + 3*766*FLEN/8, x4, x1, x2)

inst_28415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0dcf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0dcf2f; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:85245*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 85245*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3045064703,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2131422378,32,FLEN)
NAN_BOXED(2151348128,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255808,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255809,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255811,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255815,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255823,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255839,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255871,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255935,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315256063,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315256319,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315256831,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315257855,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315259903,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315263999,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315272191,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315288575,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315321343,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315386879,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315517951,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315780095,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2316304383,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2317352959,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2319450111,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2319450112,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2321547264,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2322595840,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323120128,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323382272,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323513344,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323578880,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323611648,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323628032,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323636224,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323640320,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323642368,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323643392,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323643904,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644160,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644288,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644352,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644384,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644400,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644408,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644412,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644414,32,FLEN)
NAN_BOXED(2131451573,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644415,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443200,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443201,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443203,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443207,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443215,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443231,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443263,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443327,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443455,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355443711,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355444223,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355445247,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355447295,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355451391,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355459583,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355475967,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355508735,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355574271,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355705343,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3355967487,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3356491775,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3357540351,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3359637503,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3359637504,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3361734656,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3362783232,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363307520,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363569664,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363700736,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363766272,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363799040,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363815424,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363823616,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363827712,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363829760,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363830784,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831296,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831552,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831680,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831744,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831776,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831792,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831800,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831804,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831806,32,FLEN)
NAN_BOXED(2131475678,32,FLEN)
NAN_BOXED(2151325636,32,FLEN)
NAN_BOXED(3363831807,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190080,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190095,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190111,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190143,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190207,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190335,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278190591,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278191103,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278192127,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278194175,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278198271,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278206463,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278222847,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278255615,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278321151,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278452223,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4278714367,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4279238655,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4280287231,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4282384384,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4284481536,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4285530112,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286054400,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286316544,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286447616,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286513152,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286545920,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286562304,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286570496,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286574592,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286576640,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286577664,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578176,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578432,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578560,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578624,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578656,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578672,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2131476836,32,FLEN)
NAN_BOXED(3219814266,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263168512,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263168513,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263168515,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263168519,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263168527,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263168543,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263168575,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263168639,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263168767,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263169023,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263169535,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263170559,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263172607,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263176703,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263184895,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263201279,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263234047,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263299583,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263430655,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3263692799,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3264217087,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3265265663,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3267362815,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3267362816,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3269459968,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3270508544,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271032832,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271294976,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271426048,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271491584,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271524352,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271540736,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271548928,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271553024,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271555072,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271556096,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271556608,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271556864,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271556992,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271557056,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271557088,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271557104,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271557112,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271557116,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271557118,32,FLEN)
NAN_BOXED(2131477095,32,FLEN)
NAN_BOXED(2151325042,32,FLEN)
NAN_BOXED(3271557119,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587456,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587457,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587459,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587463,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587471,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587487,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587519,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587583,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587711,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587967,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365588479,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365589503,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365591551,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365595647,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365603839,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365620223,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365652991,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365718527,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365849599,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2366111743,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2366636031,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2367684607,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2369781759,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2369781760,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2371878912,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2372927488,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373451776,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373713920,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373844992,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373910528,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373943296,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373959680,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373967872,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373971968,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373974016,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975040,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975552,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975808,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975936,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976000,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976032,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976048,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976056,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976060,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976062,32,FLEN)
NAN_BOXED(2131478643,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976063,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536870912,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536870913,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536870915,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536870919,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536870927,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536870943,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536870975,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536871039,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536871167,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536871423,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536871935,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536872959,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536875007,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536879103,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536887295,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536903679,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(536936447,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(537001983,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(537133055,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(537395199,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(537919487,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(538968063,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(541065215,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(541065216,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(543162368,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(544210944,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(544735232,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(544997376,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545128448,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545193984,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545226752,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545243136,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545251328,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545255424,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545257472,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545258496,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259008,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259264,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259392,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259456,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259488,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259504,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259512,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259516,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259518,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(545259519,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2131515049,32,FLEN)
NAN_BOXED(3825541,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994944,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994945,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994947,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994951,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994959,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994975,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995007,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995071,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995199,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995455,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995967,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150996991,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150999039,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151003135,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151011327,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151027711,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151060479,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151126015,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151257087,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151519231,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(152043519,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(153092095,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(155189247,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(155189248,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(157286400,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(158334976,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(158859264,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159121408,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159252480,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159318016,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159350784,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159367168,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159375360,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159379456,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159381504,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159382528,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383040,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383296,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383424,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383488,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383520,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383536,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383544,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383548,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383550,32,FLEN)
NAN_BOXED(2131529968,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383551,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815296,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815297,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815299,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815303,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815311,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815327,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815359,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815423,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815551,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815807,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197816319,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197817343,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197819391,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197823487,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197831679,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197848063,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197880831,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197946367,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198077439,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198339583,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198863871,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2199912447,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009599,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009600,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2204106752,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205155328,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205679616,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205941760,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206072832,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206138368,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206171136,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206187520,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206195712,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206199808,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206201856,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206202880,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203392,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203648,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203776,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203840,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203872,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203888,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203896,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203900,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203902,32,FLEN)
NAN_BOXED(2131532681,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203903,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247040,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247041,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247043,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247047,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247055,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247071,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247103,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247167,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247295,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236247551,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236248063,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236249087,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236251135,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236255231,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236263423,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236279807,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236312575,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236378111,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236509183,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4236771327,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4237295615,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4238344191,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4240441343,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4240441344,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4242538496,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4243587072,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244111360,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244373504,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244504576,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244570112,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244602880,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244619264,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244627456,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244631552,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244633600,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244634624,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635136,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635392,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635520,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635584,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635616,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635632,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635640,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635644,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635646,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4244635647,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2131557051,32,FLEN)
NAN_BOXED(3219680859,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472192,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472193,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472195,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472199,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472207,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472223,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472255,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472319,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472447,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830472703,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830473215,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830474239,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830476287,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830480383,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830488575,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830504959,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830537727,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830603263,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830734335,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(830996479,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(831520767,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(832569343,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(834666495,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(834666496,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(836763648,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(837812224,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838336512,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838598656,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838729728,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838795264,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838828032,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838844416,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838852608,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838856704,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838858752,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838859776,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860288,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860544,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860672,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860736,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860768,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860784,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860792,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860796,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860798,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(838860799,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2131563584,32,FLEN)
NAN_BOXED(3805460,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(2131578469,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366016,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366017,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366019,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366023,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366031,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366047,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366079,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366143,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366271,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001366527,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001367039,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001368063,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001370111,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001374207,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001382399,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001398783,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001431551,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001497087,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001628159,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4001890303,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4002414591,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4003463167,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4005560319,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4005560320,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4007657472,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4008706048,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009230336,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009492480,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009623552,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009689088,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009721856,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009738240,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009746432,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009750528,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009752576,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009753600,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754112,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754368,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754496,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754560,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754592,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754608,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754616,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754620,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754622,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4009754623,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2131585354,32,FLEN)
NAN_BOXED(3219634338,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2131611439,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
