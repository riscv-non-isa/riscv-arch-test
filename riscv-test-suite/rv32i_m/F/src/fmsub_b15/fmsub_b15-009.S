
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_6144:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:18432*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18432*0 + 3*0*FLEN/8, x4, x1, x2)

inst_6145:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:18435*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18435*0 + 3*1*FLEN/8, x4, x1, x2)

inst_6146:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:18438*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18438*0 + 3*2*FLEN/8, x4, x1, x2)

inst_6147:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:18441*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18441*0 + 3*3*FLEN/8, x4, x1, x2)

inst_6148:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:18444*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18444*0 + 3*4*FLEN/8, x4, x1, x2)

inst_6149:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:18447*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18447*0 + 3*5*FLEN/8, x4, x1, x2)

inst_6150:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:18450*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18450*0 + 3*6*FLEN/8, x4, x1, x2)

inst_6151:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:18453*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18453*0 + 3*7*FLEN/8, x4, x1, x2)

inst_6152:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:18456*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18456*0 + 3*8*FLEN/8, x4, x1, x2)

inst_6153:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a800000; valaddr_reg:x3; val_offset:18459*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18459*0 + 3*9*FLEN/8, x4, x1, x2)

inst_6154:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a800001; valaddr_reg:x3; val_offset:18462*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18462*0 + 3*10*FLEN/8, x4, x1, x2)

inst_6155:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a800003; valaddr_reg:x3; val_offset:18465*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18465*0 + 3*11*FLEN/8, x4, x1, x2)

inst_6156:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a800007; valaddr_reg:x3; val_offset:18468*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18468*0 + 3*12*FLEN/8, x4, x1, x2)

inst_6157:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a80000f; valaddr_reg:x3; val_offset:18471*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18471*0 + 3*13*FLEN/8, x4, x1, x2)

inst_6158:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a80001f; valaddr_reg:x3; val_offset:18474*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18474*0 + 3*14*FLEN/8, x4, x1, x2)

inst_6159:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a80003f; valaddr_reg:x3; val_offset:18477*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18477*0 + 3*15*FLEN/8, x4, x1, x2)

inst_6160:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a80007f; valaddr_reg:x3; val_offset:18480*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18480*0 + 3*16*FLEN/8, x4, x1, x2)

inst_6161:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a8000ff; valaddr_reg:x3; val_offset:18483*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18483*0 + 3*17*FLEN/8, x4, x1, x2)

inst_6162:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a8001ff; valaddr_reg:x3; val_offset:18486*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18486*0 + 3*18*FLEN/8, x4, x1, x2)

inst_6163:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a8003ff; valaddr_reg:x3; val_offset:18489*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18489*0 + 3*19*FLEN/8, x4, x1, x2)

inst_6164:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a8007ff; valaddr_reg:x3; val_offset:18492*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18492*0 + 3*20*FLEN/8, x4, x1, x2)

inst_6165:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a800fff; valaddr_reg:x3; val_offset:18495*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18495*0 + 3*21*FLEN/8, x4, x1, x2)

inst_6166:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a801fff; valaddr_reg:x3; val_offset:18498*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18498*0 + 3*22*FLEN/8, x4, x1, x2)

inst_6167:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a803fff; valaddr_reg:x3; val_offset:18501*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18501*0 + 3*23*FLEN/8, x4, x1, x2)

inst_6168:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a807fff; valaddr_reg:x3; val_offset:18504*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18504*0 + 3*24*FLEN/8, x4, x1, x2)

inst_6169:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a80ffff; valaddr_reg:x3; val_offset:18507*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18507*0 + 3*25*FLEN/8, x4, x1, x2)

inst_6170:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a81ffff; valaddr_reg:x3; val_offset:18510*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18510*0 + 3*26*FLEN/8, x4, x1, x2)

inst_6171:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a83ffff; valaddr_reg:x3; val_offset:18513*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18513*0 + 3*27*FLEN/8, x4, x1, x2)

inst_6172:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a87ffff; valaddr_reg:x3; val_offset:18516*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18516*0 + 3*28*FLEN/8, x4, x1, x2)

inst_6173:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a8fffff; valaddr_reg:x3; val_offset:18519*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18519*0 + 3*29*FLEN/8, x4, x1, x2)

inst_6174:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8a9fffff; valaddr_reg:x3; val_offset:18522*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18522*0 + 3*30*FLEN/8, x4, x1, x2)

inst_6175:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8abfffff; valaddr_reg:x3; val_offset:18525*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18525*0 + 3*31*FLEN/8, x4, x1, x2)

inst_6176:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8ac00000; valaddr_reg:x3; val_offset:18528*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18528*0 + 3*32*FLEN/8, x4, x1, x2)

inst_6177:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8ae00000; valaddr_reg:x3; val_offset:18531*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18531*0 + 3*33*FLEN/8, x4, x1, x2)

inst_6178:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8af00000; valaddr_reg:x3; val_offset:18534*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18534*0 + 3*34*FLEN/8, x4, x1, x2)

inst_6179:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8af80000; valaddr_reg:x3; val_offset:18537*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18537*0 + 3*35*FLEN/8, x4, x1, x2)

inst_6180:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afc0000; valaddr_reg:x3; val_offset:18540*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18540*0 + 3*36*FLEN/8, x4, x1, x2)

inst_6181:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afe0000; valaddr_reg:x3; val_offset:18543*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18543*0 + 3*37*FLEN/8, x4, x1, x2)

inst_6182:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8aff0000; valaddr_reg:x3; val_offset:18546*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18546*0 + 3*38*FLEN/8, x4, x1, x2)

inst_6183:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8aff8000; valaddr_reg:x3; val_offset:18549*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18549*0 + 3*39*FLEN/8, x4, x1, x2)

inst_6184:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8affc000; valaddr_reg:x3; val_offset:18552*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18552*0 + 3*40*FLEN/8, x4, x1, x2)

inst_6185:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8affe000; valaddr_reg:x3; val_offset:18555*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18555*0 + 3*41*FLEN/8, x4, x1, x2)

inst_6186:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afff000; valaddr_reg:x3; val_offset:18558*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18558*0 + 3*42*FLEN/8, x4, x1, x2)

inst_6187:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afff800; valaddr_reg:x3; val_offset:18561*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18561*0 + 3*43*FLEN/8, x4, x1, x2)

inst_6188:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afffc00; valaddr_reg:x3; val_offset:18564*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18564*0 + 3*44*FLEN/8, x4, x1, x2)

inst_6189:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afffe00; valaddr_reg:x3; val_offset:18567*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18567*0 + 3*45*FLEN/8, x4, x1, x2)

inst_6190:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8affff00; valaddr_reg:x3; val_offset:18570*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18570*0 + 3*46*FLEN/8, x4, x1, x2)

inst_6191:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8affff80; valaddr_reg:x3; val_offset:18573*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18573*0 + 3*47*FLEN/8, x4, x1, x2)

inst_6192:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8affffc0; valaddr_reg:x3; val_offset:18576*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18576*0 + 3*48*FLEN/8, x4, x1, x2)

inst_6193:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8affffe0; valaddr_reg:x3; val_offset:18579*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18579*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6194:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afffff0; valaddr_reg:x3; val_offset:18582*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18582*0 + 3*50*FLEN/8, x4, x1, x2)

inst_6195:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afffff8; valaddr_reg:x3; val_offset:18585*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18585*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6196:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afffffc; valaddr_reg:x3; val_offset:18588*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18588*0 + 3*52*FLEN/8, x4, x1, x2)

inst_6197:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8afffffe; valaddr_reg:x3; val_offset:18591*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18591*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6198:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5923f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd923f1; op2val:0x80000000;
op3val:0x8affffff; valaddr_reg:x3; val_offset:18594*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18594*0 + 3*54*FLEN/8, x4, x1, x2)

inst_6199:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbf800001; valaddr_reg:x3; val_offset:18597*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18597*0 + 3*55*FLEN/8, x4, x1, x2)

inst_6200:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbf800003; valaddr_reg:x3; val_offset:18600*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18600*0 + 3*56*FLEN/8, x4, x1, x2)

inst_6201:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbf800007; valaddr_reg:x3; val_offset:18603*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18603*0 + 3*57*FLEN/8, x4, x1, x2)

inst_6202:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbf999999; valaddr_reg:x3; val_offset:18606*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18606*0 + 3*58*FLEN/8, x4, x1, x2)

inst_6203:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:18609*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18609*0 + 3*59*FLEN/8, x4, x1, x2)

inst_6204:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:18612*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18612*0 + 3*60*FLEN/8, x4, x1, x2)

inst_6205:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:18615*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18615*0 + 3*61*FLEN/8, x4, x1, x2)

inst_6206:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:18618*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18618*0 + 3*62*FLEN/8, x4, x1, x2)

inst_6207:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:18621*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18621*0 + 3*63*FLEN/8, x4, x1, x2)

inst_6208:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:18624*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18624*0 + 3*64*FLEN/8, x4, x1, x2)

inst_6209:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:18627*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18627*0 + 3*65*FLEN/8, x4, x1, x2)

inst_6210:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:18630*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18630*0 + 3*66*FLEN/8, x4, x1, x2)

inst_6211:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:18633*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18633*0 + 3*67*FLEN/8, x4, x1, x2)

inst_6212:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:18636*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18636*0 + 3*68*FLEN/8, x4, x1, x2)

inst_6213:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:18639*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18639*0 + 3*69*FLEN/8, x4, x1, x2)

inst_6214:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:18642*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18642*0 + 3*70*FLEN/8, x4, x1, x2)

inst_6215:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0000000; valaddr_reg:x3; val_offset:18645*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18645*0 + 3*71*FLEN/8, x4, x1, x2)

inst_6216:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0000001; valaddr_reg:x3; val_offset:18648*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18648*0 + 3*72*FLEN/8, x4, x1, x2)

inst_6217:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0000003; valaddr_reg:x3; val_offset:18651*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18651*0 + 3*73*FLEN/8, x4, x1, x2)

inst_6218:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0000007; valaddr_reg:x3; val_offset:18654*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18654*0 + 3*74*FLEN/8, x4, x1, x2)

inst_6219:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc000000f; valaddr_reg:x3; val_offset:18657*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18657*0 + 3*75*FLEN/8, x4, x1, x2)

inst_6220:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc000001f; valaddr_reg:x3; val_offset:18660*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18660*0 + 3*76*FLEN/8, x4, x1, x2)

inst_6221:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc000003f; valaddr_reg:x3; val_offset:18663*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18663*0 + 3*77*FLEN/8, x4, x1, x2)

inst_6222:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc000007f; valaddr_reg:x3; val_offset:18666*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18666*0 + 3*78*FLEN/8, x4, x1, x2)

inst_6223:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc00000ff; valaddr_reg:x3; val_offset:18669*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18669*0 + 3*79*FLEN/8, x4, x1, x2)

inst_6224:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc00001ff; valaddr_reg:x3; val_offset:18672*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18672*0 + 3*80*FLEN/8, x4, x1, x2)

inst_6225:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc00003ff; valaddr_reg:x3; val_offset:18675*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18675*0 + 3*81*FLEN/8, x4, x1, x2)

inst_6226:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc00007ff; valaddr_reg:x3; val_offset:18678*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18678*0 + 3*82*FLEN/8, x4, x1, x2)

inst_6227:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0000fff; valaddr_reg:x3; val_offset:18681*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18681*0 + 3*83*FLEN/8, x4, x1, x2)

inst_6228:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0001fff; valaddr_reg:x3; val_offset:18684*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18684*0 + 3*84*FLEN/8, x4, x1, x2)

inst_6229:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0003fff; valaddr_reg:x3; val_offset:18687*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18687*0 + 3*85*FLEN/8, x4, x1, x2)

inst_6230:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0007fff; valaddr_reg:x3; val_offset:18690*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18690*0 + 3*86*FLEN/8, x4, x1, x2)

inst_6231:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc000ffff; valaddr_reg:x3; val_offset:18693*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18693*0 + 3*87*FLEN/8, x4, x1, x2)

inst_6232:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc001ffff; valaddr_reg:x3; val_offset:18696*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18696*0 + 3*88*FLEN/8, x4, x1, x2)

inst_6233:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc003ffff; valaddr_reg:x3; val_offset:18699*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18699*0 + 3*89*FLEN/8, x4, x1, x2)

inst_6234:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc007ffff; valaddr_reg:x3; val_offset:18702*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18702*0 + 3*90*FLEN/8, x4, x1, x2)

inst_6235:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc00fffff; valaddr_reg:x3; val_offset:18705*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18705*0 + 3*91*FLEN/8, x4, x1, x2)

inst_6236:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc01fffff; valaddr_reg:x3; val_offset:18708*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18708*0 + 3*92*FLEN/8, x4, x1, x2)

inst_6237:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc03fffff; valaddr_reg:x3; val_offset:18711*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18711*0 + 3*93*FLEN/8, x4, x1, x2)

inst_6238:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0400000; valaddr_reg:x3; val_offset:18714*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18714*0 + 3*94*FLEN/8, x4, x1, x2)

inst_6239:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0600000; valaddr_reg:x3; val_offset:18717*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18717*0 + 3*95*FLEN/8, x4, x1, x2)

inst_6240:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0700000; valaddr_reg:x3; val_offset:18720*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18720*0 + 3*96*FLEN/8, x4, x1, x2)

inst_6241:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc0780000; valaddr_reg:x3; val_offset:18723*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18723*0 + 3*97*FLEN/8, x4, x1, x2)

inst_6242:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07c0000; valaddr_reg:x3; val_offset:18726*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18726*0 + 3*98*FLEN/8, x4, x1, x2)

inst_6243:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07e0000; valaddr_reg:x3; val_offset:18729*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18729*0 + 3*99*FLEN/8, x4, x1, x2)

inst_6244:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07f0000; valaddr_reg:x3; val_offset:18732*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18732*0 + 3*100*FLEN/8, x4, x1, x2)

inst_6245:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07f8000; valaddr_reg:x3; val_offset:18735*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18735*0 + 3*101*FLEN/8, x4, x1, x2)

inst_6246:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07fc000; valaddr_reg:x3; val_offset:18738*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18738*0 + 3*102*FLEN/8, x4, x1, x2)

inst_6247:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07fe000; valaddr_reg:x3; val_offset:18741*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18741*0 + 3*103*FLEN/8, x4, x1, x2)

inst_6248:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07ff000; valaddr_reg:x3; val_offset:18744*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18744*0 + 3*104*FLEN/8, x4, x1, x2)

inst_6249:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07ff800; valaddr_reg:x3; val_offset:18747*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18747*0 + 3*105*FLEN/8, x4, x1, x2)

inst_6250:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07ffc00; valaddr_reg:x3; val_offset:18750*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18750*0 + 3*106*FLEN/8, x4, x1, x2)

inst_6251:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07ffe00; valaddr_reg:x3; val_offset:18753*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18753*0 + 3*107*FLEN/8, x4, x1, x2)

inst_6252:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07fff00; valaddr_reg:x3; val_offset:18756*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18756*0 + 3*108*FLEN/8, x4, x1, x2)

inst_6253:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07fff80; valaddr_reg:x3; val_offset:18759*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18759*0 + 3*109*FLEN/8, x4, x1, x2)

inst_6254:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07fffc0; valaddr_reg:x3; val_offset:18762*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18762*0 + 3*110*FLEN/8, x4, x1, x2)

inst_6255:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07fffe0; valaddr_reg:x3; val_offset:18765*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18765*0 + 3*111*FLEN/8, x4, x1, x2)

inst_6256:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07ffff0; valaddr_reg:x3; val_offset:18768*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18768*0 + 3*112*FLEN/8, x4, x1, x2)

inst_6257:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07ffff8; valaddr_reg:x3; val_offset:18771*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18771*0 + 3*113*FLEN/8, x4, x1, x2)

inst_6258:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07ffffc; valaddr_reg:x3; val_offset:18774*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18774*0 + 3*114*FLEN/8, x4, x1, x2)

inst_6259:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07ffffe; valaddr_reg:x3; val_offset:18777*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18777*0 + 3*115*FLEN/8, x4, x1, x2)

inst_6260:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x594ae2 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x16cd23 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dd94ae2; op2val:0x8116cd23;
op3val:0xc07fffff; valaddr_reg:x3; val_offset:18780*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18780*0 + 3*116*FLEN/8, x4, x1, x2)

inst_6261:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2800000; valaddr_reg:x3; val_offset:18783*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18783*0 + 3*117*FLEN/8, x4, x1, x2)

inst_6262:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2800001; valaddr_reg:x3; val_offset:18786*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18786*0 + 3*118*FLEN/8, x4, x1, x2)

inst_6263:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2800003; valaddr_reg:x3; val_offset:18789*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18789*0 + 3*119*FLEN/8, x4, x1, x2)

inst_6264:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2800007; valaddr_reg:x3; val_offset:18792*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18792*0 + 3*120*FLEN/8, x4, x1, x2)

inst_6265:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe280000f; valaddr_reg:x3; val_offset:18795*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18795*0 + 3*121*FLEN/8, x4, x1, x2)

inst_6266:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe280001f; valaddr_reg:x3; val_offset:18798*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18798*0 + 3*122*FLEN/8, x4, x1, x2)

inst_6267:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe280003f; valaddr_reg:x3; val_offset:18801*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18801*0 + 3*123*FLEN/8, x4, x1, x2)

inst_6268:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe280007f; valaddr_reg:x3; val_offset:18804*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18804*0 + 3*124*FLEN/8, x4, x1, x2)

inst_6269:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe28000ff; valaddr_reg:x3; val_offset:18807*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18807*0 + 3*125*FLEN/8, x4, x1, x2)

inst_6270:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe28001ff; valaddr_reg:x3; val_offset:18810*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18810*0 + 3*126*FLEN/8, x4, x1, x2)

inst_6271:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe28003ff; valaddr_reg:x3; val_offset:18813*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18813*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_6272:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe28007ff; valaddr_reg:x3; val_offset:18816*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18816*0 + 3*128*FLEN/8, x4, x1, x2)

inst_6273:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2800fff; valaddr_reg:x3; val_offset:18819*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18819*0 + 3*129*FLEN/8, x4, x1, x2)

inst_6274:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2801fff; valaddr_reg:x3; val_offset:18822*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18822*0 + 3*130*FLEN/8, x4, x1, x2)

inst_6275:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2803fff; valaddr_reg:x3; val_offset:18825*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18825*0 + 3*131*FLEN/8, x4, x1, x2)

inst_6276:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2807fff; valaddr_reg:x3; val_offset:18828*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18828*0 + 3*132*FLEN/8, x4, x1, x2)

inst_6277:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe280ffff; valaddr_reg:x3; val_offset:18831*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18831*0 + 3*133*FLEN/8, x4, x1, x2)

inst_6278:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe281ffff; valaddr_reg:x3; val_offset:18834*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18834*0 + 3*134*FLEN/8, x4, x1, x2)

inst_6279:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe283ffff; valaddr_reg:x3; val_offset:18837*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18837*0 + 3*135*FLEN/8, x4, x1, x2)

inst_6280:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe287ffff; valaddr_reg:x3; val_offset:18840*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18840*0 + 3*136*FLEN/8, x4, x1, x2)

inst_6281:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe28fffff; valaddr_reg:x3; val_offset:18843*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18843*0 + 3*137*FLEN/8, x4, x1, x2)

inst_6282:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe29fffff; valaddr_reg:x3; val_offset:18846*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18846*0 + 3*138*FLEN/8, x4, x1, x2)

inst_6283:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2bfffff; valaddr_reg:x3; val_offset:18849*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18849*0 + 3*139*FLEN/8, x4, x1, x2)

inst_6284:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2c00000; valaddr_reg:x3; val_offset:18852*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18852*0 + 3*140*FLEN/8, x4, x1, x2)

inst_6285:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2e00000; valaddr_reg:x3; val_offset:18855*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18855*0 + 3*141*FLEN/8, x4, x1, x2)

inst_6286:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2f00000; valaddr_reg:x3; val_offset:18858*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18858*0 + 3*142*FLEN/8, x4, x1, x2)

inst_6287:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2f80000; valaddr_reg:x3; val_offset:18861*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18861*0 + 3*143*FLEN/8, x4, x1, x2)

inst_6288:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fc0000; valaddr_reg:x3; val_offset:18864*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18864*0 + 3*144*FLEN/8, x4, x1, x2)

inst_6289:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fe0000; valaddr_reg:x3; val_offset:18867*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18867*0 + 3*145*FLEN/8, x4, x1, x2)

inst_6290:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ff0000; valaddr_reg:x3; val_offset:18870*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18870*0 + 3*146*FLEN/8, x4, x1, x2)

inst_6291:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ff8000; valaddr_reg:x3; val_offset:18873*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18873*0 + 3*147*FLEN/8, x4, x1, x2)

inst_6292:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffc000; valaddr_reg:x3; val_offset:18876*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18876*0 + 3*148*FLEN/8, x4, x1, x2)

inst_6293:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffe000; valaddr_reg:x3; val_offset:18879*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18879*0 + 3*149*FLEN/8, x4, x1, x2)

inst_6294:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fff000; valaddr_reg:x3; val_offset:18882*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18882*0 + 3*150*FLEN/8, x4, x1, x2)

inst_6295:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fff800; valaddr_reg:x3; val_offset:18885*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18885*0 + 3*151*FLEN/8, x4, x1, x2)

inst_6296:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffc00; valaddr_reg:x3; val_offset:18888*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18888*0 + 3*152*FLEN/8, x4, x1, x2)

inst_6297:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffe00; valaddr_reg:x3; val_offset:18891*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18891*0 + 3*153*FLEN/8, x4, x1, x2)

inst_6298:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffff00; valaddr_reg:x3; val_offset:18894*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18894*0 + 3*154*FLEN/8, x4, x1, x2)

inst_6299:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffff80; valaddr_reg:x3; val_offset:18897*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18897*0 + 3*155*FLEN/8, x4, x1, x2)

inst_6300:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffffc0; valaddr_reg:x3; val_offset:18900*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18900*0 + 3*156*FLEN/8, x4, x1, x2)

inst_6301:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffffe0; valaddr_reg:x3; val_offset:18903*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18903*0 + 3*157*FLEN/8, x4, x1, x2)

inst_6302:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffff0; valaddr_reg:x3; val_offset:18906*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18906*0 + 3*158*FLEN/8, x4, x1, x2)

inst_6303:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffff8; valaddr_reg:x3; val_offset:18909*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18909*0 + 3*159*FLEN/8, x4, x1, x2)

inst_6304:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffffc; valaddr_reg:x3; val_offset:18912*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18912*0 + 3*160*FLEN/8, x4, x1, x2)

inst_6305:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2fffffe; valaddr_reg:x3; val_offset:18915*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18915*0 + 3*161*FLEN/8, x4, x1, x2)

inst_6306:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xc5 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xe2ffffff; valaddr_reg:x3; val_offset:18918*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18918*0 + 3*162*FLEN/8, x4, x1, x2)

inst_6307:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff000001; valaddr_reg:x3; val_offset:18921*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18921*0 + 3*163*FLEN/8, x4, x1, x2)

inst_6308:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff000003; valaddr_reg:x3; val_offset:18924*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18924*0 + 3*164*FLEN/8, x4, x1, x2)

inst_6309:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff000007; valaddr_reg:x3; val_offset:18927*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18927*0 + 3*165*FLEN/8, x4, x1, x2)

inst_6310:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff199999; valaddr_reg:x3; val_offset:18930*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18930*0 + 3*166*FLEN/8, x4, x1, x2)

inst_6311:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff249249; valaddr_reg:x3; val_offset:18933*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18933*0 + 3*167*FLEN/8, x4, x1, x2)

inst_6312:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff333333; valaddr_reg:x3; val_offset:18936*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18936*0 + 3*168*FLEN/8, x4, x1, x2)

inst_6313:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:18939*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18939*0 + 3*169*FLEN/8, x4, x1, x2)

inst_6314:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:18942*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18942*0 + 3*170*FLEN/8, x4, x1, x2)

inst_6315:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff444444; valaddr_reg:x3; val_offset:18945*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18945*0 + 3*171*FLEN/8, x4, x1, x2)

inst_6316:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:18948*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18948*0 + 3*172*FLEN/8, x4, x1, x2)

inst_6317:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:18951*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18951*0 + 3*173*FLEN/8, x4, x1, x2)

inst_6318:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff666666; valaddr_reg:x3; val_offset:18954*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18954*0 + 3*174*FLEN/8, x4, x1, x2)

inst_6319:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:18957*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18957*0 + 3*175*FLEN/8, x4, x1, x2)

inst_6320:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:18960*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18960*0 + 3*176*FLEN/8, x4, x1, x2)

inst_6321:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:18963*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18963*0 + 3*177*FLEN/8, x4, x1, x2)

inst_6322:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cc23e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x146efa and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddcc23e; op2val:0xc1146efa;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:18966*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18966*0 + 3*178*FLEN/8, x4, x1, x2)

inst_6323:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000000; valaddr_reg:x3; val_offset:18969*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18969*0 + 3*179*FLEN/8, x4, x1, x2)

inst_6324:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000001; valaddr_reg:x3; val_offset:18972*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18972*0 + 3*180*FLEN/8, x4, x1, x2)

inst_6325:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000003; valaddr_reg:x3; val_offset:18975*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18975*0 + 3*181*FLEN/8, x4, x1, x2)

inst_6326:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000007; valaddr_reg:x3; val_offset:18978*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18978*0 + 3*182*FLEN/8, x4, x1, x2)

inst_6327:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000000f; valaddr_reg:x3; val_offset:18981*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18981*0 + 3*183*FLEN/8, x4, x1, x2)

inst_6328:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000001f; valaddr_reg:x3; val_offset:18984*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18984*0 + 3*184*FLEN/8, x4, x1, x2)

inst_6329:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000003f; valaddr_reg:x3; val_offset:18987*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18987*0 + 3*185*FLEN/8, x4, x1, x2)

inst_6330:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000007f; valaddr_reg:x3; val_offset:18990*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18990*0 + 3*186*FLEN/8, x4, x1, x2)

inst_6331:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00000ff; valaddr_reg:x3; val_offset:18993*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18993*0 + 3*187*FLEN/8, x4, x1, x2)

inst_6332:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00001ff; valaddr_reg:x3; val_offset:18996*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18996*0 + 3*188*FLEN/8, x4, x1, x2)

inst_6333:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00003ff; valaddr_reg:x3; val_offset:18999*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 18999*0 + 3*189*FLEN/8, x4, x1, x2)

inst_6334:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00007ff; valaddr_reg:x3; val_offset:19002*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19002*0 + 3*190*FLEN/8, x4, x1, x2)

inst_6335:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0000fff; valaddr_reg:x3; val_offset:19005*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19005*0 + 3*191*FLEN/8, x4, x1, x2)

inst_6336:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0001fff; valaddr_reg:x3; val_offset:19008*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19008*0 + 3*192*FLEN/8, x4, x1, x2)

inst_6337:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0003fff; valaddr_reg:x3; val_offset:19011*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19011*0 + 3*193*FLEN/8, x4, x1, x2)

inst_6338:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0007fff; valaddr_reg:x3; val_offset:19014*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19014*0 + 3*194*FLEN/8, x4, x1, x2)

inst_6339:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf000ffff; valaddr_reg:x3; val_offset:19017*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19017*0 + 3*195*FLEN/8, x4, x1, x2)

inst_6340:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf001ffff; valaddr_reg:x3; val_offset:19020*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19020*0 + 3*196*FLEN/8, x4, x1, x2)

inst_6341:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf003ffff; valaddr_reg:x3; val_offset:19023*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19023*0 + 3*197*FLEN/8, x4, x1, x2)

inst_6342:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf007ffff; valaddr_reg:x3; val_offset:19026*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19026*0 + 3*198*FLEN/8, x4, x1, x2)

inst_6343:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf00fffff; valaddr_reg:x3; val_offset:19029*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19029*0 + 3*199*FLEN/8, x4, x1, x2)

inst_6344:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf01fffff; valaddr_reg:x3; val_offset:19032*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19032*0 + 3*200*FLEN/8, x4, x1, x2)

inst_6345:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf03fffff; valaddr_reg:x3; val_offset:19035*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19035*0 + 3*201*FLEN/8, x4, x1, x2)

inst_6346:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0400000; valaddr_reg:x3; val_offset:19038*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19038*0 + 3*202*FLEN/8, x4, x1, x2)

inst_6347:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0600000; valaddr_reg:x3; val_offset:19041*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19041*0 + 3*203*FLEN/8, x4, x1, x2)

inst_6348:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0700000; valaddr_reg:x3; val_offset:19044*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19044*0 + 3*204*FLEN/8, x4, x1, x2)

inst_6349:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf0780000; valaddr_reg:x3; val_offset:19047*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19047*0 + 3*205*FLEN/8, x4, x1, x2)

inst_6350:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07c0000; valaddr_reg:x3; val_offset:19050*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19050*0 + 3*206*FLEN/8, x4, x1, x2)

inst_6351:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07e0000; valaddr_reg:x3; val_offset:19053*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19053*0 + 3*207*FLEN/8, x4, x1, x2)

inst_6352:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07f0000; valaddr_reg:x3; val_offset:19056*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19056*0 + 3*208*FLEN/8, x4, x1, x2)

inst_6353:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07f8000; valaddr_reg:x3; val_offset:19059*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19059*0 + 3*209*FLEN/8, x4, x1, x2)

inst_6354:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fc000; valaddr_reg:x3; val_offset:19062*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19062*0 + 3*210*FLEN/8, x4, x1, x2)

inst_6355:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fe000; valaddr_reg:x3; val_offset:19065*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19065*0 + 3*211*FLEN/8, x4, x1, x2)

inst_6356:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ff000; valaddr_reg:x3; val_offset:19068*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19068*0 + 3*212*FLEN/8, x4, x1, x2)

inst_6357:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ff800; valaddr_reg:x3; val_offset:19071*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19071*0 + 3*213*FLEN/8, x4, x1, x2)

inst_6358:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffc00; valaddr_reg:x3; val_offset:19074*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19074*0 + 3*214*FLEN/8, x4, x1, x2)

inst_6359:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffe00; valaddr_reg:x3; val_offset:19077*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19077*0 + 3*215*FLEN/8, x4, x1, x2)

inst_6360:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fff00; valaddr_reg:x3; val_offset:19080*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19080*0 + 3*216*FLEN/8, x4, x1, x2)

inst_6361:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fff80; valaddr_reg:x3; val_offset:19083*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19083*0 + 3*217*FLEN/8, x4, x1, x2)

inst_6362:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fffc0; valaddr_reg:x3; val_offset:19086*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19086*0 + 3*218*FLEN/8, x4, x1, x2)

inst_6363:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fffe0; valaddr_reg:x3; val_offset:19089*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19089*0 + 3*219*FLEN/8, x4, x1, x2)

inst_6364:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffff0; valaddr_reg:x3; val_offset:19092*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19092*0 + 3*220*FLEN/8, x4, x1, x2)

inst_6365:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffff8; valaddr_reg:x3; val_offset:19095*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19095*0 + 3*221*FLEN/8, x4, x1, x2)

inst_6366:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffffc; valaddr_reg:x3; val_offset:19098*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19098*0 + 3*222*FLEN/8, x4, x1, x2)

inst_6367:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07ffffe; valaddr_reg:x3; val_offset:19101*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19101*0 + 3*223*FLEN/8, x4, x1, x2)

inst_6368:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xf07fffff; valaddr_reg:x3; val_offset:19104*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19104*0 + 3*224*FLEN/8, x4, x1, x2)

inst_6369:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff000001; valaddr_reg:x3; val_offset:19107*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19107*0 + 3*225*FLEN/8, x4, x1, x2)

inst_6370:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff000003; valaddr_reg:x3; val_offset:19110*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19110*0 + 3*226*FLEN/8, x4, x1, x2)

inst_6371:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff000007; valaddr_reg:x3; val_offset:19113*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19113*0 + 3*227*FLEN/8, x4, x1, x2)

inst_6372:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff199999; valaddr_reg:x3; val_offset:19116*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19116*0 + 3*228*FLEN/8, x4, x1, x2)

inst_6373:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff249249; valaddr_reg:x3; val_offset:19119*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19119*0 + 3*229*FLEN/8, x4, x1, x2)

inst_6374:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff333333; valaddr_reg:x3; val_offset:19122*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19122*0 + 3*230*FLEN/8, x4, x1, x2)

inst_6375:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:19125*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19125*0 + 3*231*FLEN/8, x4, x1, x2)

inst_6376:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:19128*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19128*0 + 3*232*FLEN/8, x4, x1, x2)

inst_6377:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff444444; valaddr_reg:x3; val_offset:19131*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19131*0 + 3*233*FLEN/8, x4, x1, x2)

inst_6378:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:19134*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19134*0 + 3*234*FLEN/8, x4, x1, x2)

inst_6379:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:19137*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19137*0 + 3*235*FLEN/8, x4, x1, x2)

inst_6380:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff666666; valaddr_reg:x3; val_offset:19140*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19140*0 + 3*236*FLEN/8, x4, x1, x2)

inst_6381:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:19143*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19143*0 + 3*237*FLEN/8, x4, x1, x2)

inst_6382:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:19146*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19146*0 + 3*238*FLEN/8, x4, x1, x2)

inst_6383:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:19149*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19149*0 + 3*239*FLEN/8, x4, x1, x2)

inst_6384:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5de697 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x13ab6b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddde697; op2val:0xc113ab6b;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:19152*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19152*0 + 3*240*FLEN/8, x4, x1, x2)

inst_6385:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:19155*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19155*0 + 3*241*FLEN/8, x4, x1, x2)

inst_6386:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:19158*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19158*0 + 3*242*FLEN/8, x4, x1, x2)

inst_6387:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:19161*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19161*0 + 3*243*FLEN/8, x4, x1, x2)

inst_6388:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:19164*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19164*0 + 3*244*FLEN/8, x4, x1, x2)

inst_6389:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:19167*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19167*0 + 3*245*FLEN/8, x4, x1, x2)

inst_6390:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:19170*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19170*0 + 3*246*FLEN/8, x4, x1, x2)

inst_6391:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:19173*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19173*0 + 3*247*FLEN/8, x4, x1, x2)

inst_6392:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:19176*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19176*0 + 3*248*FLEN/8, x4, x1, x2)

inst_6393:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:19179*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19179*0 + 3*249*FLEN/8, x4, x1, x2)

inst_6394:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:19182*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19182*0 + 3*250*FLEN/8, x4, x1, x2)

inst_6395:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:19185*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19185*0 + 3*251*FLEN/8, x4, x1, x2)

inst_6396:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:19188*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19188*0 + 3*252*FLEN/8, x4, x1, x2)

inst_6397:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:19191*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19191*0 + 3*253*FLEN/8, x4, x1, x2)

inst_6398:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:19194*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19194*0 + 3*254*FLEN/8, x4, x1, x2)

inst_6399:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:19197*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19197*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_6400:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:19200*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19200*0 + 3*256*FLEN/8, x4, x1, x2)

inst_6401:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7800000; valaddr_reg:x3; val_offset:19203*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19203*0 + 3*257*FLEN/8, x4, x1, x2)

inst_6402:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7800001; valaddr_reg:x3; val_offset:19206*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19206*0 + 3*258*FLEN/8, x4, x1, x2)

inst_6403:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7800003; valaddr_reg:x3; val_offset:19209*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19209*0 + 3*259*FLEN/8, x4, x1, x2)

inst_6404:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7800007; valaddr_reg:x3; val_offset:19212*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19212*0 + 3*260*FLEN/8, x4, x1, x2)

inst_6405:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x780000f; valaddr_reg:x3; val_offset:19215*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19215*0 + 3*261*FLEN/8, x4, x1, x2)

inst_6406:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x780001f; valaddr_reg:x3; val_offset:19218*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19218*0 + 3*262*FLEN/8, x4, x1, x2)

inst_6407:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x780003f; valaddr_reg:x3; val_offset:19221*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19221*0 + 3*263*FLEN/8, x4, x1, x2)

inst_6408:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x780007f; valaddr_reg:x3; val_offset:19224*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19224*0 + 3*264*FLEN/8, x4, x1, x2)

inst_6409:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x78000ff; valaddr_reg:x3; val_offset:19227*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19227*0 + 3*265*FLEN/8, x4, x1, x2)

inst_6410:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x78001ff; valaddr_reg:x3; val_offset:19230*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19230*0 + 3*266*FLEN/8, x4, x1, x2)

inst_6411:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x78003ff; valaddr_reg:x3; val_offset:19233*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19233*0 + 3*267*FLEN/8, x4, x1, x2)

inst_6412:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x78007ff; valaddr_reg:x3; val_offset:19236*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19236*0 + 3*268*FLEN/8, x4, x1, x2)

inst_6413:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7800fff; valaddr_reg:x3; val_offset:19239*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19239*0 + 3*269*FLEN/8, x4, x1, x2)

inst_6414:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7801fff; valaddr_reg:x3; val_offset:19242*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19242*0 + 3*270*FLEN/8, x4, x1, x2)

inst_6415:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7803fff; valaddr_reg:x3; val_offset:19245*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19245*0 + 3*271*FLEN/8, x4, x1, x2)

inst_6416:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7807fff; valaddr_reg:x3; val_offset:19248*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19248*0 + 3*272*FLEN/8, x4, x1, x2)

inst_6417:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x780ffff; valaddr_reg:x3; val_offset:19251*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19251*0 + 3*273*FLEN/8, x4, x1, x2)

inst_6418:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x781ffff; valaddr_reg:x3; val_offset:19254*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19254*0 + 3*274*FLEN/8, x4, x1, x2)

inst_6419:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x783ffff; valaddr_reg:x3; val_offset:19257*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19257*0 + 3*275*FLEN/8, x4, x1, x2)

inst_6420:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x787ffff; valaddr_reg:x3; val_offset:19260*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19260*0 + 3*276*FLEN/8, x4, x1, x2)

inst_6421:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x78fffff; valaddr_reg:x3; val_offset:19263*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19263*0 + 3*277*FLEN/8, x4, x1, x2)

inst_6422:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x79fffff; valaddr_reg:x3; val_offset:19266*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19266*0 + 3*278*FLEN/8, x4, x1, x2)

inst_6423:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7bfffff; valaddr_reg:x3; val_offset:19269*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19269*0 + 3*279*FLEN/8, x4, x1, x2)

inst_6424:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7c00000; valaddr_reg:x3; val_offset:19272*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19272*0 + 3*280*FLEN/8, x4, x1, x2)

inst_6425:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7e00000; valaddr_reg:x3; val_offset:19275*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19275*0 + 3*281*FLEN/8, x4, x1, x2)

inst_6426:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7f00000; valaddr_reg:x3; val_offset:19278*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19278*0 + 3*282*FLEN/8, x4, x1, x2)

inst_6427:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7f80000; valaddr_reg:x3; val_offset:19281*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19281*0 + 3*283*FLEN/8, x4, x1, x2)

inst_6428:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fc0000; valaddr_reg:x3; val_offset:19284*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19284*0 + 3*284*FLEN/8, x4, x1, x2)

inst_6429:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fe0000; valaddr_reg:x3; val_offset:19287*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19287*0 + 3*285*FLEN/8, x4, x1, x2)

inst_6430:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ff0000; valaddr_reg:x3; val_offset:19290*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19290*0 + 3*286*FLEN/8, x4, x1, x2)

inst_6431:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ff8000; valaddr_reg:x3; val_offset:19293*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19293*0 + 3*287*FLEN/8, x4, x1, x2)

inst_6432:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffc000; valaddr_reg:x3; val_offset:19296*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19296*0 + 3*288*FLEN/8, x4, x1, x2)

inst_6433:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffe000; valaddr_reg:x3; val_offset:19299*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19299*0 + 3*289*FLEN/8, x4, x1, x2)

inst_6434:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fff000; valaddr_reg:x3; val_offset:19302*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19302*0 + 3*290*FLEN/8, x4, x1, x2)

inst_6435:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fff800; valaddr_reg:x3; val_offset:19305*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19305*0 + 3*291*FLEN/8, x4, x1, x2)

inst_6436:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fffc00; valaddr_reg:x3; val_offset:19308*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19308*0 + 3*292*FLEN/8, x4, x1, x2)

inst_6437:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fffe00; valaddr_reg:x3; val_offset:19311*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19311*0 + 3*293*FLEN/8, x4, x1, x2)

inst_6438:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffff00; valaddr_reg:x3; val_offset:19314*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19314*0 + 3*294*FLEN/8, x4, x1, x2)

inst_6439:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffff80; valaddr_reg:x3; val_offset:19317*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19317*0 + 3*295*FLEN/8, x4, x1, x2)

inst_6440:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffffc0; valaddr_reg:x3; val_offset:19320*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19320*0 + 3*296*FLEN/8, x4, x1, x2)

inst_6441:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffffe0; valaddr_reg:x3; val_offset:19323*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19323*0 + 3*297*FLEN/8, x4, x1, x2)

inst_6442:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fffff0; valaddr_reg:x3; val_offset:19326*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19326*0 + 3*298*FLEN/8, x4, x1, x2)

inst_6443:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fffff8; valaddr_reg:x3; val_offset:19329*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19329*0 + 3*299*FLEN/8, x4, x1, x2)

inst_6444:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fffffc; valaddr_reg:x3; val_offset:19332*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19332*0 + 3*300*FLEN/8, x4, x1, x2)

inst_6445:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7fffffe; valaddr_reg:x3; val_offset:19335*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19335*0 + 3*301*FLEN/8, x4, x1, x2)

inst_6446:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5e5beb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dde5beb; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:19338*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19338*0 + 3*302*FLEN/8, x4, x1, x2)

inst_6447:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70000000; valaddr_reg:x3; val_offset:19341*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19341*0 + 3*303*FLEN/8, x4, x1, x2)

inst_6448:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70000001; valaddr_reg:x3; val_offset:19344*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19344*0 + 3*304*FLEN/8, x4, x1, x2)

inst_6449:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70000003; valaddr_reg:x3; val_offset:19347*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19347*0 + 3*305*FLEN/8, x4, x1, x2)

inst_6450:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70000007; valaddr_reg:x3; val_offset:19350*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19350*0 + 3*306*FLEN/8, x4, x1, x2)

inst_6451:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7000000f; valaddr_reg:x3; val_offset:19353*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19353*0 + 3*307*FLEN/8, x4, x1, x2)

inst_6452:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7000001f; valaddr_reg:x3; val_offset:19356*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19356*0 + 3*308*FLEN/8, x4, x1, x2)

inst_6453:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7000003f; valaddr_reg:x3; val_offset:19359*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19359*0 + 3*309*FLEN/8, x4, x1, x2)

inst_6454:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7000007f; valaddr_reg:x3; val_offset:19362*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19362*0 + 3*310*FLEN/8, x4, x1, x2)

inst_6455:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x700000ff; valaddr_reg:x3; val_offset:19365*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19365*0 + 3*311*FLEN/8, x4, x1, x2)

inst_6456:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x700001ff; valaddr_reg:x3; val_offset:19368*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19368*0 + 3*312*FLEN/8, x4, x1, x2)

inst_6457:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x700003ff; valaddr_reg:x3; val_offset:19371*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19371*0 + 3*313*FLEN/8, x4, x1, x2)

inst_6458:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x700007ff; valaddr_reg:x3; val_offset:19374*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19374*0 + 3*314*FLEN/8, x4, x1, x2)

inst_6459:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70000fff; valaddr_reg:x3; val_offset:19377*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19377*0 + 3*315*FLEN/8, x4, x1, x2)

inst_6460:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70001fff; valaddr_reg:x3; val_offset:19380*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19380*0 + 3*316*FLEN/8, x4, x1, x2)

inst_6461:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70003fff; valaddr_reg:x3; val_offset:19383*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19383*0 + 3*317*FLEN/8, x4, x1, x2)

inst_6462:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70007fff; valaddr_reg:x3; val_offset:19386*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19386*0 + 3*318*FLEN/8, x4, x1, x2)

inst_6463:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7000ffff; valaddr_reg:x3; val_offset:19389*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19389*0 + 3*319*FLEN/8, x4, x1, x2)

inst_6464:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7001ffff; valaddr_reg:x3; val_offset:19392*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19392*0 + 3*320*FLEN/8, x4, x1, x2)

inst_6465:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7003ffff; valaddr_reg:x3; val_offset:19395*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19395*0 + 3*321*FLEN/8, x4, x1, x2)

inst_6466:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7007ffff; valaddr_reg:x3; val_offset:19398*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19398*0 + 3*322*FLEN/8, x4, x1, x2)

inst_6467:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x700fffff; valaddr_reg:x3; val_offset:19401*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19401*0 + 3*323*FLEN/8, x4, x1, x2)

inst_6468:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x701fffff; valaddr_reg:x3; val_offset:19404*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19404*0 + 3*324*FLEN/8, x4, x1, x2)

inst_6469:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x703fffff; valaddr_reg:x3; val_offset:19407*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19407*0 + 3*325*FLEN/8, x4, x1, x2)

inst_6470:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70400000; valaddr_reg:x3; val_offset:19410*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19410*0 + 3*326*FLEN/8, x4, x1, x2)

inst_6471:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70600000; valaddr_reg:x3; val_offset:19413*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19413*0 + 3*327*FLEN/8, x4, x1, x2)

inst_6472:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70700000; valaddr_reg:x3; val_offset:19416*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19416*0 + 3*328*FLEN/8, x4, x1, x2)

inst_6473:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x70780000; valaddr_reg:x3; val_offset:19419*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19419*0 + 3*329*FLEN/8, x4, x1, x2)

inst_6474:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707c0000; valaddr_reg:x3; val_offset:19422*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19422*0 + 3*330*FLEN/8, x4, x1, x2)

inst_6475:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707e0000; valaddr_reg:x3; val_offset:19425*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19425*0 + 3*331*FLEN/8, x4, x1, x2)

inst_6476:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707f0000; valaddr_reg:x3; val_offset:19428*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19428*0 + 3*332*FLEN/8, x4, x1, x2)

inst_6477:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707f8000; valaddr_reg:x3; val_offset:19431*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19431*0 + 3*333*FLEN/8, x4, x1, x2)

inst_6478:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707fc000; valaddr_reg:x3; val_offset:19434*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19434*0 + 3*334*FLEN/8, x4, x1, x2)

inst_6479:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707fe000; valaddr_reg:x3; val_offset:19437*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19437*0 + 3*335*FLEN/8, x4, x1, x2)

inst_6480:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707ff000; valaddr_reg:x3; val_offset:19440*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19440*0 + 3*336*FLEN/8, x4, x1, x2)

inst_6481:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707ff800; valaddr_reg:x3; val_offset:19443*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19443*0 + 3*337*FLEN/8, x4, x1, x2)

inst_6482:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707ffc00; valaddr_reg:x3; val_offset:19446*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19446*0 + 3*338*FLEN/8, x4, x1, x2)

inst_6483:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707ffe00; valaddr_reg:x3; val_offset:19449*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19449*0 + 3*339*FLEN/8, x4, x1, x2)

inst_6484:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707fff00; valaddr_reg:x3; val_offset:19452*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19452*0 + 3*340*FLEN/8, x4, x1, x2)

inst_6485:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707fff80; valaddr_reg:x3; val_offset:19455*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19455*0 + 3*341*FLEN/8, x4, x1, x2)

inst_6486:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707fffc0; valaddr_reg:x3; val_offset:19458*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19458*0 + 3*342*FLEN/8, x4, x1, x2)

inst_6487:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707fffe0; valaddr_reg:x3; val_offset:19461*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19461*0 + 3*343*FLEN/8, x4, x1, x2)

inst_6488:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707ffff0; valaddr_reg:x3; val_offset:19464*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19464*0 + 3*344*FLEN/8, x4, x1, x2)

inst_6489:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707ffff8; valaddr_reg:x3; val_offset:19467*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19467*0 + 3*345*FLEN/8, x4, x1, x2)

inst_6490:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707ffffc; valaddr_reg:x3; val_offset:19470*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19470*0 + 3*346*FLEN/8, x4, x1, x2)

inst_6491:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707ffffe; valaddr_reg:x3; val_offset:19473*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19473*0 + 3*347*FLEN/8, x4, x1, x2)

inst_6492:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x707fffff; valaddr_reg:x3; val_offset:19476*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19476*0 + 3*348*FLEN/8, x4, x1, x2)

inst_6493:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f000001; valaddr_reg:x3; val_offset:19479*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19479*0 + 3*349*FLEN/8, x4, x1, x2)

inst_6494:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f000003; valaddr_reg:x3; val_offset:19482*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19482*0 + 3*350*FLEN/8, x4, x1, x2)

inst_6495:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f000007; valaddr_reg:x3; val_offset:19485*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19485*0 + 3*351*FLEN/8, x4, x1, x2)

inst_6496:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f199999; valaddr_reg:x3; val_offset:19488*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19488*0 + 3*352*FLEN/8, x4, x1, x2)

inst_6497:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f249249; valaddr_reg:x3; val_offset:19491*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19491*0 + 3*353*FLEN/8, x4, x1, x2)

inst_6498:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f333333; valaddr_reg:x3; val_offset:19494*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19494*0 + 3*354*FLEN/8, x4, x1, x2)

inst_6499:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:19497*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19497*0 + 3*355*FLEN/8, x4, x1, x2)

inst_6500:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:19500*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19500*0 + 3*356*FLEN/8, x4, x1, x2)

inst_6501:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f444444; valaddr_reg:x3; val_offset:19503*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19503*0 + 3*357*FLEN/8, x4, x1, x2)

inst_6502:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:19506*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19506*0 + 3*358*FLEN/8, x4, x1, x2)

inst_6503:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:19509*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19509*0 + 3*359*FLEN/8, x4, x1, x2)

inst_6504:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f666666; valaddr_reg:x3; val_offset:19512*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19512*0 + 3*360*FLEN/8, x4, x1, x2)

inst_6505:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:19515*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19515*0 + 3*361*FLEN/8, x4, x1, x2)

inst_6506:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:19518*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19518*0 + 3*362*FLEN/8, x4, x1, x2)

inst_6507:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:19521*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19521*0 + 3*363*FLEN/8, x4, x1, x2)

inst_6508:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6193c8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x114349 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de193c8; op2val:0x41114349;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:19524*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19524*0 + 3*364*FLEN/8, x4, x1, x2)

inst_6509:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3f800001; valaddr_reg:x3; val_offset:19527*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19527*0 + 3*365*FLEN/8, x4, x1, x2)

inst_6510:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3f800003; valaddr_reg:x3; val_offset:19530*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19530*0 + 3*366*FLEN/8, x4, x1, x2)

inst_6511:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3f800007; valaddr_reg:x3; val_offset:19533*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19533*0 + 3*367*FLEN/8, x4, x1, x2)

inst_6512:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3f999999; valaddr_reg:x3; val_offset:19536*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19536*0 + 3*368*FLEN/8, x4, x1, x2)

inst_6513:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:19539*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19539*0 + 3*369*FLEN/8, x4, x1, x2)

inst_6514:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:19542*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19542*0 + 3*370*FLEN/8, x4, x1, x2)

inst_6515:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:19545*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19545*0 + 3*371*FLEN/8, x4, x1, x2)

inst_6516:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:19548*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19548*0 + 3*372*FLEN/8, x4, x1, x2)

inst_6517:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:19551*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19551*0 + 3*373*FLEN/8, x4, x1, x2)

inst_6518:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:19554*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19554*0 + 3*374*FLEN/8, x4, x1, x2)

inst_6519:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:19557*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19557*0 + 3*375*FLEN/8, x4, x1, x2)

inst_6520:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:19560*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19560*0 + 3*376*FLEN/8, x4, x1, x2)

inst_6521:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:19563*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19563*0 + 3*377*FLEN/8, x4, x1, x2)

inst_6522:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:19566*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19566*0 + 3*378*FLEN/8, x4, x1, x2)

inst_6523:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:19569*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19569*0 + 3*379*FLEN/8, x4, x1, x2)

inst_6524:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:19572*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19572*0 + 3*380*FLEN/8, x4, x1, x2)

inst_6525:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f000000; valaddr_reg:x3; val_offset:19575*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19575*0 + 3*381*FLEN/8, x4, x1, x2)

inst_6526:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f000001; valaddr_reg:x3; val_offset:19578*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19578*0 + 3*382*FLEN/8, x4, x1, x2)

inst_6527:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f000003; valaddr_reg:x3; val_offset:19581*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19581*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_6528:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f000007; valaddr_reg:x3; val_offset:19584*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19584*0 + 3*384*FLEN/8, x4, x1, x2)

inst_6529:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00000f; valaddr_reg:x3; val_offset:19587*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19587*0 + 3*385*FLEN/8, x4, x1, x2)

inst_6530:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00001f; valaddr_reg:x3; val_offset:19590*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19590*0 + 3*386*FLEN/8, x4, x1, x2)

inst_6531:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00003f; valaddr_reg:x3; val_offset:19593*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19593*0 + 3*387*FLEN/8, x4, x1, x2)

inst_6532:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00007f; valaddr_reg:x3; val_offset:19596*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19596*0 + 3*388*FLEN/8, x4, x1, x2)

inst_6533:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0000ff; valaddr_reg:x3; val_offset:19599*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19599*0 + 3*389*FLEN/8, x4, x1, x2)

inst_6534:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0001ff; valaddr_reg:x3; val_offset:19602*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19602*0 + 3*390*FLEN/8, x4, x1, x2)

inst_6535:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0003ff; valaddr_reg:x3; val_offset:19605*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19605*0 + 3*391*FLEN/8, x4, x1, x2)

inst_6536:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0007ff; valaddr_reg:x3; val_offset:19608*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19608*0 + 3*392*FLEN/8, x4, x1, x2)

inst_6537:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f000fff; valaddr_reg:x3; val_offset:19611*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19611*0 + 3*393*FLEN/8, x4, x1, x2)

inst_6538:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f001fff; valaddr_reg:x3; val_offset:19614*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19614*0 + 3*394*FLEN/8, x4, x1, x2)

inst_6539:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f003fff; valaddr_reg:x3; val_offset:19617*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19617*0 + 3*395*FLEN/8, x4, x1, x2)

inst_6540:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f007fff; valaddr_reg:x3; val_offset:19620*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19620*0 + 3*396*FLEN/8, x4, x1, x2)

inst_6541:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f00ffff; valaddr_reg:x3; val_offset:19623*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19623*0 + 3*397*FLEN/8, x4, x1, x2)

inst_6542:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f01ffff; valaddr_reg:x3; val_offset:19626*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19626*0 + 3*398*FLEN/8, x4, x1, x2)

inst_6543:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f03ffff; valaddr_reg:x3; val_offset:19629*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19629*0 + 3*399*FLEN/8, x4, x1, x2)

inst_6544:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f07ffff; valaddr_reg:x3; val_offset:19632*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19632*0 + 3*400*FLEN/8, x4, x1, x2)

inst_6545:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f0fffff; valaddr_reg:x3; val_offset:19635*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19635*0 + 3*401*FLEN/8, x4, x1, x2)

inst_6546:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f1fffff; valaddr_reg:x3; val_offset:19638*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19638*0 + 3*402*FLEN/8, x4, x1, x2)

inst_6547:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f3fffff; valaddr_reg:x3; val_offset:19641*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19641*0 + 3*403*FLEN/8, x4, x1, x2)

inst_6548:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f400000; valaddr_reg:x3; val_offset:19644*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19644*0 + 3*404*FLEN/8, x4, x1, x2)

inst_6549:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f600000; valaddr_reg:x3; val_offset:19647*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19647*0 + 3*405*FLEN/8, x4, x1, x2)

inst_6550:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f700000; valaddr_reg:x3; val_offset:19650*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19650*0 + 3*406*FLEN/8, x4, x1, x2)

inst_6551:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f780000; valaddr_reg:x3; val_offset:19653*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19653*0 + 3*407*FLEN/8, x4, x1, x2)

inst_6552:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7c0000; valaddr_reg:x3; val_offset:19656*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19656*0 + 3*408*FLEN/8, x4, x1, x2)

inst_6553:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7e0000; valaddr_reg:x3; val_offset:19659*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19659*0 + 3*409*FLEN/8, x4, x1, x2)

inst_6554:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7f0000; valaddr_reg:x3; val_offset:19662*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19662*0 + 3*410*FLEN/8, x4, x1, x2)

inst_6555:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7f8000; valaddr_reg:x3; val_offset:19665*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19665*0 + 3*411*FLEN/8, x4, x1, x2)

inst_6556:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fc000; valaddr_reg:x3; val_offset:19668*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19668*0 + 3*412*FLEN/8, x4, x1, x2)

inst_6557:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fe000; valaddr_reg:x3; val_offset:19671*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19671*0 + 3*413*FLEN/8, x4, x1, x2)

inst_6558:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ff000; valaddr_reg:x3; val_offset:19674*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19674*0 + 3*414*FLEN/8, x4, x1, x2)

inst_6559:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ff800; valaddr_reg:x3; val_offset:19677*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19677*0 + 3*415*FLEN/8, x4, x1, x2)

inst_6560:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffc00; valaddr_reg:x3; val_offset:19680*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19680*0 + 3*416*FLEN/8, x4, x1, x2)

inst_6561:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffe00; valaddr_reg:x3; val_offset:19683*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19683*0 + 3*417*FLEN/8, x4, x1, x2)

inst_6562:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fff00; valaddr_reg:x3; val_offset:19686*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19686*0 + 3*418*FLEN/8, x4, x1, x2)

inst_6563:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fff80; valaddr_reg:x3; val_offset:19689*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19689*0 + 3*419*FLEN/8, x4, x1, x2)

inst_6564:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fffc0; valaddr_reg:x3; val_offset:19692*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19692*0 + 3*420*FLEN/8, x4, x1, x2)

inst_6565:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fffe0; valaddr_reg:x3; val_offset:19695*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19695*0 + 3*421*FLEN/8, x4, x1, x2)

inst_6566:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffff0; valaddr_reg:x3; val_offset:19698*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19698*0 + 3*422*FLEN/8, x4, x1, x2)

inst_6567:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffff8; valaddr_reg:x3; val_offset:19701*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19701*0 + 3*423*FLEN/8, x4, x1, x2)

inst_6568:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffffc; valaddr_reg:x3; val_offset:19704*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19704*0 + 3*424*FLEN/8, x4, x1, x2)

inst_6569:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7ffffe; valaddr_reg:x3; val_offset:19707*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19707*0 + 3*425*FLEN/8, x4, x1, x2)

inst_6570:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681d02 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2c24 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de81d02; op2val:0x10d2c24;
op3val:0x4f7fffff; valaddr_reg:x3; val_offset:19710*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19710*0 + 3*426*FLEN/8, x4, x1, x2)

inst_6571:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000000; valaddr_reg:x3; val_offset:19713*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19713*0 + 3*427*FLEN/8, x4, x1, x2)

inst_6572:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000001; valaddr_reg:x3; val_offset:19716*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19716*0 + 3*428*FLEN/8, x4, x1, x2)

inst_6573:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000003; valaddr_reg:x3; val_offset:19719*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19719*0 + 3*429*FLEN/8, x4, x1, x2)

inst_6574:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000007; valaddr_reg:x3; val_offset:19722*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19722*0 + 3*430*FLEN/8, x4, x1, x2)

inst_6575:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000000f; valaddr_reg:x3; val_offset:19725*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19725*0 + 3*431*FLEN/8, x4, x1, x2)

inst_6576:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000001f; valaddr_reg:x3; val_offset:19728*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19728*0 + 3*432*FLEN/8, x4, x1, x2)

inst_6577:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000003f; valaddr_reg:x3; val_offset:19731*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19731*0 + 3*433*FLEN/8, x4, x1, x2)

inst_6578:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000007f; valaddr_reg:x3; val_offset:19734*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19734*0 + 3*434*FLEN/8, x4, x1, x2)

inst_6579:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00000ff; valaddr_reg:x3; val_offset:19737*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19737*0 + 3*435*FLEN/8, x4, x1, x2)

inst_6580:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00001ff; valaddr_reg:x3; val_offset:19740*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19740*0 + 3*436*FLEN/8, x4, x1, x2)

inst_6581:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00003ff; valaddr_reg:x3; val_offset:19743*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19743*0 + 3*437*FLEN/8, x4, x1, x2)

inst_6582:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00007ff; valaddr_reg:x3; val_offset:19746*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19746*0 + 3*438*FLEN/8, x4, x1, x2)

inst_6583:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0000fff; valaddr_reg:x3; val_offset:19749*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19749*0 + 3*439*FLEN/8, x4, x1, x2)

inst_6584:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0001fff; valaddr_reg:x3; val_offset:19752*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19752*0 + 3*440*FLEN/8, x4, x1, x2)

inst_6585:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0003fff; valaddr_reg:x3; val_offset:19755*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19755*0 + 3*441*FLEN/8, x4, x1, x2)

inst_6586:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0007fff; valaddr_reg:x3; val_offset:19758*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19758*0 + 3*442*FLEN/8, x4, x1, x2)

inst_6587:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe000ffff; valaddr_reg:x3; val_offset:19761*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19761*0 + 3*443*FLEN/8, x4, x1, x2)

inst_6588:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe001ffff; valaddr_reg:x3; val_offset:19764*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19764*0 + 3*444*FLEN/8, x4, x1, x2)

inst_6589:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe003ffff; valaddr_reg:x3; val_offset:19767*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19767*0 + 3*445*FLEN/8, x4, x1, x2)

inst_6590:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe007ffff; valaddr_reg:x3; val_offset:19770*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19770*0 + 3*446*FLEN/8, x4, x1, x2)

inst_6591:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe00fffff; valaddr_reg:x3; val_offset:19773*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19773*0 + 3*447*FLEN/8, x4, x1, x2)

inst_6592:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe01fffff; valaddr_reg:x3; val_offset:19776*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19776*0 + 3*448*FLEN/8, x4, x1, x2)

inst_6593:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe03fffff; valaddr_reg:x3; val_offset:19779*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19779*0 + 3*449*FLEN/8, x4, x1, x2)

inst_6594:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0400000; valaddr_reg:x3; val_offset:19782*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19782*0 + 3*450*FLEN/8, x4, x1, x2)

inst_6595:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0600000; valaddr_reg:x3; val_offset:19785*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19785*0 + 3*451*FLEN/8, x4, x1, x2)

inst_6596:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0700000; valaddr_reg:x3; val_offset:19788*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19788*0 + 3*452*FLEN/8, x4, x1, x2)

inst_6597:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe0780000; valaddr_reg:x3; val_offset:19791*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19791*0 + 3*453*FLEN/8, x4, x1, x2)

inst_6598:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07c0000; valaddr_reg:x3; val_offset:19794*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19794*0 + 3*454*FLEN/8, x4, x1, x2)

inst_6599:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07e0000; valaddr_reg:x3; val_offset:19797*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19797*0 + 3*455*FLEN/8, x4, x1, x2)

inst_6600:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07f0000; valaddr_reg:x3; val_offset:19800*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19800*0 + 3*456*FLEN/8, x4, x1, x2)

inst_6601:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07f8000; valaddr_reg:x3; val_offset:19803*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19803*0 + 3*457*FLEN/8, x4, x1, x2)

inst_6602:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fc000; valaddr_reg:x3; val_offset:19806*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19806*0 + 3*458*FLEN/8, x4, x1, x2)

inst_6603:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fe000; valaddr_reg:x3; val_offset:19809*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19809*0 + 3*459*FLEN/8, x4, x1, x2)

inst_6604:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ff000; valaddr_reg:x3; val_offset:19812*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19812*0 + 3*460*FLEN/8, x4, x1, x2)

inst_6605:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ff800; valaddr_reg:x3; val_offset:19815*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19815*0 + 3*461*FLEN/8, x4, x1, x2)

inst_6606:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffc00; valaddr_reg:x3; val_offset:19818*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19818*0 + 3*462*FLEN/8, x4, x1, x2)

inst_6607:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffe00; valaddr_reg:x3; val_offset:19821*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19821*0 + 3*463*FLEN/8, x4, x1, x2)

inst_6608:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fff00; valaddr_reg:x3; val_offset:19824*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19824*0 + 3*464*FLEN/8, x4, x1, x2)

inst_6609:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fff80; valaddr_reg:x3; val_offset:19827*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19827*0 + 3*465*FLEN/8, x4, x1, x2)

inst_6610:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fffc0; valaddr_reg:x3; val_offset:19830*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19830*0 + 3*466*FLEN/8, x4, x1, x2)

inst_6611:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fffe0; valaddr_reg:x3; val_offset:19833*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19833*0 + 3*467*FLEN/8, x4, x1, x2)

inst_6612:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffff0; valaddr_reg:x3; val_offset:19836*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19836*0 + 3*468*FLEN/8, x4, x1, x2)

inst_6613:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffff8; valaddr_reg:x3; val_offset:19839*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19839*0 + 3*469*FLEN/8, x4, x1, x2)

inst_6614:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffffc; valaddr_reg:x3; val_offset:19842*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19842*0 + 3*470*FLEN/8, x4, x1, x2)

inst_6615:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07ffffe; valaddr_reg:x3; val_offset:19845*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19845*0 + 3*471*FLEN/8, x4, x1, x2)

inst_6616:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xc0 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xe07fffff; valaddr_reg:x3; val_offset:19848*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19848*0 + 3*472*FLEN/8, x4, x1, x2)

inst_6617:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff000001; valaddr_reg:x3; val_offset:19851*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19851*0 + 3*473*FLEN/8, x4, x1, x2)

inst_6618:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff000003; valaddr_reg:x3; val_offset:19854*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19854*0 + 3*474*FLEN/8, x4, x1, x2)

inst_6619:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff000007; valaddr_reg:x3; val_offset:19857*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19857*0 + 3*475*FLEN/8, x4, x1, x2)

inst_6620:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff199999; valaddr_reg:x3; val_offset:19860*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19860*0 + 3*476*FLEN/8, x4, x1, x2)

inst_6621:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff249249; valaddr_reg:x3; val_offset:19863*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19863*0 + 3*477*FLEN/8, x4, x1, x2)

inst_6622:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff333333; valaddr_reg:x3; val_offset:19866*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19866*0 + 3*478*FLEN/8, x4, x1, x2)

inst_6623:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:19869*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19869*0 + 3*479*FLEN/8, x4, x1, x2)

inst_6624:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:19872*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19872*0 + 3*480*FLEN/8, x4, x1, x2)

inst_6625:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff444444; valaddr_reg:x3; val_offset:19875*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19875*0 + 3*481*FLEN/8, x4, x1, x2)

inst_6626:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:19878*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19878*0 + 3*482*FLEN/8, x4, x1, x2)

inst_6627:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:19881*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19881*0 + 3*483*FLEN/8, x4, x1, x2)

inst_6628:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff666666; valaddr_reg:x3; val_offset:19884*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19884*0 + 3*484*FLEN/8, x4, x1, x2)

inst_6629:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:19887*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19887*0 + 3*485*FLEN/8, x4, x1, x2)

inst_6630:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:19890*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19890*0 + 3*486*FLEN/8, x4, x1, x2)

inst_6631:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:19893*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19893*0 + 3*487*FLEN/8, x4, x1, x2)

inst_6632:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x688886 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0ceadd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de88886; op2val:0xc10ceadd;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:19896*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19896*0 + 3*488*FLEN/8, x4, x1, x2)

inst_6633:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800000; valaddr_reg:x3; val_offset:19899*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19899*0 + 3*489*FLEN/8, x4, x1, x2)

inst_6634:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800001; valaddr_reg:x3; val_offset:19902*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19902*0 + 3*490*FLEN/8, x4, x1, x2)

inst_6635:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800003; valaddr_reg:x3; val_offset:19905*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19905*0 + 3*491*FLEN/8, x4, x1, x2)

inst_6636:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800007; valaddr_reg:x3; val_offset:19908*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19908*0 + 3*492*FLEN/8, x4, x1, x2)

inst_6637:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80000f; valaddr_reg:x3; val_offset:19911*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19911*0 + 3*493*FLEN/8, x4, x1, x2)

inst_6638:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80001f; valaddr_reg:x3; val_offset:19914*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19914*0 + 3*494*FLEN/8, x4, x1, x2)

inst_6639:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80003f; valaddr_reg:x3; val_offset:19917*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19917*0 + 3*495*FLEN/8, x4, x1, x2)

inst_6640:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80007f; valaddr_reg:x3; val_offset:19920*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19920*0 + 3*496*FLEN/8, x4, x1, x2)

inst_6641:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8000ff; valaddr_reg:x3; val_offset:19923*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19923*0 + 3*497*FLEN/8, x4, x1, x2)

inst_6642:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8001ff; valaddr_reg:x3; val_offset:19926*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19926*0 + 3*498*FLEN/8, x4, x1, x2)

inst_6643:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8003ff; valaddr_reg:x3; val_offset:19929*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19929*0 + 3*499*FLEN/8, x4, x1, x2)

inst_6644:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8007ff; valaddr_reg:x3; val_offset:19932*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19932*0 + 3*500*FLEN/8, x4, x1, x2)

inst_6645:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b800fff; valaddr_reg:x3; val_offset:19935*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19935*0 + 3*501*FLEN/8, x4, x1, x2)

inst_6646:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b801fff; valaddr_reg:x3; val_offset:19938*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19938*0 + 3*502*FLEN/8, x4, x1, x2)

inst_6647:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b803fff; valaddr_reg:x3; val_offset:19941*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19941*0 + 3*503*FLEN/8, x4, x1, x2)

inst_6648:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b807fff; valaddr_reg:x3; val_offset:19944*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19944*0 + 3*504*FLEN/8, x4, x1, x2)

inst_6649:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b80ffff; valaddr_reg:x3; val_offset:19947*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19947*0 + 3*505*FLEN/8, x4, x1, x2)

inst_6650:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b81ffff; valaddr_reg:x3; val_offset:19950*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19950*0 + 3*506*FLEN/8, x4, x1, x2)

inst_6651:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b83ffff; valaddr_reg:x3; val_offset:19953*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19953*0 + 3*507*FLEN/8, x4, x1, x2)

inst_6652:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b87ffff; valaddr_reg:x3; val_offset:19956*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19956*0 + 3*508*FLEN/8, x4, x1, x2)

inst_6653:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b8fffff; valaddr_reg:x3; val_offset:19959*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19959*0 + 3*509*FLEN/8, x4, x1, x2)

inst_6654:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3b9fffff; valaddr_reg:x3; val_offset:19962*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19962*0 + 3*510*FLEN/8, x4, x1, x2)

inst_6655:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bbfffff; valaddr_reg:x3; val_offset:19965*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19965*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_6656:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bc00000; valaddr_reg:x3; val_offset:19968*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19968*0 + 3*512*FLEN/8, x4, x1, x2)

inst_6657:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3be00000; valaddr_reg:x3; val_offset:19971*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19971*0 + 3*513*FLEN/8, x4, x1, x2)

inst_6658:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bf00000; valaddr_reg:x3; val_offset:19974*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19974*0 + 3*514*FLEN/8, x4, x1, x2)

inst_6659:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bf80000; valaddr_reg:x3; val_offset:19977*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19977*0 + 3*515*FLEN/8, x4, x1, x2)

inst_6660:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfc0000; valaddr_reg:x3; val_offset:19980*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19980*0 + 3*516*FLEN/8, x4, x1, x2)

inst_6661:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfe0000; valaddr_reg:x3; val_offset:19983*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19983*0 + 3*517*FLEN/8, x4, x1, x2)

inst_6662:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bff0000; valaddr_reg:x3; val_offset:19986*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19986*0 + 3*518*FLEN/8, x4, x1, x2)

inst_6663:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bff8000; valaddr_reg:x3; val_offset:19989*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19989*0 + 3*519*FLEN/8, x4, x1, x2)

inst_6664:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bffc000; valaddr_reg:x3; val_offset:19992*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19992*0 + 3*520*FLEN/8, x4, x1, x2)

inst_6665:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bffe000; valaddr_reg:x3; val_offset:19995*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19995*0 + 3*521*FLEN/8, x4, x1, x2)

inst_6666:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfff000; valaddr_reg:x3; val_offset:19998*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 19998*0 + 3*522*FLEN/8, x4, x1, x2)

inst_6667:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfff800; valaddr_reg:x3; val_offset:20001*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20001*0 + 3*523*FLEN/8, x4, x1, x2)

inst_6668:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfffc00; valaddr_reg:x3; val_offset:20004*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20004*0 + 3*524*FLEN/8, x4, x1, x2)

inst_6669:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfffe00; valaddr_reg:x3; val_offset:20007*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20007*0 + 3*525*FLEN/8, x4, x1, x2)

inst_6670:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bffff00; valaddr_reg:x3; val_offset:20010*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20010*0 + 3*526*FLEN/8, x4, x1, x2)

inst_6671:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bffff80; valaddr_reg:x3; val_offset:20013*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20013*0 + 3*527*FLEN/8, x4, x1, x2)

inst_6672:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bffffc0; valaddr_reg:x3; val_offset:20016*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20016*0 + 3*528*FLEN/8, x4, x1, x2)

inst_6673:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bffffe0; valaddr_reg:x3; val_offset:20019*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20019*0 + 3*529*FLEN/8, x4, x1, x2)

inst_6674:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfffff0; valaddr_reg:x3; val_offset:20022*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20022*0 + 3*530*FLEN/8, x4, x1, x2)

inst_6675:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfffff8; valaddr_reg:x3; val_offset:20025*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20025*0 + 3*531*FLEN/8, x4, x1, x2)

inst_6676:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfffffc; valaddr_reg:x3; val_offset:20028*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20028*0 + 3*532*FLEN/8, x4, x1, x2)

inst_6677:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bfffffe; valaddr_reg:x3; val_offset:20031*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20031*0 + 3*533*FLEN/8, x4, x1, x2)

inst_6678:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3bffffff; valaddr_reg:x3; val_offset:20034*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20034*0 + 3*534*FLEN/8, x4, x1, x2)

inst_6679:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3f800001; valaddr_reg:x3; val_offset:20037*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20037*0 + 3*535*FLEN/8, x4, x1, x2)

inst_6680:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3f800003; valaddr_reg:x3; val_offset:20040*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20040*0 + 3*536*FLEN/8, x4, x1, x2)

inst_6681:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3f800007; valaddr_reg:x3; val_offset:20043*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20043*0 + 3*537*FLEN/8, x4, x1, x2)

inst_6682:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3f999999; valaddr_reg:x3; val_offset:20046*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20046*0 + 3*538*FLEN/8, x4, x1, x2)

inst_6683:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:20049*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20049*0 + 3*539*FLEN/8, x4, x1, x2)

inst_6684:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:20052*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20052*0 + 3*540*FLEN/8, x4, x1, x2)

inst_6685:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:20055*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20055*0 + 3*541*FLEN/8, x4, x1, x2)

inst_6686:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:20058*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20058*0 + 3*542*FLEN/8, x4, x1, x2)

inst_6687:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:20061*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20061*0 + 3*543*FLEN/8, x4, x1, x2)

inst_6688:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:20064*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20064*0 + 3*544*FLEN/8, x4, x1, x2)

inst_6689:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:20067*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20067*0 + 3*545*FLEN/8, x4, x1, x2)

inst_6690:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:20070*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20070*0 + 3*546*FLEN/8, x4, x1, x2)

inst_6691:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:20073*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20073*0 + 3*547*FLEN/8, x4, x1, x2)

inst_6692:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:20076*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20076*0 + 3*548*FLEN/8, x4, x1, x2)

inst_6693:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:20079*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20079*0 + 3*549*FLEN/8, x4, x1, x2)

inst_6694:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bb52d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0506 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7debb52d; op2val:0x10b0506;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:20082*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20082*0 + 3*550*FLEN/8, x4, x1, x2)

inst_6695:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:20085*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20085*0 + 3*551*FLEN/8, x4, x1, x2)

inst_6696:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:20088*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20088*0 + 3*552*FLEN/8, x4, x1, x2)

inst_6697:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:20091*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20091*0 + 3*553*FLEN/8, x4, x1, x2)

inst_6698:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:20094*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20094*0 + 3*554*FLEN/8, x4, x1, x2)

inst_6699:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:20097*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20097*0 + 3*555*FLEN/8, x4, x1, x2)

inst_6700:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:20100*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20100*0 + 3*556*FLEN/8, x4, x1, x2)

inst_6701:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:20103*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20103*0 + 3*557*FLEN/8, x4, x1, x2)

inst_6702:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:20106*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20106*0 + 3*558*FLEN/8, x4, x1, x2)

inst_6703:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:20109*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20109*0 + 3*559*FLEN/8, x4, x1, x2)

inst_6704:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:20112*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20112*0 + 3*560*FLEN/8, x4, x1, x2)

inst_6705:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:20115*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20115*0 + 3*561*FLEN/8, x4, x1, x2)

inst_6706:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:20118*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20118*0 + 3*562*FLEN/8, x4, x1, x2)

inst_6707:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:20121*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20121*0 + 3*563*FLEN/8, x4, x1, x2)

inst_6708:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:20124*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20124*0 + 3*564*FLEN/8, x4, x1, x2)

inst_6709:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:20127*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20127*0 + 3*565*FLEN/8, x4, x1, x2)

inst_6710:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:20130*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20130*0 + 3*566*FLEN/8, x4, x1, x2)

inst_6711:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb000000; valaddr_reg:x3; val_offset:20133*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20133*0 + 3*567*FLEN/8, x4, x1, x2)

inst_6712:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb000001; valaddr_reg:x3; val_offset:20136*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20136*0 + 3*568*FLEN/8, x4, x1, x2)

inst_6713:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb000003; valaddr_reg:x3; val_offset:20139*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20139*0 + 3*569*FLEN/8, x4, x1, x2)

inst_6714:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb000007; valaddr_reg:x3; val_offset:20142*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20142*0 + 3*570*FLEN/8, x4, x1, x2)

inst_6715:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb00000f; valaddr_reg:x3; val_offset:20145*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20145*0 + 3*571*FLEN/8, x4, x1, x2)

inst_6716:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb00001f; valaddr_reg:x3; val_offset:20148*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20148*0 + 3*572*FLEN/8, x4, x1, x2)

inst_6717:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb00003f; valaddr_reg:x3; val_offset:20151*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20151*0 + 3*573*FLEN/8, x4, x1, x2)

inst_6718:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb00007f; valaddr_reg:x3; val_offset:20154*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20154*0 + 3*574*FLEN/8, x4, x1, x2)

inst_6719:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb0000ff; valaddr_reg:x3; val_offset:20157*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20157*0 + 3*575*FLEN/8, x4, x1, x2)

inst_6720:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb0001ff; valaddr_reg:x3; val_offset:20160*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20160*0 + 3*576*FLEN/8, x4, x1, x2)

inst_6721:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb0003ff; valaddr_reg:x3; val_offset:20163*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20163*0 + 3*577*FLEN/8, x4, x1, x2)

inst_6722:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb0007ff; valaddr_reg:x3; val_offset:20166*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20166*0 + 3*578*FLEN/8, x4, x1, x2)

inst_6723:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb000fff; valaddr_reg:x3; val_offset:20169*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20169*0 + 3*579*FLEN/8, x4, x1, x2)

inst_6724:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb001fff; valaddr_reg:x3; val_offset:20172*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20172*0 + 3*580*FLEN/8, x4, x1, x2)

inst_6725:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb003fff; valaddr_reg:x3; val_offset:20175*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20175*0 + 3*581*FLEN/8, x4, x1, x2)

inst_6726:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb007fff; valaddr_reg:x3; val_offset:20178*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20178*0 + 3*582*FLEN/8, x4, x1, x2)

inst_6727:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb00ffff; valaddr_reg:x3; val_offset:20181*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20181*0 + 3*583*FLEN/8, x4, x1, x2)

inst_6728:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb01ffff; valaddr_reg:x3; val_offset:20184*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20184*0 + 3*584*FLEN/8, x4, x1, x2)

inst_6729:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb03ffff; valaddr_reg:x3; val_offset:20187*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20187*0 + 3*585*FLEN/8, x4, x1, x2)

inst_6730:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb07ffff; valaddr_reg:x3; val_offset:20190*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20190*0 + 3*586*FLEN/8, x4, x1, x2)

inst_6731:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb0fffff; valaddr_reg:x3; val_offset:20193*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20193*0 + 3*587*FLEN/8, x4, x1, x2)

inst_6732:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb1fffff; valaddr_reg:x3; val_offset:20196*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20196*0 + 3*588*FLEN/8, x4, x1, x2)

inst_6733:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb3fffff; valaddr_reg:x3; val_offset:20199*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20199*0 + 3*589*FLEN/8, x4, x1, x2)

inst_6734:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb400000; valaddr_reg:x3; val_offset:20202*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20202*0 + 3*590*FLEN/8, x4, x1, x2)

inst_6735:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb600000; valaddr_reg:x3; val_offset:20205*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20205*0 + 3*591*FLEN/8, x4, x1, x2)

inst_6736:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb700000; valaddr_reg:x3; val_offset:20208*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20208*0 + 3*592*FLEN/8, x4, x1, x2)

inst_6737:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb780000; valaddr_reg:x3; val_offset:20211*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20211*0 + 3*593*FLEN/8, x4, x1, x2)

inst_6738:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7c0000; valaddr_reg:x3; val_offset:20214*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20214*0 + 3*594*FLEN/8, x4, x1, x2)

inst_6739:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7e0000; valaddr_reg:x3; val_offset:20217*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20217*0 + 3*595*FLEN/8, x4, x1, x2)

inst_6740:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7f0000; valaddr_reg:x3; val_offset:20220*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20220*0 + 3*596*FLEN/8, x4, x1, x2)

inst_6741:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7f8000; valaddr_reg:x3; val_offset:20223*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20223*0 + 3*597*FLEN/8, x4, x1, x2)

inst_6742:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7fc000; valaddr_reg:x3; val_offset:20226*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20226*0 + 3*598*FLEN/8, x4, x1, x2)

inst_6743:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7fe000; valaddr_reg:x3; val_offset:20229*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20229*0 + 3*599*FLEN/8, x4, x1, x2)

inst_6744:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7ff000; valaddr_reg:x3; val_offset:20232*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20232*0 + 3*600*FLEN/8, x4, x1, x2)

inst_6745:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7ff800; valaddr_reg:x3; val_offset:20235*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20235*0 + 3*601*FLEN/8, x4, x1, x2)

inst_6746:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7ffc00; valaddr_reg:x3; val_offset:20238*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20238*0 + 3*602*FLEN/8, x4, x1, x2)

inst_6747:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7ffe00; valaddr_reg:x3; val_offset:20241*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20241*0 + 3*603*FLEN/8, x4, x1, x2)

inst_6748:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7fff00; valaddr_reg:x3; val_offset:20244*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20244*0 + 3*604*FLEN/8, x4, x1, x2)

inst_6749:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7fff80; valaddr_reg:x3; val_offset:20247*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20247*0 + 3*605*FLEN/8, x4, x1, x2)

inst_6750:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7fffc0; valaddr_reg:x3; val_offset:20250*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20250*0 + 3*606*FLEN/8, x4, x1, x2)

inst_6751:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7fffe0; valaddr_reg:x3; val_offset:20253*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20253*0 + 3*607*FLEN/8, x4, x1, x2)

inst_6752:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7ffff0; valaddr_reg:x3; val_offset:20256*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20256*0 + 3*608*FLEN/8, x4, x1, x2)

inst_6753:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7ffff8; valaddr_reg:x3; val_offset:20259*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20259*0 + 3*609*FLEN/8, x4, x1, x2)

inst_6754:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7ffffc; valaddr_reg:x3; val_offset:20262*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20262*0 + 3*610*FLEN/8, x4, x1, x2)

inst_6755:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7ffffe; valaddr_reg:x3; val_offset:20265*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20265*0 + 3*611*FLEN/8, x4, x1, x2)

inst_6756:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f61f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7def61f7; op2val:0x0;
op3val:0xb7fffff; valaddr_reg:x3; val_offset:20268*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20268*0 + 3*612*FLEN/8, x4, x1, x2)

inst_6757:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbf800001; valaddr_reg:x3; val_offset:20271*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20271*0 + 3*613*FLEN/8, x4, x1, x2)

inst_6758:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbf800003; valaddr_reg:x3; val_offset:20274*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20274*0 + 3*614*FLEN/8, x4, x1, x2)

inst_6759:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbf800007; valaddr_reg:x3; val_offset:20277*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20277*0 + 3*615*FLEN/8, x4, x1, x2)

inst_6760:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbf999999; valaddr_reg:x3; val_offset:20280*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20280*0 + 3*616*FLEN/8, x4, x1, x2)

inst_6761:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:20283*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20283*0 + 3*617*FLEN/8, x4, x1, x2)

inst_6762:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:20286*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20286*0 + 3*618*FLEN/8, x4, x1, x2)

inst_6763:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:20289*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20289*0 + 3*619*FLEN/8, x4, x1, x2)

inst_6764:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:20292*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20292*0 + 3*620*FLEN/8, x4, x1, x2)

inst_6765:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:20295*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20295*0 + 3*621*FLEN/8, x4, x1, x2)

inst_6766:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:20298*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20298*0 + 3*622*FLEN/8, x4, x1, x2)

inst_6767:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:20301*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20301*0 + 3*623*FLEN/8, x4, x1, x2)

inst_6768:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:20304*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20304*0 + 3*624*FLEN/8, x4, x1, x2)

inst_6769:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:20307*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20307*0 + 3*625*FLEN/8, x4, x1, x2)

inst_6770:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:20310*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20310*0 + 3*626*FLEN/8, x4, x1, x2)

inst_6771:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:20313*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20313*0 + 3*627*FLEN/8, x4, x1, x2)

inst_6772:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:20316*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20316*0 + 3*628*FLEN/8, x4, x1, x2)

inst_6773:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5000000; valaddr_reg:x3; val_offset:20319*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20319*0 + 3*629*FLEN/8, x4, x1, x2)

inst_6774:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5000001; valaddr_reg:x3; val_offset:20322*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20322*0 + 3*630*FLEN/8, x4, x1, x2)

inst_6775:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5000003; valaddr_reg:x3; val_offset:20325*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20325*0 + 3*631*FLEN/8, x4, x1, x2)

inst_6776:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5000007; valaddr_reg:x3; val_offset:20328*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20328*0 + 3*632*FLEN/8, x4, x1, x2)

inst_6777:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc500000f; valaddr_reg:x3; val_offset:20331*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20331*0 + 3*633*FLEN/8, x4, x1, x2)

inst_6778:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc500001f; valaddr_reg:x3; val_offset:20334*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20334*0 + 3*634*FLEN/8, x4, x1, x2)

inst_6779:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc500003f; valaddr_reg:x3; val_offset:20337*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20337*0 + 3*635*FLEN/8, x4, x1, x2)

inst_6780:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc500007f; valaddr_reg:x3; val_offset:20340*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20340*0 + 3*636*FLEN/8, x4, x1, x2)

inst_6781:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc50000ff; valaddr_reg:x3; val_offset:20343*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20343*0 + 3*637*FLEN/8, x4, x1, x2)

inst_6782:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc50001ff; valaddr_reg:x3; val_offset:20346*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20346*0 + 3*638*FLEN/8, x4, x1, x2)

inst_6783:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc50003ff; valaddr_reg:x3; val_offset:20349*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20349*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_6784:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc50007ff; valaddr_reg:x3; val_offset:20352*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20352*0 + 3*640*FLEN/8, x4, x1, x2)

inst_6785:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5000fff; valaddr_reg:x3; val_offset:20355*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20355*0 + 3*641*FLEN/8, x4, x1, x2)

inst_6786:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5001fff; valaddr_reg:x3; val_offset:20358*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20358*0 + 3*642*FLEN/8, x4, x1, x2)

inst_6787:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5003fff; valaddr_reg:x3; val_offset:20361*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20361*0 + 3*643*FLEN/8, x4, x1, x2)

inst_6788:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5007fff; valaddr_reg:x3; val_offset:20364*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20364*0 + 3*644*FLEN/8, x4, x1, x2)

inst_6789:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc500ffff; valaddr_reg:x3; val_offset:20367*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20367*0 + 3*645*FLEN/8, x4, x1, x2)

inst_6790:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc501ffff; valaddr_reg:x3; val_offset:20370*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20370*0 + 3*646*FLEN/8, x4, x1, x2)

inst_6791:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc503ffff; valaddr_reg:x3; val_offset:20373*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20373*0 + 3*647*FLEN/8, x4, x1, x2)

inst_6792:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc507ffff; valaddr_reg:x3; val_offset:20376*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20376*0 + 3*648*FLEN/8, x4, x1, x2)

inst_6793:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc50fffff; valaddr_reg:x3; val_offset:20379*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20379*0 + 3*649*FLEN/8, x4, x1, x2)

inst_6794:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc51fffff; valaddr_reg:x3; val_offset:20382*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20382*0 + 3*650*FLEN/8, x4, x1, x2)

inst_6795:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc53fffff; valaddr_reg:x3; val_offset:20385*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20385*0 + 3*651*FLEN/8, x4, x1, x2)

inst_6796:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5400000; valaddr_reg:x3; val_offset:20388*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20388*0 + 3*652*FLEN/8, x4, x1, x2)

inst_6797:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5600000; valaddr_reg:x3; val_offset:20391*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20391*0 + 3*653*FLEN/8, x4, x1, x2)

inst_6798:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5700000; valaddr_reg:x3; val_offset:20394*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20394*0 + 3*654*FLEN/8, x4, x1, x2)

inst_6799:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc5780000; valaddr_reg:x3; val_offset:20397*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20397*0 + 3*655*FLEN/8, x4, x1, x2)

inst_6800:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57c0000; valaddr_reg:x3; val_offset:20400*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20400*0 + 3*656*FLEN/8, x4, x1, x2)

inst_6801:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57e0000; valaddr_reg:x3; val_offset:20403*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20403*0 + 3*657*FLEN/8, x4, x1, x2)

inst_6802:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57f0000; valaddr_reg:x3; val_offset:20406*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20406*0 + 3*658*FLEN/8, x4, x1, x2)

inst_6803:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57f8000; valaddr_reg:x3; val_offset:20409*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20409*0 + 3*659*FLEN/8, x4, x1, x2)

inst_6804:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fc000; valaddr_reg:x3; val_offset:20412*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20412*0 + 3*660*FLEN/8, x4, x1, x2)

inst_6805:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fe000; valaddr_reg:x3; val_offset:20415*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20415*0 + 3*661*FLEN/8, x4, x1, x2)

inst_6806:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ff000; valaddr_reg:x3; val_offset:20418*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20418*0 + 3*662*FLEN/8, x4, x1, x2)

inst_6807:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ff800; valaddr_reg:x3; val_offset:20421*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20421*0 + 3*663*FLEN/8, x4, x1, x2)

inst_6808:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffc00; valaddr_reg:x3; val_offset:20424*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20424*0 + 3*664*FLEN/8, x4, x1, x2)

inst_6809:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffe00; valaddr_reg:x3; val_offset:20427*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20427*0 + 3*665*FLEN/8, x4, x1, x2)

inst_6810:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fff00; valaddr_reg:x3; val_offset:20430*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20430*0 + 3*666*FLEN/8, x4, x1, x2)

inst_6811:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fff80; valaddr_reg:x3; val_offset:20433*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20433*0 + 3*667*FLEN/8, x4, x1, x2)

inst_6812:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fffc0; valaddr_reg:x3; val_offset:20436*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20436*0 + 3*668*FLEN/8, x4, x1, x2)

inst_6813:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fffe0; valaddr_reg:x3; val_offset:20439*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20439*0 + 3*669*FLEN/8, x4, x1, x2)

inst_6814:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffff0; valaddr_reg:x3; val_offset:20442*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20442*0 + 3*670*FLEN/8, x4, x1, x2)

inst_6815:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffff8; valaddr_reg:x3; val_offset:20445*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20445*0 + 3*671*FLEN/8, x4, x1, x2)

inst_6816:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffffc; valaddr_reg:x3; val_offset:20448*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20448*0 + 3*672*FLEN/8, x4, x1, x2)

inst_6817:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57ffffe; valaddr_reg:x3; val_offset:20451*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20451*0 + 3*673*FLEN/8, x4, x1, x2)

inst_6818:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x703aca and fs2 == 1 and fe2 == 0x02 and fm2 == 0x08671e and fs3 == 1 and fe3 == 0x8a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df03aca; op2val:0x8108671e;
op3val:0xc57fffff; valaddr_reg:x3; val_offset:20454*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20454*0 + 3*674*FLEN/8, x4, x1, x2)

inst_6819:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800000; valaddr_reg:x3; val_offset:20457*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20457*0 + 3*675*FLEN/8, x4, x1, x2)

inst_6820:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800001; valaddr_reg:x3; val_offset:20460*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20460*0 + 3*676*FLEN/8, x4, x1, x2)

inst_6821:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800003; valaddr_reg:x3; val_offset:20463*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20463*0 + 3*677*FLEN/8, x4, x1, x2)

inst_6822:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800007; valaddr_reg:x3; val_offset:20466*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20466*0 + 3*678*FLEN/8, x4, x1, x2)

inst_6823:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680000f; valaddr_reg:x3; val_offset:20469*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20469*0 + 3*679*FLEN/8, x4, x1, x2)

inst_6824:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680001f; valaddr_reg:x3; val_offset:20472*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20472*0 + 3*680*FLEN/8, x4, x1, x2)

inst_6825:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680003f; valaddr_reg:x3; val_offset:20475*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20475*0 + 3*681*FLEN/8, x4, x1, x2)

inst_6826:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680007f; valaddr_reg:x3; val_offset:20478*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20478*0 + 3*682*FLEN/8, x4, x1, x2)

inst_6827:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68000ff; valaddr_reg:x3; val_offset:20481*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20481*0 + 3*683*FLEN/8, x4, x1, x2)

inst_6828:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68001ff; valaddr_reg:x3; val_offset:20484*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20484*0 + 3*684*FLEN/8, x4, x1, x2)

inst_6829:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68003ff; valaddr_reg:x3; val_offset:20487*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20487*0 + 3*685*FLEN/8, x4, x1, x2)

inst_6830:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68007ff; valaddr_reg:x3; val_offset:20490*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20490*0 + 3*686*FLEN/8, x4, x1, x2)

inst_6831:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6800fff; valaddr_reg:x3; val_offset:20493*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20493*0 + 3*687*FLEN/8, x4, x1, x2)

inst_6832:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6801fff; valaddr_reg:x3; val_offset:20496*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20496*0 + 3*688*FLEN/8, x4, x1, x2)

inst_6833:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6803fff; valaddr_reg:x3; val_offset:20499*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20499*0 + 3*689*FLEN/8, x4, x1, x2)

inst_6834:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6807fff; valaddr_reg:x3; val_offset:20502*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20502*0 + 3*690*FLEN/8, x4, x1, x2)

inst_6835:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf680ffff; valaddr_reg:x3; val_offset:20505*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20505*0 + 3*691*FLEN/8, x4, x1, x2)

inst_6836:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf681ffff; valaddr_reg:x3; val_offset:20508*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20508*0 + 3*692*FLEN/8, x4, x1, x2)

inst_6837:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf683ffff; valaddr_reg:x3; val_offset:20511*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20511*0 + 3*693*FLEN/8, x4, x1, x2)

inst_6838:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf687ffff; valaddr_reg:x3; val_offset:20514*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20514*0 + 3*694*FLEN/8, x4, x1, x2)

inst_6839:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf68fffff; valaddr_reg:x3; val_offset:20517*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20517*0 + 3*695*FLEN/8, x4, x1, x2)

inst_6840:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf69fffff; valaddr_reg:x3; val_offset:20520*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20520*0 + 3*696*FLEN/8, x4, x1, x2)

inst_6841:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6bfffff; valaddr_reg:x3; val_offset:20523*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20523*0 + 3*697*FLEN/8, x4, x1, x2)

inst_6842:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6c00000; valaddr_reg:x3; val_offset:20526*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20526*0 + 3*698*FLEN/8, x4, x1, x2)

inst_6843:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6e00000; valaddr_reg:x3; val_offset:20529*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20529*0 + 3*699*FLEN/8, x4, x1, x2)

inst_6844:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6f00000; valaddr_reg:x3; val_offset:20532*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20532*0 + 3*700*FLEN/8, x4, x1, x2)

inst_6845:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6f80000; valaddr_reg:x3; val_offset:20535*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20535*0 + 3*701*FLEN/8, x4, x1, x2)

inst_6846:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fc0000; valaddr_reg:x3; val_offset:20538*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20538*0 + 3*702*FLEN/8, x4, x1, x2)

inst_6847:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fe0000; valaddr_reg:x3; val_offset:20541*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20541*0 + 3*703*FLEN/8, x4, x1, x2)

inst_6848:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ff0000; valaddr_reg:x3; val_offset:20544*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20544*0 + 3*704*FLEN/8, x4, x1, x2)

inst_6849:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ff8000; valaddr_reg:x3; val_offset:20547*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20547*0 + 3*705*FLEN/8, x4, x1, x2)

inst_6850:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffc000; valaddr_reg:x3; val_offset:20550*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20550*0 + 3*706*FLEN/8, x4, x1, x2)

inst_6851:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffe000; valaddr_reg:x3; val_offset:20553*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20553*0 + 3*707*FLEN/8, x4, x1, x2)

inst_6852:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fff000; valaddr_reg:x3; val_offset:20556*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20556*0 + 3*708*FLEN/8, x4, x1, x2)

inst_6853:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fff800; valaddr_reg:x3; val_offset:20559*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20559*0 + 3*709*FLEN/8, x4, x1, x2)

inst_6854:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffc00; valaddr_reg:x3; val_offset:20562*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20562*0 + 3*710*FLEN/8, x4, x1, x2)

inst_6855:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffe00; valaddr_reg:x3; val_offset:20565*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20565*0 + 3*711*FLEN/8, x4, x1, x2)

inst_6856:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffff00; valaddr_reg:x3; val_offset:20568*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20568*0 + 3*712*FLEN/8, x4, x1, x2)

inst_6857:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffff80; valaddr_reg:x3; val_offset:20571*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20571*0 + 3*713*FLEN/8, x4, x1, x2)

inst_6858:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffffc0; valaddr_reg:x3; val_offset:20574*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20574*0 + 3*714*FLEN/8, x4, x1, x2)

inst_6859:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffffe0; valaddr_reg:x3; val_offset:20577*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20577*0 + 3*715*FLEN/8, x4, x1, x2)

inst_6860:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffff0; valaddr_reg:x3; val_offset:20580*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20580*0 + 3*716*FLEN/8, x4, x1, x2)

inst_6861:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffff8; valaddr_reg:x3; val_offset:20583*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20583*0 + 3*717*FLEN/8, x4, x1, x2)

inst_6862:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffffc; valaddr_reg:x3; val_offset:20586*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20586*0 + 3*718*FLEN/8, x4, x1, x2)

inst_6863:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6fffffe; valaddr_reg:x3; val_offset:20589*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20589*0 + 3*719*FLEN/8, x4, x1, x2)

inst_6864:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xf6ffffff; valaddr_reg:x3; val_offset:20592*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20592*0 + 3*720*FLEN/8, x4, x1, x2)

inst_6865:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff000001; valaddr_reg:x3; val_offset:20595*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20595*0 + 3*721*FLEN/8, x4, x1, x2)

inst_6866:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff000003; valaddr_reg:x3; val_offset:20598*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20598*0 + 3*722*FLEN/8, x4, x1, x2)

inst_6867:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff000007; valaddr_reg:x3; val_offset:20601*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20601*0 + 3*723*FLEN/8, x4, x1, x2)

inst_6868:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff199999; valaddr_reg:x3; val_offset:20604*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20604*0 + 3*724*FLEN/8, x4, x1, x2)

inst_6869:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff249249; valaddr_reg:x3; val_offset:20607*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20607*0 + 3*725*FLEN/8, x4, x1, x2)

inst_6870:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff333333; valaddr_reg:x3; val_offset:20610*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20610*0 + 3*726*FLEN/8, x4, x1, x2)

inst_6871:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:20613*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20613*0 + 3*727*FLEN/8, x4, x1, x2)

inst_6872:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:20616*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20616*0 + 3*728*FLEN/8, x4, x1, x2)

inst_6873:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff444444; valaddr_reg:x3; val_offset:20619*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20619*0 + 3*729*FLEN/8, x4, x1, x2)

inst_6874:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:20622*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20622*0 + 3*730*FLEN/8, x4, x1, x2)

inst_6875:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:20625*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20625*0 + 3*731*FLEN/8, x4, x1, x2)

inst_6876:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff666666; valaddr_reg:x3; val_offset:20628*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20628*0 + 3*732*FLEN/8, x4, x1, x2)

inst_6877:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:20631*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20631*0 + 3*733*FLEN/8, x4, x1, x2)

inst_6878:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:20634*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20634*0 + 3*734*FLEN/8, x4, x1, x2)

inst_6879:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:20637*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20637*0 + 3*735*FLEN/8, x4, x1, x2)

inst_6880:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71ffe2 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0767bb and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1ffe2; op2val:0xc10767bb;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:20640*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20640*0 + 3*736*FLEN/8, x4, x1, x2)

inst_6881:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:20643*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20643*0 + 3*737*FLEN/8, x4, x1, x2)

inst_6882:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:20646*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20646*0 + 3*738*FLEN/8, x4, x1, x2)

inst_6883:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:20649*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20649*0 + 3*739*FLEN/8, x4, x1, x2)

inst_6884:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:20652*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20652*0 + 3*740*FLEN/8, x4, x1, x2)

inst_6885:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:20655*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20655*0 + 3*741*FLEN/8, x4, x1, x2)

inst_6886:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:20658*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20658*0 + 3*742*FLEN/8, x4, x1, x2)

inst_6887:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:20661*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20661*0 + 3*743*FLEN/8, x4, x1, x2)

inst_6888:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:20664*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20664*0 + 3*744*FLEN/8, x4, x1, x2)

inst_6889:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:20667*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20667*0 + 3*745*FLEN/8, x4, x1, x2)

inst_6890:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:20670*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20670*0 + 3*746*FLEN/8, x4, x1, x2)

inst_6891:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:20673*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20673*0 + 3*747*FLEN/8, x4, x1, x2)

inst_6892:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:20676*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20676*0 + 3*748*FLEN/8, x4, x1, x2)

inst_6893:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:20679*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20679*0 + 3*749*FLEN/8, x4, x1, x2)

inst_6894:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:20682*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20682*0 + 3*750*FLEN/8, x4, x1, x2)

inst_6895:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:20685*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20685*0 + 3*751*FLEN/8, x4, x1, x2)

inst_6896:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:20688*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20688*0 + 3*752*FLEN/8, x4, x1, x2)

inst_6897:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000000; valaddr_reg:x3; val_offset:20691*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20691*0 + 3*753*FLEN/8, x4, x1, x2)

inst_6898:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000001; valaddr_reg:x3; val_offset:20694*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20694*0 + 3*754*FLEN/8, x4, x1, x2)

inst_6899:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000003; valaddr_reg:x3; val_offset:20697*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20697*0 + 3*755*FLEN/8, x4, x1, x2)

inst_6900:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000007; valaddr_reg:x3; val_offset:20700*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20700*0 + 3*756*FLEN/8, x4, x1, x2)

inst_6901:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x400000f; valaddr_reg:x3; val_offset:20703*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20703*0 + 3*757*FLEN/8, x4, x1, x2)

inst_6902:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x400001f; valaddr_reg:x3; val_offset:20706*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20706*0 + 3*758*FLEN/8, x4, x1, x2)

inst_6903:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x400003f; valaddr_reg:x3; val_offset:20709*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20709*0 + 3*759*FLEN/8, x4, x1, x2)

inst_6904:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x400007f; valaddr_reg:x3; val_offset:20712*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20712*0 + 3*760*FLEN/8, x4, x1, x2)

inst_6905:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x40000ff; valaddr_reg:x3; val_offset:20715*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20715*0 + 3*761*FLEN/8, x4, x1, x2)

inst_6906:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x40001ff; valaddr_reg:x3; val_offset:20718*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20718*0 + 3*762*FLEN/8, x4, x1, x2)

inst_6907:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x40003ff; valaddr_reg:x3; val_offset:20721*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20721*0 + 3*763*FLEN/8, x4, x1, x2)

inst_6908:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x40007ff; valaddr_reg:x3; val_offset:20724*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20724*0 + 3*764*FLEN/8, x4, x1, x2)

inst_6909:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4000fff; valaddr_reg:x3; val_offset:20727*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20727*0 + 3*765*FLEN/8, x4, x1, x2)

inst_6910:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4001fff; valaddr_reg:x3; val_offset:20730*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20730*0 + 3*766*FLEN/8, x4, x1, x2)

inst_6911:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df346ad; op2val:0x0;
op3val:0x4003fff; valaddr_reg:x3; val_offset:20733*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20733*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644416,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644417,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644419,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644423,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644431,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644447,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644479,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644543,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644671,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644927,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323645439,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323646463,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323648511,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323652607,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323660799,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323677183,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323709951,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323775487,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323906559,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2324168703,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2324692991,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2325741567,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2327838719,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2327838720,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2329935872,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2330984448,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331508736,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331770880,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331901952,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331967488,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332000256,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332016640,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332024832,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332028928,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332030976,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032000,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032512,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032768,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032896,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032960,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032992,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033008,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033016,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033020,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033022,32,FLEN)
NAN_BOXED(2111382513,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033023,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225472,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225473,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225475,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225479,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225487,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225503,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225535,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225599,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225727,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221225983,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221226495,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221227519,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221229567,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221233663,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221241855,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221258239,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221291007,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221356543,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221487615,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3221749759,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3222274047,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3223322623,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3225419775,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3225419776,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3227516928,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3228565504,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229089792,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229351936,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229483008,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229548544,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229581312,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229597696,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229605888,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229609984,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229612032,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229613056,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229613568,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229613824,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229613952,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229614016,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229614048,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229614064,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229614072,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229614076,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229614078,32,FLEN)
NAN_BOXED(2111392482,32,FLEN)
NAN_BOXED(2165755171,32,FLEN)
NAN_BOXED(3229614079,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039424,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039425,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039427,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039431,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039439,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039455,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039487,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039551,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039679,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800039935,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800040447,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800041471,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800043519,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800047615,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800055807,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800072191,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800104959,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800170495,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800301567,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3800563711,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3801087999,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3802136575,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3804233727,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3804233728,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3806330880,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3807379456,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3807903744,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808165888,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808296960,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808362496,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808395264,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808411648,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808419840,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808423936,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808425984,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427008,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427520,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427776,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427904,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808427968,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428000,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428016,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428024,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428028,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428030,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(3808428031,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2111619646,32,FLEN)
NAN_BOXED(3239341818,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531840,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531841,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531843,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531847,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531855,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531871,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531903,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026531967,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026532095,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026532351,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026532863,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026533887,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026535935,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026540031,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026548223,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026564607,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026597375,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026662911,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4026793983,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4027056127,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4027580415,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4028628991,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4030726143,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4030726144,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4032823296,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4033871872,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034396160,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034658304,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034789376,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034854912,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034887680,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034904064,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034912256,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034916352,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034918400,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034919424,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034919936,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920192,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920320,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920384,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920416,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920432,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920440,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920444,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920446,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4034920447,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2111694487,32,FLEN)
NAN_BOXED(3239291755,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829120,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829121,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829123,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829127,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829135,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829151,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829183,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829247,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829375,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829631,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125830143,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125831167,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125833215,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125837311,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125845503,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125861887,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125894655,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125960191,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126091263,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126353407,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126877695,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(127926271,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023423,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023424,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(132120576,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133169152,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133693440,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133955584,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134086656,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134152192,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134184960,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134201344,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134209536,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134213632,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134215680,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134216704,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217216,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217472,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217600,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217664,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217696,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217712,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217720,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217724,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217726,32,FLEN)
NAN_BOXED(2111724523,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217727,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048192,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048193,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048195,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048199,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048207,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048223,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048255,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048319,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048447,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879048703,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879049215,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879050239,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879052287,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879056383,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879064575,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879080959,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879113727,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879179263,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879310335,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1879572479,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1880096767,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1881145343,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1883242495,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1883242496,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1885339648,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1886388224,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1886912512,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887174656,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887305728,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887371264,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887404032,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887420416,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887428608,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887432704,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887434752,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887435776,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436288,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436544,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436672,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436736,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436768,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436784,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436792,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436796,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436798,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(1887436799,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2111935432,32,FLEN)
NAN_BOXED(1091650377,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400064,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400065,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400067,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400071,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400079,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400095,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400127,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400191,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400319,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325400575,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325401087,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325402111,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325404159,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325408255,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325416447,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325432831,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325465599,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325531135,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325662207,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1325924351,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1326448639,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1327497215,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1329594367,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1329594368,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1331691520,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1332740096,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333264384,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333526528,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333657600,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333723136,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333755904,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333772288,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333780480,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333784576,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333786624,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333787648,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788160,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788416,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788544,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788608,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788640,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788656,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788664,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788668,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788670,32,FLEN)
NAN_BOXED(2112363778,32,FLEN)
NAN_BOXED(17640484,32,FLEN)
NAN_BOXED(1333788671,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096384,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096385,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096387,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096391,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096399,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096415,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096447,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096511,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096639,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758096895,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758097407,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758098431,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758100479,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758104575,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758112767,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758129151,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758161919,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758227455,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758358527,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3758620671,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3759144959,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3760193535,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3762290687,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3762290688,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3764387840,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3765436416,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3765960704,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766222848,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766353920,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766419456,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766452224,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766468608,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766476800,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766480896,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766482944,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766483968,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484480,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484736,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484864,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484928,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484960,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484976,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484984,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484988,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484990,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(3766484991,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2112391302,32,FLEN)
NAN_BOXED(3238849245,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244352,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244353,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244355,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244359,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244367,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244383,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244415,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244479,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244607,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998244863,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998245375,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998246399,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998248447,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998252543,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998260735,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998277119,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998309887,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998375423,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998506495,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(998768639,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(999292927,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1000341503,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1002438655,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1002438656,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1004535808,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1005584384,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006108672,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006370816,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006501888,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006567424,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006600192,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006616576,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006624768,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006628864,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006630912,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006631936,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632448,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632704,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632832,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632896,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632928,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632944,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632952,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632956,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632958,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1006632959,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2112599341,32,FLEN)
NAN_BOXED(17499398,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549376,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549377,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549379,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549383,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549391,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549407,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549439,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549503,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549631,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184549887,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184550399,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184551423,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184553471,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184557567,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184565759,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184582143,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184614911,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184680447,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(184811519,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(185073663,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(185597951,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(186646527,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(188743679,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(188743680,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(190840832,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(191889408,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192413696,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192675840,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192806912,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192872448,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192905216,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192921600,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192929792,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192933888,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192935936,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192936960,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937472,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937728,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937856,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937920,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937952,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937968,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937976,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937980,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937982,32,FLEN)
NAN_BOXED(2112840183,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937983,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305111552,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305111553,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305111555,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305111559,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305111567,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305111583,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305111615,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305111679,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305111807,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305112063,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305112575,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305113599,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305115647,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305119743,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305127935,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305144319,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305177087,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305242623,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305373695,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3305635839,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3306160127,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3307208703,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3309305855,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3309305856,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3311403008,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3312451584,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3312975872,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313238016,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313369088,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313434624,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313467392,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313483776,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313491968,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313496064,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313498112,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313499136,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313499648,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313499904,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500032,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500096,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500128,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500144,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500152,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500156,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500158,32,FLEN)
NAN_BOXED(2112895690,32,FLEN)
NAN_BOXED(2164811550,32,FLEN)
NAN_BOXED(3313500159,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583744,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583745,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583747,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583751,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583759,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583775,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583807,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583871,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135583999,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135584255,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135584767,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135585791,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135587839,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135591935,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135600127,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135616511,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135649279,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135714815,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4135845887,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4136108031,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4136632319,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4137680895,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4139778047,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4139778048,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4141875200,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4142923776,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143448064,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143710208,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143841280,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143906816,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143939584,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143955968,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143964160,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143968256,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143970304,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143971328,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143971840,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972096,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972224,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972288,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972320,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972336,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972344,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972348,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972350,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4143972351,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2113011682,32,FLEN)
NAN_BOXED(3238487995,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108864,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108865,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108867,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108871,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108879,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108895,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108927,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108991,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109119,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109375,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109887,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67110911,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67112959,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67117055,32,FLEN)
NAN_BOXED(2113095341,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67125247,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
