
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_10752:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377fffc0; valaddr_reg:x3; val_offset:32256*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32256*0 + 3*0*FLEN/8, x4, x1, x2)

inst_10753:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377fffe0; valaddr_reg:x3; val_offset:32259*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32259*0 + 3*1*FLEN/8, x4, x1, x2)

inst_10754:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377ffff0; valaddr_reg:x3; val_offset:32262*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32262*0 + 3*2*FLEN/8, x4, x1, x2)

inst_10755:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377ffff8; valaddr_reg:x3; val_offset:32265*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32265*0 + 3*3*FLEN/8, x4, x1, x2)

inst_10756:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377ffffc; valaddr_reg:x3; val_offset:32268*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32268*0 + 3*4*FLEN/8, x4, x1, x2)

inst_10757:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377ffffe; valaddr_reg:x3; val_offset:32271*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32271*0 + 3*5*FLEN/8, x4, x1, x2)

inst_10758:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x377fffff; valaddr_reg:x3; val_offset:32274*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32274*0 + 3*6*FLEN/8, x4, x1, x2)

inst_10759:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3f800001; valaddr_reg:x3; val_offset:32277*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32277*0 + 3*7*FLEN/8, x4, x1, x2)

inst_10760:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3f800003; valaddr_reg:x3; val_offset:32280*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32280*0 + 3*8*FLEN/8, x4, x1, x2)

inst_10761:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3f800007; valaddr_reg:x3; val_offset:32283*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32283*0 + 3*9*FLEN/8, x4, x1, x2)

inst_10762:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3f999999; valaddr_reg:x3; val_offset:32286*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32286*0 + 3*10*FLEN/8, x4, x1, x2)

inst_10763:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:32289*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32289*0 + 3*11*FLEN/8, x4, x1, x2)

inst_10764:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:32292*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32292*0 + 3*12*FLEN/8, x4, x1, x2)

inst_10765:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:32295*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32295*0 + 3*13*FLEN/8, x4, x1, x2)

inst_10766:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:32298*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32298*0 + 3*14*FLEN/8, x4, x1, x2)

inst_10767:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:32301*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32301*0 + 3*15*FLEN/8, x4, x1, x2)

inst_10768:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:32304*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32304*0 + 3*16*FLEN/8, x4, x1, x2)

inst_10769:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:32307*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32307*0 + 3*17*FLEN/8, x4, x1, x2)

inst_10770:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:32310*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32310*0 + 3*18*FLEN/8, x4, x1, x2)

inst_10771:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:32313*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32313*0 + 3*19*FLEN/8, x4, x1, x2)

inst_10772:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:32316*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32316*0 + 3*20*FLEN/8, x4, x1, x2)

inst_10773:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:32319*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32319*0 + 3*21*FLEN/8, x4, x1, x2)

inst_10774:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bab1f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x152b96 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5bab1f; op2val:0x952b96;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:32322*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32322*0 + 3*22*FLEN/8, x4, x1, x2)

inst_10775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf000000; valaddr_reg:x3; val_offset:32325*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32325*0 + 3*23*FLEN/8, x4, x1, x2)

inst_10776:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf000001; valaddr_reg:x3; val_offset:32328*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32328*0 + 3*24*FLEN/8, x4, x1, x2)

inst_10777:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf000003; valaddr_reg:x3; val_offset:32331*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32331*0 + 3*25*FLEN/8, x4, x1, x2)

inst_10778:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf000007; valaddr_reg:x3; val_offset:32334*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32334*0 + 3*26*FLEN/8, x4, x1, x2)

inst_10779:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf00000f; valaddr_reg:x3; val_offset:32337*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32337*0 + 3*27*FLEN/8, x4, x1, x2)

inst_10780:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf00001f; valaddr_reg:x3; val_offset:32340*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32340*0 + 3*28*FLEN/8, x4, x1, x2)

inst_10781:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf00003f; valaddr_reg:x3; val_offset:32343*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32343*0 + 3*29*FLEN/8, x4, x1, x2)

inst_10782:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf00007f; valaddr_reg:x3; val_offset:32346*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32346*0 + 3*30*FLEN/8, x4, x1, x2)

inst_10783:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf0000ff; valaddr_reg:x3; val_offset:32349*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32349*0 + 3*31*FLEN/8, x4, x1, x2)

inst_10784:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf0001ff; valaddr_reg:x3; val_offset:32352*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32352*0 + 3*32*FLEN/8, x4, x1, x2)

inst_10785:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf0003ff; valaddr_reg:x3; val_offset:32355*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32355*0 + 3*33*FLEN/8, x4, x1, x2)

inst_10786:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf0007ff; valaddr_reg:x3; val_offset:32358*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32358*0 + 3*34*FLEN/8, x4, x1, x2)

inst_10787:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf000fff; valaddr_reg:x3; val_offset:32361*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32361*0 + 3*35*FLEN/8, x4, x1, x2)

inst_10788:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf001fff; valaddr_reg:x3; val_offset:32364*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32364*0 + 3*36*FLEN/8, x4, x1, x2)

inst_10789:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf003fff; valaddr_reg:x3; val_offset:32367*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32367*0 + 3*37*FLEN/8, x4, x1, x2)

inst_10790:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf007fff; valaddr_reg:x3; val_offset:32370*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32370*0 + 3*38*FLEN/8, x4, x1, x2)

inst_10791:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf00ffff; valaddr_reg:x3; val_offset:32373*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32373*0 + 3*39*FLEN/8, x4, x1, x2)

inst_10792:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf01ffff; valaddr_reg:x3; val_offset:32376*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32376*0 + 3*40*FLEN/8, x4, x1, x2)

inst_10793:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf03ffff; valaddr_reg:x3; val_offset:32379*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32379*0 + 3*41*FLEN/8, x4, x1, x2)

inst_10794:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf07ffff; valaddr_reg:x3; val_offset:32382*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32382*0 + 3*42*FLEN/8, x4, x1, x2)

inst_10795:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf0fffff; valaddr_reg:x3; val_offset:32385*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32385*0 + 3*43*FLEN/8, x4, x1, x2)

inst_10796:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf1fffff; valaddr_reg:x3; val_offset:32388*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32388*0 + 3*44*FLEN/8, x4, x1, x2)

inst_10797:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf3fffff; valaddr_reg:x3; val_offset:32391*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32391*0 + 3*45*FLEN/8, x4, x1, x2)

inst_10798:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf400000; valaddr_reg:x3; val_offset:32394*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32394*0 + 3*46*FLEN/8, x4, x1, x2)

inst_10799:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf600000; valaddr_reg:x3; val_offset:32397*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32397*0 + 3*47*FLEN/8, x4, x1, x2)

inst_10800:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf700000; valaddr_reg:x3; val_offset:32400*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32400*0 + 3*48*FLEN/8, x4, x1, x2)

inst_10801:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf780000; valaddr_reg:x3; val_offset:32403*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32403*0 + 3*49*FLEN/8, x4, x1, x2)

inst_10802:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7c0000; valaddr_reg:x3; val_offset:32406*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32406*0 + 3*50*FLEN/8, x4, x1, x2)

inst_10803:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7e0000; valaddr_reg:x3; val_offset:32409*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32409*0 + 3*51*FLEN/8, x4, x1, x2)

inst_10804:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7f0000; valaddr_reg:x3; val_offset:32412*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32412*0 + 3*52*FLEN/8, x4, x1, x2)

inst_10805:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7f8000; valaddr_reg:x3; val_offset:32415*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32415*0 + 3*53*FLEN/8, x4, x1, x2)

inst_10806:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7fc000; valaddr_reg:x3; val_offset:32418*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32418*0 + 3*54*FLEN/8, x4, x1, x2)

inst_10807:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7fe000; valaddr_reg:x3; val_offset:32421*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32421*0 + 3*55*FLEN/8, x4, x1, x2)

inst_10808:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7ff000; valaddr_reg:x3; val_offset:32424*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32424*0 + 3*56*FLEN/8, x4, x1, x2)

inst_10809:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7ff800; valaddr_reg:x3; val_offset:32427*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32427*0 + 3*57*FLEN/8, x4, x1, x2)

inst_10810:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7ffc00; valaddr_reg:x3; val_offset:32430*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32430*0 + 3*58*FLEN/8, x4, x1, x2)

inst_10811:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7ffe00; valaddr_reg:x3; val_offset:32433*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32433*0 + 3*59*FLEN/8, x4, x1, x2)

inst_10812:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7fff00; valaddr_reg:x3; val_offset:32436*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32436*0 + 3*60*FLEN/8, x4, x1, x2)

inst_10813:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7fff80; valaddr_reg:x3; val_offset:32439*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32439*0 + 3*61*FLEN/8, x4, x1, x2)

inst_10814:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7fffc0; valaddr_reg:x3; val_offset:32442*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32442*0 + 3*62*FLEN/8, x4, x1, x2)

inst_10815:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7fffe0; valaddr_reg:x3; val_offset:32445*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32445*0 + 3*63*FLEN/8, x4, x1, x2)

inst_10816:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7ffff0; valaddr_reg:x3; val_offset:32448*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32448*0 + 3*64*FLEN/8, x4, x1, x2)

inst_10817:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7ffff8; valaddr_reg:x3; val_offset:32451*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32451*0 + 3*65*FLEN/8, x4, x1, x2)

inst_10818:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7ffffc; valaddr_reg:x3; val_offset:32454*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32454*0 + 3*66*FLEN/8, x4, x1, x2)

inst_10819:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7ffffe; valaddr_reg:x3; val_offset:32457*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32457*0 + 3*67*FLEN/8, x4, x1, x2)

inst_10820:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf7fffff; valaddr_reg:x3; val_offset:32460*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32460*0 + 3*68*FLEN/8, x4, x1, x2)

inst_10821:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf800001; valaddr_reg:x3; val_offset:32463*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32463*0 + 3*69*FLEN/8, x4, x1, x2)

inst_10822:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf800003; valaddr_reg:x3; val_offset:32466*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32466*0 + 3*70*FLEN/8, x4, x1, x2)

inst_10823:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf800007; valaddr_reg:x3; val_offset:32469*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32469*0 + 3*71*FLEN/8, x4, x1, x2)

inst_10824:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbf999999; valaddr_reg:x3; val_offset:32472*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32472*0 + 3*72*FLEN/8, x4, x1, x2)

inst_10825:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:32475*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32475*0 + 3*73*FLEN/8, x4, x1, x2)

inst_10826:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:32478*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32478*0 + 3*74*FLEN/8, x4, x1, x2)

inst_10827:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:32481*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32481*0 + 3*75*FLEN/8, x4, x1, x2)

inst_10828:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:32484*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32484*0 + 3*76*FLEN/8, x4, x1, x2)

inst_10829:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:32487*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32487*0 + 3*77*FLEN/8, x4, x1, x2)

inst_10830:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:32490*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32490*0 + 3*78*FLEN/8, x4, x1, x2)

inst_10831:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:32493*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32493*0 + 3*79*FLEN/8, x4, x1, x2)

inst_10832:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:32496*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32496*0 + 3*80*FLEN/8, x4, x1, x2)

inst_10833:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:32499*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32499*0 + 3*81*FLEN/8, x4, x1, x2)

inst_10834:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:32502*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32502*0 + 3*82*FLEN/8, x4, x1, x2)

inst_10835:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:32505*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32505*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10836:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f4c55 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x12bed8 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e5f4c55; op2val:0x8092bed8;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:32508*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32508*0 + 3*84*FLEN/8, x4, x1, x2)

inst_10837:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:32511*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32511*0 + 3*85*FLEN/8, x4, x1, x2)

inst_10838:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:32514*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32514*0 + 3*86*FLEN/8, x4, x1, x2)

inst_10839:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:32517*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32517*0 + 3*87*FLEN/8, x4, x1, x2)

inst_10840:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:32520*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32520*0 + 3*88*FLEN/8, x4, x1, x2)

inst_10841:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:32523*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32523*0 + 3*89*FLEN/8, x4, x1, x2)

inst_10842:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:32526*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32526*0 + 3*90*FLEN/8, x4, x1, x2)

inst_10843:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:32529*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32529*0 + 3*91*FLEN/8, x4, x1, x2)

inst_10844:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:32532*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32532*0 + 3*92*FLEN/8, x4, x1, x2)

inst_10845:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:32535*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32535*0 + 3*93*FLEN/8, x4, x1, x2)

inst_10846:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:32538*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32538*0 + 3*94*FLEN/8, x4, x1, x2)

inst_10847:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:32541*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32541*0 + 3*95*FLEN/8, x4, x1, x2)

inst_10848:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:32544*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32544*0 + 3*96*FLEN/8, x4, x1, x2)

inst_10849:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:32547*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32547*0 + 3*97*FLEN/8, x4, x1, x2)

inst_10850:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:32550*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32550*0 + 3*98*FLEN/8, x4, x1, x2)

inst_10851:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:32553*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32553*0 + 3*99*FLEN/8, x4, x1, x2)

inst_10852:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:32556*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32556*0 + 3*100*FLEN/8, x4, x1, x2)

inst_10853:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f000000; valaddr_reg:x3; val_offset:32559*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32559*0 + 3*101*FLEN/8, x4, x1, x2)

inst_10854:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f000001; valaddr_reg:x3; val_offset:32562*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32562*0 + 3*102*FLEN/8, x4, x1, x2)

inst_10855:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f000003; valaddr_reg:x3; val_offset:32565*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32565*0 + 3*103*FLEN/8, x4, x1, x2)

inst_10856:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f000007; valaddr_reg:x3; val_offset:32568*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32568*0 + 3*104*FLEN/8, x4, x1, x2)

inst_10857:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f00000f; valaddr_reg:x3; val_offset:32571*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32571*0 + 3*105*FLEN/8, x4, x1, x2)

inst_10858:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f00001f; valaddr_reg:x3; val_offset:32574*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32574*0 + 3*106*FLEN/8, x4, x1, x2)

inst_10859:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f00003f; valaddr_reg:x3; val_offset:32577*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32577*0 + 3*107*FLEN/8, x4, x1, x2)

inst_10860:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f00007f; valaddr_reg:x3; val_offset:32580*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32580*0 + 3*108*FLEN/8, x4, x1, x2)

inst_10861:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f0000ff; valaddr_reg:x3; val_offset:32583*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32583*0 + 3*109*FLEN/8, x4, x1, x2)

inst_10862:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f0001ff; valaddr_reg:x3; val_offset:32586*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32586*0 + 3*110*FLEN/8, x4, x1, x2)

inst_10863:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f0003ff; valaddr_reg:x3; val_offset:32589*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32589*0 + 3*111*FLEN/8, x4, x1, x2)

inst_10864:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f0007ff; valaddr_reg:x3; val_offset:32592*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32592*0 + 3*112*FLEN/8, x4, x1, x2)

inst_10865:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f000fff; valaddr_reg:x3; val_offset:32595*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32595*0 + 3*113*FLEN/8, x4, x1, x2)

inst_10866:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f001fff; valaddr_reg:x3; val_offset:32598*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32598*0 + 3*114*FLEN/8, x4, x1, x2)

inst_10867:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f003fff; valaddr_reg:x3; val_offset:32601*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32601*0 + 3*115*FLEN/8, x4, x1, x2)

inst_10868:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f007fff; valaddr_reg:x3; val_offset:32604*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32604*0 + 3*116*FLEN/8, x4, x1, x2)

inst_10869:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f00ffff; valaddr_reg:x3; val_offset:32607*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32607*0 + 3*117*FLEN/8, x4, x1, x2)

inst_10870:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f01ffff; valaddr_reg:x3; val_offset:32610*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32610*0 + 3*118*FLEN/8, x4, x1, x2)

inst_10871:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f03ffff; valaddr_reg:x3; val_offset:32613*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32613*0 + 3*119*FLEN/8, x4, x1, x2)

inst_10872:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f07ffff; valaddr_reg:x3; val_offset:32616*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32616*0 + 3*120*FLEN/8, x4, x1, x2)

inst_10873:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f0fffff; valaddr_reg:x3; val_offset:32619*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32619*0 + 3*121*FLEN/8, x4, x1, x2)

inst_10874:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f1fffff; valaddr_reg:x3; val_offset:32622*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32622*0 + 3*122*FLEN/8, x4, x1, x2)

inst_10875:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f3fffff; valaddr_reg:x3; val_offset:32625*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32625*0 + 3*123*FLEN/8, x4, x1, x2)

inst_10876:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f400000; valaddr_reg:x3; val_offset:32628*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32628*0 + 3*124*FLEN/8, x4, x1, x2)

inst_10877:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f600000; valaddr_reg:x3; val_offset:32631*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32631*0 + 3*125*FLEN/8, x4, x1, x2)

inst_10878:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f700000; valaddr_reg:x3; val_offset:32634*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32634*0 + 3*126*FLEN/8, x4, x1, x2)

inst_10879:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f780000; valaddr_reg:x3; val_offset:32637*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32637*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_10880:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7c0000; valaddr_reg:x3; val_offset:32640*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32640*0 + 3*128*FLEN/8, x4, x1, x2)

inst_10881:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7e0000; valaddr_reg:x3; val_offset:32643*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32643*0 + 3*129*FLEN/8, x4, x1, x2)

inst_10882:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7f0000; valaddr_reg:x3; val_offset:32646*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32646*0 + 3*130*FLEN/8, x4, x1, x2)

inst_10883:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7f8000; valaddr_reg:x3; val_offset:32649*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32649*0 + 3*131*FLEN/8, x4, x1, x2)

inst_10884:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7fc000; valaddr_reg:x3; val_offset:32652*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32652*0 + 3*132*FLEN/8, x4, x1, x2)

inst_10885:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7fe000; valaddr_reg:x3; val_offset:32655*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32655*0 + 3*133*FLEN/8, x4, x1, x2)

inst_10886:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7ff000; valaddr_reg:x3; val_offset:32658*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32658*0 + 3*134*FLEN/8, x4, x1, x2)

inst_10887:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7ff800; valaddr_reg:x3; val_offset:32661*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32661*0 + 3*135*FLEN/8, x4, x1, x2)

inst_10888:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7ffc00; valaddr_reg:x3; val_offset:32664*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32664*0 + 3*136*FLEN/8, x4, x1, x2)

inst_10889:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7ffe00; valaddr_reg:x3; val_offset:32667*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32667*0 + 3*137*FLEN/8, x4, x1, x2)

inst_10890:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7fff00; valaddr_reg:x3; val_offset:32670*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32670*0 + 3*138*FLEN/8, x4, x1, x2)

inst_10891:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7fff80; valaddr_reg:x3; val_offset:32673*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32673*0 + 3*139*FLEN/8, x4, x1, x2)

inst_10892:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7fffc0; valaddr_reg:x3; val_offset:32676*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32676*0 + 3*140*FLEN/8, x4, x1, x2)

inst_10893:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7fffe0; valaddr_reg:x3; val_offset:32679*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32679*0 + 3*141*FLEN/8, x4, x1, x2)

inst_10894:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7ffff0; valaddr_reg:x3; val_offset:32682*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32682*0 + 3*142*FLEN/8, x4, x1, x2)

inst_10895:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7ffff8; valaddr_reg:x3; val_offset:32685*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32685*0 + 3*143*FLEN/8, x4, x1, x2)

inst_10896:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7ffffc; valaddr_reg:x3; val_offset:32688*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32688*0 + 3*144*FLEN/8, x4, x1, x2)

inst_10897:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7ffffe; valaddr_reg:x3; val_offset:32691*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32691*0 + 3*145*FLEN/8, x4, x1, x2)

inst_10898:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x603f02 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e603f02; op2val:0x80000000;
op3val:0x8f7fffff; valaddr_reg:x3; val_offset:32694*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32694*0 + 3*146*FLEN/8, x4, x1, x2)

inst_10899:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb000000; valaddr_reg:x3; val_offset:32697*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32697*0 + 3*147*FLEN/8, x4, x1, x2)

inst_10900:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb000001; valaddr_reg:x3; val_offset:32700*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32700*0 + 3*148*FLEN/8, x4, x1, x2)

inst_10901:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb000003; valaddr_reg:x3; val_offset:32703*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32703*0 + 3*149*FLEN/8, x4, x1, x2)

inst_10902:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb000007; valaddr_reg:x3; val_offset:32706*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32706*0 + 3*150*FLEN/8, x4, x1, x2)

inst_10903:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb00000f; valaddr_reg:x3; val_offset:32709*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32709*0 + 3*151*FLEN/8, x4, x1, x2)

inst_10904:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb00001f; valaddr_reg:x3; val_offset:32712*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32712*0 + 3*152*FLEN/8, x4, x1, x2)

inst_10905:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb00003f; valaddr_reg:x3; val_offset:32715*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32715*0 + 3*153*FLEN/8, x4, x1, x2)

inst_10906:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb00007f; valaddr_reg:x3; val_offset:32718*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32718*0 + 3*154*FLEN/8, x4, x1, x2)

inst_10907:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb0000ff; valaddr_reg:x3; val_offset:32721*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32721*0 + 3*155*FLEN/8, x4, x1, x2)

inst_10908:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb0001ff; valaddr_reg:x3; val_offset:32724*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32724*0 + 3*156*FLEN/8, x4, x1, x2)

inst_10909:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb0003ff; valaddr_reg:x3; val_offset:32727*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32727*0 + 3*157*FLEN/8, x4, x1, x2)

inst_10910:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb0007ff; valaddr_reg:x3; val_offset:32730*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32730*0 + 3*158*FLEN/8, x4, x1, x2)

inst_10911:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb000fff; valaddr_reg:x3; val_offset:32733*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32733*0 + 3*159*FLEN/8, x4, x1, x2)

inst_10912:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb001fff; valaddr_reg:x3; val_offset:32736*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32736*0 + 3*160*FLEN/8, x4, x1, x2)

inst_10913:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb003fff; valaddr_reg:x3; val_offset:32739*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32739*0 + 3*161*FLEN/8, x4, x1, x2)

inst_10914:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb007fff; valaddr_reg:x3; val_offset:32742*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32742*0 + 3*162*FLEN/8, x4, x1, x2)

inst_10915:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb00ffff; valaddr_reg:x3; val_offset:32745*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32745*0 + 3*163*FLEN/8, x4, x1, x2)

inst_10916:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb01ffff; valaddr_reg:x3; val_offset:32748*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32748*0 + 3*164*FLEN/8, x4, x1, x2)

inst_10917:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb03ffff; valaddr_reg:x3; val_offset:32751*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32751*0 + 3*165*FLEN/8, x4, x1, x2)

inst_10918:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb07ffff; valaddr_reg:x3; val_offset:32754*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32754*0 + 3*166*FLEN/8, x4, x1, x2)

inst_10919:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb0fffff; valaddr_reg:x3; val_offset:32757*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32757*0 + 3*167*FLEN/8, x4, x1, x2)

inst_10920:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb1fffff; valaddr_reg:x3; val_offset:32760*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32760*0 + 3*168*FLEN/8, x4, x1, x2)

inst_10921:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb3fffff; valaddr_reg:x3; val_offset:32763*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32763*0 + 3*169*FLEN/8, x4, x1, x2)

inst_10922:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb400000; valaddr_reg:x3; val_offset:32766*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32766*0 + 3*170*FLEN/8, x4, x1, x2)

inst_10923:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb600000; valaddr_reg:x3; val_offset:32769*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32769*0 + 3*171*FLEN/8, x4, x1, x2)

inst_10924:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb700000; valaddr_reg:x3; val_offset:32772*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32772*0 + 3*172*FLEN/8, x4, x1, x2)

inst_10925:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb780000; valaddr_reg:x3; val_offset:32775*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32775*0 + 3*173*FLEN/8, x4, x1, x2)

inst_10926:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7c0000; valaddr_reg:x3; val_offset:32778*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32778*0 + 3*174*FLEN/8, x4, x1, x2)

inst_10927:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7e0000; valaddr_reg:x3; val_offset:32781*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32781*0 + 3*175*FLEN/8, x4, x1, x2)

inst_10928:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7f0000; valaddr_reg:x3; val_offset:32784*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32784*0 + 3*176*FLEN/8, x4, x1, x2)

inst_10929:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7f8000; valaddr_reg:x3; val_offset:32787*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32787*0 + 3*177*FLEN/8, x4, x1, x2)

inst_10930:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7fc000; valaddr_reg:x3; val_offset:32790*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32790*0 + 3*178*FLEN/8, x4, x1, x2)

inst_10931:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7fe000; valaddr_reg:x3; val_offset:32793*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32793*0 + 3*179*FLEN/8, x4, x1, x2)

inst_10932:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7ff000; valaddr_reg:x3; val_offset:32796*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32796*0 + 3*180*FLEN/8, x4, x1, x2)

inst_10933:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7ff800; valaddr_reg:x3; val_offset:32799*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32799*0 + 3*181*FLEN/8, x4, x1, x2)

inst_10934:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7ffc00; valaddr_reg:x3; val_offset:32802*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32802*0 + 3*182*FLEN/8, x4, x1, x2)

inst_10935:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7ffe00; valaddr_reg:x3; val_offset:32805*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32805*0 + 3*183*FLEN/8, x4, x1, x2)

inst_10936:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7fff00; valaddr_reg:x3; val_offset:32808*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32808*0 + 3*184*FLEN/8, x4, x1, x2)

inst_10937:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7fff80; valaddr_reg:x3; val_offset:32811*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32811*0 + 3*185*FLEN/8, x4, x1, x2)

inst_10938:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7fffc0; valaddr_reg:x3; val_offset:32814*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32814*0 + 3*186*FLEN/8, x4, x1, x2)

inst_10939:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7fffe0; valaddr_reg:x3; val_offset:32817*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32817*0 + 3*187*FLEN/8, x4, x1, x2)

inst_10940:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7ffff0; valaddr_reg:x3; val_offset:32820*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32820*0 + 3*188*FLEN/8, x4, x1, x2)

inst_10941:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7ffff8; valaddr_reg:x3; val_offset:32823*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32823*0 + 3*189*FLEN/8, x4, x1, x2)

inst_10942:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7ffffc; valaddr_reg:x3; val_offset:32826*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32826*0 + 3*190*FLEN/8, x4, x1, x2)

inst_10943:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7ffffe; valaddr_reg:x3; val_offset:32829*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32829*0 + 3*191*FLEN/8, x4, x1, x2)

inst_10944:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xfb7fffff; valaddr_reg:x3; val_offset:32832*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32832*0 + 3*192*FLEN/8, x4, x1, x2)

inst_10945:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff000001; valaddr_reg:x3; val_offset:32835*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32835*0 + 3*193*FLEN/8, x4, x1, x2)

inst_10946:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff000003; valaddr_reg:x3; val_offset:32838*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32838*0 + 3*194*FLEN/8, x4, x1, x2)

inst_10947:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff000007; valaddr_reg:x3; val_offset:32841*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32841*0 + 3*195*FLEN/8, x4, x1, x2)

inst_10948:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff199999; valaddr_reg:x3; val_offset:32844*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32844*0 + 3*196*FLEN/8, x4, x1, x2)

inst_10949:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff249249; valaddr_reg:x3; val_offset:32847*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32847*0 + 3*197*FLEN/8, x4, x1, x2)

inst_10950:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff333333; valaddr_reg:x3; val_offset:32850*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32850*0 + 3*198*FLEN/8, x4, x1, x2)

inst_10951:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:32853*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32853*0 + 3*199*FLEN/8, x4, x1, x2)

inst_10952:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:32856*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32856*0 + 3*200*FLEN/8, x4, x1, x2)

inst_10953:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff444444; valaddr_reg:x3; val_offset:32859*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32859*0 + 3*201*FLEN/8, x4, x1, x2)

inst_10954:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:32862*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32862*0 + 3*202*FLEN/8, x4, x1, x2)

inst_10955:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:32865*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32865*0 + 3*203*FLEN/8, x4, x1, x2)

inst_10956:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff666666; valaddr_reg:x3; val_offset:32868*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32868*0 + 3*204*FLEN/8, x4, x1, x2)

inst_10957:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:32871*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32871*0 + 3*205*FLEN/8, x4, x1, x2)

inst_10958:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:32874*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32874*0 + 3*206*FLEN/8, x4, x1, x2)

inst_10959:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:32877*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32877*0 + 3*207*FLEN/8, x4, x1, x2)

inst_10960:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x646ab3 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f7500 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e646ab3; op2val:0xc08f7500;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:32880*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32880*0 + 3*208*FLEN/8, x4, x1, x2)

inst_10961:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4000000; valaddr_reg:x3; val_offset:32883*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32883*0 + 3*209*FLEN/8, x4, x1, x2)

inst_10962:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4000001; valaddr_reg:x3; val_offset:32886*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32886*0 + 3*210*FLEN/8, x4, x1, x2)

inst_10963:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4000003; valaddr_reg:x3; val_offset:32889*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32889*0 + 3*211*FLEN/8, x4, x1, x2)

inst_10964:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4000007; valaddr_reg:x3; val_offset:32892*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32892*0 + 3*212*FLEN/8, x4, x1, x2)

inst_10965:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe400000f; valaddr_reg:x3; val_offset:32895*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32895*0 + 3*213*FLEN/8, x4, x1, x2)

inst_10966:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe400001f; valaddr_reg:x3; val_offset:32898*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32898*0 + 3*214*FLEN/8, x4, x1, x2)

inst_10967:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe400003f; valaddr_reg:x3; val_offset:32901*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32901*0 + 3*215*FLEN/8, x4, x1, x2)

inst_10968:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe400007f; valaddr_reg:x3; val_offset:32904*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32904*0 + 3*216*FLEN/8, x4, x1, x2)

inst_10969:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe40000ff; valaddr_reg:x3; val_offset:32907*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32907*0 + 3*217*FLEN/8, x4, x1, x2)

inst_10970:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe40001ff; valaddr_reg:x3; val_offset:32910*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32910*0 + 3*218*FLEN/8, x4, x1, x2)

inst_10971:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe40003ff; valaddr_reg:x3; val_offset:32913*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32913*0 + 3*219*FLEN/8, x4, x1, x2)

inst_10972:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe40007ff; valaddr_reg:x3; val_offset:32916*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32916*0 + 3*220*FLEN/8, x4, x1, x2)

inst_10973:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4000fff; valaddr_reg:x3; val_offset:32919*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32919*0 + 3*221*FLEN/8, x4, x1, x2)

inst_10974:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4001fff; valaddr_reg:x3; val_offset:32922*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32922*0 + 3*222*FLEN/8, x4, x1, x2)

inst_10975:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4003fff; valaddr_reg:x3; val_offset:32925*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32925*0 + 3*223*FLEN/8, x4, x1, x2)

inst_10976:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4007fff; valaddr_reg:x3; val_offset:32928*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32928*0 + 3*224*FLEN/8, x4, x1, x2)

inst_10977:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe400ffff; valaddr_reg:x3; val_offset:32931*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32931*0 + 3*225*FLEN/8, x4, x1, x2)

inst_10978:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe401ffff; valaddr_reg:x3; val_offset:32934*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32934*0 + 3*226*FLEN/8, x4, x1, x2)

inst_10979:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe403ffff; valaddr_reg:x3; val_offset:32937*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32937*0 + 3*227*FLEN/8, x4, x1, x2)

inst_10980:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe407ffff; valaddr_reg:x3; val_offset:32940*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32940*0 + 3*228*FLEN/8, x4, x1, x2)

inst_10981:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe40fffff; valaddr_reg:x3; val_offset:32943*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32943*0 + 3*229*FLEN/8, x4, x1, x2)

inst_10982:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe41fffff; valaddr_reg:x3; val_offset:32946*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32946*0 + 3*230*FLEN/8, x4, x1, x2)

inst_10983:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe43fffff; valaddr_reg:x3; val_offset:32949*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32949*0 + 3*231*FLEN/8, x4, x1, x2)

inst_10984:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4400000; valaddr_reg:x3; val_offset:32952*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32952*0 + 3*232*FLEN/8, x4, x1, x2)

inst_10985:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4600000; valaddr_reg:x3; val_offset:32955*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32955*0 + 3*233*FLEN/8, x4, x1, x2)

inst_10986:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4700000; valaddr_reg:x3; val_offset:32958*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32958*0 + 3*234*FLEN/8, x4, x1, x2)

inst_10987:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe4780000; valaddr_reg:x3; val_offset:32961*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32961*0 + 3*235*FLEN/8, x4, x1, x2)

inst_10988:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47c0000; valaddr_reg:x3; val_offset:32964*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32964*0 + 3*236*FLEN/8, x4, x1, x2)

inst_10989:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47e0000; valaddr_reg:x3; val_offset:32967*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32967*0 + 3*237*FLEN/8, x4, x1, x2)

inst_10990:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47f0000; valaddr_reg:x3; val_offset:32970*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32970*0 + 3*238*FLEN/8, x4, x1, x2)

inst_10991:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47f8000; valaddr_reg:x3; val_offset:32973*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32973*0 + 3*239*FLEN/8, x4, x1, x2)

inst_10992:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47fc000; valaddr_reg:x3; val_offset:32976*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32976*0 + 3*240*FLEN/8, x4, x1, x2)

inst_10993:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47fe000; valaddr_reg:x3; val_offset:32979*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32979*0 + 3*241*FLEN/8, x4, x1, x2)

inst_10994:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47ff000; valaddr_reg:x3; val_offset:32982*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32982*0 + 3*242*FLEN/8, x4, x1, x2)

inst_10995:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47ff800; valaddr_reg:x3; val_offset:32985*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32985*0 + 3*243*FLEN/8, x4, x1, x2)

inst_10996:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47ffc00; valaddr_reg:x3; val_offset:32988*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32988*0 + 3*244*FLEN/8, x4, x1, x2)

inst_10997:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47ffe00; valaddr_reg:x3; val_offset:32991*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32991*0 + 3*245*FLEN/8, x4, x1, x2)

inst_10998:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47fff00; valaddr_reg:x3; val_offset:32994*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32994*0 + 3*246*FLEN/8, x4, x1, x2)

inst_10999:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47fff80; valaddr_reg:x3; val_offset:32997*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 32997*0 + 3*247*FLEN/8, x4, x1, x2)

inst_11000:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47fffc0; valaddr_reg:x3; val_offset:33000*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33000*0 + 3*248*FLEN/8, x4, x1, x2)

inst_11001:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47fffe0; valaddr_reg:x3; val_offset:33003*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33003*0 + 3*249*FLEN/8, x4, x1, x2)

inst_11002:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47ffff0; valaddr_reg:x3; val_offset:33006*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33006*0 + 3*250*FLEN/8, x4, x1, x2)

inst_11003:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47ffff8; valaddr_reg:x3; val_offset:33009*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33009*0 + 3*251*FLEN/8, x4, x1, x2)

inst_11004:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47ffffc; valaddr_reg:x3; val_offset:33012*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33012*0 + 3*252*FLEN/8, x4, x1, x2)

inst_11005:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47ffffe; valaddr_reg:x3; val_offset:33015*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33015*0 + 3*253*FLEN/8, x4, x1, x2)

inst_11006:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xc8 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xe47fffff; valaddr_reg:x3; val_offset:33018*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33018*0 + 3*254*FLEN/8, x4, x1, x2)

inst_11007:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff000001; valaddr_reg:x3; val_offset:33021*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33021*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_11008:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff000003; valaddr_reg:x3; val_offset:33024*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33024*0 + 3*256*FLEN/8, x4, x1, x2)

inst_11009:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff000007; valaddr_reg:x3; val_offset:33027*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33027*0 + 3*257*FLEN/8, x4, x1, x2)

inst_11010:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff199999; valaddr_reg:x3; val_offset:33030*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33030*0 + 3*258*FLEN/8, x4, x1, x2)

inst_11011:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff249249; valaddr_reg:x3; val_offset:33033*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33033*0 + 3*259*FLEN/8, x4, x1, x2)

inst_11012:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff333333; valaddr_reg:x3; val_offset:33036*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33036*0 + 3*260*FLEN/8, x4, x1, x2)

inst_11013:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:33039*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33039*0 + 3*261*FLEN/8, x4, x1, x2)

inst_11014:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:33042*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33042*0 + 3*262*FLEN/8, x4, x1, x2)

inst_11015:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff444444; valaddr_reg:x3; val_offset:33045*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33045*0 + 3*263*FLEN/8, x4, x1, x2)

inst_11016:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:33048*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33048*0 + 3*264*FLEN/8, x4, x1, x2)

inst_11017:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:33051*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33051*0 + 3*265*FLEN/8, x4, x1, x2)

inst_11018:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff666666; valaddr_reg:x3; val_offset:33054*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33054*0 + 3*266*FLEN/8, x4, x1, x2)

inst_11019:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:33057*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33057*0 + 3*267*FLEN/8, x4, x1, x2)

inst_11020:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:33060*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33060*0 + 3*268*FLEN/8, x4, x1, x2)

inst_11021:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:33063*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33063*0 + 3*269*FLEN/8, x4, x1, x2)

inst_11022:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x65dbe1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0e8e98 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e65dbe1; op2val:0xc08e8e98;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:33066*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33066*0 + 3*270*FLEN/8, x4, x1, x2)

inst_11023:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:33069*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33069*0 + 3*271*FLEN/8, x4, x1, x2)

inst_11024:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:33072*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33072*0 + 3*272*FLEN/8, x4, x1, x2)

inst_11025:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:33075*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33075*0 + 3*273*FLEN/8, x4, x1, x2)

inst_11026:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:33078*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33078*0 + 3*274*FLEN/8, x4, x1, x2)

inst_11027:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:33081*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33081*0 + 3*275*FLEN/8, x4, x1, x2)

inst_11028:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:33084*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33084*0 + 3*276*FLEN/8, x4, x1, x2)

inst_11029:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:33087*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33087*0 + 3*277*FLEN/8, x4, x1, x2)

inst_11030:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:33090*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33090*0 + 3*278*FLEN/8, x4, x1, x2)

inst_11031:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:33093*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33093*0 + 3*279*FLEN/8, x4, x1, x2)

inst_11032:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:33096*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33096*0 + 3*280*FLEN/8, x4, x1, x2)

inst_11033:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:33099*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33099*0 + 3*281*FLEN/8, x4, x1, x2)

inst_11034:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:33102*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33102*0 + 3*282*FLEN/8, x4, x1, x2)

inst_11035:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:33105*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33105*0 + 3*283*FLEN/8, x4, x1, x2)

inst_11036:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:33108*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33108*0 + 3*284*FLEN/8, x4, x1, x2)

inst_11037:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:33111*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33111*0 + 3*285*FLEN/8, x4, x1, x2)

inst_11038:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:33114*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33114*0 + 3*286*FLEN/8, x4, x1, x2)

inst_11039:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f800000; valaddr_reg:x3; val_offset:33117*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33117*0 + 3*287*FLEN/8, x4, x1, x2)

inst_11040:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f800001; valaddr_reg:x3; val_offset:33120*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33120*0 + 3*288*FLEN/8, x4, x1, x2)

inst_11041:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f800003; valaddr_reg:x3; val_offset:33123*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33123*0 + 3*289*FLEN/8, x4, x1, x2)

inst_11042:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f800007; valaddr_reg:x3; val_offset:33126*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33126*0 + 3*290*FLEN/8, x4, x1, x2)

inst_11043:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f80000f; valaddr_reg:x3; val_offset:33129*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33129*0 + 3*291*FLEN/8, x4, x1, x2)

inst_11044:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f80001f; valaddr_reg:x3; val_offset:33132*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33132*0 + 3*292*FLEN/8, x4, x1, x2)

inst_11045:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f80003f; valaddr_reg:x3; val_offset:33135*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33135*0 + 3*293*FLEN/8, x4, x1, x2)

inst_11046:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f80007f; valaddr_reg:x3; val_offset:33138*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33138*0 + 3*294*FLEN/8, x4, x1, x2)

inst_11047:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f8000ff; valaddr_reg:x3; val_offset:33141*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33141*0 + 3*295*FLEN/8, x4, x1, x2)

inst_11048:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f8001ff; valaddr_reg:x3; val_offset:33144*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33144*0 + 3*296*FLEN/8, x4, x1, x2)

inst_11049:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f8003ff; valaddr_reg:x3; val_offset:33147*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33147*0 + 3*297*FLEN/8, x4, x1, x2)

inst_11050:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f8007ff; valaddr_reg:x3; val_offset:33150*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33150*0 + 3*298*FLEN/8, x4, x1, x2)

inst_11051:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f800fff; valaddr_reg:x3; val_offset:33153*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33153*0 + 3*299*FLEN/8, x4, x1, x2)

inst_11052:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f801fff; valaddr_reg:x3; val_offset:33156*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33156*0 + 3*300*FLEN/8, x4, x1, x2)

inst_11053:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f803fff; valaddr_reg:x3; val_offset:33159*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33159*0 + 3*301*FLEN/8, x4, x1, x2)

inst_11054:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f807fff; valaddr_reg:x3; val_offset:33162*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33162*0 + 3*302*FLEN/8, x4, x1, x2)

inst_11055:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f80ffff; valaddr_reg:x3; val_offset:33165*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33165*0 + 3*303*FLEN/8, x4, x1, x2)

inst_11056:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f81ffff; valaddr_reg:x3; val_offset:33168*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33168*0 + 3*304*FLEN/8, x4, x1, x2)

inst_11057:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f83ffff; valaddr_reg:x3; val_offset:33171*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33171*0 + 3*305*FLEN/8, x4, x1, x2)

inst_11058:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f87ffff; valaddr_reg:x3; val_offset:33174*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33174*0 + 3*306*FLEN/8, x4, x1, x2)

inst_11059:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f8fffff; valaddr_reg:x3; val_offset:33177*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33177*0 + 3*307*FLEN/8, x4, x1, x2)

inst_11060:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8f9fffff; valaddr_reg:x3; val_offset:33180*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33180*0 + 3*308*FLEN/8, x4, x1, x2)

inst_11061:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fbfffff; valaddr_reg:x3; val_offset:33183*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33183*0 + 3*309*FLEN/8, x4, x1, x2)

inst_11062:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fc00000; valaddr_reg:x3; val_offset:33186*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33186*0 + 3*310*FLEN/8, x4, x1, x2)

inst_11063:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fe00000; valaddr_reg:x3; val_offset:33189*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33189*0 + 3*311*FLEN/8, x4, x1, x2)

inst_11064:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ff00000; valaddr_reg:x3; val_offset:33192*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33192*0 + 3*312*FLEN/8, x4, x1, x2)

inst_11065:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ff80000; valaddr_reg:x3; val_offset:33195*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33195*0 + 3*313*FLEN/8, x4, x1, x2)

inst_11066:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffc0000; valaddr_reg:x3; val_offset:33198*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33198*0 + 3*314*FLEN/8, x4, x1, x2)

inst_11067:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffe0000; valaddr_reg:x3; val_offset:33201*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33201*0 + 3*315*FLEN/8, x4, x1, x2)

inst_11068:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fff0000; valaddr_reg:x3; val_offset:33204*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33204*0 + 3*316*FLEN/8, x4, x1, x2)

inst_11069:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fff8000; valaddr_reg:x3; val_offset:33207*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33207*0 + 3*317*FLEN/8, x4, x1, x2)

inst_11070:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fffc000; valaddr_reg:x3; val_offset:33210*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33210*0 + 3*318*FLEN/8, x4, x1, x2)

inst_11071:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fffe000; valaddr_reg:x3; val_offset:33213*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33213*0 + 3*319*FLEN/8, x4, x1, x2)

inst_11072:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffff000; valaddr_reg:x3; val_offset:33216*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33216*0 + 3*320*FLEN/8, x4, x1, x2)

inst_11073:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffff800; valaddr_reg:x3; val_offset:33219*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33219*0 + 3*321*FLEN/8, x4, x1, x2)

inst_11074:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffffc00; valaddr_reg:x3; val_offset:33222*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33222*0 + 3*322*FLEN/8, x4, x1, x2)

inst_11075:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffffe00; valaddr_reg:x3; val_offset:33225*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33225*0 + 3*323*FLEN/8, x4, x1, x2)

inst_11076:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fffff00; valaddr_reg:x3; val_offset:33228*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33228*0 + 3*324*FLEN/8, x4, x1, x2)

inst_11077:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fffff80; valaddr_reg:x3; val_offset:33231*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33231*0 + 3*325*FLEN/8, x4, x1, x2)

inst_11078:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fffffc0; valaddr_reg:x3; val_offset:33234*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33234*0 + 3*326*FLEN/8, x4, x1, x2)

inst_11079:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fffffe0; valaddr_reg:x3; val_offset:33237*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33237*0 + 3*327*FLEN/8, x4, x1, x2)

inst_11080:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffffff0; valaddr_reg:x3; val_offset:33240*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33240*0 + 3*328*FLEN/8, x4, x1, x2)

inst_11081:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffffff8; valaddr_reg:x3; val_offset:33243*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33243*0 + 3*329*FLEN/8, x4, x1, x2)

inst_11082:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffffffc; valaddr_reg:x3; val_offset:33246*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33246*0 + 3*330*FLEN/8, x4, x1, x2)

inst_11083:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8ffffffe; valaddr_reg:x3; val_offset:33249*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33249*0 + 3*331*FLEN/8, x4, x1, x2)

inst_11084:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68ee90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e68ee90; op2val:0x80000000;
op3val:0x8fffffff; valaddr_reg:x3; val_offset:33252*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33252*0 + 3*332*FLEN/8, x4, x1, x2)

inst_11085:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:33255*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33255*0 + 3*333*FLEN/8, x4, x1, x2)

inst_11086:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:33258*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33258*0 + 3*334*FLEN/8, x4, x1, x2)

inst_11087:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:33261*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33261*0 + 3*335*FLEN/8, x4, x1, x2)

inst_11088:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:33264*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33264*0 + 3*336*FLEN/8, x4, x1, x2)

inst_11089:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:33267*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33267*0 + 3*337*FLEN/8, x4, x1, x2)

inst_11090:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:33270*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33270*0 + 3*338*FLEN/8, x4, x1, x2)

inst_11091:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:33273*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33273*0 + 3*339*FLEN/8, x4, x1, x2)

inst_11092:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:33276*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33276*0 + 3*340*FLEN/8, x4, x1, x2)

inst_11093:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:33279*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33279*0 + 3*341*FLEN/8, x4, x1, x2)

inst_11094:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:33282*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33282*0 + 3*342*FLEN/8, x4, x1, x2)

inst_11095:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:33285*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33285*0 + 3*343*FLEN/8, x4, x1, x2)

inst_11096:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:33288*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33288*0 + 3*344*FLEN/8, x4, x1, x2)

inst_11097:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:33291*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33291*0 + 3*345*FLEN/8, x4, x1, x2)

inst_11098:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:33294*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33294*0 + 3*346*FLEN/8, x4, x1, x2)

inst_11099:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:33297*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33297*0 + 3*347*FLEN/8, x4, x1, x2)

inst_11100:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:33300*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33300*0 + 3*348*FLEN/8, x4, x1, x2)

inst_11101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81000000; valaddr_reg:x3; val_offset:33303*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33303*0 + 3*349*FLEN/8, x4, x1, x2)

inst_11102:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81000001; valaddr_reg:x3; val_offset:33306*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33306*0 + 3*350*FLEN/8, x4, x1, x2)

inst_11103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81000003; valaddr_reg:x3; val_offset:33309*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33309*0 + 3*351*FLEN/8, x4, x1, x2)

inst_11104:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81000007; valaddr_reg:x3; val_offset:33312*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33312*0 + 3*352*FLEN/8, x4, x1, x2)

inst_11105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x8100000f; valaddr_reg:x3; val_offset:33315*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33315*0 + 3*353*FLEN/8, x4, x1, x2)

inst_11106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x8100001f; valaddr_reg:x3; val_offset:33318*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33318*0 + 3*354*FLEN/8, x4, x1, x2)

inst_11107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x8100003f; valaddr_reg:x3; val_offset:33321*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33321*0 + 3*355*FLEN/8, x4, x1, x2)

inst_11108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x8100007f; valaddr_reg:x3; val_offset:33324*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33324*0 + 3*356*FLEN/8, x4, x1, x2)

inst_11109:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x810000ff; valaddr_reg:x3; val_offset:33327*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33327*0 + 3*357*FLEN/8, x4, x1, x2)

inst_11110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x810001ff; valaddr_reg:x3; val_offset:33330*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33330*0 + 3*358*FLEN/8, x4, x1, x2)

inst_11111:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x810003ff; valaddr_reg:x3; val_offset:33333*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33333*0 + 3*359*FLEN/8, x4, x1, x2)

inst_11112:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x810007ff; valaddr_reg:x3; val_offset:33336*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33336*0 + 3*360*FLEN/8, x4, x1, x2)

inst_11113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81000fff; valaddr_reg:x3; val_offset:33339*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33339*0 + 3*361*FLEN/8, x4, x1, x2)

inst_11114:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81001fff; valaddr_reg:x3; val_offset:33342*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33342*0 + 3*362*FLEN/8, x4, x1, x2)

inst_11115:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81003fff; valaddr_reg:x3; val_offset:33345*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33345*0 + 3*363*FLEN/8, x4, x1, x2)

inst_11116:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81007fff; valaddr_reg:x3; val_offset:33348*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33348*0 + 3*364*FLEN/8, x4, x1, x2)

inst_11117:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x8100ffff; valaddr_reg:x3; val_offset:33351*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33351*0 + 3*365*FLEN/8, x4, x1, x2)

inst_11118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x8101ffff; valaddr_reg:x3; val_offset:33354*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33354*0 + 3*366*FLEN/8, x4, x1, x2)

inst_11119:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x8103ffff; valaddr_reg:x3; val_offset:33357*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33357*0 + 3*367*FLEN/8, x4, x1, x2)

inst_11120:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x8107ffff; valaddr_reg:x3; val_offset:33360*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33360*0 + 3*368*FLEN/8, x4, x1, x2)

inst_11121:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x810fffff; valaddr_reg:x3; val_offset:33363*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33363*0 + 3*369*FLEN/8, x4, x1, x2)

inst_11122:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x811fffff; valaddr_reg:x3; val_offset:33366*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33366*0 + 3*370*FLEN/8, x4, x1, x2)

inst_11123:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x813fffff; valaddr_reg:x3; val_offset:33369*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33369*0 + 3*371*FLEN/8, x4, x1, x2)

inst_11124:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81400000; valaddr_reg:x3; val_offset:33372*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33372*0 + 3*372*FLEN/8, x4, x1, x2)

inst_11125:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81600000; valaddr_reg:x3; val_offset:33375*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33375*0 + 3*373*FLEN/8, x4, x1, x2)

inst_11126:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81700000; valaddr_reg:x3; val_offset:33378*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33378*0 + 3*374*FLEN/8, x4, x1, x2)

inst_11127:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x81780000; valaddr_reg:x3; val_offset:33381*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33381*0 + 3*375*FLEN/8, x4, x1, x2)

inst_11128:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817c0000; valaddr_reg:x3; val_offset:33384*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33384*0 + 3*376*FLEN/8, x4, x1, x2)

inst_11129:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817e0000; valaddr_reg:x3; val_offset:33387*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33387*0 + 3*377*FLEN/8, x4, x1, x2)

inst_11130:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817f0000; valaddr_reg:x3; val_offset:33390*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33390*0 + 3*378*FLEN/8, x4, x1, x2)

inst_11131:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817f8000; valaddr_reg:x3; val_offset:33393*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33393*0 + 3*379*FLEN/8, x4, x1, x2)

inst_11132:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817fc000; valaddr_reg:x3; val_offset:33396*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33396*0 + 3*380*FLEN/8, x4, x1, x2)

inst_11133:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817fe000; valaddr_reg:x3; val_offset:33399*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33399*0 + 3*381*FLEN/8, x4, x1, x2)

inst_11134:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817ff000; valaddr_reg:x3; val_offset:33402*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33402*0 + 3*382*FLEN/8, x4, x1, x2)

inst_11135:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817ff800; valaddr_reg:x3; val_offset:33405*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33405*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_11136:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817ffc00; valaddr_reg:x3; val_offset:33408*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33408*0 + 3*384*FLEN/8, x4, x1, x2)

inst_11137:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817ffe00; valaddr_reg:x3; val_offset:33411*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33411*0 + 3*385*FLEN/8, x4, x1, x2)

inst_11138:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817fff00; valaddr_reg:x3; val_offset:33414*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33414*0 + 3*386*FLEN/8, x4, x1, x2)

inst_11139:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817fff80; valaddr_reg:x3; val_offset:33417*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33417*0 + 3*387*FLEN/8, x4, x1, x2)

inst_11140:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817fffc0; valaddr_reg:x3; val_offset:33420*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33420*0 + 3*388*FLEN/8, x4, x1, x2)

inst_11141:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817fffe0; valaddr_reg:x3; val_offset:33423*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33423*0 + 3*389*FLEN/8, x4, x1, x2)

inst_11142:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817ffff0; valaddr_reg:x3; val_offset:33426*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33426*0 + 3*390*FLEN/8, x4, x1, x2)

inst_11143:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817ffff8; valaddr_reg:x3; val_offset:33429*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33429*0 + 3*391*FLEN/8, x4, x1, x2)

inst_11144:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817ffffc; valaddr_reg:x3; val_offset:33432*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33432*0 + 3*392*FLEN/8, x4, x1, x2)

inst_11145:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817ffffe; valaddr_reg:x3; val_offset:33435*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33435*0 + 3*393*FLEN/8, x4, x1, x2)

inst_11146:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x699a1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e699a1d; op2val:0x80000000;
op3val:0x817fffff; valaddr_reg:x3; val_offset:33438*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33438*0 + 3*394*FLEN/8, x4, x1, x2)

inst_11147:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d000000; valaddr_reg:x3; val_offset:33441*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33441*0 + 3*395*FLEN/8, x4, x1, x2)

inst_11148:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d000001; valaddr_reg:x3; val_offset:33444*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33444*0 + 3*396*FLEN/8, x4, x1, x2)

inst_11149:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d000003; valaddr_reg:x3; val_offset:33447*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33447*0 + 3*397*FLEN/8, x4, x1, x2)

inst_11150:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d000007; valaddr_reg:x3; val_offset:33450*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33450*0 + 3*398*FLEN/8, x4, x1, x2)

inst_11151:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d00000f; valaddr_reg:x3; val_offset:33453*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33453*0 + 3*399*FLEN/8, x4, x1, x2)

inst_11152:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d00001f; valaddr_reg:x3; val_offset:33456*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33456*0 + 3*400*FLEN/8, x4, x1, x2)

inst_11153:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d00003f; valaddr_reg:x3; val_offset:33459*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33459*0 + 3*401*FLEN/8, x4, x1, x2)

inst_11154:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d00007f; valaddr_reg:x3; val_offset:33462*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33462*0 + 3*402*FLEN/8, x4, x1, x2)

inst_11155:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d0000ff; valaddr_reg:x3; val_offset:33465*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33465*0 + 3*403*FLEN/8, x4, x1, x2)

inst_11156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d0001ff; valaddr_reg:x3; val_offset:33468*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33468*0 + 3*404*FLEN/8, x4, x1, x2)

inst_11157:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d0003ff; valaddr_reg:x3; val_offset:33471*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33471*0 + 3*405*FLEN/8, x4, x1, x2)

inst_11158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d0007ff; valaddr_reg:x3; val_offset:33474*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33474*0 + 3*406*FLEN/8, x4, x1, x2)

inst_11159:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d000fff; valaddr_reg:x3; val_offset:33477*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33477*0 + 3*407*FLEN/8, x4, x1, x2)

inst_11160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d001fff; valaddr_reg:x3; val_offset:33480*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33480*0 + 3*408*FLEN/8, x4, x1, x2)

inst_11161:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d003fff; valaddr_reg:x3; val_offset:33483*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33483*0 + 3*409*FLEN/8, x4, x1, x2)

inst_11162:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d007fff; valaddr_reg:x3; val_offset:33486*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33486*0 + 3*410*FLEN/8, x4, x1, x2)

inst_11163:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d00ffff; valaddr_reg:x3; val_offset:33489*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33489*0 + 3*411*FLEN/8, x4, x1, x2)

inst_11164:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d01ffff; valaddr_reg:x3; val_offset:33492*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33492*0 + 3*412*FLEN/8, x4, x1, x2)

inst_11165:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d03ffff; valaddr_reg:x3; val_offset:33495*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33495*0 + 3*413*FLEN/8, x4, x1, x2)

inst_11166:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d07ffff; valaddr_reg:x3; val_offset:33498*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33498*0 + 3*414*FLEN/8, x4, x1, x2)

inst_11167:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d0fffff; valaddr_reg:x3; val_offset:33501*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33501*0 + 3*415*FLEN/8, x4, x1, x2)

inst_11168:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d1fffff; valaddr_reg:x3; val_offset:33504*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33504*0 + 3*416*FLEN/8, x4, x1, x2)

inst_11169:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d3fffff; valaddr_reg:x3; val_offset:33507*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33507*0 + 3*417*FLEN/8, x4, x1, x2)

inst_11170:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d400000; valaddr_reg:x3; val_offset:33510*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33510*0 + 3*418*FLEN/8, x4, x1, x2)

inst_11171:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d600000; valaddr_reg:x3; val_offset:33513*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33513*0 + 3*419*FLEN/8, x4, x1, x2)

inst_11172:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d700000; valaddr_reg:x3; val_offset:33516*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33516*0 + 3*420*FLEN/8, x4, x1, x2)

inst_11173:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d780000; valaddr_reg:x3; val_offset:33519*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33519*0 + 3*421*FLEN/8, x4, x1, x2)

inst_11174:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7c0000; valaddr_reg:x3; val_offset:33522*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33522*0 + 3*422*FLEN/8, x4, x1, x2)

inst_11175:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7e0000; valaddr_reg:x3; val_offset:33525*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33525*0 + 3*423*FLEN/8, x4, x1, x2)

inst_11176:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7f0000; valaddr_reg:x3; val_offset:33528*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33528*0 + 3*424*FLEN/8, x4, x1, x2)

inst_11177:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7f8000; valaddr_reg:x3; val_offset:33531*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33531*0 + 3*425*FLEN/8, x4, x1, x2)

inst_11178:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7fc000; valaddr_reg:x3; val_offset:33534*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33534*0 + 3*426*FLEN/8, x4, x1, x2)

inst_11179:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7fe000; valaddr_reg:x3; val_offset:33537*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33537*0 + 3*427*FLEN/8, x4, x1, x2)

inst_11180:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7ff000; valaddr_reg:x3; val_offset:33540*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33540*0 + 3*428*FLEN/8, x4, x1, x2)

inst_11181:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7ff800; valaddr_reg:x3; val_offset:33543*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33543*0 + 3*429*FLEN/8, x4, x1, x2)

inst_11182:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7ffc00; valaddr_reg:x3; val_offset:33546*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33546*0 + 3*430*FLEN/8, x4, x1, x2)

inst_11183:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7ffe00; valaddr_reg:x3; val_offset:33549*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33549*0 + 3*431*FLEN/8, x4, x1, x2)

inst_11184:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7fff00; valaddr_reg:x3; val_offset:33552*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33552*0 + 3*432*FLEN/8, x4, x1, x2)

inst_11185:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7fff80; valaddr_reg:x3; val_offset:33555*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33555*0 + 3*433*FLEN/8, x4, x1, x2)

inst_11186:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7fffc0; valaddr_reg:x3; val_offset:33558*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33558*0 + 3*434*FLEN/8, x4, x1, x2)

inst_11187:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7fffe0; valaddr_reg:x3; val_offset:33561*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33561*0 + 3*435*FLEN/8, x4, x1, x2)

inst_11188:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7ffff0; valaddr_reg:x3; val_offset:33564*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33564*0 + 3*436*FLEN/8, x4, x1, x2)

inst_11189:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7ffff8; valaddr_reg:x3; val_offset:33567*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33567*0 + 3*437*FLEN/8, x4, x1, x2)

inst_11190:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7ffffc; valaddr_reg:x3; val_offset:33570*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33570*0 + 3*438*FLEN/8, x4, x1, x2)

inst_11191:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7ffffe; valaddr_reg:x3; val_offset:33573*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33573*0 + 3*439*FLEN/8, x4, x1, x2)

inst_11192:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xda and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x6d7fffff; valaddr_reg:x3; val_offset:33576*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33576*0 + 3*440*FLEN/8, x4, x1, x2)

inst_11193:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f000001; valaddr_reg:x3; val_offset:33579*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33579*0 + 3*441*FLEN/8, x4, x1, x2)

inst_11194:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f000003; valaddr_reg:x3; val_offset:33582*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33582*0 + 3*442*FLEN/8, x4, x1, x2)

inst_11195:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f000007; valaddr_reg:x3; val_offset:33585*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33585*0 + 3*443*FLEN/8, x4, x1, x2)

inst_11196:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f199999; valaddr_reg:x3; val_offset:33588*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33588*0 + 3*444*FLEN/8, x4, x1, x2)

inst_11197:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f249249; valaddr_reg:x3; val_offset:33591*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33591*0 + 3*445*FLEN/8, x4, x1, x2)

inst_11198:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f333333; valaddr_reg:x3; val_offset:33594*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33594*0 + 3*446*FLEN/8, x4, x1, x2)

inst_11199:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:33597*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33597*0 + 3*447*FLEN/8, x4, x1, x2)

inst_11200:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:33600*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33600*0 + 3*448*FLEN/8, x4, x1, x2)

inst_11201:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f444444; valaddr_reg:x3; val_offset:33603*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33603*0 + 3*449*FLEN/8, x4, x1, x2)

inst_11202:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:33606*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33606*0 + 3*450*FLEN/8, x4, x1, x2)

inst_11203:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:33609*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33609*0 + 3*451*FLEN/8, x4, x1, x2)

inst_11204:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f666666; valaddr_reg:x3; val_offset:33612*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33612*0 + 3*452*FLEN/8, x4, x1, x2)

inst_11205:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:33615*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33615*0 + 3*453*FLEN/8, x4, x1, x2)

inst_11206:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:33618*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33618*0 + 3*454*FLEN/8, x4, x1, x2)

inst_11207:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:33621*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33621*0 + 3*455*FLEN/8, x4, x1, x2)

inst_11208:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adcc1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0b8520 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adcc1; op2val:0x408b8520;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:33624*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33624*0 + 3*456*FLEN/8, x4, x1, x2)

inst_11209:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4800000; valaddr_reg:x3; val_offset:33627*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33627*0 + 3*457*FLEN/8, x4, x1, x2)

inst_11210:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4800001; valaddr_reg:x3; val_offset:33630*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33630*0 + 3*458*FLEN/8, x4, x1, x2)

inst_11211:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4800003; valaddr_reg:x3; val_offset:33633*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33633*0 + 3*459*FLEN/8, x4, x1, x2)

inst_11212:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4800007; valaddr_reg:x3; val_offset:33636*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33636*0 + 3*460*FLEN/8, x4, x1, x2)

inst_11213:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb480000f; valaddr_reg:x3; val_offset:33639*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33639*0 + 3*461*FLEN/8, x4, x1, x2)

inst_11214:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb480001f; valaddr_reg:x3; val_offset:33642*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33642*0 + 3*462*FLEN/8, x4, x1, x2)

inst_11215:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb480003f; valaddr_reg:x3; val_offset:33645*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33645*0 + 3*463*FLEN/8, x4, x1, x2)

inst_11216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb480007f; valaddr_reg:x3; val_offset:33648*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33648*0 + 3*464*FLEN/8, x4, x1, x2)

inst_11217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb48000ff; valaddr_reg:x3; val_offset:33651*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33651*0 + 3*465*FLEN/8, x4, x1, x2)

inst_11218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb48001ff; valaddr_reg:x3; val_offset:33654*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33654*0 + 3*466*FLEN/8, x4, x1, x2)

inst_11219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb48003ff; valaddr_reg:x3; val_offset:33657*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33657*0 + 3*467*FLEN/8, x4, x1, x2)

inst_11220:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb48007ff; valaddr_reg:x3; val_offset:33660*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33660*0 + 3*468*FLEN/8, x4, x1, x2)

inst_11221:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4800fff; valaddr_reg:x3; val_offset:33663*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33663*0 + 3*469*FLEN/8, x4, x1, x2)

inst_11222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4801fff; valaddr_reg:x3; val_offset:33666*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33666*0 + 3*470*FLEN/8, x4, x1, x2)

inst_11223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4803fff; valaddr_reg:x3; val_offset:33669*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33669*0 + 3*471*FLEN/8, x4, x1, x2)

inst_11224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4807fff; valaddr_reg:x3; val_offset:33672*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33672*0 + 3*472*FLEN/8, x4, x1, x2)

inst_11225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb480ffff; valaddr_reg:x3; val_offset:33675*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33675*0 + 3*473*FLEN/8, x4, x1, x2)

inst_11226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb481ffff; valaddr_reg:x3; val_offset:33678*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33678*0 + 3*474*FLEN/8, x4, x1, x2)

inst_11227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb483ffff; valaddr_reg:x3; val_offset:33681*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33681*0 + 3*475*FLEN/8, x4, x1, x2)

inst_11228:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb487ffff; valaddr_reg:x3; val_offset:33684*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33684*0 + 3*476*FLEN/8, x4, x1, x2)

inst_11229:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb48fffff; valaddr_reg:x3; val_offset:33687*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33687*0 + 3*477*FLEN/8, x4, x1, x2)

inst_11230:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb49fffff; valaddr_reg:x3; val_offset:33690*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33690*0 + 3*478*FLEN/8, x4, x1, x2)

inst_11231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4bfffff; valaddr_reg:x3; val_offset:33693*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33693*0 + 3*479*FLEN/8, x4, x1, x2)

inst_11232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4c00000; valaddr_reg:x3; val_offset:33696*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33696*0 + 3*480*FLEN/8, x4, x1, x2)

inst_11233:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4e00000; valaddr_reg:x3; val_offset:33699*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33699*0 + 3*481*FLEN/8, x4, x1, x2)

inst_11234:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4f00000; valaddr_reg:x3; val_offset:33702*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33702*0 + 3*482*FLEN/8, x4, x1, x2)

inst_11235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4f80000; valaddr_reg:x3; val_offset:33705*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33705*0 + 3*483*FLEN/8, x4, x1, x2)

inst_11236:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fc0000; valaddr_reg:x3; val_offset:33708*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33708*0 + 3*484*FLEN/8, x4, x1, x2)

inst_11237:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fe0000; valaddr_reg:x3; val_offset:33711*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33711*0 + 3*485*FLEN/8, x4, x1, x2)

inst_11238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4ff0000; valaddr_reg:x3; val_offset:33714*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33714*0 + 3*486*FLEN/8, x4, x1, x2)

inst_11239:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4ff8000; valaddr_reg:x3; val_offset:33717*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33717*0 + 3*487*FLEN/8, x4, x1, x2)

inst_11240:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4ffc000; valaddr_reg:x3; val_offset:33720*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33720*0 + 3*488*FLEN/8, x4, x1, x2)

inst_11241:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4ffe000; valaddr_reg:x3; val_offset:33723*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33723*0 + 3*489*FLEN/8, x4, x1, x2)

inst_11242:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fff000; valaddr_reg:x3; val_offset:33726*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33726*0 + 3*490*FLEN/8, x4, x1, x2)

inst_11243:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fff800; valaddr_reg:x3; val_offset:33729*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33729*0 + 3*491*FLEN/8, x4, x1, x2)

inst_11244:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fffc00; valaddr_reg:x3; val_offset:33732*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33732*0 + 3*492*FLEN/8, x4, x1, x2)

inst_11245:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fffe00; valaddr_reg:x3; val_offset:33735*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33735*0 + 3*493*FLEN/8, x4, x1, x2)

inst_11246:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4ffff00; valaddr_reg:x3; val_offset:33738*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33738*0 + 3*494*FLEN/8, x4, x1, x2)

inst_11247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4ffff80; valaddr_reg:x3; val_offset:33741*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33741*0 + 3*495*FLEN/8, x4, x1, x2)

inst_11248:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4ffffc0; valaddr_reg:x3; val_offset:33744*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33744*0 + 3*496*FLEN/8, x4, x1, x2)

inst_11249:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4ffffe0; valaddr_reg:x3; val_offset:33747*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33747*0 + 3*497*FLEN/8, x4, x1, x2)

inst_11250:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fffff0; valaddr_reg:x3; val_offset:33750*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33750*0 + 3*498*FLEN/8, x4, x1, x2)

inst_11251:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fffff8; valaddr_reg:x3; val_offset:33753*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33753*0 + 3*499*FLEN/8, x4, x1, x2)

inst_11252:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fffffc; valaddr_reg:x3; val_offset:33756*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33756*0 + 3*500*FLEN/8, x4, x1, x2)

inst_11253:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4fffffe; valaddr_reg:x3; val_offset:33759*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33759*0 + 3*501*FLEN/8, x4, x1, x2)

inst_11254:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x69 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xb4ffffff; valaddr_reg:x3; val_offset:33762*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33762*0 + 3*502*FLEN/8, x4, x1, x2)

inst_11255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbf800001; valaddr_reg:x3; val_offset:33765*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33765*0 + 3*503*FLEN/8, x4, x1, x2)

inst_11256:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbf800003; valaddr_reg:x3; val_offset:33768*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33768*0 + 3*504*FLEN/8, x4, x1, x2)

inst_11257:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbf800007; valaddr_reg:x3; val_offset:33771*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33771*0 + 3*505*FLEN/8, x4, x1, x2)

inst_11258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbf999999; valaddr_reg:x3; val_offset:33774*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33774*0 + 3*506*FLEN/8, x4, x1, x2)

inst_11259:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:33777*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33777*0 + 3*507*FLEN/8, x4, x1, x2)

inst_11260:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:33780*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33780*0 + 3*508*FLEN/8, x4, x1, x2)

inst_11261:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:33783*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33783*0 + 3*509*FLEN/8, x4, x1, x2)

inst_11262:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:33786*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33786*0 + 3*510*FLEN/8, x4, x1, x2)

inst_11263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:33789*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33789*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_11264:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:33792*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33792*0 + 3*512*FLEN/8, x4, x1, x2)

inst_11265:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:33795*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33795*0 + 3*513*FLEN/8, x4, x1, x2)

inst_11266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:33798*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33798*0 + 3*514*FLEN/8, x4, x1, x2)

inst_11267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:33801*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33801*0 + 3*515*FLEN/8, x4, x1, x2)

inst_11268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:33804*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33804*0 + 3*516*FLEN/8, x4, x1, x2)

inst_11269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:33807*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33807*0 + 3*517*FLEN/8, x4, x1, x2)

inst_11270:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6adeed and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0b83d6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6adeed; op2val:0x808b83d6;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:33810*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33810*0 + 3*518*FLEN/8, x4, x1, x2)

inst_11271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:33813*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33813*0 + 3*519*FLEN/8, x4, x1, x2)

inst_11272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:33816*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33816*0 + 3*520*FLEN/8, x4, x1, x2)

inst_11273:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:33819*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33819*0 + 3*521*FLEN/8, x4, x1, x2)

inst_11274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:33822*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33822*0 + 3*522*FLEN/8, x4, x1, x2)

inst_11275:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:33825*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33825*0 + 3*523*FLEN/8, x4, x1, x2)

inst_11276:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:33828*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33828*0 + 3*524*FLEN/8, x4, x1, x2)

inst_11277:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:33831*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33831*0 + 3*525*FLEN/8, x4, x1, x2)

inst_11278:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:33834*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33834*0 + 3*526*FLEN/8, x4, x1, x2)

inst_11279:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:33837*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33837*0 + 3*527*FLEN/8, x4, x1, x2)

inst_11280:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:33840*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33840*0 + 3*528*FLEN/8, x4, x1, x2)

inst_11281:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:33843*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33843*0 + 3*529*FLEN/8, x4, x1, x2)

inst_11282:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:33846*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33846*0 + 3*530*FLEN/8, x4, x1, x2)

inst_11283:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:33849*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33849*0 + 3*531*FLEN/8, x4, x1, x2)

inst_11284:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:33852*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33852*0 + 3*532*FLEN/8, x4, x1, x2)

inst_11285:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:33855*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33855*0 + 3*533*FLEN/8, x4, x1, x2)

inst_11286:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:33858*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33858*0 + 3*534*FLEN/8, x4, x1, x2)

inst_11287:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87800000; valaddr_reg:x3; val_offset:33861*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33861*0 + 3*535*FLEN/8, x4, x1, x2)

inst_11288:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87800001; valaddr_reg:x3; val_offset:33864*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33864*0 + 3*536*FLEN/8, x4, x1, x2)

inst_11289:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87800003; valaddr_reg:x3; val_offset:33867*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33867*0 + 3*537*FLEN/8, x4, x1, x2)

inst_11290:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87800007; valaddr_reg:x3; val_offset:33870*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33870*0 + 3*538*FLEN/8, x4, x1, x2)

inst_11291:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x8780000f; valaddr_reg:x3; val_offset:33873*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33873*0 + 3*539*FLEN/8, x4, x1, x2)

inst_11292:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x8780001f; valaddr_reg:x3; val_offset:33876*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33876*0 + 3*540*FLEN/8, x4, x1, x2)

inst_11293:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x8780003f; valaddr_reg:x3; val_offset:33879*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33879*0 + 3*541*FLEN/8, x4, x1, x2)

inst_11294:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x8780007f; valaddr_reg:x3; val_offset:33882*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33882*0 + 3*542*FLEN/8, x4, x1, x2)

inst_11295:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x878000ff; valaddr_reg:x3; val_offset:33885*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33885*0 + 3*543*FLEN/8, x4, x1, x2)

inst_11296:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x878001ff; valaddr_reg:x3; val_offset:33888*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33888*0 + 3*544*FLEN/8, x4, x1, x2)

inst_11297:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x878003ff; valaddr_reg:x3; val_offset:33891*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33891*0 + 3*545*FLEN/8, x4, x1, x2)

inst_11298:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x878007ff; valaddr_reg:x3; val_offset:33894*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33894*0 + 3*546*FLEN/8, x4, x1, x2)

inst_11299:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87800fff; valaddr_reg:x3; val_offset:33897*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33897*0 + 3*547*FLEN/8, x4, x1, x2)

inst_11300:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87801fff; valaddr_reg:x3; val_offset:33900*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33900*0 + 3*548*FLEN/8, x4, x1, x2)

inst_11301:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87803fff; valaddr_reg:x3; val_offset:33903*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33903*0 + 3*549*FLEN/8, x4, x1, x2)

inst_11302:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87807fff; valaddr_reg:x3; val_offset:33906*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33906*0 + 3*550*FLEN/8, x4, x1, x2)

inst_11303:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x8780ffff; valaddr_reg:x3; val_offset:33909*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33909*0 + 3*551*FLEN/8, x4, x1, x2)

inst_11304:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x8781ffff; valaddr_reg:x3; val_offset:33912*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33912*0 + 3*552*FLEN/8, x4, x1, x2)

inst_11305:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x8783ffff; valaddr_reg:x3; val_offset:33915*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33915*0 + 3*553*FLEN/8, x4, x1, x2)

inst_11306:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x8787ffff; valaddr_reg:x3; val_offset:33918*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33918*0 + 3*554*FLEN/8, x4, x1, x2)

inst_11307:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x878fffff; valaddr_reg:x3; val_offset:33921*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33921*0 + 3*555*FLEN/8, x4, x1, x2)

inst_11308:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x879fffff; valaddr_reg:x3; val_offset:33924*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33924*0 + 3*556*FLEN/8, x4, x1, x2)

inst_11309:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87bfffff; valaddr_reg:x3; val_offset:33927*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33927*0 + 3*557*FLEN/8, x4, x1, x2)

inst_11310:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87c00000; valaddr_reg:x3; val_offset:33930*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33930*0 + 3*558*FLEN/8, x4, x1, x2)

inst_11311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87e00000; valaddr_reg:x3; val_offset:33933*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33933*0 + 3*559*FLEN/8, x4, x1, x2)

inst_11312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87f00000; valaddr_reg:x3; val_offset:33936*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33936*0 + 3*560*FLEN/8, x4, x1, x2)

inst_11313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87f80000; valaddr_reg:x3; val_offset:33939*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33939*0 + 3*561*FLEN/8, x4, x1, x2)

inst_11314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fc0000; valaddr_reg:x3; val_offset:33942*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33942*0 + 3*562*FLEN/8, x4, x1, x2)

inst_11315:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fe0000; valaddr_reg:x3; val_offset:33945*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33945*0 + 3*563*FLEN/8, x4, x1, x2)

inst_11316:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87ff0000; valaddr_reg:x3; val_offset:33948*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33948*0 + 3*564*FLEN/8, x4, x1, x2)

inst_11317:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87ff8000; valaddr_reg:x3; val_offset:33951*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33951*0 + 3*565*FLEN/8, x4, x1, x2)

inst_11318:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87ffc000; valaddr_reg:x3; val_offset:33954*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33954*0 + 3*566*FLEN/8, x4, x1, x2)

inst_11319:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87ffe000; valaddr_reg:x3; val_offset:33957*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33957*0 + 3*567*FLEN/8, x4, x1, x2)

inst_11320:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fff000; valaddr_reg:x3; val_offset:33960*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33960*0 + 3*568*FLEN/8, x4, x1, x2)

inst_11321:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fff800; valaddr_reg:x3; val_offset:33963*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33963*0 + 3*569*FLEN/8, x4, x1, x2)

inst_11322:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fffc00; valaddr_reg:x3; val_offset:33966*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33966*0 + 3*570*FLEN/8, x4, x1, x2)

inst_11323:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fffe00; valaddr_reg:x3; val_offset:33969*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33969*0 + 3*571*FLEN/8, x4, x1, x2)

inst_11324:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87ffff00; valaddr_reg:x3; val_offset:33972*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33972*0 + 3*572*FLEN/8, x4, x1, x2)

inst_11325:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87ffff80; valaddr_reg:x3; val_offset:33975*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33975*0 + 3*573*FLEN/8, x4, x1, x2)

inst_11326:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87ffffc0; valaddr_reg:x3; val_offset:33978*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33978*0 + 3*574*FLEN/8, x4, x1, x2)

inst_11327:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87ffffe0; valaddr_reg:x3; val_offset:33981*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33981*0 + 3*575*FLEN/8, x4, x1, x2)

inst_11328:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fffff0; valaddr_reg:x3; val_offset:33984*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33984*0 + 3*576*FLEN/8, x4, x1, x2)

inst_11329:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fffff8; valaddr_reg:x3; val_offset:33987*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33987*0 + 3*577*FLEN/8, x4, x1, x2)

inst_11330:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fffffc; valaddr_reg:x3; val_offset:33990*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33990*0 + 3*578*FLEN/8, x4, x1, x2)

inst_11331:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87fffffe; valaddr_reg:x3; val_offset:33993*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33993*0 + 3*579*FLEN/8, x4, x1, x2)

inst_11332:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6c9ad9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6c9ad9; op2val:0x80000000;
op3val:0x87ffffff; valaddr_reg:x3; val_offset:33996*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33996*0 + 3*580*FLEN/8, x4, x1, x2)

inst_11333:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:33999*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 33999*0 + 3*581*FLEN/8, x4, x1, x2)

inst_11334:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:34002*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34002*0 + 3*582*FLEN/8, x4, x1, x2)

inst_11335:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:34005*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34005*0 + 3*583*FLEN/8, x4, x1, x2)

inst_11336:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:34008*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34008*0 + 3*584*FLEN/8, x4, x1, x2)

inst_11337:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:34011*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34011*0 + 3*585*FLEN/8, x4, x1, x2)

inst_11338:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:34014*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34014*0 + 3*586*FLEN/8, x4, x1, x2)

inst_11339:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:34017*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34017*0 + 3*587*FLEN/8, x4, x1, x2)

inst_11340:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:34020*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34020*0 + 3*588*FLEN/8, x4, x1, x2)

inst_11341:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:34023*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34023*0 + 3*589*FLEN/8, x4, x1, x2)

inst_11342:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:34026*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34026*0 + 3*590*FLEN/8, x4, x1, x2)

inst_11343:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:34029*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34029*0 + 3*591*FLEN/8, x4, x1, x2)

inst_11344:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:34032*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34032*0 + 3*592*FLEN/8, x4, x1, x2)

inst_11345:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:34035*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34035*0 + 3*593*FLEN/8, x4, x1, x2)

inst_11346:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:34038*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34038*0 + 3*594*FLEN/8, x4, x1, x2)

inst_11347:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:34041*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34041*0 + 3*595*FLEN/8, x4, x1, x2)

inst_11348:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:34044*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34044*0 + 3*596*FLEN/8, x4, x1, x2)

inst_11349:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2000000; valaddr_reg:x3; val_offset:34047*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34047*0 + 3*597*FLEN/8, x4, x1, x2)

inst_11350:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2000001; valaddr_reg:x3; val_offset:34050*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34050*0 + 3*598*FLEN/8, x4, x1, x2)

inst_11351:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2000003; valaddr_reg:x3; val_offset:34053*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34053*0 + 3*599*FLEN/8, x4, x1, x2)

inst_11352:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2000007; valaddr_reg:x3; val_offset:34056*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34056*0 + 3*600*FLEN/8, x4, x1, x2)

inst_11353:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x200000f; valaddr_reg:x3; val_offset:34059*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34059*0 + 3*601*FLEN/8, x4, x1, x2)

inst_11354:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x200001f; valaddr_reg:x3; val_offset:34062*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34062*0 + 3*602*FLEN/8, x4, x1, x2)

inst_11355:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x200003f; valaddr_reg:x3; val_offset:34065*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34065*0 + 3*603*FLEN/8, x4, x1, x2)

inst_11356:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x200007f; valaddr_reg:x3; val_offset:34068*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34068*0 + 3*604*FLEN/8, x4, x1, x2)

inst_11357:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x20000ff; valaddr_reg:x3; val_offset:34071*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34071*0 + 3*605*FLEN/8, x4, x1, x2)

inst_11358:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x20001ff; valaddr_reg:x3; val_offset:34074*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34074*0 + 3*606*FLEN/8, x4, x1, x2)

inst_11359:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x20003ff; valaddr_reg:x3; val_offset:34077*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34077*0 + 3*607*FLEN/8, x4, x1, x2)

inst_11360:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x20007ff; valaddr_reg:x3; val_offset:34080*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34080*0 + 3*608*FLEN/8, x4, x1, x2)

inst_11361:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2000fff; valaddr_reg:x3; val_offset:34083*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34083*0 + 3*609*FLEN/8, x4, x1, x2)

inst_11362:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2001fff; valaddr_reg:x3; val_offset:34086*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34086*0 + 3*610*FLEN/8, x4, x1, x2)

inst_11363:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2003fff; valaddr_reg:x3; val_offset:34089*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34089*0 + 3*611*FLEN/8, x4, x1, x2)

inst_11364:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2007fff; valaddr_reg:x3; val_offset:34092*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34092*0 + 3*612*FLEN/8, x4, x1, x2)

inst_11365:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x200ffff; valaddr_reg:x3; val_offset:34095*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34095*0 + 3*613*FLEN/8, x4, x1, x2)

inst_11366:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x201ffff; valaddr_reg:x3; val_offset:34098*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34098*0 + 3*614*FLEN/8, x4, x1, x2)

inst_11367:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x203ffff; valaddr_reg:x3; val_offset:34101*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34101*0 + 3*615*FLEN/8, x4, x1, x2)

inst_11368:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x207ffff; valaddr_reg:x3; val_offset:34104*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34104*0 + 3*616*FLEN/8, x4, x1, x2)

inst_11369:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x20fffff; valaddr_reg:x3; val_offset:34107*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34107*0 + 3*617*FLEN/8, x4, x1, x2)

inst_11370:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x21fffff; valaddr_reg:x3; val_offset:34110*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34110*0 + 3*618*FLEN/8, x4, x1, x2)

inst_11371:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x23fffff; valaddr_reg:x3; val_offset:34113*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34113*0 + 3*619*FLEN/8, x4, x1, x2)

inst_11372:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2400000; valaddr_reg:x3; val_offset:34116*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34116*0 + 3*620*FLEN/8, x4, x1, x2)

inst_11373:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2600000; valaddr_reg:x3; val_offset:34119*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34119*0 + 3*621*FLEN/8, x4, x1, x2)

inst_11374:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2700000; valaddr_reg:x3; val_offset:34122*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34122*0 + 3*622*FLEN/8, x4, x1, x2)

inst_11375:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x2780000; valaddr_reg:x3; val_offset:34125*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34125*0 + 3*623*FLEN/8, x4, x1, x2)

inst_11376:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27c0000; valaddr_reg:x3; val_offset:34128*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34128*0 + 3*624*FLEN/8, x4, x1, x2)

inst_11377:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27e0000; valaddr_reg:x3; val_offset:34131*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34131*0 + 3*625*FLEN/8, x4, x1, x2)

inst_11378:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27f0000; valaddr_reg:x3; val_offset:34134*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34134*0 + 3*626*FLEN/8, x4, x1, x2)

inst_11379:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27f8000; valaddr_reg:x3; val_offset:34137*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34137*0 + 3*627*FLEN/8, x4, x1, x2)

inst_11380:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27fc000; valaddr_reg:x3; val_offset:34140*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34140*0 + 3*628*FLEN/8, x4, x1, x2)

inst_11381:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27fe000; valaddr_reg:x3; val_offset:34143*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34143*0 + 3*629*FLEN/8, x4, x1, x2)

inst_11382:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ff000; valaddr_reg:x3; val_offset:34146*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34146*0 + 3*630*FLEN/8, x4, x1, x2)

inst_11383:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ff800; valaddr_reg:x3; val_offset:34149*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34149*0 + 3*631*FLEN/8, x4, x1, x2)

inst_11384:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ffc00; valaddr_reg:x3; val_offset:34152*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34152*0 + 3*632*FLEN/8, x4, x1, x2)

inst_11385:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ffe00; valaddr_reg:x3; val_offset:34155*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34155*0 + 3*633*FLEN/8, x4, x1, x2)

inst_11386:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27fff00; valaddr_reg:x3; val_offset:34158*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34158*0 + 3*634*FLEN/8, x4, x1, x2)

inst_11387:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27fff80; valaddr_reg:x3; val_offset:34161*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34161*0 + 3*635*FLEN/8, x4, x1, x2)

inst_11388:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27fffc0; valaddr_reg:x3; val_offset:34164*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34164*0 + 3*636*FLEN/8, x4, x1, x2)

inst_11389:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27fffe0; valaddr_reg:x3; val_offset:34167*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34167*0 + 3*637*FLEN/8, x4, x1, x2)

inst_11390:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ffff0; valaddr_reg:x3; val_offset:34170*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34170*0 + 3*638*FLEN/8, x4, x1, x2)

inst_11391:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ffff8; valaddr_reg:x3; val_offset:34173*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34173*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_11392:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ffffc; valaddr_reg:x3; val_offset:34176*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34176*0 + 3*640*FLEN/8, x4, x1, x2)

inst_11393:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27ffffe; valaddr_reg:x3; val_offset:34179*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34179*0 + 3*641*FLEN/8, x4, x1, x2)

inst_11394:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ca617; op2val:0x0;
op3val:0x27fffff; valaddr_reg:x3; val_offset:34182*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34182*0 + 3*642*FLEN/8, x4, x1, x2)

inst_11395:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000000; valaddr_reg:x3; val_offset:34185*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34185*0 + 3*643*FLEN/8, x4, x1, x2)

inst_11396:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000001; valaddr_reg:x3; val_offset:34188*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34188*0 + 3*644*FLEN/8, x4, x1, x2)

inst_11397:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000003; valaddr_reg:x3; val_offset:34191*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34191*0 + 3*645*FLEN/8, x4, x1, x2)

inst_11398:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000007; valaddr_reg:x3; val_offset:34194*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34194*0 + 3*646*FLEN/8, x4, x1, x2)

inst_11399:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00000f; valaddr_reg:x3; val_offset:34197*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34197*0 + 3*647*FLEN/8, x4, x1, x2)

inst_11400:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00001f; valaddr_reg:x3; val_offset:34200*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34200*0 + 3*648*FLEN/8, x4, x1, x2)

inst_11401:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00003f; valaddr_reg:x3; val_offset:34203*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34203*0 + 3*649*FLEN/8, x4, x1, x2)

inst_11402:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00007f; valaddr_reg:x3; val_offset:34206*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34206*0 + 3*650*FLEN/8, x4, x1, x2)

inst_11403:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0000ff; valaddr_reg:x3; val_offset:34209*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34209*0 + 3*651*FLEN/8, x4, x1, x2)

inst_11404:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0001ff; valaddr_reg:x3; val_offset:34212*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34212*0 + 3*652*FLEN/8, x4, x1, x2)

inst_11405:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0003ff; valaddr_reg:x3; val_offset:34215*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34215*0 + 3*653*FLEN/8, x4, x1, x2)

inst_11406:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0007ff; valaddr_reg:x3; val_offset:34218*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34218*0 + 3*654*FLEN/8, x4, x1, x2)

inst_11407:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad000fff; valaddr_reg:x3; val_offset:34221*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34221*0 + 3*655*FLEN/8, x4, x1, x2)

inst_11408:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad001fff; valaddr_reg:x3; val_offset:34224*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34224*0 + 3*656*FLEN/8, x4, x1, x2)

inst_11409:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad003fff; valaddr_reg:x3; val_offset:34227*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34227*0 + 3*657*FLEN/8, x4, x1, x2)

inst_11410:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad007fff; valaddr_reg:x3; val_offset:34230*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34230*0 + 3*658*FLEN/8, x4, x1, x2)

inst_11411:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad00ffff; valaddr_reg:x3; val_offset:34233*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34233*0 + 3*659*FLEN/8, x4, x1, x2)

inst_11412:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad01ffff; valaddr_reg:x3; val_offset:34236*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34236*0 + 3*660*FLEN/8, x4, x1, x2)

inst_11413:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad03ffff; valaddr_reg:x3; val_offset:34239*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34239*0 + 3*661*FLEN/8, x4, x1, x2)

inst_11414:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad07ffff; valaddr_reg:x3; val_offset:34242*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34242*0 + 3*662*FLEN/8, x4, x1, x2)

inst_11415:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad0fffff; valaddr_reg:x3; val_offset:34245*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34245*0 + 3*663*FLEN/8, x4, x1, x2)

inst_11416:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad1fffff; valaddr_reg:x3; val_offset:34248*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34248*0 + 3*664*FLEN/8, x4, x1, x2)

inst_11417:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad3fffff; valaddr_reg:x3; val_offset:34251*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34251*0 + 3*665*FLEN/8, x4, x1, x2)

inst_11418:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad400000; valaddr_reg:x3; val_offset:34254*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34254*0 + 3*666*FLEN/8, x4, x1, x2)

inst_11419:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad600000; valaddr_reg:x3; val_offset:34257*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34257*0 + 3*667*FLEN/8, x4, x1, x2)

inst_11420:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad700000; valaddr_reg:x3; val_offset:34260*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34260*0 + 3*668*FLEN/8, x4, x1, x2)

inst_11421:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad780000; valaddr_reg:x3; val_offset:34263*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34263*0 + 3*669*FLEN/8, x4, x1, x2)

inst_11422:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7c0000; valaddr_reg:x3; val_offset:34266*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34266*0 + 3*670*FLEN/8, x4, x1, x2)

inst_11423:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7e0000; valaddr_reg:x3; val_offset:34269*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34269*0 + 3*671*FLEN/8, x4, x1, x2)

inst_11424:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7f0000; valaddr_reg:x3; val_offset:34272*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34272*0 + 3*672*FLEN/8, x4, x1, x2)

inst_11425:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7f8000; valaddr_reg:x3; val_offset:34275*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34275*0 + 3*673*FLEN/8, x4, x1, x2)

inst_11426:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fc000; valaddr_reg:x3; val_offset:34278*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34278*0 + 3*674*FLEN/8, x4, x1, x2)

inst_11427:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fe000; valaddr_reg:x3; val_offset:34281*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34281*0 + 3*675*FLEN/8, x4, x1, x2)

inst_11428:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ff000; valaddr_reg:x3; val_offset:34284*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34284*0 + 3*676*FLEN/8, x4, x1, x2)

inst_11429:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ff800; valaddr_reg:x3; val_offset:34287*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34287*0 + 3*677*FLEN/8, x4, x1, x2)

inst_11430:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffc00; valaddr_reg:x3; val_offset:34290*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34290*0 + 3*678*FLEN/8, x4, x1, x2)

inst_11431:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffe00; valaddr_reg:x3; val_offset:34293*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34293*0 + 3*679*FLEN/8, x4, x1, x2)

inst_11432:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fff00; valaddr_reg:x3; val_offset:34296*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34296*0 + 3*680*FLEN/8, x4, x1, x2)

inst_11433:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fff80; valaddr_reg:x3; val_offset:34299*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34299*0 + 3*681*FLEN/8, x4, x1, x2)

inst_11434:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fffc0; valaddr_reg:x3; val_offset:34302*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34302*0 + 3*682*FLEN/8, x4, x1, x2)

inst_11435:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fffe0; valaddr_reg:x3; val_offset:34305*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34305*0 + 3*683*FLEN/8, x4, x1, x2)

inst_11436:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffff0; valaddr_reg:x3; val_offset:34308*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34308*0 + 3*684*FLEN/8, x4, x1, x2)

inst_11437:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffff8; valaddr_reg:x3; val_offset:34311*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34311*0 + 3*685*FLEN/8, x4, x1, x2)

inst_11438:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffffc; valaddr_reg:x3; val_offset:34314*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34314*0 + 3*686*FLEN/8, x4, x1, x2)

inst_11439:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7ffffe; valaddr_reg:x3; val_offset:34317*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34317*0 + 3*687*FLEN/8, x4, x1, x2)

inst_11440:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x5a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xad7fffff; valaddr_reg:x3; val_offset:34320*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34320*0 + 3*688*FLEN/8, x4, x1, x2)

inst_11441:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbf800001; valaddr_reg:x3; val_offset:34323*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34323*0 + 3*689*FLEN/8, x4, x1, x2)

inst_11442:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbf800003; valaddr_reg:x3; val_offset:34326*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34326*0 + 3*690*FLEN/8, x4, x1, x2)

inst_11443:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbf800007; valaddr_reg:x3; val_offset:34329*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34329*0 + 3*691*FLEN/8, x4, x1, x2)

inst_11444:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbf999999; valaddr_reg:x3; val_offset:34332*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34332*0 + 3*692*FLEN/8, x4, x1, x2)

inst_11445:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:34335*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34335*0 + 3*693*FLEN/8, x4, x1, x2)

inst_11446:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:34338*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34338*0 + 3*694*FLEN/8, x4, x1, x2)

inst_11447:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:34341*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34341*0 + 3*695*FLEN/8, x4, x1, x2)

inst_11448:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:34344*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34344*0 + 3*696*FLEN/8, x4, x1, x2)

inst_11449:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:34347*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34347*0 + 3*697*FLEN/8, x4, x1, x2)

inst_11450:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:34350*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34350*0 + 3*698*FLEN/8, x4, x1, x2)

inst_11451:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:34353*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34353*0 + 3*699*FLEN/8, x4, x1, x2)

inst_11452:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:34356*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34356*0 + 3*700*FLEN/8, x4, x1, x2)

inst_11453:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:34359*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34359*0 + 3*701*FLEN/8, x4, x1, x2)

inst_11454:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:34362*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34362*0 + 3*702*FLEN/8, x4, x1, x2)

inst_11455:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:34365*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34365*0 + 3*703*FLEN/8, x4, x1, x2)

inst_11456:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cc13b and fs2 == 1 and fe2 == 0x01 and fm2 == 0x0a67a0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cc13b; op2val:0x808a67a0;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:34368*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34368*0 + 3*704*FLEN/8, x4, x1, x2)

inst_11457:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000000; valaddr_reg:x3; val_offset:34371*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34371*0 + 3*705*FLEN/8, x4, x1, x2)

inst_11458:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000001; valaddr_reg:x3; val_offset:34374*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34374*0 + 3*706*FLEN/8, x4, x1, x2)

inst_11459:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000003; valaddr_reg:x3; val_offset:34377*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34377*0 + 3*707*FLEN/8, x4, x1, x2)

inst_11460:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000007; valaddr_reg:x3; val_offset:34380*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34380*0 + 3*708*FLEN/8, x4, x1, x2)

inst_11461:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800000f; valaddr_reg:x3; val_offset:34383*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34383*0 + 3*709*FLEN/8, x4, x1, x2)

inst_11462:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800001f; valaddr_reg:x3; val_offset:34386*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34386*0 + 3*710*FLEN/8, x4, x1, x2)

inst_11463:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800003f; valaddr_reg:x3; val_offset:34389*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34389*0 + 3*711*FLEN/8, x4, x1, x2)

inst_11464:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800007f; valaddr_reg:x3; val_offset:34392*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34392*0 + 3*712*FLEN/8, x4, x1, x2)

inst_11465:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380000ff; valaddr_reg:x3; val_offset:34395*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34395*0 + 3*713*FLEN/8, x4, x1, x2)

inst_11466:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380001ff; valaddr_reg:x3; val_offset:34398*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34398*0 + 3*714*FLEN/8, x4, x1, x2)

inst_11467:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380003ff; valaddr_reg:x3; val_offset:34401*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34401*0 + 3*715*FLEN/8, x4, x1, x2)

inst_11468:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380007ff; valaddr_reg:x3; val_offset:34404*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34404*0 + 3*716*FLEN/8, x4, x1, x2)

inst_11469:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38000fff; valaddr_reg:x3; val_offset:34407*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34407*0 + 3*717*FLEN/8, x4, x1, x2)

inst_11470:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38001fff; valaddr_reg:x3; val_offset:34410*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34410*0 + 3*718*FLEN/8, x4, x1, x2)

inst_11471:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38003fff; valaddr_reg:x3; val_offset:34413*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34413*0 + 3*719*FLEN/8, x4, x1, x2)

inst_11472:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38007fff; valaddr_reg:x3; val_offset:34416*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34416*0 + 3*720*FLEN/8, x4, x1, x2)

inst_11473:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3800ffff; valaddr_reg:x3; val_offset:34419*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34419*0 + 3*721*FLEN/8, x4, x1, x2)

inst_11474:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3801ffff; valaddr_reg:x3; val_offset:34422*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34422*0 + 3*722*FLEN/8, x4, x1, x2)

inst_11475:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3803ffff; valaddr_reg:x3; val_offset:34425*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34425*0 + 3*723*FLEN/8, x4, x1, x2)

inst_11476:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3807ffff; valaddr_reg:x3; val_offset:34428*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34428*0 + 3*724*FLEN/8, x4, x1, x2)

inst_11477:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x380fffff; valaddr_reg:x3; val_offset:34431*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34431*0 + 3*725*FLEN/8, x4, x1, x2)

inst_11478:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x381fffff; valaddr_reg:x3; val_offset:34434*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34434*0 + 3*726*FLEN/8, x4, x1, x2)

inst_11479:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x383fffff; valaddr_reg:x3; val_offset:34437*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34437*0 + 3*727*FLEN/8, x4, x1, x2)

inst_11480:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38400000; valaddr_reg:x3; val_offset:34440*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34440*0 + 3*728*FLEN/8, x4, x1, x2)

inst_11481:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38600000; valaddr_reg:x3; val_offset:34443*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34443*0 + 3*729*FLEN/8, x4, x1, x2)

inst_11482:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38700000; valaddr_reg:x3; val_offset:34446*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34446*0 + 3*730*FLEN/8, x4, x1, x2)

inst_11483:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x38780000; valaddr_reg:x3; val_offset:34449*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34449*0 + 3*731*FLEN/8, x4, x1, x2)

inst_11484:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387c0000; valaddr_reg:x3; val_offset:34452*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34452*0 + 3*732*FLEN/8, x4, x1, x2)

inst_11485:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387e0000; valaddr_reg:x3; val_offset:34455*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34455*0 + 3*733*FLEN/8, x4, x1, x2)

inst_11486:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387f0000; valaddr_reg:x3; val_offset:34458*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34458*0 + 3*734*FLEN/8, x4, x1, x2)

inst_11487:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387f8000; valaddr_reg:x3; val_offset:34461*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34461*0 + 3*735*FLEN/8, x4, x1, x2)

inst_11488:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fc000; valaddr_reg:x3; val_offset:34464*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34464*0 + 3*736*FLEN/8, x4, x1, x2)

inst_11489:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fe000; valaddr_reg:x3; val_offset:34467*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34467*0 + 3*737*FLEN/8, x4, x1, x2)

inst_11490:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ff000; valaddr_reg:x3; val_offset:34470*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34470*0 + 3*738*FLEN/8, x4, x1, x2)

inst_11491:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ff800; valaddr_reg:x3; val_offset:34473*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34473*0 + 3*739*FLEN/8, x4, x1, x2)

inst_11492:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffc00; valaddr_reg:x3; val_offset:34476*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34476*0 + 3*740*FLEN/8, x4, x1, x2)

inst_11493:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffe00; valaddr_reg:x3; val_offset:34479*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34479*0 + 3*741*FLEN/8, x4, x1, x2)

inst_11494:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fff00; valaddr_reg:x3; val_offset:34482*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34482*0 + 3*742*FLEN/8, x4, x1, x2)

inst_11495:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fff80; valaddr_reg:x3; val_offset:34485*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34485*0 + 3*743*FLEN/8, x4, x1, x2)

inst_11496:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fffc0; valaddr_reg:x3; val_offset:34488*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34488*0 + 3*744*FLEN/8, x4, x1, x2)

inst_11497:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fffe0; valaddr_reg:x3; val_offset:34491*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34491*0 + 3*745*FLEN/8, x4, x1, x2)

inst_11498:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffff0; valaddr_reg:x3; val_offset:34494*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34494*0 + 3*746*FLEN/8, x4, x1, x2)

inst_11499:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffff8; valaddr_reg:x3; val_offset:34497*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34497*0 + 3*747*FLEN/8, x4, x1, x2)

inst_11500:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffffc; valaddr_reg:x3; val_offset:34500*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34500*0 + 3*748*FLEN/8, x4, x1, x2)

inst_11501:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387ffffe; valaddr_reg:x3; val_offset:34503*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34503*0 + 3*749*FLEN/8, x4, x1, x2)

inst_11502:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x70 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x387fffff; valaddr_reg:x3; val_offset:34506*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34506*0 + 3*750*FLEN/8, x4, x1, x2)

inst_11503:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3f800001; valaddr_reg:x3; val_offset:34509*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34509*0 + 3*751*FLEN/8, x4, x1, x2)

inst_11504:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3f800003; valaddr_reg:x3; val_offset:34512*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34512*0 + 3*752*FLEN/8, x4, x1, x2)

inst_11505:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3f800007; valaddr_reg:x3; val_offset:34515*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34515*0 + 3*753*FLEN/8, x4, x1, x2)

inst_11506:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3f999999; valaddr_reg:x3; val_offset:34518*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34518*0 + 3*754*FLEN/8, x4, x1, x2)

inst_11507:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:34521*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34521*0 + 3*755*FLEN/8, x4, x1, x2)

inst_11508:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:34524*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34524*0 + 3*756*FLEN/8, x4, x1, x2)

inst_11509:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:34527*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34527*0 + 3*757*FLEN/8, x4, x1, x2)

inst_11510:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:34530*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34530*0 + 3*758*FLEN/8, x4, x1, x2)

inst_11511:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:34533*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34533*0 + 3*759*FLEN/8, x4, x1, x2)

inst_11512:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:34536*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34536*0 + 3*760*FLEN/8, x4, x1, x2)

inst_11513:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:34539*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34539*0 + 3*761*FLEN/8, x4, x1, x2)

inst_11514:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:34542*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34542*0 + 3*762*FLEN/8, x4, x1, x2)

inst_11515:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:34545*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34545*0 + 3*763*FLEN/8, x4, x1, x2)

inst_11516:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:34548*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34548*0 + 3*764*FLEN/8, x4, x1, x2)

inst_11517:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:34551*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34551*0 + 3*765*FLEN/8, x4, x1, x2)

inst_11518:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cd713 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5adc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cd713; op2val:0x8a5adc;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:34554*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34554*0 + 3*766*FLEN/8, x4, x1, x2)

inst_11519:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6cfe66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6cfe66; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:34557*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 34557*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931135424,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931135456,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931135472,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931135480,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931135484,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931135486,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(931135487,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2119936799,32,FLEN)
NAN_BOXED(9776022,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448256,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448257,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448259,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448263,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448271,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448287,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448319,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448383,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448511,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204448767,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204449279,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204450303,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204452351,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204456447,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204464639,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204481023,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204513791,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204579327,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204710399,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3204972543,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3205496831,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3206545407,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3208642559,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3208642560,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3210739712,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3211788288,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212312576,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212574720,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212705792,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212771328,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212804096,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212820480,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212828672,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212832768,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212834816,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212835840,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836352,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836608,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836736,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836800,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836832,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836848,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836856,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836860,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836862,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836863,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2120174677,32,FLEN)
NAN_BOXED(2157100760,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141888,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141889,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141891,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141895,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141903,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141919,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141951,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142015,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142143,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142399,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142911,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399143935,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399145983,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399150079,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399158271,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399174655,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399207423,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399272959,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399404031,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399666175,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2400190463,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2401239039,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336191,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336192,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2405433344,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2406481920,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407006208,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407268352,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407399424,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407464960,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407497728,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407514112,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407522304,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407526400,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407528448,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529472,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529984,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530240,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530368,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530432,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530464,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530480,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530488,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530492,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530494,32,FLEN)
NAN_BOXED(2120236802,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530495,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081216,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081217,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081219,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081223,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081231,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081247,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081279,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081343,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081471,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211081727,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211082239,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211083263,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211085311,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211089407,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211097599,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211113983,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211146751,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211212287,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211343359,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4211605503,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4212129791,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4213178367,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4215275519,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4215275520,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4217372672,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4218421248,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4218945536,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219207680,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219338752,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219404288,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219437056,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219453440,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219461632,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219465728,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219467776,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219468800,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469312,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469568,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469696,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469760,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469792,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469808,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469816,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469820,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469822,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4219469823,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2120510131,32,FLEN)
NAN_BOXED(3230627072,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205248,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205249,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205251,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205255,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205263,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205279,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205311,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205375,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205503,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825205759,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825206271,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825207295,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825209343,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825213439,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825221631,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825238015,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825270783,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825336319,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825467391,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3825729535,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3826253823,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3827302399,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3829399551,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3829399552,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3831496704,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3832545280,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833069568,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833331712,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833462784,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833528320,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833561088,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833577472,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833585664,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833589760,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833591808,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833592832,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593344,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593600,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593728,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593792,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593824,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593840,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593848,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593852,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593854,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(3833593855,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2120604641,32,FLEN)
NAN_BOXED(3230568088,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530496,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530497,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530499,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530503,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530511,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530527,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530559,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530623,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530751,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407531007,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407531519,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407532543,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407534591,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407538687,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407546879,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407563263,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407596031,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407661567,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407792639,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2408054783,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2408579071,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2409627647,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2411724799,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2411724800,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2413821952,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2414870528,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415394816,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415656960,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415788032,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415853568,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415886336,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415902720,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415910912,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415915008,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415917056,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918080,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918592,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918848,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918976,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919040,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919072,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919088,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919096,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919100,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919102,32,FLEN)
NAN_BOXED(2120806032,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919103,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2120849949,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828716544,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828716545,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828716547,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828716551,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828716559,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828716575,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828716607,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828716671,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828716799,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828717055,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828717567,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828718591,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828720639,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828724735,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828732927,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828749311,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828782079,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828847615,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1828978687,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1829240831,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1829765119,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1830813695,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1832910847,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1832910848,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1835008000,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1836056576,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1836580864,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1836843008,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1836974080,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837039616,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837072384,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837088768,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837096960,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837101056,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837103104,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837104128,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837104640,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837104896,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837105024,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837105088,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837105120,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837105136,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837105144,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837105148,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837105150,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(1837105151,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2120932545,32,FLEN)
NAN_BOXED(1082885408,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287488,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287489,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287491,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287495,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287503,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287519,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287551,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287615,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287743,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028287999,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028288511,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028289535,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028291583,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028295679,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028303871,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028320255,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028353023,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028418559,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028549631,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3028811775,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3029336063,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3030384639,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3032481791,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3032481792,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3034578944,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3035627520,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036151808,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036413952,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036545024,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036610560,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036643328,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036659712,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036667904,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036672000,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036674048,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036675072,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036675584,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036675840,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036675968,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036676032,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036676064,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036676080,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036676088,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036676092,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036676094,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3036676095,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2120933101,32,FLEN)
NAN_BOXED(2156626902,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312768,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312769,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312771,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312775,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312783,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312799,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312831,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312895,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273313023,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273313279,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273313791,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273314815,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273316863,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273320959,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273329151,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273345535,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273378303,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273443839,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273574911,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273837055,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2274361343,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2275409919,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2277507071,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2277507072,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2279604224,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2280652800,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281177088,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281439232,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281570304,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281635840,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281668608,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281684992,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281693184,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281697280,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281699328,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281700352,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281700864,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701120,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701248,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701312,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701344,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701360,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701368,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701372,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701374,32,FLEN)
NAN_BOXED(2121046745,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701375,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554432,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554433,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554435,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554439,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554447,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554463,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554495,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554559,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554687,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554943,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33555455,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33556479,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33558527,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33562623,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33570815,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33587199,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33619967,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33685503,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33816575,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(34078719,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(34603007,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(35651583,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(37748735,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(37748736,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(39845888,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(40894464,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41418752,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41680896,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41811968,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41877504,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41910272,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41926656,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41934848,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41938944,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41940992,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942016,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942528,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942784,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942912,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942976,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943008,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943024,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943032,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943036,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943038,32,FLEN)
NAN_BOXED(2121049623,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943039,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458368,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458369,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458371,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458375,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458383,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458399,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458431,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458495,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458623,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902458879,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902459391,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902460415,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902462463,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902466559,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902474751,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902491135,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902523903,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902589439,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902720511,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2902982655,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2903506943,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2904555519,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2906652671,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2906652672,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2908749824,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2909798400,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910322688,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910584832,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910715904,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910781440,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910814208,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910830592,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910838784,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910842880,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910844928,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910845952,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846464,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846720,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846848,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846912,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846944,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846960,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846968,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846972,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846974,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(2910846975,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2121056571,32,FLEN)
NAN_BOXED(2156554144,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524096,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524097,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524099,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524103,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524111,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524127,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524159,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524223,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524351,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939524607,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939525119,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939526143,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939528191,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939532287,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939540479,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939556863,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939589631,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939655167,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(939786239,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(940048383,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(940572671,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(941621247,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(943718399,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(943718400,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(945815552,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(946864128,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947388416,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947650560,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947781632,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947847168,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947879936,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947896320,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947904512,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947908608,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947910656,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947911680,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912192,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912448,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912576,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912640,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912672,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912688,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912696,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912700,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912702,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(947912703,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2121062163,32,FLEN)
NAN_BOXED(9067228,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2121072230,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
