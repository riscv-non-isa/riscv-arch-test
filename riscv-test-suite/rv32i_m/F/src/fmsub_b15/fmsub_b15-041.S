
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_30720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:92160*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92160*0 + 3*0*FLEN/8, x4, x1, x2)

inst_30721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:92163*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92163*0 + 3*1*FLEN/8, x4, x1, x2)

inst_30722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:92166*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92166*0 + 3*2*FLEN/8, x4, x1, x2)

inst_30723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:92169*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92169*0 + 3*3*FLEN/8, x4, x1, x2)

inst_30724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:92172*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92172*0 + 3*4*FLEN/8, x4, x1, x2)

inst_30725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:92175*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92175*0 + 3*5*FLEN/8, x4, x1, x2)

inst_30726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:92178*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92178*0 + 3*6*FLEN/8, x4, x1, x2)

inst_30727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:92181*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92181*0 + 3*7*FLEN/8, x4, x1, x2)

inst_30728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:92184*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92184*0 + 3*8*FLEN/8, x4, x1, x2)

inst_30729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:92187*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92187*0 + 3*9*FLEN/8, x4, x1, x2)

inst_30730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd000000; valaddr_reg:x3; val_offset:92190*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92190*0 + 3*10*FLEN/8, x4, x1, x2)

inst_30731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd000001; valaddr_reg:x3; val_offset:92193*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92193*0 + 3*11*FLEN/8, x4, x1, x2)

inst_30732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd000003; valaddr_reg:x3; val_offset:92196*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92196*0 + 3*12*FLEN/8, x4, x1, x2)

inst_30733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd000007; valaddr_reg:x3; val_offset:92199*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92199*0 + 3*13*FLEN/8, x4, x1, x2)

inst_30734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd00000f; valaddr_reg:x3; val_offset:92202*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92202*0 + 3*14*FLEN/8, x4, x1, x2)

inst_30735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd00001f; valaddr_reg:x3; val_offset:92205*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92205*0 + 3*15*FLEN/8, x4, x1, x2)

inst_30736:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd00003f; valaddr_reg:x3; val_offset:92208*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92208*0 + 3*16*FLEN/8, x4, x1, x2)

inst_30737:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd00007f; valaddr_reg:x3; val_offset:92211*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92211*0 + 3*17*FLEN/8, x4, x1, x2)

inst_30738:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd0000ff; valaddr_reg:x3; val_offset:92214*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92214*0 + 3*18*FLEN/8, x4, x1, x2)

inst_30739:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd0001ff; valaddr_reg:x3; val_offset:92217*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92217*0 + 3*19*FLEN/8, x4, x1, x2)

inst_30740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd0003ff; valaddr_reg:x3; val_offset:92220*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92220*0 + 3*20*FLEN/8, x4, x1, x2)

inst_30741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd0007ff; valaddr_reg:x3; val_offset:92223*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92223*0 + 3*21*FLEN/8, x4, x1, x2)

inst_30742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd000fff; valaddr_reg:x3; val_offset:92226*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92226*0 + 3*22*FLEN/8, x4, x1, x2)

inst_30743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd001fff; valaddr_reg:x3; val_offset:92229*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92229*0 + 3*23*FLEN/8, x4, x1, x2)

inst_30744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd003fff; valaddr_reg:x3; val_offset:92232*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92232*0 + 3*24*FLEN/8, x4, x1, x2)

inst_30745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd007fff; valaddr_reg:x3; val_offset:92235*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92235*0 + 3*25*FLEN/8, x4, x1, x2)

inst_30746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd00ffff; valaddr_reg:x3; val_offset:92238*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92238*0 + 3*26*FLEN/8, x4, x1, x2)

inst_30747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd01ffff; valaddr_reg:x3; val_offset:92241*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92241*0 + 3*27*FLEN/8, x4, x1, x2)

inst_30748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd03ffff; valaddr_reg:x3; val_offset:92244*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92244*0 + 3*28*FLEN/8, x4, x1, x2)

inst_30749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd07ffff; valaddr_reg:x3; val_offset:92247*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92247*0 + 3*29*FLEN/8, x4, x1, x2)

inst_30750:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd0fffff; valaddr_reg:x3; val_offset:92250*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92250*0 + 3*30*FLEN/8, x4, x1, x2)

inst_30751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd1fffff; valaddr_reg:x3; val_offset:92253*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92253*0 + 3*31*FLEN/8, x4, x1, x2)

inst_30752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd3fffff; valaddr_reg:x3; val_offset:92256*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92256*0 + 3*32*FLEN/8, x4, x1, x2)

inst_30753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd400000; valaddr_reg:x3; val_offset:92259*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92259*0 + 3*33*FLEN/8, x4, x1, x2)

inst_30754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd600000; valaddr_reg:x3; val_offset:92262*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92262*0 + 3*34*FLEN/8, x4, x1, x2)

inst_30755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd700000; valaddr_reg:x3; val_offset:92265*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92265*0 + 3*35*FLEN/8, x4, x1, x2)

inst_30756:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd780000; valaddr_reg:x3; val_offset:92268*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92268*0 + 3*36*FLEN/8, x4, x1, x2)

inst_30757:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7c0000; valaddr_reg:x3; val_offset:92271*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92271*0 + 3*37*FLEN/8, x4, x1, x2)

inst_30758:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7e0000; valaddr_reg:x3; val_offset:92274*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92274*0 + 3*38*FLEN/8, x4, x1, x2)

inst_30759:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7f0000; valaddr_reg:x3; val_offset:92277*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92277*0 + 3*39*FLEN/8, x4, x1, x2)

inst_30760:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7f8000; valaddr_reg:x3; val_offset:92280*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92280*0 + 3*40*FLEN/8, x4, x1, x2)

inst_30761:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7fc000; valaddr_reg:x3; val_offset:92283*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92283*0 + 3*41*FLEN/8, x4, x1, x2)

inst_30762:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7fe000; valaddr_reg:x3; val_offset:92286*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92286*0 + 3*42*FLEN/8, x4, x1, x2)

inst_30763:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7ff000; valaddr_reg:x3; val_offset:92289*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92289*0 + 3*43*FLEN/8, x4, x1, x2)

inst_30764:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7ff800; valaddr_reg:x3; val_offset:92292*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92292*0 + 3*44*FLEN/8, x4, x1, x2)

inst_30765:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7ffc00; valaddr_reg:x3; val_offset:92295*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92295*0 + 3*45*FLEN/8, x4, x1, x2)

inst_30766:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7ffe00; valaddr_reg:x3; val_offset:92298*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92298*0 + 3*46*FLEN/8, x4, x1, x2)

inst_30767:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7fff00; valaddr_reg:x3; val_offset:92301*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92301*0 + 3*47*FLEN/8, x4, x1, x2)

inst_30768:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7fff80; valaddr_reg:x3; val_offset:92304*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92304*0 + 3*48*FLEN/8, x4, x1, x2)

inst_30769:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7fffc0; valaddr_reg:x3; val_offset:92307*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92307*0 + 3*49*FLEN/8, x4, x1, x2)

inst_30770:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7fffe0; valaddr_reg:x3; val_offset:92310*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92310*0 + 3*50*FLEN/8, x4, x1, x2)

inst_30771:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7ffff0; valaddr_reg:x3; val_offset:92313*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92313*0 + 3*51*FLEN/8, x4, x1, x2)

inst_30772:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7ffff8; valaddr_reg:x3; val_offset:92316*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92316*0 + 3*52*FLEN/8, x4, x1, x2)

inst_30773:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7ffffc; valaddr_reg:x3; val_offset:92319*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92319*0 + 3*53*FLEN/8, x4, x1, x2)

inst_30774:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7ffffe; valaddr_reg:x3; val_offset:92322*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92322*0 + 3*54*FLEN/8, x4, x1, x2)

inst_30775:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x9a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xcd7fffff; valaddr_reg:x3; val_offset:92325*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92325*0 + 3*55*FLEN/8, x4, x1, x2)

inst_30776:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0800000; valaddr_reg:x3; val_offset:92328*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92328*0 + 3*56*FLEN/8, x4, x1, x2)

inst_30777:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0800001; valaddr_reg:x3; val_offset:92331*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92331*0 + 3*57*FLEN/8, x4, x1, x2)

inst_30778:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0800003; valaddr_reg:x3; val_offset:92334*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92334*0 + 3*58*FLEN/8, x4, x1, x2)

inst_30779:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0800007; valaddr_reg:x3; val_offset:92337*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92337*0 + 3*59*FLEN/8, x4, x1, x2)

inst_30780:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb080000f; valaddr_reg:x3; val_offset:92340*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92340*0 + 3*60*FLEN/8, x4, x1, x2)

inst_30781:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb080001f; valaddr_reg:x3; val_offset:92343*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92343*0 + 3*61*FLEN/8, x4, x1, x2)

inst_30782:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb080003f; valaddr_reg:x3; val_offset:92346*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92346*0 + 3*62*FLEN/8, x4, x1, x2)

inst_30783:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb080007f; valaddr_reg:x3; val_offset:92349*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92349*0 + 3*63*FLEN/8, x4, x1, x2)

inst_30784:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb08000ff; valaddr_reg:x3; val_offset:92352*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92352*0 + 3*64*FLEN/8, x4, x1, x2)

inst_30785:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb08001ff; valaddr_reg:x3; val_offset:92355*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92355*0 + 3*65*FLEN/8, x4, x1, x2)

inst_30786:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb08003ff; valaddr_reg:x3; val_offset:92358*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92358*0 + 3*66*FLEN/8, x4, x1, x2)

inst_30787:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb08007ff; valaddr_reg:x3; val_offset:92361*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92361*0 + 3*67*FLEN/8, x4, x1, x2)

inst_30788:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0800fff; valaddr_reg:x3; val_offset:92364*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92364*0 + 3*68*FLEN/8, x4, x1, x2)

inst_30789:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0801fff; valaddr_reg:x3; val_offset:92367*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92367*0 + 3*69*FLEN/8, x4, x1, x2)

inst_30790:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0803fff; valaddr_reg:x3; val_offset:92370*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92370*0 + 3*70*FLEN/8, x4, x1, x2)

inst_30791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0807fff; valaddr_reg:x3; val_offset:92373*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92373*0 + 3*71*FLEN/8, x4, x1, x2)

inst_30792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb080ffff; valaddr_reg:x3; val_offset:92376*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92376*0 + 3*72*FLEN/8, x4, x1, x2)

inst_30793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb081ffff; valaddr_reg:x3; val_offset:92379*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92379*0 + 3*73*FLEN/8, x4, x1, x2)

inst_30794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb083ffff; valaddr_reg:x3; val_offset:92382*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92382*0 + 3*74*FLEN/8, x4, x1, x2)

inst_30795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb087ffff; valaddr_reg:x3; val_offset:92385*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92385*0 + 3*75*FLEN/8, x4, x1, x2)

inst_30796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb08fffff; valaddr_reg:x3; val_offset:92388*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92388*0 + 3*76*FLEN/8, x4, x1, x2)

inst_30797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb09fffff; valaddr_reg:x3; val_offset:92391*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92391*0 + 3*77*FLEN/8, x4, x1, x2)

inst_30798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0bfffff; valaddr_reg:x3; val_offset:92394*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92394*0 + 3*78*FLEN/8, x4, x1, x2)

inst_30799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0c00000; valaddr_reg:x3; val_offset:92397*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92397*0 + 3*79*FLEN/8, x4, x1, x2)

inst_30800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0e00000; valaddr_reg:x3; val_offset:92400*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92400*0 + 3*80*FLEN/8, x4, x1, x2)

inst_30801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0f00000; valaddr_reg:x3; val_offset:92403*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92403*0 + 3*81*FLEN/8, x4, x1, x2)

inst_30802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0f80000; valaddr_reg:x3; val_offset:92406*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92406*0 + 3*82*FLEN/8, x4, x1, x2)

inst_30803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fc0000; valaddr_reg:x3; val_offset:92409*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92409*0 + 3*83*FLEN/8, x4, x1, x2)

inst_30804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fe0000; valaddr_reg:x3; val_offset:92412*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92412*0 + 3*84*FLEN/8, x4, x1, x2)

inst_30805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0ff0000; valaddr_reg:x3; val_offset:92415*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92415*0 + 3*85*FLEN/8, x4, x1, x2)

inst_30806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0ff8000; valaddr_reg:x3; val_offset:92418*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92418*0 + 3*86*FLEN/8, x4, x1, x2)

inst_30807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0ffc000; valaddr_reg:x3; val_offset:92421*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92421*0 + 3*87*FLEN/8, x4, x1, x2)

inst_30808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0ffe000; valaddr_reg:x3; val_offset:92424*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92424*0 + 3*88*FLEN/8, x4, x1, x2)

inst_30809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fff000; valaddr_reg:x3; val_offset:92427*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92427*0 + 3*89*FLEN/8, x4, x1, x2)

inst_30810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fff800; valaddr_reg:x3; val_offset:92430*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92430*0 + 3*90*FLEN/8, x4, x1, x2)

inst_30811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fffc00; valaddr_reg:x3; val_offset:92433*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92433*0 + 3*91*FLEN/8, x4, x1, x2)

inst_30812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fffe00; valaddr_reg:x3; val_offset:92436*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92436*0 + 3*92*FLEN/8, x4, x1, x2)

inst_30813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0ffff00; valaddr_reg:x3; val_offset:92439*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92439*0 + 3*93*FLEN/8, x4, x1, x2)

inst_30814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0ffff80; valaddr_reg:x3; val_offset:92442*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92442*0 + 3*94*FLEN/8, x4, x1, x2)

inst_30815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0ffffc0; valaddr_reg:x3; val_offset:92445*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92445*0 + 3*95*FLEN/8, x4, x1, x2)

inst_30816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0ffffe0; valaddr_reg:x3; val_offset:92448*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92448*0 + 3*96*FLEN/8, x4, x1, x2)

inst_30817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fffff0; valaddr_reg:x3; val_offset:92451*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92451*0 + 3*97*FLEN/8, x4, x1, x2)

inst_30818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fffff8; valaddr_reg:x3; val_offset:92454*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92454*0 + 3*98*FLEN/8, x4, x1, x2)

inst_30819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fffffc; valaddr_reg:x3; val_offset:92457*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92457*0 + 3*99*FLEN/8, x4, x1, x2)

inst_30820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0fffffe; valaddr_reg:x3; val_offset:92460*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92460*0 + 3*100*FLEN/8, x4, x1, x2)

inst_30821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x61 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xb0ffffff; valaddr_reg:x3; val_offset:92463*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92463*0 + 3*101*FLEN/8, x4, x1, x2)

inst_30822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbf800001; valaddr_reg:x3; val_offset:92466*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92466*0 + 3*102*FLEN/8, x4, x1, x2)

inst_30823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbf800003; valaddr_reg:x3; val_offset:92469*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92469*0 + 3*103*FLEN/8, x4, x1, x2)

inst_30824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbf800007; valaddr_reg:x3; val_offset:92472*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92472*0 + 3*104*FLEN/8, x4, x1, x2)

inst_30825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbf999999; valaddr_reg:x3; val_offset:92475*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92475*0 + 3*105*FLEN/8, x4, x1, x2)

inst_30826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:92478*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92478*0 + 3*106*FLEN/8, x4, x1, x2)

inst_30827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:92481*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92481*0 + 3*107*FLEN/8, x4, x1, x2)

inst_30828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:92484*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92484*0 + 3*108*FLEN/8, x4, x1, x2)

inst_30829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:92487*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92487*0 + 3*109*FLEN/8, x4, x1, x2)

inst_30830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:92490*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92490*0 + 3*110*FLEN/8, x4, x1, x2)

inst_30831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:92493*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92493*0 + 3*111*FLEN/8, x4, x1, x2)

inst_30832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:92496*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92496*0 + 3*112*FLEN/8, x4, x1, x2)

inst_30833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:92499*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92499*0 + 3*113*FLEN/8, x4, x1, x2)

inst_30834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:92502*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92502*0 + 3*114*FLEN/8, x4, x1, x2)

inst_30835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:92505*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92505*0 + 3*115*FLEN/8, x4, x1, x2)

inst_30836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:92508*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92508*0 + 3*116*FLEN/8, x4, x1, x2)

inst_30837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bea64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x348a8f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bea64; op2val:0x80348a8f;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:92511*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92511*0 + 3*117*FLEN/8, x4, x1, x2)

inst_30838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:92514*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92514*0 + 3*118*FLEN/8, x4, x1, x2)

inst_30839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:92517*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92517*0 + 3*119*FLEN/8, x4, x1, x2)

inst_30840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:92520*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92520*0 + 3*120*FLEN/8, x4, x1, x2)

inst_30841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:92523*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92523*0 + 3*121*FLEN/8, x4, x1, x2)

inst_30842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:92526*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92526*0 + 3*122*FLEN/8, x4, x1, x2)

inst_30843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:92529*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92529*0 + 3*123*FLEN/8, x4, x1, x2)

inst_30844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:92532*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92532*0 + 3*124*FLEN/8, x4, x1, x2)

inst_30845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:92535*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92535*0 + 3*125*FLEN/8, x4, x1, x2)

inst_30846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:92538*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92538*0 + 3*126*FLEN/8, x4, x1, x2)

inst_30847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:92541*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92541*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_30848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:92544*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92544*0 + 3*128*FLEN/8, x4, x1, x2)

inst_30849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:92547*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92547*0 + 3*129*FLEN/8, x4, x1, x2)

inst_30850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:92550*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92550*0 + 3*130*FLEN/8, x4, x1, x2)

inst_30851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:92553*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92553*0 + 3*131*FLEN/8, x4, x1, x2)

inst_30852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:92556*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92556*0 + 3*132*FLEN/8, x4, x1, x2)

inst_30853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:92559*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92559*0 + 3*133*FLEN/8, x4, x1, x2)

inst_30854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c800000; valaddr_reg:x3; val_offset:92562*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92562*0 + 3*134*FLEN/8, x4, x1, x2)

inst_30855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c800001; valaddr_reg:x3; val_offset:92565*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92565*0 + 3*135*FLEN/8, x4, x1, x2)

inst_30856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c800003; valaddr_reg:x3; val_offset:92568*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92568*0 + 3*136*FLEN/8, x4, x1, x2)

inst_30857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c800007; valaddr_reg:x3; val_offset:92571*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92571*0 + 3*137*FLEN/8, x4, x1, x2)

inst_30858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c80000f; valaddr_reg:x3; val_offset:92574*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92574*0 + 3*138*FLEN/8, x4, x1, x2)

inst_30859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c80001f; valaddr_reg:x3; val_offset:92577*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92577*0 + 3*139*FLEN/8, x4, x1, x2)

inst_30860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c80003f; valaddr_reg:x3; val_offset:92580*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92580*0 + 3*140*FLEN/8, x4, x1, x2)

inst_30861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c80007f; valaddr_reg:x3; val_offset:92583*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92583*0 + 3*141*FLEN/8, x4, x1, x2)

inst_30862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c8000ff; valaddr_reg:x3; val_offset:92586*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92586*0 + 3*142*FLEN/8, x4, x1, x2)

inst_30863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c8001ff; valaddr_reg:x3; val_offset:92589*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92589*0 + 3*143*FLEN/8, x4, x1, x2)

inst_30864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c8003ff; valaddr_reg:x3; val_offset:92592*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92592*0 + 3*144*FLEN/8, x4, x1, x2)

inst_30865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c8007ff; valaddr_reg:x3; val_offset:92595*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92595*0 + 3*145*FLEN/8, x4, x1, x2)

inst_30866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c800fff; valaddr_reg:x3; val_offset:92598*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92598*0 + 3*146*FLEN/8, x4, x1, x2)

inst_30867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c801fff; valaddr_reg:x3; val_offset:92601*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92601*0 + 3*147*FLEN/8, x4, x1, x2)

inst_30868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c803fff; valaddr_reg:x3; val_offset:92604*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92604*0 + 3*148*FLEN/8, x4, x1, x2)

inst_30869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c807fff; valaddr_reg:x3; val_offset:92607*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92607*0 + 3*149*FLEN/8, x4, x1, x2)

inst_30870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c80ffff; valaddr_reg:x3; val_offset:92610*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92610*0 + 3*150*FLEN/8, x4, x1, x2)

inst_30871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c81ffff; valaddr_reg:x3; val_offset:92613*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92613*0 + 3*151*FLEN/8, x4, x1, x2)

inst_30872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c83ffff; valaddr_reg:x3; val_offset:92616*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92616*0 + 3*152*FLEN/8, x4, x1, x2)

inst_30873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c87ffff; valaddr_reg:x3; val_offset:92619*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92619*0 + 3*153*FLEN/8, x4, x1, x2)

inst_30874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c8fffff; valaddr_reg:x3; val_offset:92622*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92622*0 + 3*154*FLEN/8, x4, x1, x2)

inst_30875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8c9fffff; valaddr_reg:x3; val_offset:92625*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92625*0 + 3*155*FLEN/8, x4, x1, x2)

inst_30876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cbfffff; valaddr_reg:x3; val_offset:92628*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92628*0 + 3*156*FLEN/8, x4, x1, x2)

inst_30877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cc00000; valaddr_reg:x3; val_offset:92631*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92631*0 + 3*157*FLEN/8, x4, x1, x2)

inst_30878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8ce00000; valaddr_reg:x3; val_offset:92634*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92634*0 + 3*158*FLEN/8, x4, x1, x2)

inst_30879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cf00000; valaddr_reg:x3; val_offset:92637*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92637*0 + 3*159*FLEN/8, x4, x1, x2)

inst_30880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cf80000; valaddr_reg:x3; val_offset:92640*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92640*0 + 3*160*FLEN/8, x4, x1, x2)

inst_30881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfc0000; valaddr_reg:x3; val_offset:92643*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92643*0 + 3*161*FLEN/8, x4, x1, x2)

inst_30882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfe0000; valaddr_reg:x3; val_offset:92646*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92646*0 + 3*162*FLEN/8, x4, x1, x2)

inst_30883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cff0000; valaddr_reg:x3; val_offset:92649*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92649*0 + 3*163*FLEN/8, x4, x1, x2)

inst_30884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cff8000; valaddr_reg:x3; val_offset:92652*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92652*0 + 3*164*FLEN/8, x4, x1, x2)

inst_30885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cffc000; valaddr_reg:x3; val_offset:92655*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92655*0 + 3*165*FLEN/8, x4, x1, x2)

inst_30886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cffe000; valaddr_reg:x3; val_offset:92658*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92658*0 + 3*166*FLEN/8, x4, x1, x2)

inst_30887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfff000; valaddr_reg:x3; val_offset:92661*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92661*0 + 3*167*FLEN/8, x4, x1, x2)

inst_30888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfff800; valaddr_reg:x3; val_offset:92664*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92664*0 + 3*168*FLEN/8, x4, x1, x2)

inst_30889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfffc00; valaddr_reg:x3; val_offset:92667*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92667*0 + 3*169*FLEN/8, x4, x1, x2)

inst_30890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfffe00; valaddr_reg:x3; val_offset:92670*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92670*0 + 3*170*FLEN/8, x4, x1, x2)

inst_30891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cffff00; valaddr_reg:x3; val_offset:92673*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92673*0 + 3*171*FLEN/8, x4, x1, x2)

inst_30892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cffff80; valaddr_reg:x3; val_offset:92676*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92676*0 + 3*172*FLEN/8, x4, x1, x2)

inst_30893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cffffc0; valaddr_reg:x3; val_offset:92679*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92679*0 + 3*173*FLEN/8, x4, x1, x2)

inst_30894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cffffe0; valaddr_reg:x3; val_offset:92682*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92682*0 + 3*174*FLEN/8, x4, x1, x2)

inst_30895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfffff0; valaddr_reg:x3; val_offset:92685*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92685*0 + 3*175*FLEN/8, x4, x1, x2)

inst_30896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfffff8; valaddr_reg:x3; val_offset:92688*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92688*0 + 3*176*FLEN/8, x4, x1, x2)

inst_30897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfffffc; valaddr_reg:x3; val_offset:92691*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92691*0 + 3*177*FLEN/8, x4, x1, x2)

inst_30898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cfffffe; valaddr_reg:x3; val_offset:92694*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92694*0 + 3*178*FLEN/8, x4, x1, x2)

inst_30899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c6b54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c6b54; op2val:0x80000000;
op3val:0x8cffffff; valaddr_reg:x3; val_offset:92697*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92697*0 + 3*179*FLEN/8, x4, x1, x2)

inst_30900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24000000; valaddr_reg:x3; val_offset:92700*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92700*0 + 3*180*FLEN/8, x4, x1, x2)

inst_30901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24000001; valaddr_reg:x3; val_offset:92703*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92703*0 + 3*181*FLEN/8, x4, x1, x2)

inst_30902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24000003; valaddr_reg:x3; val_offset:92706*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92706*0 + 3*182*FLEN/8, x4, x1, x2)

inst_30903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24000007; valaddr_reg:x3; val_offset:92709*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92709*0 + 3*183*FLEN/8, x4, x1, x2)

inst_30904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x2400000f; valaddr_reg:x3; val_offset:92712*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92712*0 + 3*184*FLEN/8, x4, x1, x2)

inst_30905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x2400001f; valaddr_reg:x3; val_offset:92715*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92715*0 + 3*185*FLEN/8, x4, x1, x2)

inst_30906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x2400003f; valaddr_reg:x3; val_offset:92718*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92718*0 + 3*186*FLEN/8, x4, x1, x2)

inst_30907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x2400007f; valaddr_reg:x3; val_offset:92721*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92721*0 + 3*187*FLEN/8, x4, x1, x2)

inst_30908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x240000ff; valaddr_reg:x3; val_offset:92724*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92724*0 + 3*188*FLEN/8, x4, x1, x2)

inst_30909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x240001ff; valaddr_reg:x3; val_offset:92727*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92727*0 + 3*189*FLEN/8, x4, x1, x2)

inst_30910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x240003ff; valaddr_reg:x3; val_offset:92730*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92730*0 + 3*190*FLEN/8, x4, x1, x2)

inst_30911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x240007ff; valaddr_reg:x3; val_offset:92733*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92733*0 + 3*191*FLEN/8, x4, x1, x2)

inst_30912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24000fff; valaddr_reg:x3; val_offset:92736*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92736*0 + 3*192*FLEN/8, x4, x1, x2)

inst_30913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24001fff; valaddr_reg:x3; val_offset:92739*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92739*0 + 3*193*FLEN/8, x4, x1, x2)

inst_30914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24003fff; valaddr_reg:x3; val_offset:92742*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92742*0 + 3*194*FLEN/8, x4, x1, x2)

inst_30915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24007fff; valaddr_reg:x3; val_offset:92745*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92745*0 + 3*195*FLEN/8, x4, x1, x2)

inst_30916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x2400ffff; valaddr_reg:x3; val_offset:92748*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92748*0 + 3*196*FLEN/8, x4, x1, x2)

inst_30917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x2401ffff; valaddr_reg:x3; val_offset:92751*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92751*0 + 3*197*FLEN/8, x4, x1, x2)

inst_30918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x2403ffff; valaddr_reg:x3; val_offset:92754*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92754*0 + 3*198*FLEN/8, x4, x1, x2)

inst_30919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x2407ffff; valaddr_reg:x3; val_offset:92757*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92757*0 + 3*199*FLEN/8, x4, x1, x2)

inst_30920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x240fffff; valaddr_reg:x3; val_offset:92760*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92760*0 + 3*200*FLEN/8, x4, x1, x2)

inst_30921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x241fffff; valaddr_reg:x3; val_offset:92763*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92763*0 + 3*201*FLEN/8, x4, x1, x2)

inst_30922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x243fffff; valaddr_reg:x3; val_offset:92766*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92766*0 + 3*202*FLEN/8, x4, x1, x2)

inst_30923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24400000; valaddr_reg:x3; val_offset:92769*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92769*0 + 3*203*FLEN/8, x4, x1, x2)

inst_30924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24600000; valaddr_reg:x3; val_offset:92772*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92772*0 + 3*204*FLEN/8, x4, x1, x2)

inst_30925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24700000; valaddr_reg:x3; val_offset:92775*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92775*0 + 3*205*FLEN/8, x4, x1, x2)

inst_30926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x24780000; valaddr_reg:x3; val_offset:92778*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92778*0 + 3*206*FLEN/8, x4, x1, x2)

inst_30927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247c0000; valaddr_reg:x3; val_offset:92781*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92781*0 + 3*207*FLEN/8, x4, x1, x2)

inst_30928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247e0000; valaddr_reg:x3; val_offset:92784*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92784*0 + 3*208*FLEN/8, x4, x1, x2)

inst_30929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247f0000; valaddr_reg:x3; val_offset:92787*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92787*0 + 3*209*FLEN/8, x4, x1, x2)

inst_30930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247f8000; valaddr_reg:x3; val_offset:92790*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92790*0 + 3*210*FLEN/8, x4, x1, x2)

inst_30931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247fc000; valaddr_reg:x3; val_offset:92793*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92793*0 + 3*211*FLEN/8, x4, x1, x2)

inst_30932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247fe000; valaddr_reg:x3; val_offset:92796*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92796*0 + 3*212*FLEN/8, x4, x1, x2)

inst_30933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247ff000; valaddr_reg:x3; val_offset:92799*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92799*0 + 3*213*FLEN/8, x4, x1, x2)

inst_30934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247ff800; valaddr_reg:x3; val_offset:92802*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92802*0 + 3*214*FLEN/8, x4, x1, x2)

inst_30935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247ffc00; valaddr_reg:x3; val_offset:92805*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92805*0 + 3*215*FLEN/8, x4, x1, x2)

inst_30936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247ffe00; valaddr_reg:x3; val_offset:92808*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92808*0 + 3*216*FLEN/8, x4, x1, x2)

inst_30937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247fff00; valaddr_reg:x3; val_offset:92811*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92811*0 + 3*217*FLEN/8, x4, x1, x2)

inst_30938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247fff80; valaddr_reg:x3; val_offset:92814*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92814*0 + 3*218*FLEN/8, x4, x1, x2)

inst_30939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247fffc0; valaddr_reg:x3; val_offset:92817*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92817*0 + 3*219*FLEN/8, x4, x1, x2)

inst_30940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247fffe0; valaddr_reg:x3; val_offset:92820*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92820*0 + 3*220*FLEN/8, x4, x1, x2)

inst_30941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247ffff0; valaddr_reg:x3; val_offset:92823*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92823*0 + 3*221*FLEN/8, x4, x1, x2)

inst_30942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247ffff8; valaddr_reg:x3; val_offset:92826*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92826*0 + 3*222*FLEN/8, x4, x1, x2)

inst_30943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247ffffc; valaddr_reg:x3; val_offset:92829*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92829*0 + 3*223*FLEN/8, x4, x1, x2)

inst_30944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247ffffe; valaddr_reg:x3; val_offset:92832*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92832*0 + 3*224*FLEN/8, x4, x1, x2)

inst_30945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x48 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x247fffff; valaddr_reg:x3; val_offset:92835*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92835*0 + 3*225*FLEN/8, x4, x1, x2)

inst_30946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3f800001; valaddr_reg:x3; val_offset:92838*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92838*0 + 3*226*FLEN/8, x4, x1, x2)

inst_30947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3f800003; valaddr_reg:x3; val_offset:92841*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92841*0 + 3*227*FLEN/8, x4, x1, x2)

inst_30948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3f800007; valaddr_reg:x3; val_offset:92844*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92844*0 + 3*228*FLEN/8, x4, x1, x2)

inst_30949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3f999999; valaddr_reg:x3; val_offset:92847*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92847*0 + 3*229*FLEN/8, x4, x1, x2)

inst_30950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:92850*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92850*0 + 3*230*FLEN/8, x4, x1, x2)

inst_30951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:92853*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92853*0 + 3*231*FLEN/8, x4, x1, x2)

inst_30952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:92856*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92856*0 + 3*232*FLEN/8, x4, x1, x2)

inst_30953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:92859*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92859*0 + 3*233*FLEN/8, x4, x1, x2)

inst_30954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:92862*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92862*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:92865*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92865*0 + 3*235*FLEN/8, x4, x1, x2)

inst_30956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:92868*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92868*0 + 3*236*FLEN/8, x4, x1, x2)

inst_30957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:92871*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92871*0 + 3*237*FLEN/8, x4, x1, x2)

inst_30958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:92874*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92874*0 + 3*238*FLEN/8, x4, x1, x2)

inst_30959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:92877*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92877*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:92880*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92880*0 + 3*240*FLEN/8, x4, x1, x2)

inst_30961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c7dcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x345911 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1c7dcd; op2val:0x345911;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:92883*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92883*0 + 3*241*FLEN/8, x4, x1, x2)

inst_30962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:92886*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92886*0 + 3*242*FLEN/8, x4, x1, x2)

inst_30963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:92889*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92889*0 + 3*243*FLEN/8, x4, x1, x2)

inst_30964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:92892*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92892*0 + 3*244*FLEN/8, x4, x1, x2)

inst_30965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:92895*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92895*0 + 3*245*FLEN/8, x4, x1, x2)

inst_30966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:92898*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92898*0 + 3*246*FLEN/8, x4, x1, x2)

inst_30967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:92901*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92901*0 + 3*247*FLEN/8, x4, x1, x2)

inst_30968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:92904*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92904*0 + 3*248*FLEN/8, x4, x1, x2)

inst_30969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:92907*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92907*0 + 3*249*FLEN/8, x4, x1, x2)

inst_30970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:92910*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92910*0 + 3*250*FLEN/8, x4, x1, x2)

inst_30971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:92913*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92913*0 + 3*251*FLEN/8, x4, x1, x2)

inst_30972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:92916*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92916*0 + 3*252*FLEN/8, x4, x1, x2)

inst_30973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:92919*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92919*0 + 3*253*FLEN/8, x4, x1, x2)

inst_30974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:92922*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92922*0 + 3*254*FLEN/8, x4, x1, x2)

inst_30975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:92925*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92925*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_30976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:92928*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92928*0 + 3*256*FLEN/8, x4, x1, x2)

inst_30977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:92931*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92931*0 + 3*257*FLEN/8, x4, x1, x2)

inst_30978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80800000; valaddr_reg:x3; val_offset:92934*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92934*0 + 3*258*FLEN/8, x4, x1, x2)

inst_30979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:92937*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92937*0 + 3*259*FLEN/8, x4, x1, x2)

inst_30980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:92940*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92940*0 + 3*260*FLEN/8, x4, x1, x2)

inst_30981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:92943*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92943*0 + 3*261*FLEN/8, x4, x1, x2)

inst_30982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x8080000f; valaddr_reg:x3; val_offset:92946*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92946*0 + 3*262*FLEN/8, x4, x1, x2)

inst_30983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x8080001f; valaddr_reg:x3; val_offset:92949*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92949*0 + 3*263*FLEN/8, x4, x1, x2)

inst_30984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x8080003f; valaddr_reg:x3; val_offset:92952*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92952*0 + 3*264*FLEN/8, x4, x1, x2)

inst_30985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x8080007f; valaddr_reg:x3; val_offset:92955*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92955*0 + 3*265*FLEN/8, x4, x1, x2)

inst_30986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x808000ff; valaddr_reg:x3; val_offset:92958*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92958*0 + 3*266*FLEN/8, x4, x1, x2)

inst_30987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x808001ff; valaddr_reg:x3; val_offset:92961*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92961*0 + 3*267*FLEN/8, x4, x1, x2)

inst_30988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x808003ff; valaddr_reg:x3; val_offset:92964*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92964*0 + 3*268*FLEN/8, x4, x1, x2)

inst_30989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x808007ff; valaddr_reg:x3; val_offset:92967*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92967*0 + 3*269*FLEN/8, x4, x1, x2)

inst_30990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80800fff; valaddr_reg:x3; val_offset:92970*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92970*0 + 3*270*FLEN/8, x4, x1, x2)

inst_30991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80801fff; valaddr_reg:x3; val_offset:92973*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92973*0 + 3*271*FLEN/8, x4, x1, x2)

inst_30992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80803fff; valaddr_reg:x3; val_offset:92976*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92976*0 + 3*272*FLEN/8, x4, x1, x2)

inst_30993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80807fff; valaddr_reg:x3; val_offset:92979*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92979*0 + 3*273*FLEN/8, x4, x1, x2)

inst_30994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x8080ffff; valaddr_reg:x3; val_offset:92982*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92982*0 + 3*274*FLEN/8, x4, x1, x2)

inst_30995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x8081ffff; valaddr_reg:x3; val_offset:92985*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92985*0 + 3*275*FLEN/8, x4, x1, x2)

inst_30996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x8083ffff; valaddr_reg:x3; val_offset:92988*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92988*0 + 3*276*FLEN/8, x4, x1, x2)

inst_30997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x8087ffff; valaddr_reg:x3; val_offset:92991*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92991*0 + 3*277*FLEN/8, x4, x1, x2)

inst_30998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x808fffff; valaddr_reg:x3; val_offset:92994*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92994*0 + 3*278*FLEN/8, x4, x1, x2)

inst_30999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x809fffff; valaddr_reg:x3; val_offset:92997*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92997*0 + 3*279*FLEN/8, x4, x1, x2)

inst_31000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80bfffff; valaddr_reg:x3; val_offset:93000*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93000*0 + 3*280*FLEN/8, x4, x1, x2)

inst_31001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80c00000; valaddr_reg:x3; val_offset:93003*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93003*0 + 3*281*FLEN/8, x4, x1, x2)

inst_31002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80e00000; valaddr_reg:x3; val_offset:93006*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93006*0 + 3*282*FLEN/8, x4, x1, x2)

inst_31003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80f00000; valaddr_reg:x3; val_offset:93009*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93009*0 + 3*283*FLEN/8, x4, x1, x2)

inst_31004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80f80000; valaddr_reg:x3; val_offset:93012*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93012*0 + 3*284*FLEN/8, x4, x1, x2)

inst_31005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fc0000; valaddr_reg:x3; val_offset:93015*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93015*0 + 3*285*FLEN/8, x4, x1, x2)

inst_31006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fe0000; valaddr_reg:x3; val_offset:93018*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93018*0 + 3*286*FLEN/8, x4, x1, x2)

inst_31007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80ff0000; valaddr_reg:x3; val_offset:93021*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93021*0 + 3*287*FLEN/8, x4, x1, x2)

inst_31008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80ff8000; valaddr_reg:x3; val_offset:93024*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93024*0 + 3*288*FLEN/8, x4, x1, x2)

inst_31009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80ffc000; valaddr_reg:x3; val_offset:93027*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93027*0 + 3*289*FLEN/8, x4, x1, x2)

inst_31010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80ffe000; valaddr_reg:x3; val_offset:93030*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93030*0 + 3*290*FLEN/8, x4, x1, x2)

inst_31011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fff000; valaddr_reg:x3; val_offset:93033*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93033*0 + 3*291*FLEN/8, x4, x1, x2)

inst_31012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fff800; valaddr_reg:x3; val_offset:93036*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93036*0 + 3*292*FLEN/8, x4, x1, x2)

inst_31013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fffc00; valaddr_reg:x3; val_offset:93039*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93039*0 + 3*293*FLEN/8, x4, x1, x2)

inst_31014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fffe00; valaddr_reg:x3; val_offset:93042*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93042*0 + 3*294*FLEN/8, x4, x1, x2)

inst_31015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80ffff00; valaddr_reg:x3; val_offset:93045*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93045*0 + 3*295*FLEN/8, x4, x1, x2)

inst_31016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80ffff80; valaddr_reg:x3; val_offset:93048*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93048*0 + 3*296*FLEN/8, x4, x1, x2)

inst_31017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80ffffc0; valaddr_reg:x3; val_offset:93051*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93051*0 + 3*297*FLEN/8, x4, x1, x2)

inst_31018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80ffffe0; valaddr_reg:x3; val_offset:93054*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93054*0 + 3*298*FLEN/8, x4, x1, x2)

inst_31019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fffff0; valaddr_reg:x3; val_offset:93057*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93057*0 + 3*299*FLEN/8, x4, x1, x2)

inst_31020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:93060*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93060*0 + 3*300*FLEN/8, x4, x1, x2)

inst_31021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:93063*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93063*0 + 3*301*FLEN/8, x4, x1, x2)

inst_31022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:93066*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93066*0 + 3*302*FLEN/8, x4, x1, x2)

inst_31023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cba4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cba4c; op2val:0x80000000;
op3val:0x80ffffff; valaddr_reg:x3; val_offset:93069*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93069*0 + 3*303*FLEN/8, x4, x1, x2)

inst_31024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:93072*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93072*0 + 3*304*FLEN/8, x4, x1, x2)

inst_31025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:93075*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93075*0 + 3*305*FLEN/8, x4, x1, x2)

inst_31026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:93078*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93078*0 + 3*306*FLEN/8, x4, x1, x2)

inst_31027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:93081*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93081*0 + 3*307*FLEN/8, x4, x1, x2)

inst_31028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:93084*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93084*0 + 3*308*FLEN/8, x4, x1, x2)

inst_31029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:93087*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93087*0 + 3*309*FLEN/8, x4, x1, x2)

inst_31030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:93090*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93090*0 + 3*310*FLEN/8, x4, x1, x2)

inst_31031:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:93093*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93093*0 + 3*311*FLEN/8, x4, x1, x2)

inst_31032:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:93096*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93096*0 + 3*312*FLEN/8, x4, x1, x2)

inst_31033:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:93099*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93099*0 + 3*313*FLEN/8, x4, x1, x2)

inst_31034:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:93102*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93102*0 + 3*314*FLEN/8, x4, x1, x2)

inst_31035:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:93105*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93105*0 + 3*315*FLEN/8, x4, x1, x2)

inst_31036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:93108*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93108*0 + 3*316*FLEN/8, x4, x1, x2)

inst_31037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:93111*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93111*0 + 3*317*FLEN/8, x4, x1, x2)

inst_31038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:93114*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93114*0 + 3*318*FLEN/8, x4, x1, x2)

inst_31039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:93117*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93117*0 + 3*319*FLEN/8, x4, x1, x2)

inst_31040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b000000; valaddr_reg:x3; val_offset:93120*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93120*0 + 3*320*FLEN/8, x4, x1, x2)

inst_31041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b000001; valaddr_reg:x3; val_offset:93123*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93123*0 + 3*321*FLEN/8, x4, x1, x2)

inst_31042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b000003; valaddr_reg:x3; val_offset:93126*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93126*0 + 3*322*FLEN/8, x4, x1, x2)

inst_31043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b000007; valaddr_reg:x3; val_offset:93129*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93129*0 + 3*323*FLEN/8, x4, x1, x2)

inst_31044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b00000f; valaddr_reg:x3; val_offset:93132*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93132*0 + 3*324*FLEN/8, x4, x1, x2)

inst_31045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b00001f; valaddr_reg:x3; val_offset:93135*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93135*0 + 3*325*FLEN/8, x4, x1, x2)

inst_31046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b00003f; valaddr_reg:x3; val_offset:93138*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93138*0 + 3*326*FLEN/8, x4, x1, x2)

inst_31047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b00007f; valaddr_reg:x3; val_offset:93141*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93141*0 + 3*327*FLEN/8, x4, x1, x2)

inst_31048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b0000ff; valaddr_reg:x3; val_offset:93144*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93144*0 + 3*328*FLEN/8, x4, x1, x2)

inst_31049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b0001ff; valaddr_reg:x3; val_offset:93147*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93147*0 + 3*329*FLEN/8, x4, x1, x2)

inst_31050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b0003ff; valaddr_reg:x3; val_offset:93150*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93150*0 + 3*330*FLEN/8, x4, x1, x2)

inst_31051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b0007ff; valaddr_reg:x3; val_offset:93153*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93153*0 + 3*331*FLEN/8, x4, x1, x2)

inst_31052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b000fff; valaddr_reg:x3; val_offset:93156*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93156*0 + 3*332*FLEN/8, x4, x1, x2)

inst_31053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b001fff; valaddr_reg:x3; val_offset:93159*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93159*0 + 3*333*FLEN/8, x4, x1, x2)

inst_31054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b003fff; valaddr_reg:x3; val_offset:93162*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93162*0 + 3*334*FLEN/8, x4, x1, x2)

inst_31055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b007fff; valaddr_reg:x3; val_offset:93165*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93165*0 + 3*335*FLEN/8, x4, x1, x2)

inst_31056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b00ffff; valaddr_reg:x3; val_offset:93168*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93168*0 + 3*336*FLEN/8, x4, x1, x2)

inst_31057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b01ffff; valaddr_reg:x3; val_offset:93171*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93171*0 + 3*337*FLEN/8, x4, x1, x2)

inst_31058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b03ffff; valaddr_reg:x3; val_offset:93174*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93174*0 + 3*338*FLEN/8, x4, x1, x2)

inst_31059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b07ffff; valaddr_reg:x3; val_offset:93177*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93177*0 + 3*339*FLEN/8, x4, x1, x2)

inst_31060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b0fffff; valaddr_reg:x3; val_offset:93180*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93180*0 + 3*340*FLEN/8, x4, x1, x2)

inst_31061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b1fffff; valaddr_reg:x3; val_offset:93183*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93183*0 + 3*341*FLEN/8, x4, x1, x2)

inst_31062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b3fffff; valaddr_reg:x3; val_offset:93186*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93186*0 + 3*342*FLEN/8, x4, x1, x2)

inst_31063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b400000; valaddr_reg:x3; val_offset:93189*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93189*0 + 3*343*FLEN/8, x4, x1, x2)

inst_31064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b600000; valaddr_reg:x3; val_offset:93192*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93192*0 + 3*344*FLEN/8, x4, x1, x2)

inst_31065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b700000; valaddr_reg:x3; val_offset:93195*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93195*0 + 3*345*FLEN/8, x4, x1, x2)

inst_31066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b780000; valaddr_reg:x3; val_offset:93198*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93198*0 + 3*346*FLEN/8, x4, x1, x2)

inst_31067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7c0000; valaddr_reg:x3; val_offset:93201*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93201*0 + 3*347*FLEN/8, x4, x1, x2)

inst_31068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7e0000; valaddr_reg:x3; val_offset:93204*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93204*0 + 3*348*FLEN/8, x4, x1, x2)

inst_31069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7f0000; valaddr_reg:x3; val_offset:93207*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93207*0 + 3*349*FLEN/8, x4, x1, x2)

inst_31070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7f8000; valaddr_reg:x3; val_offset:93210*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93210*0 + 3*350*FLEN/8, x4, x1, x2)

inst_31071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7fc000; valaddr_reg:x3; val_offset:93213*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93213*0 + 3*351*FLEN/8, x4, x1, x2)

inst_31072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7fe000; valaddr_reg:x3; val_offset:93216*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93216*0 + 3*352*FLEN/8, x4, x1, x2)

inst_31073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7ff000; valaddr_reg:x3; val_offset:93219*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93219*0 + 3*353*FLEN/8, x4, x1, x2)

inst_31074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7ff800; valaddr_reg:x3; val_offset:93222*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93222*0 + 3*354*FLEN/8, x4, x1, x2)

inst_31075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7ffc00; valaddr_reg:x3; val_offset:93225*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93225*0 + 3*355*FLEN/8, x4, x1, x2)

inst_31076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7ffe00; valaddr_reg:x3; val_offset:93228*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93228*0 + 3*356*FLEN/8, x4, x1, x2)

inst_31077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7fff00; valaddr_reg:x3; val_offset:93231*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93231*0 + 3*357*FLEN/8, x4, x1, x2)

inst_31078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7fff80; valaddr_reg:x3; val_offset:93234*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93234*0 + 3*358*FLEN/8, x4, x1, x2)

inst_31079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7fffc0; valaddr_reg:x3; val_offset:93237*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93237*0 + 3*359*FLEN/8, x4, x1, x2)

inst_31080:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7fffe0; valaddr_reg:x3; val_offset:93240*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93240*0 + 3*360*FLEN/8, x4, x1, x2)

inst_31081:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7ffff0; valaddr_reg:x3; val_offset:93243*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93243*0 + 3*361*FLEN/8, x4, x1, x2)

inst_31082:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7ffff8; valaddr_reg:x3; val_offset:93246*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93246*0 + 3*362*FLEN/8, x4, x1, x2)

inst_31083:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7ffffc; valaddr_reg:x3; val_offset:93249*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93249*0 + 3*363*FLEN/8, x4, x1, x2)

inst_31084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7ffffe; valaddr_reg:x3; val_offset:93252*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93252*0 + 3*364*FLEN/8, x4, x1, x2)

inst_31085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d2ca1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x16 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d2ca1; op2val:0x80000000;
op3val:0x8b7fffff; valaddr_reg:x3; val_offset:93255*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93255*0 + 3*365*FLEN/8, x4, x1, x2)

inst_31086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7800000; valaddr_reg:x3; val_offset:93258*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93258*0 + 3*366*FLEN/8, x4, x1, x2)

inst_31087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7800001; valaddr_reg:x3; val_offset:93261*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93261*0 + 3*367*FLEN/8, x4, x1, x2)

inst_31088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7800003; valaddr_reg:x3; val_offset:93264*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93264*0 + 3*368*FLEN/8, x4, x1, x2)

inst_31089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7800007; valaddr_reg:x3; val_offset:93267*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93267*0 + 3*369*FLEN/8, x4, x1, x2)

inst_31090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf780000f; valaddr_reg:x3; val_offset:93270*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93270*0 + 3*370*FLEN/8, x4, x1, x2)

inst_31091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf780001f; valaddr_reg:x3; val_offset:93273*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93273*0 + 3*371*FLEN/8, x4, x1, x2)

inst_31092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf780003f; valaddr_reg:x3; val_offset:93276*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93276*0 + 3*372*FLEN/8, x4, x1, x2)

inst_31093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf780007f; valaddr_reg:x3; val_offset:93279*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93279*0 + 3*373*FLEN/8, x4, x1, x2)

inst_31094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf78000ff; valaddr_reg:x3; val_offset:93282*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93282*0 + 3*374*FLEN/8, x4, x1, x2)

inst_31095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf78001ff; valaddr_reg:x3; val_offset:93285*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93285*0 + 3*375*FLEN/8, x4, x1, x2)

inst_31096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf78003ff; valaddr_reg:x3; val_offset:93288*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93288*0 + 3*376*FLEN/8, x4, x1, x2)

inst_31097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf78007ff; valaddr_reg:x3; val_offset:93291*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93291*0 + 3*377*FLEN/8, x4, x1, x2)

inst_31098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7800fff; valaddr_reg:x3; val_offset:93294*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93294*0 + 3*378*FLEN/8, x4, x1, x2)

inst_31099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7801fff; valaddr_reg:x3; val_offset:93297*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93297*0 + 3*379*FLEN/8, x4, x1, x2)

inst_31100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7803fff; valaddr_reg:x3; val_offset:93300*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93300*0 + 3*380*FLEN/8, x4, x1, x2)

inst_31101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7807fff; valaddr_reg:x3; val_offset:93303*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93303*0 + 3*381*FLEN/8, x4, x1, x2)

inst_31102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf780ffff; valaddr_reg:x3; val_offset:93306*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93306*0 + 3*382*FLEN/8, x4, x1, x2)

inst_31103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf781ffff; valaddr_reg:x3; val_offset:93309*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93309*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_31104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf783ffff; valaddr_reg:x3; val_offset:93312*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93312*0 + 3*384*FLEN/8, x4, x1, x2)

inst_31105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf787ffff; valaddr_reg:x3; val_offset:93315*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93315*0 + 3*385*FLEN/8, x4, x1, x2)

inst_31106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf78fffff; valaddr_reg:x3; val_offset:93318*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93318*0 + 3*386*FLEN/8, x4, x1, x2)

inst_31107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf79fffff; valaddr_reg:x3; val_offset:93321*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93321*0 + 3*387*FLEN/8, x4, x1, x2)

inst_31108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7bfffff; valaddr_reg:x3; val_offset:93324*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93324*0 + 3*388*FLEN/8, x4, x1, x2)

inst_31109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7c00000; valaddr_reg:x3; val_offset:93327*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93327*0 + 3*389*FLEN/8, x4, x1, x2)

inst_31110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7e00000; valaddr_reg:x3; val_offset:93330*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93330*0 + 3*390*FLEN/8, x4, x1, x2)

inst_31111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7f00000; valaddr_reg:x3; val_offset:93333*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93333*0 + 3*391*FLEN/8, x4, x1, x2)

inst_31112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7f80000; valaddr_reg:x3; val_offset:93336*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93336*0 + 3*392*FLEN/8, x4, x1, x2)

inst_31113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fc0000; valaddr_reg:x3; val_offset:93339*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93339*0 + 3*393*FLEN/8, x4, x1, x2)

inst_31114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fe0000; valaddr_reg:x3; val_offset:93342*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93342*0 + 3*394*FLEN/8, x4, x1, x2)

inst_31115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7ff0000; valaddr_reg:x3; val_offset:93345*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93345*0 + 3*395*FLEN/8, x4, x1, x2)

inst_31116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7ff8000; valaddr_reg:x3; val_offset:93348*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93348*0 + 3*396*FLEN/8, x4, x1, x2)

inst_31117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7ffc000; valaddr_reg:x3; val_offset:93351*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93351*0 + 3*397*FLEN/8, x4, x1, x2)

inst_31118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7ffe000; valaddr_reg:x3; val_offset:93354*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93354*0 + 3*398*FLEN/8, x4, x1, x2)

inst_31119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fff000; valaddr_reg:x3; val_offset:93357*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93357*0 + 3*399*FLEN/8, x4, x1, x2)

inst_31120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fff800; valaddr_reg:x3; val_offset:93360*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93360*0 + 3*400*FLEN/8, x4, x1, x2)

inst_31121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fffc00; valaddr_reg:x3; val_offset:93363*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93363*0 + 3*401*FLEN/8, x4, x1, x2)

inst_31122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fffe00; valaddr_reg:x3; val_offset:93366*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93366*0 + 3*402*FLEN/8, x4, x1, x2)

inst_31123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7ffff00; valaddr_reg:x3; val_offset:93369*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93369*0 + 3*403*FLEN/8, x4, x1, x2)

inst_31124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7ffff80; valaddr_reg:x3; val_offset:93372*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93372*0 + 3*404*FLEN/8, x4, x1, x2)

inst_31125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7ffffc0; valaddr_reg:x3; val_offset:93375*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93375*0 + 3*405*FLEN/8, x4, x1, x2)

inst_31126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7ffffe0; valaddr_reg:x3; val_offset:93378*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93378*0 + 3*406*FLEN/8, x4, x1, x2)

inst_31127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fffff0; valaddr_reg:x3; val_offset:93381*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93381*0 + 3*407*FLEN/8, x4, x1, x2)

inst_31128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fffff8; valaddr_reg:x3; val_offset:93384*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93384*0 + 3*408*FLEN/8, x4, x1, x2)

inst_31129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fffffc; valaddr_reg:x3; val_offset:93387*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93387*0 + 3*409*FLEN/8, x4, x1, x2)

inst_31130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7fffffe; valaddr_reg:x3; val_offset:93390*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93390*0 + 3*410*FLEN/8, x4, x1, x2)

inst_31131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xf7ffffff; valaddr_reg:x3; val_offset:93393*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93393*0 + 3*411*FLEN/8, x4, x1, x2)

inst_31132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff000001; valaddr_reg:x3; val_offset:93396*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93396*0 + 3*412*FLEN/8, x4, x1, x2)

inst_31133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff000003; valaddr_reg:x3; val_offset:93399*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93399*0 + 3*413*FLEN/8, x4, x1, x2)

inst_31134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff000007; valaddr_reg:x3; val_offset:93402*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93402*0 + 3*414*FLEN/8, x4, x1, x2)

inst_31135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff199999; valaddr_reg:x3; val_offset:93405*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93405*0 + 3*415*FLEN/8, x4, x1, x2)

inst_31136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff249249; valaddr_reg:x3; val_offset:93408*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93408*0 + 3*416*FLEN/8, x4, x1, x2)

inst_31137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff333333; valaddr_reg:x3; val_offset:93411*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93411*0 + 3*417*FLEN/8, x4, x1, x2)

inst_31138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:93414*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93414*0 + 3*418*FLEN/8, x4, x1, x2)

inst_31139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:93417*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93417*0 + 3*419*FLEN/8, x4, x1, x2)

inst_31140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff444444; valaddr_reg:x3; val_offset:93420*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93420*0 + 3*420*FLEN/8, x4, x1, x2)

inst_31141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:93423*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93423*0 + 3*421*FLEN/8, x4, x1, x2)

inst_31142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:93426*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93426*0 + 3*422*FLEN/8, x4, x1, x2)

inst_31143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff666666; valaddr_reg:x3; val_offset:93429*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93429*0 + 3*423*FLEN/8, x4, x1, x2)

inst_31144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:93432*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93432*0 + 3*424*FLEN/8, x4, x1, x2)

inst_31145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:93435*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93435*0 + 3*425*FLEN/8, x4, x1, x2)

inst_31146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:93438*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93438*0 + 3*426*FLEN/8, x4, x1, x2)

inst_31147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d70d2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x50210d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d70d2; op2val:0xbfd0210d;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:93441*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93441*0 + 3*427*FLEN/8, x4, x1, x2)

inst_31148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77800000; valaddr_reg:x3; val_offset:93444*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93444*0 + 3*428*FLEN/8, x4, x1, x2)

inst_31149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77800001; valaddr_reg:x3; val_offset:93447*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93447*0 + 3*429*FLEN/8, x4, x1, x2)

inst_31150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77800003; valaddr_reg:x3; val_offset:93450*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93450*0 + 3*430*FLEN/8, x4, x1, x2)

inst_31151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77800007; valaddr_reg:x3; val_offset:93453*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93453*0 + 3*431*FLEN/8, x4, x1, x2)

inst_31152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7780000f; valaddr_reg:x3; val_offset:93456*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93456*0 + 3*432*FLEN/8, x4, x1, x2)

inst_31153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7780001f; valaddr_reg:x3; val_offset:93459*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93459*0 + 3*433*FLEN/8, x4, x1, x2)

inst_31154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7780003f; valaddr_reg:x3; val_offset:93462*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93462*0 + 3*434*FLEN/8, x4, x1, x2)

inst_31155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7780007f; valaddr_reg:x3; val_offset:93465*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93465*0 + 3*435*FLEN/8, x4, x1, x2)

inst_31156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x778000ff; valaddr_reg:x3; val_offset:93468*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93468*0 + 3*436*FLEN/8, x4, x1, x2)

inst_31157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x778001ff; valaddr_reg:x3; val_offset:93471*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93471*0 + 3*437*FLEN/8, x4, x1, x2)

inst_31158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x778003ff; valaddr_reg:x3; val_offset:93474*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93474*0 + 3*438*FLEN/8, x4, x1, x2)

inst_31159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x778007ff; valaddr_reg:x3; val_offset:93477*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93477*0 + 3*439*FLEN/8, x4, x1, x2)

inst_31160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77800fff; valaddr_reg:x3; val_offset:93480*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93480*0 + 3*440*FLEN/8, x4, x1, x2)

inst_31161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77801fff; valaddr_reg:x3; val_offset:93483*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93483*0 + 3*441*FLEN/8, x4, x1, x2)

inst_31162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77803fff; valaddr_reg:x3; val_offset:93486*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93486*0 + 3*442*FLEN/8, x4, x1, x2)

inst_31163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77807fff; valaddr_reg:x3; val_offset:93489*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93489*0 + 3*443*FLEN/8, x4, x1, x2)

inst_31164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7780ffff; valaddr_reg:x3; val_offset:93492*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93492*0 + 3*444*FLEN/8, x4, x1, x2)

inst_31165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7781ffff; valaddr_reg:x3; val_offset:93495*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93495*0 + 3*445*FLEN/8, x4, x1, x2)

inst_31166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7783ffff; valaddr_reg:x3; val_offset:93498*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93498*0 + 3*446*FLEN/8, x4, x1, x2)

inst_31167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7787ffff; valaddr_reg:x3; val_offset:93501*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93501*0 + 3*447*FLEN/8, x4, x1, x2)

inst_31168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x778fffff; valaddr_reg:x3; val_offset:93504*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93504*0 + 3*448*FLEN/8, x4, x1, x2)

inst_31169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x779fffff; valaddr_reg:x3; val_offset:93507*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93507*0 + 3*449*FLEN/8, x4, x1, x2)

inst_31170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77bfffff; valaddr_reg:x3; val_offset:93510*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93510*0 + 3*450*FLEN/8, x4, x1, x2)

inst_31171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77c00000; valaddr_reg:x3; val_offset:93513*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93513*0 + 3*451*FLEN/8, x4, x1, x2)

inst_31172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77e00000; valaddr_reg:x3; val_offset:93516*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93516*0 + 3*452*FLEN/8, x4, x1, x2)

inst_31173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77f00000; valaddr_reg:x3; val_offset:93519*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93519*0 + 3*453*FLEN/8, x4, x1, x2)

inst_31174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77f80000; valaddr_reg:x3; val_offset:93522*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93522*0 + 3*454*FLEN/8, x4, x1, x2)

inst_31175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fc0000; valaddr_reg:x3; val_offset:93525*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93525*0 + 3*455*FLEN/8, x4, x1, x2)

inst_31176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fe0000; valaddr_reg:x3; val_offset:93528*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93528*0 + 3*456*FLEN/8, x4, x1, x2)

inst_31177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77ff0000; valaddr_reg:x3; val_offset:93531*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93531*0 + 3*457*FLEN/8, x4, x1, x2)

inst_31178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77ff8000; valaddr_reg:x3; val_offset:93534*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93534*0 + 3*458*FLEN/8, x4, x1, x2)

inst_31179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77ffc000; valaddr_reg:x3; val_offset:93537*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93537*0 + 3*459*FLEN/8, x4, x1, x2)

inst_31180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77ffe000; valaddr_reg:x3; val_offset:93540*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93540*0 + 3*460*FLEN/8, x4, x1, x2)

inst_31181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fff000; valaddr_reg:x3; val_offset:93543*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93543*0 + 3*461*FLEN/8, x4, x1, x2)

inst_31182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fff800; valaddr_reg:x3; val_offset:93546*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93546*0 + 3*462*FLEN/8, x4, x1, x2)

inst_31183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fffc00; valaddr_reg:x3; val_offset:93549*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93549*0 + 3*463*FLEN/8, x4, x1, x2)

inst_31184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fffe00; valaddr_reg:x3; val_offset:93552*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93552*0 + 3*464*FLEN/8, x4, x1, x2)

inst_31185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77ffff00; valaddr_reg:x3; val_offset:93555*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93555*0 + 3*465*FLEN/8, x4, x1, x2)

inst_31186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77ffff80; valaddr_reg:x3; val_offset:93558*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93558*0 + 3*466*FLEN/8, x4, x1, x2)

inst_31187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77ffffc0; valaddr_reg:x3; val_offset:93561*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93561*0 + 3*467*FLEN/8, x4, x1, x2)

inst_31188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77ffffe0; valaddr_reg:x3; val_offset:93564*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93564*0 + 3*468*FLEN/8, x4, x1, x2)

inst_31189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fffff0; valaddr_reg:x3; val_offset:93567*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93567*0 + 3*469*FLEN/8, x4, x1, x2)

inst_31190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fffff8; valaddr_reg:x3; val_offset:93570*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93570*0 + 3*470*FLEN/8, x4, x1, x2)

inst_31191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fffffc; valaddr_reg:x3; val_offset:93573*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93573*0 + 3*471*FLEN/8, x4, x1, x2)

inst_31192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77fffffe; valaddr_reg:x3; val_offset:93576*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93576*0 + 3*472*FLEN/8, x4, x1, x2)

inst_31193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xef and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x77ffffff; valaddr_reg:x3; val_offset:93579*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93579*0 + 3*473*FLEN/8, x4, x1, x2)

inst_31194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f000001; valaddr_reg:x3; val_offset:93582*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93582*0 + 3*474*FLEN/8, x4, x1, x2)

inst_31195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f000003; valaddr_reg:x3; val_offset:93585*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93585*0 + 3*475*FLEN/8, x4, x1, x2)

inst_31196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f000007; valaddr_reg:x3; val_offset:93588*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93588*0 + 3*476*FLEN/8, x4, x1, x2)

inst_31197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f199999; valaddr_reg:x3; val_offset:93591*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93591*0 + 3*477*FLEN/8, x4, x1, x2)

inst_31198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f249249; valaddr_reg:x3; val_offset:93594*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93594*0 + 3*478*FLEN/8, x4, x1, x2)

inst_31199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f333333; valaddr_reg:x3; val_offset:93597*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93597*0 + 3*479*FLEN/8, x4, x1, x2)

inst_31200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:93600*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93600*0 + 3*480*FLEN/8, x4, x1, x2)

inst_31201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:93603*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93603*0 + 3*481*FLEN/8, x4, x1, x2)

inst_31202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f444444; valaddr_reg:x3; val_offset:93606*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93606*0 + 3*482*FLEN/8, x4, x1, x2)

inst_31203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:93609*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93609*0 + 3*483*FLEN/8, x4, x1, x2)

inst_31204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:93612*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93612*0 + 3*484*FLEN/8, x4, x1, x2)

inst_31205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f666666; valaddr_reg:x3; val_offset:93615*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93615*0 + 3*485*FLEN/8, x4, x1, x2)

inst_31206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:93618*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93618*0 + 3*486*FLEN/8, x4, x1, x2)

inst_31207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:93621*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93621*0 + 3*487*FLEN/8, x4, x1, x2)

inst_31208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:93624*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93624*0 + 3*488*FLEN/8, x4, x1, x2)

inst_31209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dd554 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f9c85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dd554; op2val:0x3fcf9c85;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:93627*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93627*0 + 3*489*FLEN/8, x4, x1, x2)

inst_31210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:93630*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93630*0 + 3*490*FLEN/8, x4, x1, x2)

inst_31211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:93633*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93633*0 + 3*491*FLEN/8, x4, x1, x2)

inst_31212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:93636*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93636*0 + 3*492*FLEN/8, x4, x1, x2)

inst_31213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:93639*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93639*0 + 3*493*FLEN/8, x4, x1, x2)

inst_31214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:93642*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93642*0 + 3*494*FLEN/8, x4, x1, x2)

inst_31215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:93645*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93645*0 + 3*495*FLEN/8, x4, x1, x2)

inst_31216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:93648*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93648*0 + 3*496*FLEN/8, x4, x1, x2)

inst_31217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:93651*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93651*0 + 3*497*FLEN/8, x4, x1, x2)

inst_31218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:93654*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93654*0 + 3*498*FLEN/8, x4, x1, x2)

inst_31219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:93657*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93657*0 + 3*499*FLEN/8, x4, x1, x2)

inst_31220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:93660*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93660*0 + 3*500*FLEN/8, x4, x1, x2)

inst_31221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:93663*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93663*0 + 3*501*FLEN/8, x4, x1, x2)

inst_31222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:93666*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93666*0 + 3*502*FLEN/8, x4, x1, x2)

inst_31223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:93669*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93669*0 + 3*503*FLEN/8, x4, x1, x2)

inst_31224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:93672*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93672*0 + 3*504*FLEN/8, x4, x1, x2)

inst_31225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:93675*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93675*0 + 3*505*FLEN/8, x4, x1, x2)

inst_31226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80800000; valaddr_reg:x3; val_offset:93678*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93678*0 + 3*506*FLEN/8, x4, x1, x2)

inst_31227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:93681*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93681*0 + 3*507*FLEN/8, x4, x1, x2)

inst_31228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:93684*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93684*0 + 3*508*FLEN/8, x4, x1, x2)

inst_31229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:93687*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93687*0 + 3*509*FLEN/8, x4, x1, x2)

inst_31230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x8080000f; valaddr_reg:x3; val_offset:93690*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93690*0 + 3*510*FLEN/8, x4, x1, x2)

inst_31231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x8080001f; valaddr_reg:x3; val_offset:93693*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93693*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_31232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x8080003f; valaddr_reg:x3; val_offset:93696*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93696*0 + 3*512*FLEN/8, x4, x1, x2)

inst_31233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x8080007f; valaddr_reg:x3; val_offset:93699*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93699*0 + 3*513*FLEN/8, x4, x1, x2)

inst_31234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x808000ff; valaddr_reg:x3; val_offset:93702*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93702*0 + 3*514*FLEN/8, x4, x1, x2)

inst_31235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x808001ff; valaddr_reg:x3; val_offset:93705*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93705*0 + 3*515*FLEN/8, x4, x1, x2)

inst_31236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x808003ff; valaddr_reg:x3; val_offset:93708*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93708*0 + 3*516*FLEN/8, x4, x1, x2)

inst_31237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x808007ff; valaddr_reg:x3; val_offset:93711*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93711*0 + 3*517*FLEN/8, x4, x1, x2)

inst_31238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80800fff; valaddr_reg:x3; val_offset:93714*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93714*0 + 3*518*FLEN/8, x4, x1, x2)

inst_31239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80801fff; valaddr_reg:x3; val_offset:93717*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93717*0 + 3*519*FLEN/8, x4, x1, x2)

inst_31240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80803fff; valaddr_reg:x3; val_offset:93720*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93720*0 + 3*520*FLEN/8, x4, x1, x2)

inst_31241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80807fff; valaddr_reg:x3; val_offset:93723*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93723*0 + 3*521*FLEN/8, x4, x1, x2)

inst_31242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x8080ffff; valaddr_reg:x3; val_offset:93726*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93726*0 + 3*522*FLEN/8, x4, x1, x2)

inst_31243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x8081ffff; valaddr_reg:x3; val_offset:93729*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93729*0 + 3*523*FLEN/8, x4, x1, x2)

inst_31244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x8083ffff; valaddr_reg:x3; val_offset:93732*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93732*0 + 3*524*FLEN/8, x4, x1, x2)

inst_31245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x8087ffff; valaddr_reg:x3; val_offset:93735*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93735*0 + 3*525*FLEN/8, x4, x1, x2)

inst_31246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x808fffff; valaddr_reg:x3; val_offset:93738*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93738*0 + 3*526*FLEN/8, x4, x1, x2)

inst_31247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x809fffff; valaddr_reg:x3; val_offset:93741*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93741*0 + 3*527*FLEN/8, x4, x1, x2)

inst_31248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80bfffff; valaddr_reg:x3; val_offset:93744*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93744*0 + 3*528*FLEN/8, x4, x1, x2)

inst_31249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80c00000; valaddr_reg:x3; val_offset:93747*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93747*0 + 3*529*FLEN/8, x4, x1, x2)

inst_31250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80e00000; valaddr_reg:x3; val_offset:93750*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93750*0 + 3*530*FLEN/8, x4, x1, x2)

inst_31251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80f00000; valaddr_reg:x3; val_offset:93753*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93753*0 + 3*531*FLEN/8, x4, x1, x2)

inst_31252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80f80000; valaddr_reg:x3; val_offset:93756*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93756*0 + 3*532*FLEN/8, x4, x1, x2)

inst_31253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fc0000; valaddr_reg:x3; val_offset:93759*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93759*0 + 3*533*FLEN/8, x4, x1, x2)

inst_31254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fe0000; valaddr_reg:x3; val_offset:93762*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93762*0 + 3*534*FLEN/8, x4, x1, x2)

inst_31255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80ff0000; valaddr_reg:x3; val_offset:93765*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93765*0 + 3*535*FLEN/8, x4, x1, x2)

inst_31256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80ff8000; valaddr_reg:x3; val_offset:93768*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93768*0 + 3*536*FLEN/8, x4, x1, x2)

inst_31257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80ffc000; valaddr_reg:x3; val_offset:93771*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93771*0 + 3*537*FLEN/8, x4, x1, x2)

inst_31258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80ffe000; valaddr_reg:x3; val_offset:93774*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93774*0 + 3*538*FLEN/8, x4, x1, x2)

inst_31259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fff000; valaddr_reg:x3; val_offset:93777*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93777*0 + 3*539*FLEN/8, x4, x1, x2)

inst_31260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fff800; valaddr_reg:x3; val_offset:93780*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93780*0 + 3*540*FLEN/8, x4, x1, x2)

inst_31261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fffc00; valaddr_reg:x3; val_offset:93783*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93783*0 + 3*541*FLEN/8, x4, x1, x2)

inst_31262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fffe00; valaddr_reg:x3; val_offset:93786*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93786*0 + 3*542*FLEN/8, x4, x1, x2)

inst_31263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80ffff00; valaddr_reg:x3; val_offset:93789*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93789*0 + 3*543*FLEN/8, x4, x1, x2)

inst_31264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80ffff80; valaddr_reg:x3; val_offset:93792*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93792*0 + 3*544*FLEN/8, x4, x1, x2)

inst_31265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80ffffc0; valaddr_reg:x3; val_offset:93795*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93795*0 + 3*545*FLEN/8, x4, x1, x2)

inst_31266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80ffffe0; valaddr_reg:x3; val_offset:93798*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93798*0 + 3*546*FLEN/8, x4, x1, x2)

inst_31267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fffff0; valaddr_reg:x3; val_offset:93801*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93801*0 + 3*547*FLEN/8, x4, x1, x2)

inst_31268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:93804*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93804*0 + 3*548*FLEN/8, x4, x1, x2)

inst_31269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:93807*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93807*0 + 3*549*FLEN/8, x4, x1, x2)

inst_31270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:93810*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93810*0 + 3*550*FLEN/8, x4, x1, x2)

inst_31271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e4774 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e4774; op2val:0x80000000;
op3val:0x80ffffff; valaddr_reg:x3; val_offset:93813*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93813*0 + 3*551*FLEN/8, x4, x1, x2)

inst_31272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29800000; valaddr_reg:x3; val_offset:93816*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93816*0 + 3*552*FLEN/8, x4, x1, x2)

inst_31273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29800001; valaddr_reg:x3; val_offset:93819*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93819*0 + 3*553*FLEN/8, x4, x1, x2)

inst_31274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29800003; valaddr_reg:x3; val_offset:93822*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93822*0 + 3*554*FLEN/8, x4, x1, x2)

inst_31275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29800007; valaddr_reg:x3; val_offset:93825*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93825*0 + 3*555*FLEN/8, x4, x1, x2)

inst_31276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x2980000f; valaddr_reg:x3; val_offset:93828*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93828*0 + 3*556*FLEN/8, x4, x1, x2)

inst_31277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x2980001f; valaddr_reg:x3; val_offset:93831*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93831*0 + 3*557*FLEN/8, x4, x1, x2)

inst_31278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x2980003f; valaddr_reg:x3; val_offset:93834*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93834*0 + 3*558*FLEN/8, x4, x1, x2)

inst_31279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x2980007f; valaddr_reg:x3; val_offset:93837*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93837*0 + 3*559*FLEN/8, x4, x1, x2)

inst_31280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x298000ff; valaddr_reg:x3; val_offset:93840*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93840*0 + 3*560*FLEN/8, x4, x1, x2)

inst_31281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x298001ff; valaddr_reg:x3; val_offset:93843*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93843*0 + 3*561*FLEN/8, x4, x1, x2)

inst_31282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x298003ff; valaddr_reg:x3; val_offset:93846*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93846*0 + 3*562*FLEN/8, x4, x1, x2)

inst_31283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x298007ff; valaddr_reg:x3; val_offset:93849*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93849*0 + 3*563*FLEN/8, x4, x1, x2)

inst_31284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29800fff; valaddr_reg:x3; val_offset:93852*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93852*0 + 3*564*FLEN/8, x4, x1, x2)

inst_31285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29801fff; valaddr_reg:x3; val_offset:93855*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93855*0 + 3*565*FLEN/8, x4, x1, x2)

inst_31286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29803fff; valaddr_reg:x3; val_offset:93858*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93858*0 + 3*566*FLEN/8, x4, x1, x2)

inst_31287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29807fff; valaddr_reg:x3; val_offset:93861*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93861*0 + 3*567*FLEN/8, x4, x1, x2)

inst_31288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x2980ffff; valaddr_reg:x3; val_offset:93864*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93864*0 + 3*568*FLEN/8, x4, x1, x2)

inst_31289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x2981ffff; valaddr_reg:x3; val_offset:93867*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93867*0 + 3*569*FLEN/8, x4, x1, x2)

inst_31290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x2983ffff; valaddr_reg:x3; val_offset:93870*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93870*0 + 3*570*FLEN/8, x4, x1, x2)

inst_31291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x2987ffff; valaddr_reg:x3; val_offset:93873*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93873*0 + 3*571*FLEN/8, x4, x1, x2)

inst_31292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x298fffff; valaddr_reg:x3; val_offset:93876*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93876*0 + 3*572*FLEN/8, x4, x1, x2)

inst_31293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x299fffff; valaddr_reg:x3; val_offset:93879*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93879*0 + 3*573*FLEN/8, x4, x1, x2)

inst_31294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29bfffff; valaddr_reg:x3; val_offset:93882*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93882*0 + 3*574*FLEN/8, x4, x1, x2)

inst_31295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29c00000; valaddr_reg:x3; val_offset:93885*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93885*0 + 3*575*FLEN/8, x4, x1, x2)

inst_31296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29e00000; valaddr_reg:x3; val_offset:93888*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93888*0 + 3*576*FLEN/8, x4, x1, x2)

inst_31297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29f00000; valaddr_reg:x3; val_offset:93891*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93891*0 + 3*577*FLEN/8, x4, x1, x2)

inst_31298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29f80000; valaddr_reg:x3; val_offset:93894*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93894*0 + 3*578*FLEN/8, x4, x1, x2)

inst_31299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fc0000; valaddr_reg:x3; val_offset:93897*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93897*0 + 3*579*FLEN/8, x4, x1, x2)

inst_31300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fe0000; valaddr_reg:x3; val_offset:93900*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93900*0 + 3*580*FLEN/8, x4, x1, x2)

inst_31301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29ff0000; valaddr_reg:x3; val_offset:93903*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93903*0 + 3*581*FLEN/8, x4, x1, x2)

inst_31302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29ff8000; valaddr_reg:x3; val_offset:93906*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93906*0 + 3*582*FLEN/8, x4, x1, x2)

inst_31303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29ffc000; valaddr_reg:x3; val_offset:93909*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93909*0 + 3*583*FLEN/8, x4, x1, x2)

inst_31304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29ffe000; valaddr_reg:x3; val_offset:93912*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93912*0 + 3*584*FLEN/8, x4, x1, x2)

inst_31305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fff000; valaddr_reg:x3; val_offset:93915*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93915*0 + 3*585*FLEN/8, x4, x1, x2)

inst_31306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fff800; valaddr_reg:x3; val_offset:93918*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93918*0 + 3*586*FLEN/8, x4, x1, x2)

inst_31307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fffc00; valaddr_reg:x3; val_offset:93921*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93921*0 + 3*587*FLEN/8, x4, x1, x2)

inst_31308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fffe00; valaddr_reg:x3; val_offset:93924*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93924*0 + 3*588*FLEN/8, x4, x1, x2)

inst_31309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29ffff00; valaddr_reg:x3; val_offset:93927*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93927*0 + 3*589*FLEN/8, x4, x1, x2)

inst_31310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29ffff80; valaddr_reg:x3; val_offset:93930*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93930*0 + 3*590*FLEN/8, x4, x1, x2)

inst_31311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29ffffc0; valaddr_reg:x3; val_offset:93933*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93933*0 + 3*591*FLEN/8, x4, x1, x2)

inst_31312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29ffffe0; valaddr_reg:x3; val_offset:93936*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93936*0 + 3*592*FLEN/8, x4, x1, x2)

inst_31313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fffff0; valaddr_reg:x3; val_offset:93939*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93939*0 + 3*593*FLEN/8, x4, x1, x2)

inst_31314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fffff8; valaddr_reg:x3; val_offset:93942*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93942*0 + 3*594*FLEN/8, x4, x1, x2)

inst_31315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fffffc; valaddr_reg:x3; val_offset:93945*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93945*0 + 3*595*FLEN/8, x4, x1, x2)

inst_31316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29fffffe; valaddr_reg:x3; val_offset:93948*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93948*0 + 3*596*FLEN/8, x4, x1, x2)

inst_31317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x53 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x29ffffff; valaddr_reg:x3; val_offset:93951*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93951*0 + 3*597*FLEN/8, x4, x1, x2)

inst_31318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3f800001; valaddr_reg:x3; val_offset:93954*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93954*0 + 3*598*FLEN/8, x4, x1, x2)

inst_31319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3f800003; valaddr_reg:x3; val_offset:93957*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93957*0 + 3*599*FLEN/8, x4, x1, x2)

inst_31320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3f800007; valaddr_reg:x3; val_offset:93960*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93960*0 + 3*600*FLEN/8, x4, x1, x2)

inst_31321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3f999999; valaddr_reg:x3; val_offset:93963*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93963*0 + 3*601*FLEN/8, x4, x1, x2)

inst_31322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:93966*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93966*0 + 3*602*FLEN/8, x4, x1, x2)

inst_31323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:93969*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93969*0 + 3*603*FLEN/8, x4, x1, x2)

inst_31324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:93972*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93972*0 + 3*604*FLEN/8, x4, x1, x2)

inst_31325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:93975*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93975*0 + 3*605*FLEN/8, x4, x1, x2)

inst_31326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:93978*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93978*0 + 3*606*FLEN/8, x4, x1, x2)

inst_31327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:93981*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93981*0 + 3*607*FLEN/8, x4, x1, x2)

inst_31328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:93984*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93984*0 + 3*608*FLEN/8, x4, x1, x2)

inst_31329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:93987*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93987*0 + 3*609*FLEN/8, x4, x1, x2)

inst_31330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:93990*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93990*0 + 3*610*FLEN/8, x4, x1, x2)

inst_31331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:93993*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93993*0 + 3*611*FLEN/8, x4, x1, x2)

inst_31332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:93996*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93996*0 + 3*612*FLEN/8, x4, x1, x2)

inst_31333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e59fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x33bba6 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e59fc; op2val:0x33bba6;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:93999*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 93999*0 + 3*613*FLEN/8, x4, x1, x2)

inst_31334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:94002*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94002*0 + 3*614*FLEN/8, x4, x1, x2)

inst_31335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:94005*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94005*0 + 3*615*FLEN/8, x4, x1, x2)

inst_31336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:94008*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94008*0 + 3*616*FLEN/8, x4, x1, x2)

inst_31337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:94011*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94011*0 + 3*617*FLEN/8, x4, x1, x2)

inst_31338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:94014*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94014*0 + 3*618*FLEN/8, x4, x1, x2)

inst_31339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:94017*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94017*0 + 3*619*FLEN/8, x4, x1, x2)

inst_31340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:94020*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94020*0 + 3*620*FLEN/8, x4, x1, x2)

inst_31341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:94023*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94023*0 + 3*621*FLEN/8, x4, x1, x2)

inst_31342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:94026*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94026*0 + 3*622*FLEN/8, x4, x1, x2)

inst_31343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:94029*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94029*0 + 3*623*FLEN/8, x4, x1, x2)

inst_31344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:94032*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94032*0 + 3*624*FLEN/8, x4, x1, x2)

inst_31345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:94035*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94035*0 + 3*625*FLEN/8, x4, x1, x2)

inst_31346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:94038*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94038*0 + 3*626*FLEN/8, x4, x1, x2)

inst_31347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:94041*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94041*0 + 3*627*FLEN/8, x4, x1, x2)

inst_31348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:94044*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94044*0 + 3*628*FLEN/8, x4, x1, x2)

inst_31349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:94047*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94047*0 + 3*629*FLEN/8, x4, x1, x2)

inst_31350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85000000; valaddr_reg:x3; val_offset:94050*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94050*0 + 3*630*FLEN/8, x4, x1, x2)

inst_31351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85000001; valaddr_reg:x3; val_offset:94053*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94053*0 + 3*631*FLEN/8, x4, x1, x2)

inst_31352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85000003; valaddr_reg:x3; val_offset:94056*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94056*0 + 3*632*FLEN/8, x4, x1, x2)

inst_31353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85000007; valaddr_reg:x3; val_offset:94059*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94059*0 + 3*633*FLEN/8, x4, x1, x2)

inst_31354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x8500000f; valaddr_reg:x3; val_offset:94062*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94062*0 + 3*634*FLEN/8, x4, x1, x2)

inst_31355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x8500001f; valaddr_reg:x3; val_offset:94065*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94065*0 + 3*635*FLEN/8, x4, x1, x2)

inst_31356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x8500003f; valaddr_reg:x3; val_offset:94068*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94068*0 + 3*636*FLEN/8, x4, x1, x2)

inst_31357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x8500007f; valaddr_reg:x3; val_offset:94071*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94071*0 + 3*637*FLEN/8, x4, x1, x2)

inst_31358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x850000ff; valaddr_reg:x3; val_offset:94074*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94074*0 + 3*638*FLEN/8, x4, x1, x2)

inst_31359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x850001ff; valaddr_reg:x3; val_offset:94077*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94077*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_31360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x850003ff; valaddr_reg:x3; val_offset:94080*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94080*0 + 3*640*FLEN/8, x4, x1, x2)

inst_31361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x850007ff; valaddr_reg:x3; val_offset:94083*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94083*0 + 3*641*FLEN/8, x4, x1, x2)

inst_31362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85000fff; valaddr_reg:x3; val_offset:94086*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94086*0 + 3*642*FLEN/8, x4, x1, x2)

inst_31363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85001fff; valaddr_reg:x3; val_offset:94089*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94089*0 + 3*643*FLEN/8, x4, x1, x2)

inst_31364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85003fff; valaddr_reg:x3; val_offset:94092*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94092*0 + 3*644*FLEN/8, x4, x1, x2)

inst_31365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85007fff; valaddr_reg:x3; val_offset:94095*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94095*0 + 3*645*FLEN/8, x4, x1, x2)

inst_31366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x8500ffff; valaddr_reg:x3; val_offset:94098*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94098*0 + 3*646*FLEN/8, x4, x1, x2)

inst_31367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x8501ffff; valaddr_reg:x3; val_offset:94101*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94101*0 + 3*647*FLEN/8, x4, x1, x2)

inst_31368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x8503ffff; valaddr_reg:x3; val_offset:94104*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94104*0 + 3*648*FLEN/8, x4, x1, x2)

inst_31369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x8507ffff; valaddr_reg:x3; val_offset:94107*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94107*0 + 3*649*FLEN/8, x4, x1, x2)

inst_31370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x850fffff; valaddr_reg:x3; val_offset:94110*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94110*0 + 3*650*FLEN/8, x4, x1, x2)

inst_31371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x851fffff; valaddr_reg:x3; val_offset:94113*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94113*0 + 3*651*FLEN/8, x4, x1, x2)

inst_31372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x853fffff; valaddr_reg:x3; val_offset:94116*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94116*0 + 3*652*FLEN/8, x4, x1, x2)

inst_31373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85400000; valaddr_reg:x3; val_offset:94119*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94119*0 + 3*653*FLEN/8, x4, x1, x2)

inst_31374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85600000; valaddr_reg:x3; val_offset:94122*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94122*0 + 3*654*FLEN/8, x4, x1, x2)

inst_31375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85700000; valaddr_reg:x3; val_offset:94125*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94125*0 + 3*655*FLEN/8, x4, x1, x2)

inst_31376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x85780000; valaddr_reg:x3; val_offset:94128*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94128*0 + 3*656*FLEN/8, x4, x1, x2)

inst_31377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857c0000; valaddr_reg:x3; val_offset:94131*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94131*0 + 3*657*FLEN/8, x4, x1, x2)

inst_31378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857e0000; valaddr_reg:x3; val_offset:94134*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94134*0 + 3*658*FLEN/8, x4, x1, x2)

inst_31379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857f0000; valaddr_reg:x3; val_offset:94137*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94137*0 + 3*659*FLEN/8, x4, x1, x2)

inst_31380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857f8000; valaddr_reg:x3; val_offset:94140*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94140*0 + 3*660*FLEN/8, x4, x1, x2)

inst_31381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857fc000; valaddr_reg:x3; val_offset:94143*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94143*0 + 3*661*FLEN/8, x4, x1, x2)

inst_31382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857fe000; valaddr_reg:x3; val_offset:94146*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94146*0 + 3*662*FLEN/8, x4, x1, x2)

inst_31383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857ff000; valaddr_reg:x3; val_offset:94149*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94149*0 + 3*663*FLEN/8, x4, x1, x2)

inst_31384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857ff800; valaddr_reg:x3; val_offset:94152*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94152*0 + 3*664*FLEN/8, x4, x1, x2)

inst_31385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857ffc00; valaddr_reg:x3; val_offset:94155*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94155*0 + 3*665*FLEN/8, x4, x1, x2)

inst_31386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857ffe00; valaddr_reg:x3; val_offset:94158*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94158*0 + 3*666*FLEN/8, x4, x1, x2)

inst_31387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857fff00; valaddr_reg:x3; val_offset:94161*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94161*0 + 3*667*FLEN/8, x4, x1, x2)

inst_31388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857fff80; valaddr_reg:x3; val_offset:94164*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94164*0 + 3*668*FLEN/8, x4, x1, x2)

inst_31389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857fffc0; valaddr_reg:x3; val_offset:94167*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94167*0 + 3*669*FLEN/8, x4, x1, x2)

inst_31390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857fffe0; valaddr_reg:x3; val_offset:94170*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94170*0 + 3*670*FLEN/8, x4, x1, x2)

inst_31391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857ffff0; valaddr_reg:x3; val_offset:94173*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94173*0 + 3*671*FLEN/8, x4, x1, x2)

inst_31392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857ffff8; valaddr_reg:x3; val_offset:94176*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94176*0 + 3*672*FLEN/8, x4, x1, x2)

inst_31393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857ffffc; valaddr_reg:x3; val_offset:94179*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94179*0 + 3*673*FLEN/8, x4, x1, x2)

inst_31394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857ffffe; valaddr_reg:x3; val_offset:94182*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94182*0 + 3*674*FLEN/8, x4, x1, x2)

inst_31395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e69e1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e69e1; op2val:0x80000000;
op3val:0x857fffff; valaddr_reg:x3; val_offset:94185*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94185*0 + 3*675*FLEN/8, x4, x1, x2)

inst_31396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0000000; valaddr_reg:x3; val_offset:94188*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94188*0 + 3*676*FLEN/8, x4, x1, x2)

inst_31397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0000001; valaddr_reg:x3; val_offset:94191*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94191*0 + 3*677*FLEN/8, x4, x1, x2)

inst_31398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0000003; valaddr_reg:x3; val_offset:94194*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94194*0 + 3*678*FLEN/8, x4, x1, x2)

inst_31399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0000007; valaddr_reg:x3; val_offset:94197*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94197*0 + 3*679*FLEN/8, x4, x1, x2)

inst_31400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb000000f; valaddr_reg:x3; val_offset:94200*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94200*0 + 3*680*FLEN/8, x4, x1, x2)

inst_31401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb000001f; valaddr_reg:x3; val_offset:94203*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94203*0 + 3*681*FLEN/8, x4, x1, x2)

inst_31402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb000003f; valaddr_reg:x3; val_offset:94206*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94206*0 + 3*682*FLEN/8, x4, x1, x2)

inst_31403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb000007f; valaddr_reg:x3; val_offset:94209*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94209*0 + 3*683*FLEN/8, x4, x1, x2)

inst_31404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb00000ff; valaddr_reg:x3; val_offset:94212*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94212*0 + 3*684*FLEN/8, x4, x1, x2)

inst_31405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb00001ff; valaddr_reg:x3; val_offset:94215*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94215*0 + 3*685*FLEN/8, x4, x1, x2)

inst_31406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb00003ff; valaddr_reg:x3; val_offset:94218*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94218*0 + 3*686*FLEN/8, x4, x1, x2)

inst_31407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb00007ff; valaddr_reg:x3; val_offset:94221*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94221*0 + 3*687*FLEN/8, x4, x1, x2)

inst_31408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0000fff; valaddr_reg:x3; val_offset:94224*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94224*0 + 3*688*FLEN/8, x4, x1, x2)

inst_31409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0001fff; valaddr_reg:x3; val_offset:94227*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94227*0 + 3*689*FLEN/8, x4, x1, x2)

inst_31410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0003fff; valaddr_reg:x3; val_offset:94230*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94230*0 + 3*690*FLEN/8, x4, x1, x2)

inst_31411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0007fff; valaddr_reg:x3; val_offset:94233*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94233*0 + 3*691*FLEN/8, x4, x1, x2)

inst_31412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb000ffff; valaddr_reg:x3; val_offset:94236*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94236*0 + 3*692*FLEN/8, x4, x1, x2)

inst_31413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb001ffff; valaddr_reg:x3; val_offset:94239*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94239*0 + 3*693*FLEN/8, x4, x1, x2)

inst_31414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb003ffff; valaddr_reg:x3; val_offset:94242*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94242*0 + 3*694*FLEN/8, x4, x1, x2)

inst_31415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb007ffff; valaddr_reg:x3; val_offset:94245*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94245*0 + 3*695*FLEN/8, x4, x1, x2)

inst_31416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb00fffff; valaddr_reg:x3; val_offset:94248*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94248*0 + 3*696*FLEN/8, x4, x1, x2)

inst_31417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb01fffff; valaddr_reg:x3; val_offset:94251*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94251*0 + 3*697*FLEN/8, x4, x1, x2)

inst_31418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb03fffff; valaddr_reg:x3; val_offset:94254*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94254*0 + 3*698*FLEN/8, x4, x1, x2)

inst_31419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0400000; valaddr_reg:x3; val_offset:94257*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94257*0 + 3*699*FLEN/8, x4, x1, x2)

inst_31420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0600000; valaddr_reg:x3; val_offset:94260*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94260*0 + 3*700*FLEN/8, x4, x1, x2)

inst_31421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0700000; valaddr_reg:x3; val_offset:94263*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94263*0 + 3*701*FLEN/8, x4, x1, x2)

inst_31422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb0780000; valaddr_reg:x3; val_offset:94266*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94266*0 + 3*702*FLEN/8, x4, x1, x2)

inst_31423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07c0000; valaddr_reg:x3; val_offset:94269*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94269*0 + 3*703*FLEN/8, x4, x1, x2)

inst_31424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07e0000; valaddr_reg:x3; val_offset:94272*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94272*0 + 3*704*FLEN/8, x4, x1, x2)

inst_31425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07f0000; valaddr_reg:x3; val_offset:94275*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94275*0 + 3*705*FLEN/8, x4, x1, x2)

inst_31426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07f8000; valaddr_reg:x3; val_offset:94278*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94278*0 + 3*706*FLEN/8, x4, x1, x2)

inst_31427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07fc000; valaddr_reg:x3; val_offset:94281*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94281*0 + 3*707*FLEN/8, x4, x1, x2)

inst_31428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07fe000; valaddr_reg:x3; val_offset:94284*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94284*0 + 3*708*FLEN/8, x4, x1, x2)

inst_31429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07ff000; valaddr_reg:x3; val_offset:94287*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94287*0 + 3*709*FLEN/8, x4, x1, x2)

inst_31430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07ff800; valaddr_reg:x3; val_offset:94290*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94290*0 + 3*710*FLEN/8, x4, x1, x2)

inst_31431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07ffc00; valaddr_reg:x3; val_offset:94293*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94293*0 + 3*711*FLEN/8, x4, x1, x2)

inst_31432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07ffe00; valaddr_reg:x3; val_offset:94296*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94296*0 + 3*712*FLEN/8, x4, x1, x2)

inst_31433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07fff00; valaddr_reg:x3; val_offset:94299*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94299*0 + 3*713*FLEN/8, x4, x1, x2)

inst_31434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07fff80; valaddr_reg:x3; val_offset:94302*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94302*0 + 3*714*FLEN/8, x4, x1, x2)

inst_31435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07fffc0; valaddr_reg:x3; val_offset:94305*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94305*0 + 3*715*FLEN/8, x4, x1, x2)

inst_31436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07fffe0; valaddr_reg:x3; val_offset:94308*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94308*0 + 3*716*FLEN/8, x4, x1, x2)

inst_31437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07ffff0; valaddr_reg:x3; val_offset:94311*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94311*0 + 3*717*FLEN/8, x4, x1, x2)

inst_31438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07ffff8; valaddr_reg:x3; val_offset:94314*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94314*0 + 3*718*FLEN/8, x4, x1, x2)

inst_31439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07ffffc; valaddr_reg:x3; val_offset:94317*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94317*0 + 3*719*FLEN/8, x4, x1, x2)

inst_31440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07ffffe; valaddr_reg:x3; val_offset:94320*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94320*0 + 3*720*FLEN/8, x4, x1, x2)

inst_31441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x60 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xb07fffff; valaddr_reg:x3; val_offset:94323*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94323*0 + 3*721*FLEN/8, x4, x1, x2)

inst_31442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbf800001; valaddr_reg:x3; val_offset:94326*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94326*0 + 3*722*FLEN/8, x4, x1, x2)

inst_31443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbf800003; valaddr_reg:x3; val_offset:94329*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94329*0 + 3*723*FLEN/8, x4, x1, x2)

inst_31444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbf800007; valaddr_reg:x3; val_offset:94332*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94332*0 + 3*724*FLEN/8, x4, x1, x2)

inst_31445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbf999999; valaddr_reg:x3; val_offset:94335*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94335*0 + 3*725*FLEN/8, x4, x1, x2)

inst_31446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:94338*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94338*0 + 3*726*FLEN/8, x4, x1, x2)

inst_31447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:94341*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94341*0 + 3*727*FLEN/8, x4, x1, x2)

inst_31448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:94344*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94344*0 + 3*728*FLEN/8, x4, x1, x2)

inst_31449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:94347*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94347*0 + 3*729*FLEN/8, x4, x1, x2)

inst_31450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:94350*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94350*0 + 3*730*FLEN/8, x4, x1, x2)

inst_31451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:94353*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94353*0 + 3*731*FLEN/8, x4, x1, x2)

inst_31452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:94356*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94356*0 + 3*732*FLEN/8, x4, x1, x2)

inst_31453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:94359*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94359*0 + 3*733*FLEN/8, x4, x1, x2)

inst_31454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:94362*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94362*0 + 3*734*FLEN/8, x4, x1, x2)

inst_31455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:94365*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94365*0 + 3*735*FLEN/8, x4, x1, x2)

inst_31456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:94368*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94368*0 + 3*736*FLEN/8, x4, x1, x2)

inst_31457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e79c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33b147 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e79c2; op2val:0x8033b147;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:94371*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94371*0 + 3*737*FLEN/8, x4, x1, x2)

inst_31458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf800000; valaddr_reg:x3; val_offset:94374*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94374*0 + 3*738*FLEN/8, x4, x1, x2)

inst_31459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf800001; valaddr_reg:x3; val_offset:94377*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94377*0 + 3*739*FLEN/8, x4, x1, x2)

inst_31460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf800003; valaddr_reg:x3; val_offset:94380*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94380*0 + 3*740*FLEN/8, x4, x1, x2)

inst_31461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf800007; valaddr_reg:x3; val_offset:94383*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94383*0 + 3*741*FLEN/8, x4, x1, x2)

inst_31462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf80000f; valaddr_reg:x3; val_offset:94386*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94386*0 + 3*742*FLEN/8, x4, x1, x2)

inst_31463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf80001f; valaddr_reg:x3; val_offset:94389*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94389*0 + 3*743*FLEN/8, x4, x1, x2)

inst_31464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf80003f; valaddr_reg:x3; val_offset:94392*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94392*0 + 3*744*FLEN/8, x4, x1, x2)

inst_31465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf80007f; valaddr_reg:x3; val_offset:94395*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94395*0 + 3*745*FLEN/8, x4, x1, x2)

inst_31466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf8000ff; valaddr_reg:x3; val_offset:94398*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94398*0 + 3*746*FLEN/8, x4, x1, x2)

inst_31467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf8001ff; valaddr_reg:x3; val_offset:94401*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94401*0 + 3*747*FLEN/8, x4, x1, x2)

inst_31468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf8003ff; valaddr_reg:x3; val_offset:94404*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94404*0 + 3*748*FLEN/8, x4, x1, x2)

inst_31469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf8007ff; valaddr_reg:x3; val_offset:94407*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94407*0 + 3*749*FLEN/8, x4, x1, x2)

inst_31470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf800fff; valaddr_reg:x3; val_offset:94410*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94410*0 + 3*750*FLEN/8, x4, x1, x2)

inst_31471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf801fff; valaddr_reg:x3; val_offset:94413*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94413*0 + 3*751*FLEN/8, x4, x1, x2)

inst_31472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf803fff; valaddr_reg:x3; val_offset:94416*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94416*0 + 3*752*FLEN/8, x4, x1, x2)

inst_31473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf807fff; valaddr_reg:x3; val_offset:94419*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94419*0 + 3*753*FLEN/8, x4, x1, x2)

inst_31474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf80ffff; valaddr_reg:x3; val_offset:94422*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94422*0 + 3*754*FLEN/8, x4, x1, x2)

inst_31475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf81ffff; valaddr_reg:x3; val_offset:94425*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94425*0 + 3*755*FLEN/8, x4, x1, x2)

inst_31476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf83ffff; valaddr_reg:x3; val_offset:94428*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94428*0 + 3*756*FLEN/8, x4, x1, x2)

inst_31477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf87ffff; valaddr_reg:x3; val_offset:94431*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94431*0 + 3*757*FLEN/8, x4, x1, x2)

inst_31478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf8fffff; valaddr_reg:x3; val_offset:94434*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94434*0 + 3*758*FLEN/8, x4, x1, x2)

inst_31479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdf9fffff; valaddr_reg:x3; val_offset:94437*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94437*0 + 3*759*FLEN/8, x4, x1, x2)

inst_31480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdfbfffff; valaddr_reg:x3; val_offset:94440*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94440*0 + 3*760*FLEN/8, x4, x1, x2)

inst_31481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdfc00000; valaddr_reg:x3; val_offset:94443*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94443*0 + 3*761*FLEN/8, x4, x1, x2)

inst_31482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdfe00000; valaddr_reg:x3; val_offset:94446*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94446*0 + 3*762*FLEN/8, x4, x1, x2)

inst_31483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdff00000; valaddr_reg:x3; val_offset:94449*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94449*0 + 3*763*FLEN/8, x4, x1, x2)

inst_31484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdff80000; valaddr_reg:x3; val_offset:94452*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94452*0 + 3*764*FLEN/8, x4, x1, x2)

inst_31485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdffc0000; valaddr_reg:x3; val_offset:94455*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94455*0 + 3*765*FLEN/8, x4, x1, x2)

inst_31486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdffe0000; valaddr_reg:x3; val_offset:94458*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94458*0 + 3*766*FLEN/8, x4, x1, x2)

inst_31487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fff14 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ccdf9 and fs3 == 1 and fe3 == 0xbf and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fff14; op2val:0xbfcccdf9;
op3val:0xdfff0000; valaddr_reg:x3; val_offset:94461*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94461*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329280,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329281,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329283,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329287,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329295,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329311,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329343,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329407,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329535,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439329791,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439330303,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439331327,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439333375,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439337471,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439345663,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439362047,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439394815,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439460351,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439591423,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3439853567,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3440377855,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3441426431,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3443523583,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3443523584,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3445620736,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3446669312,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447193600,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447455744,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447586816,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447652352,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447685120,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447701504,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447709696,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447713792,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447715840,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447716864,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717376,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717632,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717760,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717824,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717856,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717872,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717880,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717884,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717886,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3447717887,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961178624,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961178625,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961178627,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961178631,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961178639,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961178655,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961178687,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961178751,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961178879,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961179135,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961179647,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961180671,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961182719,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961186815,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961195007,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961211391,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961244159,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961309695,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961440767,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2961702911,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2962227199,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2963275775,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2965372927,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2965372928,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2967470080,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2968518656,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969042944,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969305088,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969436160,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969501696,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969534464,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969550848,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969559040,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969563136,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969565184,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969566208,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969566720,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969566976,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969567104,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969567168,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969567200,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969567216,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969567224,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969567228,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969567230,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(2969567231,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132535908,32,FLEN)
NAN_BOXED(2150926991,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198848,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198849,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198851,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198855,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198863,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198879,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198911,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198975,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357199103,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357199359,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357199871,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357200895,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357202943,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357207039,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357215231,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357231615,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357264383,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357329919,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357460991,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357723135,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2358247423,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2359295999,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2361393151,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2361393152,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2363490304,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2364538880,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365063168,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365325312,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365456384,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365521920,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365554688,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365571072,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365579264,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365583360,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365585408,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365586432,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365586944,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587200,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587328,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587392,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587424,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587440,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587448,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587452,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587454,32,FLEN)
NAN_BOXED(2132568916,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587455,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603979776,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603979777,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603979779,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603979783,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603979791,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603979807,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603979839,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603979903,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603980031,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603980287,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603980799,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603981823,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603983871,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603987967,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(603996159,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(604012543,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(604045311,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(604110847,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(604241919,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(604504063,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(605028351,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(606076927,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(608174079,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(608174080,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(610271232,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(611319808,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(611844096,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612106240,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612237312,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612302848,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612335616,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612352000,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612360192,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612364288,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612366336,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612367360,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612367872,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612368128,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612368256,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612368320,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612368352,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612368368,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612368376,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612368380,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612368382,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(612368383,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132573645,32,FLEN)
NAN_BOXED(3430673,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2132589132,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033024,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033025,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033027,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033031,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033039,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033055,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033087,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033151,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033279,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033535,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332034047,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332035071,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332037119,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332041215,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332049407,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332065791,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332098559,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332164095,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332295167,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332557311,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2333081599,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2334130175,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2336227327,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2336227328,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2338324480,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2339373056,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2339897344,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340159488,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340290560,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340356096,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340388864,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340405248,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340413440,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340417536,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340419584,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340420608,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421120,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421376,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421504,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421568,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421600,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421616,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421624,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421628,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421630,32,FLEN)
NAN_BOXED(2132618401,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421631,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152360960,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152360961,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152360963,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152360967,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152360975,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152360991,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152361023,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152361087,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152361215,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152361471,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152361983,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152363007,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152365055,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152369151,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152377343,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152393727,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152426495,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152492031,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152623103,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4152885247,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4153409535,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4154458111,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4156555263,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4156555264,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4158652416,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4159700992,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160225280,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160487424,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160618496,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160684032,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160716800,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160733184,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160741376,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160745472,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160747520,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160748544,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749056,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749312,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749440,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749504,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749536,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749552,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749560,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749564,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749566,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4160749567,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2132635858,32,FLEN)
NAN_BOXED(3218088205,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877312,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877313,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877315,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877319,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877327,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877343,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877375,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877439,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877567,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004877823,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004878335,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004879359,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004881407,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004885503,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004893695,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004910079,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2004942847,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2005008383,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2005139455,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2005401599,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2005925887,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2006974463,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2009071615,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2009071616,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2011168768,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2012217344,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2012741632,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013003776,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013134848,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013200384,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013233152,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013249536,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013257728,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013261824,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013263872,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013264896,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265408,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265664,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265792,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265856,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265888,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265904,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265912,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265916,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265918,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2013265919,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2132661588,32,FLEN)
NAN_BOXED(1070570629,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2132690804,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254464,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254465,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254467,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254471,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254479,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254495,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254527,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254591,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254719,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696254975,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696255487,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696256511,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696258559,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696262655,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696270847,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696287231,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696319999,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696385535,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696516607,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(696778751,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(697303039,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(698351615,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(700448767,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(700448768,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(702545920,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(703594496,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704118784,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704380928,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704512000,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704577536,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704610304,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704626688,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704634880,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704638976,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704641024,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704642048,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704642560,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704642816,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704642944,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704643008,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704643040,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704643056,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704643064,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704643068,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704643070,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(704643071,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132695548,32,FLEN)
NAN_BOXED(3390374,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369728,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369729,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369731,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369735,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369743,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369759,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369791,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369855,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369983,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231370239,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231370751,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231371775,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231373823,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231377919,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231386111,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231402495,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231435263,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231500799,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231631871,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231894015,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2232418303,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2233466879,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2235564031,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2235564032,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2237661184,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2238709760,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239234048,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239496192,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239627264,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239692800,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239725568,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239741952,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239750144,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239754240,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239756288,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239757312,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239757824,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758080,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758208,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758272,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758304,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758320,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758328,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758332,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758334,32,FLEN)
NAN_BOXED(2132699617,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758335,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790016,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790017,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790019,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790023,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790031,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790047,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790079,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790143,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790271,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952790527,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952791039,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952792063,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952794111,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952798207,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952806399,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952822783,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952855551,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2952921087,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2953052159,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2953314303,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2953838591,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2954887167,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2956984319,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2956984320,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2959081472,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2960130048,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2960654336,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2960916480,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961047552,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961113088,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961145856,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961162240,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961170432,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961174528,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961176576,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961177600,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178112,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178368,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178496,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178560,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178592,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178608,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178616,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178620,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178622,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(2961178623,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132703682,32,FLEN)
NAN_BOXED(2150871367,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749707776,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749707777,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749707779,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749707783,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749707791,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749707807,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749707839,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749707903,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749708031,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749708287,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749708799,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749709823,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749711871,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749715967,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749724159,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749740543,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749773311,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749838847,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3749969919,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3750232063,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3750756351,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3751804927,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3753902079,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3753902080,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3755999232,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3757047808,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3757572096,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3757834240,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3757965312,32,FLEN)
NAN_BOXED(2132803348,32,FLEN)
NAN_BOXED(3217870329,32,FLEN)
NAN_BOXED(3758030848,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
