
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_29952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3efffffe; valaddr_reg:x3; val_offset:89856*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89856*0 + 3*0*FLEN/8, x4, x1, x2)

inst_29953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3effffff; valaddr_reg:x3; val_offset:89859*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89859*0 + 3*1*FLEN/8, x4, x1, x2)

inst_29954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3f800001; valaddr_reg:x3; val_offset:89862*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89862*0 + 3*2*FLEN/8, x4, x1, x2)

inst_29955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3f800003; valaddr_reg:x3; val_offset:89865*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89865*0 + 3*3*FLEN/8, x4, x1, x2)

inst_29956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3f800007; valaddr_reg:x3; val_offset:89868*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89868*0 + 3*4*FLEN/8, x4, x1, x2)

inst_29957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3f999999; valaddr_reg:x3; val_offset:89871*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89871*0 + 3*5*FLEN/8, x4, x1, x2)

inst_29958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:89874*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89874*0 + 3*6*FLEN/8, x4, x1, x2)

inst_29959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:89877*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89877*0 + 3*7*FLEN/8, x4, x1, x2)

inst_29960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:89880*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89880*0 + 3*8*FLEN/8, x4, x1, x2)

inst_29961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:89883*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89883*0 + 3*9*FLEN/8, x4, x1, x2)

inst_29962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:89886*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89886*0 + 3*10*FLEN/8, x4, x1, x2)

inst_29963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:89889*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89889*0 + 3*11*FLEN/8, x4, x1, x2)

inst_29964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:89892*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89892*0 + 3*12*FLEN/8, x4, x1, x2)

inst_29965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:89895*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89895*0 + 3*13*FLEN/8, x4, x1, x2)

inst_29966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:89898*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89898*0 + 3*14*FLEN/8, x4, x1, x2)

inst_29967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:89901*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89901*0 + 3*15*FLEN/8, x4, x1, x2)

inst_29968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:89904*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89904*0 + 3*16*FLEN/8, x4, x1, x2)

inst_29969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175fe4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x361e0e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175fe4; op2val:0x361e0e;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:89907*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89907*0 + 3*17*FLEN/8, x4, x1, x2)

inst_29970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3f800001; valaddr_reg:x3; val_offset:89910*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89910*0 + 3*18*FLEN/8, x4, x1, x2)

inst_29971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3f800003; valaddr_reg:x3; val_offset:89913*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89913*0 + 3*19*FLEN/8, x4, x1, x2)

inst_29972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3f800007; valaddr_reg:x3; val_offset:89916*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89916*0 + 3*20*FLEN/8, x4, x1, x2)

inst_29973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3f999999; valaddr_reg:x3; val_offset:89919*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89919*0 + 3*21*FLEN/8, x4, x1, x2)

inst_29974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:89922*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89922*0 + 3*22*FLEN/8, x4, x1, x2)

inst_29975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:89925*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89925*0 + 3*23*FLEN/8, x4, x1, x2)

inst_29976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:89928*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89928*0 + 3*24*FLEN/8, x4, x1, x2)

inst_29977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:89931*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89931*0 + 3*25*FLEN/8, x4, x1, x2)

inst_29978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:89934*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89934*0 + 3*26*FLEN/8, x4, x1, x2)

inst_29979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:89937*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89937*0 + 3*27*FLEN/8, x4, x1, x2)

inst_29980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:89940*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89940*0 + 3*28*FLEN/8, x4, x1, x2)

inst_29981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:89943*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89943*0 + 3*29*FLEN/8, x4, x1, x2)

inst_29982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:89946*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89946*0 + 3*30*FLEN/8, x4, x1, x2)

inst_29983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:89949*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89949*0 + 3*31*FLEN/8, x4, x1, x2)

inst_29984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:89952*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89952*0 + 3*32*FLEN/8, x4, x1, x2)

inst_29985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:89955*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89955*0 + 3*33*FLEN/8, x4, x1, x2)

inst_29986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000000; valaddr_reg:x3; val_offset:89958*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89958*0 + 3*34*FLEN/8, x4, x1, x2)

inst_29987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000001; valaddr_reg:x3; val_offset:89961*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89961*0 + 3*35*FLEN/8, x4, x1, x2)

inst_29988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000003; valaddr_reg:x3; val_offset:89964*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89964*0 + 3*36*FLEN/8, x4, x1, x2)

inst_29989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000007; valaddr_reg:x3; val_offset:89967*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89967*0 + 3*37*FLEN/8, x4, x1, x2)

inst_29990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00000f; valaddr_reg:x3; val_offset:89970*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89970*0 + 3*38*FLEN/8, x4, x1, x2)

inst_29991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00001f; valaddr_reg:x3; val_offset:89973*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89973*0 + 3*39*FLEN/8, x4, x1, x2)

inst_29992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00003f; valaddr_reg:x3; val_offset:89976*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89976*0 + 3*40*FLEN/8, x4, x1, x2)

inst_29993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00007f; valaddr_reg:x3; val_offset:89979*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89979*0 + 3*41*FLEN/8, x4, x1, x2)

inst_29994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0000ff; valaddr_reg:x3; val_offset:89982*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89982*0 + 3*42*FLEN/8, x4, x1, x2)

inst_29995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0001ff; valaddr_reg:x3; val_offset:89985*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89985*0 + 3*43*FLEN/8, x4, x1, x2)

inst_29996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0003ff; valaddr_reg:x3; val_offset:89988*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89988*0 + 3*44*FLEN/8, x4, x1, x2)

inst_29997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0007ff; valaddr_reg:x3; val_offset:89991*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89991*0 + 3*45*FLEN/8, x4, x1, x2)

inst_29998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c000fff; valaddr_reg:x3; val_offset:89994*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89994*0 + 3*46*FLEN/8, x4, x1, x2)

inst_29999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c001fff; valaddr_reg:x3; val_offset:89997*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 89997*0 + 3*47*FLEN/8, x4, x1, x2)

inst_30000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c003fff; valaddr_reg:x3; val_offset:90000*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90000*0 + 3*48*FLEN/8, x4, x1, x2)

inst_30001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c007fff; valaddr_reg:x3; val_offset:90003*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90003*0 + 3*49*FLEN/8, x4, x1, x2)

inst_30002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c00ffff; valaddr_reg:x3; val_offset:90006*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90006*0 + 3*50*FLEN/8, x4, x1, x2)

inst_30003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c01ffff; valaddr_reg:x3; val_offset:90009*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90009*0 + 3*51*FLEN/8, x4, x1, x2)

inst_30004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c03ffff; valaddr_reg:x3; val_offset:90012*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90012*0 + 3*52*FLEN/8, x4, x1, x2)

inst_30005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c07ffff; valaddr_reg:x3; val_offset:90015*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90015*0 + 3*53*FLEN/8, x4, x1, x2)

inst_30006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c0fffff; valaddr_reg:x3; val_offset:90018*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90018*0 + 3*54*FLEN/8, x4, x1, x2)

inst_30007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c1fffff; valaddr_reg:x3; val_offset:90021*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90021*0 + 3*55*FLEN/8, x4, x1, x2)

inst_30008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c3fffff; valaddr_reg:x3; val_offset:90024*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90024*0 + 3*56*FLEN/8, x4, x1, x2)

inst_30009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c400000; valaddr_reg:x3; val_offset:90027*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90027*0 + 3*57*FLEN/8, x4, x1, x2)

inst_30010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c600000; valaddr_reg:x3; val_offset:90030*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90030*0 + 3*58*FLEN/8, x4, x1, x2)

inst_30011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c700000; valaddr_reg:x3; val_offset:90033*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90033*0 + 3*59*FLEN/8, x4, x1, x2)

inst_30012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c780000; valaddr_reg:x3; val_offset:90036*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90036*0 + 3*60*FLEN/8, x4, x1, x2)

inst_30013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7c0000; valaddr_reg:x3; val_offset:90039*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90039*0 + 3*61*FLEN/8, x4, x1, x2)

inst_30014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7e0000; valaddr_reg:x3; val_offset:90042*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90042*0 + 3*62*FLEN/8, x4, x1, x2)

inst_30015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7f0000; valaddr_reg:x3; val_offset:90045*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90045*0 + 3*63*FLEN/8, x4, x1, x2)

inst_30016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7f8000; valaddr_reg:x3; val_offset:90048*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90048*0 + 3*64*FLEN/8, x4, x1, x2)

inst_30017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fc000; valaddr_reg:x3; val_offset:90051*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90051*0 + 3*65*FLEN/8, x4, x1, x2)

inst_30018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fe000; valaddr_reg:x3; val_offset:90054*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90054*0 + 3*66*FLEN/8, x4, x1, x2)

inst_30019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ff000; valaddr_reg:x3; val_offset:90057*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90057*0 + 3*67*FLEN/8, x4, x1, x2)

inst_30020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ff800; valaddr_reg:x3; val_offset:90060*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90060*0 + 3*68*FLEN/8, x4, x1, x2)

inst_30021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffc00; valaddr_reg:x3; val_offset:90063*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90063*0 + 3*69*FLEN/8, x4, x1, x2)

inst_30022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffe00; valaddr_reg:x3; val_offset:90066*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90066*0 + 3*70*FLEN/8, x4, x1, x2)

inst_30023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fff00; valaddr_reg:x3; val_offset:90069*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90069*0 + 3*71*FLEN/8, x4, x1, x2)

inst_30024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fff80; valaddr_reg:x3; val_offset:90072*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90072*0 + 3*72*FLEN/8, x4, x1, x2)

inst_30025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fffc0; valaddr_reg:x3; val_offset:90075*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90075*0 + 3*73*FLEN/8, x4, x1, x2)

inst_30026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fffe0; valaddr_reg:x3; val_offset:90078*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90078*0 + 3*74*FLEN/8, x4, x1, x2)

inst_30027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffff0; valaddr_reg:x3; val_offset:90081*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90081*0 + 3*75*FLEN/8, x4, x1, x2)

inst_30028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffff8; valaddr_reg:x3; val_offset:90084*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90084*0 + 3*76*FLEN/8, x4, x1, x2)

inst_30029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffffc; valaddr_reg:x3; val_offset:90087*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90087*0 + 3*77*FLEN/8, x4, x1, x2)

inst_30030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7ffffe; valaddr_reg:x3; val_offset:90090*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90090*0 + 3*78*FLEN/8, x4, x1, x2)

inst_30031:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17fbea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35e680 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f17fbea; op2val:0x35e680;
op3val:0x4c7fffff; valaddr_reg:x3; val_offset:90093*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90093*0 + 3*79*FLEN/8, x4, x1, x2)

inst_30032:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800000; valaddr_reg:x3; val_offset:90096*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90096*0 + 3*80*FLEN/8, x4, x1, x2)

inst_30033:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800001; valaddr_reg:x3; val_offset:90099*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90099*0 + 3*81*FLEN/8, x4, x1, x2)

inst_30034:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800003; valaddr_reg:x3; val_offset:90102*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90102*0 + 3*82*FLEN/8, x4, x1, x2)

inst_30035:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800007; valaddr_reg:x3; val_offset:90105*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90105*0 + 3*83*FLEN/8, x4, x1, x2)

inst_30036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380000f; valaddr_reg:x3; val_offset:90108*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90108*0 + 3*84*FLEN/8, x4, x1, x2)

inst_30037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380001f; valaddr_reg:x3; val_offset:90111*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90111*0 + 3*85*FLEN/8, x4, x1, x2)

inst_30038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380003f; valaddr_reg:x3; val_offset:90114*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90114*0 + 3*86*FLEN/8, x4, x1, x2)

inst_30039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380007f; valaddr_reg:x3; val_offset:90117*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90117*0 + 3*87*FLEN/8, x4, x1, x2)

inst_30040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338000ff; valaddr_reg:x3; val_offset:90120*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90120*0 + 3*88*FLEN/8, x4, x1, x2)

inst_30041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338001ff; valaddr_reg:x3; val_offset:90123*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90123*0 + 3*89*FLEN/8, x4, x1, x2)

inst_30042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338003ff; valaddr_reg:x3; val_offset:90126*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90126*0 + 3*90*FLEN/8, x4, x1, x2)

inst_30043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338007ff; valaddr_reg:x3; val_offset:90129*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90129*0 + 3*91*FLEN/8, x4, x1, x2)

inst_30044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33800fff; valaddr_reg:x3; val_offset:90132*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90132*0 + 3*92*FLEN/8, x4, x1, x2)

inst_30045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33801fff; valaddr_reg:x3; val_offset:90135*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90135*0 + 3*93*FLEN/8, x4, x1, x2)

inst_30046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33803fff; valaddr_reg:x3; val_offset:90138*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90138*0 + 3*94*FLEN/8, x4, x1, x2)

inst_30047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33807fff; valaddr_reg:x3; val_offset:90141*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90141*0 + 3*95*FLEN/8, x4, x1, x2)

inst_30048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3380ffff; valaddr_reg:x3; val_offset:90144*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90144*0 + 3*96*FLEN/8, x4, x1, x2)

inst_30049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3381ffff; valaddr_reg:x3; val_offset:90147*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90147*0 + 3*97*FLEN/8, x4, x1, x2)

inst_30050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3383ffff; valaddr_reg:x3; val_offset:90150*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90150*0 + 3*98*FLEN/8, x4, x1, x2)

inst_30051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3387ffff; valaddr_reg:x3; val_offset:90153*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90153*0 + 3*99*FLEN/8, x4, x1, x2)

inst_30052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x338fffff; valaddr_reg:x3; val_offset:90156*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90156*0 + 3*100*FLEN/8, x4, x1, x2)

inst_30053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x339fffff; valaddr_reg:x3; val_offset:90159*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90159*0 + 3*101*FLEN/8, x4, x1, x2)

inst_30054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33bfffff; valaddr_reg:x3; val_offset:90162*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90162*0 + 3*102*FLEN/8, x4, x1, x2)

inst_30055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33c00000; valaddr_reg:x3; val_offset:90165*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90165*0 + 3*103*FLEN/8, x4, x1, x2)

inst_30056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33e00000; valaddr_reg:x3; val_offset:90168*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90168*0 + 3*104*FLEN/8, x4, x1, x2)

inst_30057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33f00000; valaddr_reg:x3; val_offset:90171*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90171*0 + 3*105*FLEN/8, x4, x1, x2)

inst_30058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33f80000; valaddr_reg:x3; val_offset:90174*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90174*0 + 3*106*FLEN/8, x4, x1, x2)

inst_30059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fc0000; valaddr_reg:x3; val_offset:90177*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90177*0 + 3*107*FLEN/8, x4, x1, x2)

inst_30060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fe0000; valaddr_reg:x3; val_offset:90180*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90180*0 + 3*108*FLEN/8, x4, x1, x2)

inst_30061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ff0000; valaddr_reg:x3; val_offset:90183*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90183*0 + 3*109*FLEN/8, x4, x1, x2)

inst_30062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ff8000; valaddr_reg:x3; val_offset:90186*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90186*0 + 3*110*FLEN/8, x4, x1, x2)

inst_30063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffc000; valaddr_reg:x3; val_offset:90189*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90189*0 + 3*111*FLEN/8, x4, x1, x2)

inst_30064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffe000; valaddr_reg:x3; val_offset:90192*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90192*0 + 3*112*FLEN/8, x4, x1, x2)

inst_30065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fff000; valaddr_reg:x3; val_offset:90195*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90195*0 + 3*113*FLEN/8, x4, x1, x2)

inst_30066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fff800; valaddr_reg:x3; val_offset:90198*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90198*0 + 3*114*FLEN/8, x4, x1, x2)

inst_30067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffc00; valaddr_reg:x3; val_offset:90201*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90201*0 + 3*115*FLEN/8, x4, x1, x2)

inst_30068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffe00; valaddr_reg:x3; val_offset:90204*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90204*0 + 3*116*FLEN/8, x4, x1, x2)

inst_30069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffff00; valaddr_reg:x3; val_offset:90207*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90207*0 + 3*117*FLEN/8, x4, x1, x2)

inst_30070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffff80; valaddr_reg:x3; val_offset:90210*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90210*0 + 3*118*FLEN/8, x4, x1, x2)

inst_30071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffffc0; valaddr_reg:x3; val_offset:90213*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90213*0 + 3*119*FLEN/8, x4, x1, x2)

inst_30072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffffe0; valaddr_reg:x3; val_offset:90216*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90216*0 + 3*120*FLEN/8, x4, x1, x2)

inst_30073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffff0; valaddr_reg:x3; val_offset:90219*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90219*0 + 3*121*FLEN/8, x4, x1, x2)

inst_30074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffff8; valaddr_reg:x3; val_offset:90222*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90222*0 + 3*122*FLEN/8, x4, x1, x2)

inst_30075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffffc; valaddr_reg:x3; val_offset:90225*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90225*0 + 3*123*FLEN/8, x4, x1, x2)

inst_30076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33fffffe; valaddr_reg:x3; val_offset:90228*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90228*0 + 3*124*FLEN/8, x4, x1, x2)

inst_30077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x33ffffff; valaddr_reg:x3; val_offset:90231*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90231*0 + 3*125*FLEN/8, x4, x1, x2)

inst_30078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3f800001; valaddr_reg:x3; val_offset:90234*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90234*0 + 3*126*FLEN/8, x4, x1, x2)

inst_30079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3f800003; valaddr_reg:x3; val_offset:90237*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90237*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_30080:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3f800007; valaddr_reg:x3; val_offset:90240*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90240*0 + 3*128*FLEN/8, x4, x1, x2)

inst_30081:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3f999999; valaddr_reg:x3; val_offset:90243*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90243*0 + 3*129*FLEN/8, x4, x1, x2)

inst_30082:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:90246*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90246*0 + 3*130*FLEN/8, x4, x1, x2)

inst_30083:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:90249*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90249*0 + 3*131*FLEN/8, x4, x1, x2)

inst_30084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:90252*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90252*0 + 3*132*FLEN/8, x4, x1, x2)

inst_30085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:90255*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90255*0 + 3*133*FLEN/8, x4, x1, x2)

inst_30086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:90258*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90258*0 + 3*134*FLEN/8, x4, x1, x2)

inst_30087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:90261*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90261*0 + 3*135*FLEN/8, x4, x1, x2)

inst_30088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:90264*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90264*0 + 3*136*FLEN/8, x4, x1, x2)

inst_30089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:90267*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90267*0 + 3*137*FLEN/8, x4, x1, x2)

inst_30090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:90270*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90270*0 + 3*138*FLEN/8, x4, x1, x2)

inst_30091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:90273*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90273*0 + 3*139*FLEN/8, x4, x1, x2)

inst_30092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:90276*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90276*0 + 3*140*FLEN/8, x4, x1, x2)

inst_30093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x187a72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35b9c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f187a72; op2val:0x35b9c5;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:90279*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90279*0 + 3*141*FLEN/8, x4, x1, x2)

inst_30094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:90282*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90282*0 + 3*142*FLEN/8, x4, x1, x2)

inst_30095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:90285*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90285*0 + 3*143*FLEN/8, x4, x1, x2)

inst_30096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:90288*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90288*0 + 3*144*FLEN/8, x4, x1, x2)

inst_30097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:90291*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90291*0 + 3*145*FLEN/8, x4, x1, x2)

inst_30098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:90294*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90294*0 + 3*146*FLEN/8, x4, x1, x2)

inst_30099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:90297*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90297*0 + 3*147*FLEN/8, x4, x1, x2)

inst_30100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:90300*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90300*0 + 3*148*FLEN/8, x4, x1, x2)

inst_30101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:90303*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90303*0 + 3*149*FLEN/8, x4, x1, x2)

inst_30102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:90306*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90306*0 + 3*150*FLEN/8, x4, x1, x2)

inst_30103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:90309*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90309*0 + 3*151*FLEN/8, x4, x1, x2)

inst_30104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:90312*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90312*0 + 3*152*FLEN/8, x4, x1, x2)

inst_30105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:90315*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90315*0 + 3*153*FLEN/8, x4, x1, x2)

inst_30106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:90318*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90318*0 + 3*154*FLEN/8, x4, x1, x2)

inst_30107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:90321*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90321*0 + 3*155*FLEN/8, x4, x1, x2)

inst_30108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:90324*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90324*0 + 3*156*FLEN/8, x4, x1, x2)

inst_30109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:90327*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90327*0 + 3*157*FLEN/8, x4, x1, x2)

inst_30110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82000000; valaddr_reg:x3; val_offset:90330*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90330*0 + 3*158*FLEN/8, x4, x1, x2)

inst_30111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82000001; valaddr_reg:x3; val_offset:90333*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90333*0 + 3*159*FLEN/8, x4, x1, x2)

inst_30112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82000003; valaddr_reg:x3; val_offset:90336*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90336*0 + 3*160*FLEN/8, x4, x1, x2)

inst_30113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82000007; valaddr_reg:x3; val_offset:90339*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90339*0 + 3*161*FLEN/8, x4, x1, x2)

inst_30114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x8200000f; valaddr_reg:x3; val_offset:90342*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90342*0 + 3*162*FLEN/8, x4, x1, x2)

inst_30115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x8200001f; valaddr_reg:x3; val_offset:90345*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90345*0 + 3*163*FLEN/8, x4, x1, x2)

inst_30116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x8200003f; valaddr_reg:x3; val_offset:90348*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90348*0 + 3*164*FLEN/8, x4, x1, x2)

inst_30117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x8200007f; valaddr_reg:x3; val_offset:90351*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90351*0 + 3*165*FLEN/8, x4, x1, x2)

inst_30118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x820000ff; valaddr_reg:x3; val_offset:90354*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90354*0 + 3*166*FLEN/8, x4, x1, x2)

inst_30119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x820001ff; valaddr_reg:x3; val_offset:90357*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90357*0 + 3*167*FLEN/8, x4, x1, x2)

inst_30120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x820003ff; valaddr_reg:x3; val_offset:90360*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90360*0 + 3*168*FLEN/8, x4, x1, x2)

inst_30121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x820007ff; valaddr_reg:x3; val_offset:90363*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90363*0 + 3*169*FLEN/8, x4, x1, x2)

inst_30122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82000fff; valaddr_reg:x3; val_offset:90366*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90366*0 + 3*170*FLEN/8, x4, x1, x2)

inst_30123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82001fff; valaddr_reg:x3; val_offset:90369*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90369*0 + 3*171*FLEN/8, x4, x1, x2)

inst_30124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82003fff; valaddr_reg:x3; val_offset:90372*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90372*0 + 3*172*FLEN/8, x4, x1, x2)

inst_30125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82007fff; valaddr_reg:x3; val_offset:90375*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90375*0 + 3*173*FLEN/8, x4, x1, x2)

inst_30126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x8200ffff; valaddr_reg:x3; val_offset:90378*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90378*0 + 3*174*FLEN/8, x4, x1, x2)

inst_30127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x8201ffff; valaddr_reg:x3; val_offset:90381*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90381*0 + 3*175*FLEN/8, x4, x1, x2)

inst_30128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x8203ffff; valaddr_reg:x3; val_offset:90384*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90384*0 + 3*176*FLEN/8, x4, x1, x2)

inst_30129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x8207ffff; valaddr_reg:x3; val_offset:90387*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90387*0 + 3*177*FLEN/8, x4, x1, x2)

inst_30130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x820fffff; valaddr_reg:x3; val_offset:90390*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90390*0 + 3*178*FLEN/8, x4, x1, x2)

inst_30131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x821fffff; valaddr_reg:x3; val_offset:90393*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90393*0 + 3*179*FLEN/8, x4, x1, x2)

inst_30132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x823fffff; valaddr_reg:x3; val_offset:90396*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90396*0 + 3*180*FLEN/8, x4, x1, x2)

inst_30133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82400000; valaddr_reg:x3; val_offset:90399*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90399*0 + 3*181*FLEN/8, x4, x1, x2)

inst_30134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82600000; valaddr_reg:x3; val_offset:90402*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90402*0 + 3*182*FLEN/8, x4, x1, x2)

inst_30135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82700000; valaddr_reg:x3; val_offset:90405*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90405*0 + 3*183*FLEN/8, x4, x1, x2)

inst_30136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x82780000; valaddr_reg:x3; val_offset:90408*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90408*0 + 3*184*FLEN/8, x4, x1, x2)

inst_30137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827c0000; valaddr_reg:x3; val_offset:90411*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90411*0 + 3*185*FLEN/8, x4, x1, x2)

inst_30138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827e0000; valaddr_reg:x3; val_offset:90414*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90414*0 + 3*186*FLEN/8, x4, x1, x2)

inst_30139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827f0000; valaddr_reg:x3; val_offset:90417*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90417*0 + 3*187*FLEN/8, x4, x1, x2)

inst_30140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827f8000; valaddr_reg:x3; val_offset:90420*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90420*0 + 3*188*FLEN/8, x4, x1, x2)

inst_30141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827fc000; valaddr_reg:x3; val_offset:90423*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90423*0 + 3*189*FLEN/8, x4, x1, x2)

inst_30142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827fe000; valaddr_reg:x3; val_offset:90426*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90426*0 + 3*190*FLEN/8, x4, x1, x2)

inst_30143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827ff000; valaddr_reg:x3; val_offset:90429*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90429*0 + 3*191*FLEN/8, x4, x1, x2)

inst_30144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827ff800; valaddr_reg:x3; val_offset:90432*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90432*0 + 3*192*FLEN/8, x4, x1, x2)

inst_30145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827ffc00; valaddr_reg:x3; val_offset:90435*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90435*0 + 3*193*FLEN/8, x4, x1, x2)

inst_30146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827ffe00; valaddr_reg:x3; val_offset:90438*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90438*0 + 3*194*FLEN/8, x4, x1, x2)

inst_30147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827fff00; valaddr_reg:x3; val_offset:90441*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90441*0 + 3*195*FLEN/8, x4, x1, x2)

inst_30148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827fff80; valaddr_reg:x3; val_offset:90444*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90444*0 + 3*196*FLEN/8, x4, x1, x2)

inst_30149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827fffc0; valaddr_reg:x3; val_offset:90447*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90447*0 + 3*197*FLEN/8, x4, x1, x2)

inst_30150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827fffe0; valaddr_reg:x3; val_offset:90450*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90450*0 + 3*198*FLEN/8, x4, x1, x2)

inst_30151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827ffff0; valaddr_reg:x3; val_offset:90453*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90453*0 + 3*199*FLEN/8, x4, x1, x2)

inst_30152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827ffff8; valaddr_reg:x3; val_offset:90456*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90456*0 + 3*200*FLEN/8, x4, x1, x2)

inst_30153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827ffffc; valaddr_reg:x3; val_offset:90459*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90459*0 + 3*201*FLEN/8, x4, x1, x2)

inst_30154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827ffffe; valaddr_reg:x3; val_offset:90462*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90462*0 + 3*202*FLEN/8, x4, x1, x2)

inst_30155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18cd2c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18cd2c; op2val:0x80000000;
op3val:0x827fffff; valaddr_reg:x3; val_offset:90465*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90465*0 + 3*203*FLEN/8, x4, x1, x2)

inst_30156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:90468*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90468*0 + 3*204*FLEN/8, x4, x1, x2)

inst_30157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:90471*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90471*0 + 3*205*FLEN/8, x4, x1, x2)

inst_30158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:90474*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90474*0 + 3*206*FLEN/8, x4, x1, x2)

inst_30159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:90477*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90477*0 + 3*207*FLEN/8, x4, x1, x2)

inst_30160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:90480*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90480*0 + 3*208*FLEN/8, x4, x1, x2)

inst_30161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:90483*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90483*0 + 3*209*FLEN/8, x4, x1, x2)

inst_30162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:90486*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90486*0 + 3*210*FLEN/8, x4, x1, x2)

inst_30163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:90489*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90489*0 + 3*211*FLEN/8, x4, x1, x2)

inst_30164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:90492*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90492*0 + 3*212*FLEN/8, x4, x1, x2)

inst_30165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:90495*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90495*0 + 3*213*FLEN/8, x4, x1, x2)

inst_30166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:90498*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90498*0 + 3*214*FLEN/8, x4, x1, x2)

inst_30167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:90501*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90501*0 + 3*215*FLEN/8, x4, x1, x2)

inst_30168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:90504*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90504*0 + 3*216*FLEN/8, x4, x1, x2)

inst_30169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:90507*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90507*0 + 3*217*FLEN/8, x4, x1, x2)

inst_30170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:90510*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90510*0 + 3*218*FLEN/8, x4, x1, x2)

inst_30171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:90513*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90513*0 + 3*219*FLEN/8, x4, x1, x2)

inst_30172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87800000; valaddr_reg:x3; val_offset:90516*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90516*0 + 3*220*FLEN/8, x4, x1, x2)

inst_30173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87800001; valaddr_reg:x3; val_offset:90519*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90519*0 + 3*221*FLEN/8, x4, x1, x2)

inst_30174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87800003; valaddr_reg:x3; val_offset:90522*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90522*0 + 3*222*FLEN/8, x4, x1, x2)

inst_30175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87800007; valaddr_reg:x3; val_offset:90525*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90525*0 + 3*223*FLEN/8, x4, x1, x2)

inst_30176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x8780000f; valaddr_reg:x3; val_offset:90528*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90528*0 + 3*224*FLEN/8, x4, x1, x2)

inst_30177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x8780001f; valaddr_reg:x3; val_offset:90531*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90531*0 + 3*225*FLEN/8, x4, x1, x2)

inst_30178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x8780003f; valaddr_reg:x3; val_offset:90534*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90534*0 + 3*226*FLEN/8, x4, x1, x2)

inst_30179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x8780007f; valaddr_reg:x3; val_offset:90537*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90537*0 + 3*227*FLEN/8, x4, x1, x2)

inst_30180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x878000ff; valaddr_reg:x3; val_offset:90540*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90540*0 + 3*228*FLEN/8, x4, x1, x2)

inst_30181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x878001ff; valaddr_reg:x3; val_offset:90543*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90543*0 + 3*229*FLEN/8, x4, x1, x2)

inst_30182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x878003ff; valaddr_reg:x3; val_offset:90546*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90546*0 + 3*230*FLEN/8, x4, x1, x2)

inst_30183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x878007ff; valaddr_reg:x3; val_offset:90549*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90549*0 + 3*231*FLEN/8, x4, x1, x2)

inst_30184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87800fff; valaddr_reg:x3; val_offset:90552*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90552*0 + 3*232*FLEN/8, x4, x1, x2)

inst_30185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87801fff; valaddr_reg:x3; val_offset:90555*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90555*0 + 3*233*FLEN/8, x4, x1, x2)

inst_30186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87803fff; valaddr_reg:x3; val_offset:90558*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90558*0 + 3*234*FLEN/8, x4, x1, x2)

inst_30187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87807fff; valaddr_reg:x3; val_offset:90561*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90561*0 + 3*235*FLEN/8, x4, x1, x2)

inst_30188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x8780ffff; valaddr_reg:x3; val_offset:90564*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90564*0 + 3*236*FLEN/8, x4, x1, x2)

inst_30189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x8781ffff; valaddr_reg:x3; val_offset:90567*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90567*0 + 3*237*FLEN/8, x4, x1, x2)

inst_30190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x8783ffff; valaddr_reg:x3; val_offset:90570*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90570*0 + 3*238*FLEN/8, x4, x1, x2)

inst_30191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x8787ffff; valaddr_reg:x3; val_offset:90573*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90573*0 + 3*239*FLEN/8, x4, x1, x2)

inst_30192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x878fffff; valaddr_reg:x3; val_offset:90576*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90576*0 + 3*240*FLEN/8, x4, x1, x2)

inst_30193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x879fffff; valaddr_reg:x3; val_offset:90579*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90579*0 + 3*241*FLEN/8, x4, x1, x2)

inst_30194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87bfffff; valaddr_reg:x3; val_offset:90582*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90582*0 + 3*242*FLEN/8, x4, x1, x2)

inst_30195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87c00000; valaddr_reg:x3; val_offset:90585*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90585*0 + 3*243*FLEN/8, x4, x1, x2)

inst_30196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87e00000; valaddr_reg:x3; val_offset:90588*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90588*0 + 3*244*FLEN/8, x4, x1, x2)

inst_30197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87f00000; valaddr_reg:x3; val_offset:90591*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90591*0 + 3*245*FLEN/8, x4, x1, x2)

inst_30198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87f80000; valaddr_reg:x3; val_offset:90594*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90594*0 + 3*246*FLEN/8, x4, x1, x2)

inst_30199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fc0000; valaddr_reg:x3; val_offset:90597*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90597*0 + 3*247*FLEN/8, x4, x1, x2)

inst_30200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fe0000; valaddr_reg:x3; val_offset:90600*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90600*0 + 3*248*FLEN/8, x4, x1, x2)

inst_30201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87ff0000; valaddr_reg:x3; val_offset:90603*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90603*0 + 3*249*FLEN/8, x4, x1, x2)

inst_30202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87ff8000; valaddr_reg:x3; val_offset:90606*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90606*0 + 3*250*FLEN/8, x4, x1, x2)

inst_30203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87ffc000; valaddr_reg:x3; val_offset:90609*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90609*0 + 3*251*FLEN/8, x4, x1, x2)

inst_30204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87ffe000; valaddr_reg:x3; val_offset:90612*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90612*0 + 3*252*FLEN/8, x4, x1, x2)

inst_30205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fff000; valaddr_reg:x3; val_offset:90615*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90615*0 + 3*253*FLEN/8, x4, x1, x2)

inst_30206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fff800; valaddr_reg:x3; val_offset:90618*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90618*0 + 3*254*FLEN/8, x4, x1, x2)

inst_30207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fffc00; valaddr_reg:x3; val_offset:90621*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90621*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_30208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fffe00; valaddr_reg:x3; val_offset:90624*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90624*0 + 3*256*FLEN/8, x4, x1, x2)

inst_30209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87ffff00; valaddr_reg:x3; val_offset:90627*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90627*0 + 3*257*FLEN/8, x4, x1, x2)

inst_30210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87ffff80; valaddr_reg:x3; val_offset:90630*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90630*0 + 3*258*FLEN/8, x4, x1, x2)

inst_30211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87ffffc0; valaddr_reg:x3; val_offset:90633*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90633*0 + 3*259*FLEN/8, x4, x1, x2)

inst_30212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87ffffe0; valaddr_reg:x3; val_offset:90636*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90636*0 + 3*260*FLEN/8, x4, x1, x2)

inst_30213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fffff0; valaddr_reg:x3; val_offset:90639*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90639*0 + 3*261*FLEN/8, x4, x1, x2)

inst_30214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fffff8; valaddr_reg:x3; val_offset:90642*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90642*0 + 3*262*FLEN/8, x4, x1, x2)

inst_30215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fffffc; valaddr_reg:x3; val_offset:90645*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90645*0 + 3*263*FLEN/8, x4, x1, x2)

inst_30216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87fffffe; valaddr_reg:x3; val_offset:90648*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90648*0 + 3*264*FLEN/8, x4, x1, x2)

inst_30217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18df9e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f18df9e; op2val:0x80000000;
op3val:0x87ffffff; valaddr_reg:x3; val_offset:90651*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90651*0 + 3*265*FLEN/8, x4, x1, x2)

inst_30218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:90654*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90654*0 + 3*266*FLEN/8, x4, x1, x2)

inst_30219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:90657*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90657*0 + 3*267*FLEN/8, x4, x1, x2)

inst_30220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:90660*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90660*0 + 3*268*FLEN/8, x4, x1, x2)

inst_30221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:90663*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90663*0 + 3*269*FLEN/8, x4, x1, x2)

inst_30222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:90666*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90666*0 + 3*270*FLEN/8, x4, x1, x2)

inst_30223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:90669*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90669*0 + 3*271*FLEN/8, x4, x1, x2)

inst_30224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:90672*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90672*0 + 3*272*FLEN/8, x4, x1, x2)

inst_30225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:90675*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90675*0 + 3*273*FLEN/8, x4, x1, x2)

inst_30226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:90678*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90678*0 + 3*274*FLEN/8, x4, x1, x2)

inst_30227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:90681*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90681*0 + 3*275*FLEN/8, x4, x1, x2)

inst_30228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:90684*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90684*0 + 3*276*FLEN/8, x4, x1, x2)

inst_30229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:90687*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90687*0 + 3*277*FLEN/8, x4, x1, x2)

inst_30230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:90690*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90690*0 + 3*278*FLEN/8, x4, x1, x2)

inst_30231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:90693*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90693*0 + 3*279*FLEN/8, x4, x1, x2)

inst_30232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:90696*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90696*0 + 3*280*FLEN/8, x4, x1, x2)

inst_30233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:90699*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90699*0 + 3*281*FLEN/8, x4, x1, x2)

inst_30234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86800000; valaddr_reg:x3; val_offset:90702*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90702*0 + 3*282*FLEN/8, x4, x1, x2)

inst_30235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86800001; valaddr_reg:x3; val_offset:90705*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90705*0 + 3*283*FLEN/8, x4, x1, x2)

inst_30236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86800003; valaddr_reg:x3; val_offset:90708*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90708*0 + 3*284*FLEN/8, x4, x1, x2)

inst_30237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86800007; valaddr_reg:x3; val_offset:90711*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90711*0 + 3*285*FLEN/8, x4, x1, x2)

inst_30238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x8680000f; valaddr_reg:x3; val_offset:90714*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90714*0 + 3*286*FLEN/8, x4, x1, x2)

inst_30239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x8680001f; valaddr_reg:x3; val_offset:90717*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90717*0 + 3*287*FLEN/8, x4, x1, x2)

inst_30240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x8680003f; valaddr_reg:x3; val_offset:90720*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90720*0 + 3*288*FLEN/8, x4, x1, x2)

inst_30241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x8680007f; valaddr_reg:x3; val_offset:90723*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90723*0 + 3*289*FLEN/8, x4, x1, x2)

inst_30242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x868000ff; valaddr_reg:x3; val_offset:90726*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90726*0 + 3*290*FLEN/8, x4, x1, x2)

inst_30243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x868001ff; valaddr_reg:x3; val_offset:90729*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90729*0 + 3*291*FLEN/8, x4, x1, x2)

inst_30244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x868003ff; valaddr_reg:x3; val_offset:90732*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90732*0 + 3*292*FLEN/8, x4, x1, x2)

inst_30245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x868007ff; valaddr_reg:x3; val_offset:90735*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90735*0 + 3*293*FLEN/8, x4, x1, x2)

inst_30246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86800fff; valaddr_reg:x3; val_offset:90738*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90738*0 + 3*294*FLEN/8, x4, x1, x2)

inst_30247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86801fff; valaddr_reg:x3; val_offset:90741*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90741*0 + 3*295*FLEN/8, x4, x1, x2)

inst_30248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86803fff; valaddr_reg:x3; val_offset:90744*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90744*0 + 3*296*FLEN/8, x4, x1, x2)

inst_30249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86807fff; valaddr_reg:x3; val_offset:90747*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90747*0 + 3*297*FLEN/8, x4, x1, x2)

inst_30250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x8680ffff; valaddr_reg:x3; val_offset:90750*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90750*0 + 3*298*FLEN/8, x4, x1, x2)

inst_30251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x8681ffff; valaddr_reg:x3; val_offset:90753*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90753*0 + 3*299*FLEN/8, x4, x1, x2)

inst_30252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x8683ffff; valaddr_reg:x3; val_offset:90756*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90756*0 + 3*300*FLEN/8, x4, x1, x2)

inst_30253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x8687ffff; valaddr_reg:x3; val_offset:90759*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90759*0 + 3*301*FLEN/8, x4, x1, x2)

inst_30254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x868fffff; valaddr_reg:x3; val_offset:90762*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90762*0 + 3*302*FLEN/8, x4, x1, x2)

inst_30255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x869fffff; valaddr_reg:x3; val_offset:90765*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90765*0 + 3*303*FLEN/8, x4, x1, x2)

inst_30256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86bfffff; valaddr_reg:x3; val_offset:90768*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90768*0 + 3*304*FLEN/8, x4, x1, x2)

inst_30257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86c00000; valaddr_reg:x3; val_offset:90771*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90771*0 + 3*305*FLEN/8, x4, x1, x2)

inst_30258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86e00000; valaddr_reg:x3; val_offset:90774*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90774*0 + 3*306*FLEN/8, x4, x1, x2)

inst_30259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86f00000; valaddr_reg:x3; val_offset:90777*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90777*0 + 3*307*FLEN/8, x4, x1, x2)

inst_30260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86f80000; valaddr_reg:x3; val_offset:90780*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90780*0 + 3*308*FLEN/8, x4, x1, x2)

inst_30261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fc0000; valaddr_reg:x3; val_offset:90783*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90783*0 + 3*309*FLEN/8, x4, x1, x2)

inst_30262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fe0000; valaddr_reg:x3; val_offset:90786*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90786*0 + 3*310*FLEN/8, x4, x1, x2)

inst_30263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86ff0000; valaddr_reg:x3; val_offset:90789*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90789*0 + 3*311*FLEN/8, x4, x1, x2)

inst_30264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86ff8000; valaddr_reg:x3; val_offset:90792*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90792*0 + 3*312*FLEN/8, x4, x1, x2)

inst_30265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86ffc000; valaddr_reg:x3; val_offset:90795*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90795*0 + 3*313*FLEN/8, x4, x1, x2)

inst_30266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86ffe000; valaddr_reg:x3; val_offset:90798*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90798*0 + 3*314*FLEN/8, x4, x1, x2)

inst_30267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fff000; valaddr_reg:x3; val_offset:90801*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90801*0 + 3*315*FLEN/8, x4, x1, x2)

inst_30268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fff800; valaddr_reg:x3; val_offset:90804*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90804*0 + 3*316*FLEN/8, x4, x1, x2)

inst_30269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fffc00; valaddr_reg:x3; val_offset:90807*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90807*0 + 3*317*FLEN/8, x4, x1, x2)

inst_30270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fffe00; valaddr_reg:x3; val_offset:90810*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90810*0 + 3*318*FLEN/8, x4, x1, x2)

inst_30271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86ffff00; valaddr_reg:x3; val_offset:90813*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90813*0 + 3*319*FLEN/8, x4, x1, x2)

inst_30272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86ffff80; valaddr_reg:x3; val_offset:90816*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90816*0 + 3*320*FLEN/8, x4, x1, x2)

inst_30273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86ffffc0; valaddr_reg:x3; val_offset:90819*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90819*0 + 3*321*FLEN/8, x4, x1, x2)

inst_30274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86ffffe0; valaddr_reg:x3; val_offset:90822*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90822*0 + 3*322*FLEN/8, x4, x1, x2)

inst_30275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fffff0; valaddr_reg:x3; val_offset:90825*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90825*0 + 3*323*FLEN/8, x4, x1, x2)

inst_30276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fffff8; valaddr_reg:x3; val_offset:90828*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90828*0 + 3*324*FLEN/8, x4, x1, x2)

inst_30277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fffffc; valaddr_reg:x3; val_offset:90831*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90831*0 + 3*325*FLEN/8, x4, x1, x2)

inst_30278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86fffffe; valaddr_reg:x3; val_offset:90834*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90834*0 + 3*326*FLEN/8, x4, x1, x2)

inst_30279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1930a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1930a7; op2val:0x80000000;
op3val:0x86ffffff; valaddr_reg:x3; val_offset:90837*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90837*0 + 3*327*FLEN/8, x4, x1, x2)

inst_30280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d800000; valaddr_reg:x3; val_offset:90840*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90840*0 + 3*328*FLEN/8, x4, x1, x2)

inst_30281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d800001; valaddr_reg:x3; val_offset:90843*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90843*0 + 3*329*FLEN/8, x4, x1, x2)

inst_30282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d800003; valaddr_reg:x3; val_offset:90846*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90846*0 + 3*330*FLEN/8, x4, x1, x2)

inst_30283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d800007; valaddr_reg:x3; val_offset:90849*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90849*0 + 3*331*FLEN/8, x4, x1, x2)

inst_30284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d80000f; valaddr_reg:x3; val_offset:90852*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90852*0 + 3*332*FLEN/8, x4, x1, x2)

inst_30285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d80001f; valaddr_reg:x3; val_offset:90855*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90855*0 + 3*333*FLEN/8, x4, x1, x2)

inst_30286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d80003f; valaddr_reg:x3; val_offset:90858*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90858*0 + 3*334*FLEN/8, x4, x1, x2)

inst_30287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d80007f; valaddr_reg:x3; val_offset:90861*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90861*0 + 3*335*FLEN/8, x4, x1, x2)

inst_30288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d8000ff; valaddr_reg:x3; val_offset:90864*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90864*0 + 3*336*FLEN/8, x4, x1, x2)

inst_30289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d8001ff; valaddr_reg:x3; val_offset:90867*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90867*0 + 3*337*FLEN/8, x4, x1, x2)

inst_30290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d8003ff; valaddr_reg:x3; val_offset:90870*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90870*0 + 3*338*FLEN/8, x4, x1, x2)

inst_30291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d8007ff; valaddr_reg:x3; val_offset:90873*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90873*0 + 3*339*FLEN/8, x4, x1, x2)

inst_30292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d800fff; valaddr_reg:x3; val_offset:90876*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90876*0 + 3*340*FLEN/8, x4, x1, x2)

inst_30293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d801fff; valaddr_reg:x3; val_offset:90879*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90879*0 + 3*341*FLEN/8, x4, x1, x2)

inst_30294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d803fff; valaddr_reg:x3; val_offset:90882*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90882*0 + 3*342*FLEN/8, x4, x1, x2)

inst_30295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d807fff; valaddr_reg:x3; val_offset:90885*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90885*0 + 3*343*FLEN/8, x4, x1, x2)

inst_30296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d80ffff; valaddr_reg:x3; val_offset:90888*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90888*0 + 3*344*FLEN/8, x4, x1, x2)

inst_30297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d81ffff; valaddr_reg:x3; val_offset:90891*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90891*0 + 3*345*FLEN/8, x4, x1, x2)

inst_30298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d83ffff; valaddr_reg:x3; val_offset:90894*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90894*0 + 3*346*FLEN/8, x4, x1, x2)

inst_30299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d87ffff; valaddr_reg:x3; val_offset:90897*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90897*0 + 3*347*FLEN/8, x4, x1, x2)

inst_30300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d8fffff; valaddr_reg:x3; val_offset:90900*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90900*0 + 3*348*FLEN/8, x4, x1, x2)

inst_30301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6d9fffff; valaddr_reg:x3; val_offset:90903*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90903*0 + 3*349*FLEN/8, x4, x1, x2)

inst_30302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dbfffff; valaddr_reg:x3; val_offset:90906*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90906*0 + 3*350*FLEN/8, x4, x1, x2)

inst_30303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dc00000; valaddr_reg:x3; val_offset:90909*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90909*0 + 3*351*FLEN/8, x4, x1, x2)

inst_30304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6de00000; valaddr_reg:x3; val_offset:90912*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90912*0 + 3*352*FLEN/8, x4, x1, x2)

inst_30305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6df00000; valaddr_reg:x3; val_offset:90915*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90915*0 + 3*353*FLEN/8, x4, x1, x2)

inst_30306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6df80000; valaddr_reg:x3; val_offset:90918*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90918*0 + 3*354*FLEN/8, x4, x1, x2)

inst_30307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfc0000; valaddr_reg:x3; val_offset:90921*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90921*0 + 3*355*FLEN/8, x4, x1, x2)

inst_30308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfe0000; valaddr_reg:x3; val_offset:90924*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90924*0 + 3*356*FLEN/8, x4, x1, x2)

inst_30309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dff0000; valaddr_reg:x3; val_offset:90927*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90927*0 + 3*357*FLEN/8, x4, x1, x2)

inst_30310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dff8000; valaddr_reg:x3; val_offset:90930*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90930*0 + 3*358*FLEN/8, x4, x1, x2)

inst_30311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dffc000; valaddr_reg:x3; val_offset:90933*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90933*0 + 3*359*FLEN/8, x4, x1, x2)

inst_30312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dffe000; valaddr_reg:x3; val_offset:90936*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90936*0 + 3*360*FLEN/8, x4, x1, x2)

inst_30313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfff000; valaddr_reg:x3; val_offset:90939*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90939*0 + 3*361*FLEN/8, x4, x1, x2)

inst_30314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfff800; valaddr_reg:x3; val_offset:90942*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90942*0 + 3*362*FLEN/8, x4, x1, x2)

inst_30315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfffc00; valaddr_reg:x3; val_offset:90945*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90945*0 + 3*363*FLEN/8, x4, x1, x2)

inst_30316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfffe00; valaddr_reg:x3; val_offset:90948*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90948*0 + 3*364*FLEN/8, x4, x1, x2)

inst_30317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dffff00; valaddr_reg:x3; val_offset:90951*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90951*0 + 3*365*FLEN/8, x4, x1, x2)

inst_30318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dffff80; valaddr_reg:x3; val_offset:90954*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90954*0 + 3*366*FLEN/8, x4, x1, x2)

inst_30319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dffffc0; valaddr_reg:x3; val_offset:90957*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90957*0 + 3*367*FLEN/8, x4, x1, x2)

inst_30320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dffffe0; valaddr_reg:x3; val_offset:90960*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90960*0 + 3*368*FLEN/8, x4, x1, x2)

inst_30321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfffff0; valaddr_reg:x3; val_offset:90963*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90963*0 + 3*369*FLEN/8, x4, x1, x2)

inst_30322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfffff8; valaddr_reg:x3; val_offset:90966*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90966*0 + 3*370*FLEN/8, x4, x1, x2)

inst_30323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfffffc; valaddr_reg:x3; val_offset:90969*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90969*0 + 3*371*FLEN/8, x4, x1, x2)

inst_30324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dfffffe; valaddr_reg:x3; val_offset:90972*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90972*0 + 3*372*FLEN/8, x4, x1, x2)

inst_30325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xdb and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x6dffffff; valaddr_reg:x3; val_offset:90975*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90975*0 + 3*373*FLEN/8, x4, x1, x2)

inst_30326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f000001; valaddr_reg:x3; val_offset:90978*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90978*0 + 3*374*FLEN/8, x4, x1, x2)

inst_30327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f000003; valaddr_reg:x3; val_offset:90981*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90981*0 + 3*375*FLEN/8, x4, x1, x2)

inst_30328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f000007; valaddr_reg:x3; val_offset:90984*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90984*0 + 3*376*FLEN/8, x4, x1, x2)

inst_30329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f199999; valaddr_reg:x3; val_offset:90987*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90987*0 + 3*377*FLEN/8, x4, x1, x2)

inst_30330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f249249; valaddr_reg:x3; val_offset:90990*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90990*0 + 3*378*FLEN/8, x4, x1, x2)

inst_30331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f333333; valaddr_reg:x3; val_offset:90993*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90993*0 + 3*379*FLEN/8, x4, x1, x2)

inst_30332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:90996*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90996*0 + 3*380*FLEN/8, x4, x1, x2)

inst_30333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:90999*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 90999*0 + 3*381*FLEN/8, x4, x1, x2)

inst_30334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f444444; valaddr_reg:x3; val_offset:91002*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91002*0 + 3*382*FLEN/8, x4, x1, x2)

inst_30335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:91005*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91005*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_30336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:91008*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91008*0 + 3*384*FLEN/8, x4, x1, x2)

inst_30337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f666666; valaddr_reg:x3; val_offset:91011*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91011*0 + 3*385*FLEN/8, x4, x1, x2)

inst_30338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:91014*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91014*0 + 3*386*FLEN/8, x4, x1, x2)

inst_30339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:91017*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91017*0 + 3*387*FLEN/8, x4, x1, x2)

inst_30340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:91020*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91020*0 + 3*388*FLEN/8, x4, x1, x2)

inst_30341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1933be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55e32a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1933be; op2val:0x3fd5e32a;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:91023*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91023*0 + 3*389*FLEN/8, x4, x1, x2)

inst_30342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbf800001; valaddr_reg:x3; val_offset:91026*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91026*0 + 3*390*FLEN/8, x4, x1, x2)

inst_30343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbf800003; valaddr_reg:x3; val_offset:91029*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91029*0 + 3*391*FLEN/8, x4, x1, x2)

inst_30344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbf800007; valaddr_reg:x3; val_offset:91032*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91032*0 + 3*392*FLEN/8, x4, x1, x2)

inst_30345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbf999999; valaddr_reg:x3; val_offset:91035*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91035*0 + 3*393*FLEN/8, x4, x1, x2)

inst_30346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:91038*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91038*0 + 3*394*FLEN/8, x4, x1, x2)

inst_30347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:91041*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91041*0 + 3*395*FLEN/8, x4, x1, x2)

inst_30348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:91044*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91044*0 + 3*396*FLEN/8, x4, x1, x2)

inst_30349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:91047*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91047*0 + 3*397*FLEN/8, x4, x1, x2)

inst_30350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:91050*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91050*0 + 3*398*FLEN/8, x4, x1, x2)

inst_30351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:91053*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91053*0 + 3*399*FLEN/8, x4, x1, x2)

inst_30352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:91056*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91056*0 + 3*400*FLEN/8, x4, x1, x2)

inst_30353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:91059*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91059*0 + 3*401*FLEN/8, x4, x1, x2)

inst_30354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:91062*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91062*0 + 3*402*FLEN/8, x4, x1, x2)

inst_30355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:91065*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91065*0 + 3*403*FLEN/8, x4, x1, x2)

inst_30356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:91068*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91068*0 + 3*404*FLEN/8, x4, x1, x2)

inst_30357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:91071*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91071*0 + 3*405*FLEN/8, x4, x1, x2)

inst_30358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb800000; valaddr_reg:x3; val_offset:91074*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91074*0 + 3*406*FLEN/8, x4, x1, x2)

inst_30359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb800001; valaddr_reg:x3; val_offset:91077*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91077*0 + 3*407*FLEN/8, x4, x1, x2)

inst_30360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb800003; valaddr_reg:x3; val_offset:91080*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91080*0 + 3*408*FLEN/8, x4, x1, x2)

inst_30361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb800007; valaddr_reg:x3; val_offset:91083*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91083*0 + 3*409*FLEN/8, x4, x1, x2)

inst_30362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb80000f; valaddr_reg:x3; val_offset:91086*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91086*0 + 3*410*FLEN/8, x4, x1, x2)

inst_30363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb80001f; valaddr_reg:x3; val_offset:91089*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91089*0 + 3*411*FLEN/8, x4, x1, x2)

inst_30364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb80003f; valaddr_reg:x3; val_offset:91092*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91092*0 + 3*412*FLEN/8, x4, x1, x2)

inst_30365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb80007f; valaddr_reg:x3; val_offset:91095*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91095*0 + 3*413*FLEN/8, x4, x1, x2)

inst_30366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb8000ff; valaddr_reg:x3; val_offset:91098*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91098*0 + 3*414*FLEN/8, x4, x1, x2)

inst_30367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb8001ff; valaddr_reg:x3; val_offset:91101*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91101*0 + 3*415*FLEN/8, x4, x1, x2)

inst_30368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb8003ff; valaddr_reg:x3; val_offset:91104*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91104*0 + 3*416*FLEN/8, x4, x1, x2)

inst_30369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb8007ff; valaddr_reg:x3; val_offset:91107*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91107*0 + 3*417*FLEN/8, x4, x1, x2)

inst_30370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb800fff; valaddr_reg:x3; val_offset:91110*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91110*0 + 3*418*FLEN/8, x4, x1, x2)

inst_30371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb801fff; valaddr_reg:x3; val_offset:91113*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91113*0 + 3*419*FLEN/8, x4, x1, x2)

inst_30372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb803fff; valaddr_reg:x3; val_offset:91116*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91116*0 + 3*420*FLEN/8, x4, x1, x2)

inst_30373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb807fff; valaddr_reg:x3; val_offset:91119*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91119*0 + 3*421*FLEN/8, x4, x1, x2)

inst_30374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb80ffff; valaddr_reg:x3; val_offset:91122*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91122*0 + 3*422*FLEN/8, x4, x1, x2)

inst_30375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb81ffff; valaddr_reg:x3; val_offset:91125*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91125*0 + 3*423*FLEN/8, x4, x1, x2)

inst_30376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb83ffff; valaddr_reg:x3; val_offset:91128*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91128*0 + 3*424*FLEN/8, x4, x1, x2)

inst_30377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb87ffff; valaddr_reg:x3; val_offset:91131*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91131*0 + 3*425*FLEN/8, x4, x1, x2)

inst_30378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb8fffff; valaddr_reg:x3; val_offset:91134*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91134*0 + 3*426*FLEN/8, x4, x1, x2)

inst_30379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcb9fffff; valaddr_reg:x3; val_offset:91137*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91137*0 + 3*427*FLEN/8, x4, x1, x2)

inst_30380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbbfffff; valaddr_reg:x3; val_offset:91140*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91140*0 + 3*428*FLEN/8, x4, x1, x2)

inst_30381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbc00000; valaddr_reg:x3; val_offset:91143*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91143*0 + 3*429*FLEN/8, x4, x1, x2)

inst_30382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbe00000; valaddr_reg:x3; val_offset:91146*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91146*0 + 3*430*FLEN/8, x4, x1, x2)

inst_30383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbf00000; valaddr_reg:x3; val_offset:91149*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91149*0 + 3*431*FLEN/8, x4, x1, x2)

inst_30384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbf80000; valaddr_reg:x3; val_offset:91152*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91152*0 + 3*432*FLEN/8, x4, x1, x2)

inst_30385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfc0000; valaddr_reg:x3; val_offset:91155*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91155*0 + 3*433*FLEN/8, x4, x1, x2)

inst_30386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfe0000; valaddr_reg:x3; val_offset:91158*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91158*0 + 3*434*FLEN/8, x4, x1, x2)

inst_30387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbff0000; valaddr_reg:x3; val_offset:91161*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91161*0 + 3*435*FLEN/8, x4, x1, x2)

inst_30388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbff8000; valaddr_reg:x3; val_offset:91164*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91164*0 + 3*436*FLEN/8, x4, x1, x2)

inst_30389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbffc000; valaddr_reg:x3; val_offset:91167*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91167*0 + 3*437*FLEN/8, x4, x1, x2)

inst_30390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbffe000; valaddr_reg:x3; val_offset:91170*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91170*0 + 3*438*FLEN/8, x4, x1, x2)

inst_30391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfff000; valaddr_reg:x3; val_offset:91173*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91173*0 + 3*439*FLEN/8, x4, x1, x2)

inst_30392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfff800; valaddr_reg:x3; val_offset:91176*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91176*0 + 3*440*FLEN/8, x4, x1, x2)

inst_30393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfffc00; valaddr_reg:x3; val_offset:91179*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91179*0 + 3*441*FLEN/8, x4, x1, x2)

inst_30394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfffe00; valaddr_reg:x3; val_offset:91182*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91182*0 + 3*442*FLEN/8, x4, x1, x2)

inst_30395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbffff00; valaddr_reg:x3; val_offset:91185*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91185*0 + 3*443*FLEN/8, x4, x1, x2)

inst_30396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbffff80; valaddr_reg:x3; val_offset:91188*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91188*0 + 3*444*FLEN/8, x4, x1, x2)

inst_30397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbffffc0; valaddr_reg:x3; val_offset:91191*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91191*0 + 3*445*FLEN/8, x4, x1, x2)

inst_30398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbffffe0; valaddr_reg:x3; val_offset:91194*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91194*0 + 3*446*FLEN/8, x4, x1, x2)

inst_30399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfffff0; valaddr_reg:x3; val_offset:91197*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91197*0 + 3*447*FLEN/8, x4, x1, x2)

inst_30400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfffff8; valaddr_reg:x3; val_offset:91200*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91200*0 + 3*448*FLEN/8, x4, x1, x2)

inst_30401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfffffc; valaddr_reg:x3; val_offset:91203*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91203*0 + 3*449*FLEN/8, x4, x1, x2)

inst_30402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbfffffe; valaddr_reg:x3; val_offset:91206*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91206*0 + 3*450*FLEN/8, x4, x1, x2)

inst_30403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195356 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x356dc6 and fs3 == 1 and fe3 == 0x97 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f195356; op2val:0x80356dc6;
op3val:0xcbffffff; valaddr_reg:x3; val_offset:91209*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91209*0 + 3*451*FLEN/8, x4, x1, x2)

inst_30404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:91212*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91212*0 + 3*452*FLEN/8, x4, x1, x2)

inst_30405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:91215*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91215*0 + 3*453*FLEN/8, x4, x1, x2)

inst_30406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:91218*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91218*0 + 3*454*FLEN/8, x4, x1, x2)

inst_30407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:91221*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91221*0 + 3*455*FLEN/8, x4, x1, x2)

inst_30408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:91224*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91224*0 + 3*456*FLEN/8, x4, x1, x2)

inst_30409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:91227*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91227*0 + 3*457*FLEN/8, x4, x1, x2)

inst_30410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:91230*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91230*0 + 3*458*FLEN/8, x4, x1, x2)

inst_30411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:91233*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91233*0 + 3*459*FLEN/8, x4, x1, x2)

inst_30412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:91236*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91236*0 + 3*460*FLEN/8, x4, x1, x2)

inst_30413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:91239*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91239*0 + 3*461*FLEN/8, x4, x1, x2)

inst_30414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:91242*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91242*0 + 3*462*FLEN/8, x4, x1, x2)

inst_30415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:91245*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91245*0 + 3*463*FLEN/8, x4, x1, x2)

inst_30416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:91248*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91248*0 + 3*464*FLEN/8, x4, x1, x2)

inst_30417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:91251*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91251*0 + 3*465*FLEN/8, x4, x1, x2)

inst_30418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:91254*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91254*0 + 3*466*FLEN/8, x4, x1, x2)

inst_30419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:91257*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91257*0 + 3*467*FLEN/8, x4, x1, x2)

inst_30420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90000000; valaddr_reg:x3; val_offset:91260*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91260*0 + 3*468*FLEN/8, x4, x1, x2)

inst_30421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90000001; valaddr_reg:x3; val_offset:91263*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91263*0 + 3*469*FLEN/8, x4, x1, x2)

inst_30422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90000003; valaddr_reg:x3; val_offset:91266*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91266*0 + 3*470*FLEN/8, x4, x1, x2)

inst_30423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90000007; valaddr_reg:x3; val_offset:91269*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91269*0 + 3*471*FLEN/8, x4, x1, x2)

inst_30424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x9000000f; valaddr_reg:x3; val_offset:91272*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91272*0 + 3*472*FLEN/8, x4, x1, x2)

inst_30425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x9000001f; valaddr_reg:x3; val_offset:91275*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91275*0 + 3*473*FLEN/8, x4, x1, x2)

inst_30426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x9000003f; valaddr_reg:x3; val_offset:91278*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91278*0 + 3*474*FLEN/8, x4, x1, x2)

inst_30427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x9000007f; valaddr_reg:x3; val_offset:91281*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91281*0 + 3*475*FLEN/8, x4, x1, x2)

inst_30428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x900000ff; valaddr_reg:x3; val_offset:91284*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91284*0 + 3*476*FLEN/8, x4, x1, x2)

inst_30429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x900001ff; valaddr_reg:x3; val_offset:91287*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91287*0 + 3*477*FLEN/8, x4, x1, x2)

inst_30430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x900003ff; valaddr_reg:x3; val_offset:91290*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91290*0 + 3*478*FLEN/8, x4, x1, x2)

inst_30431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x900007ff; valaddr_reg:x3; val_offset:91293*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91293*0 + 3*479*FLEN/8, x4, x1, x2)

inst_30432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90000fff; valaddr_reg:x3; val_offset:91296*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91296*0 + 3*480*FLEN/8, x4, x1, x2)

inst_30433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90001fff; valaddr_reg:x3; val_offset:91299*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91299*0 + 3*481*FLEN/8, x4, x1, x2)

inst_30434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90003fff; valaddr_reg:x3; val_offset:91302*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91302*0 + 3*482*FLEN/8, x4, x1, x2)

inst_30435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90007fff; valaddr_reg:x3; val_offset:91305*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91305*0 + 3*483*FLEN/8, x4, x1, x2)

inst_30436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x9000ffff; valaddr_reg:x3; val_offset:91308*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91308*0 + 3*484*FLEN/8, x4, x1, x2)

inst_30437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x9001ffff; valaddr_reg:x3; val_offset:91311*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91311*0 + 3*485*FLEN/8, x4, x1, x2)

inst_30438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x9003ffff; valaddr_reg:x3; val_offset:91314*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91314*0 + 3*486*FLEN/8, x4, x1, x2)

inst_30439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x9007ffff; valaddr_reg:x3; val_offset:91317*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91317*0 + 3*487*FLEN/8, x4, x1, x2)

inst_30440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x900fffff; valaddr_reg:x3; val_offset:91320*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91320*0 + 3*488*FLEN/8, x4, x1, x2)

inst_30441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x901fffff; valaddr_reg:x3; val_offset:91323*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91323*0 + 3*489*FLEN/8, x4, x1, x2)

inst_30442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x903fffff; valaddr_reg:x3; val_offset:91326*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91326*0 + 3*490*FLEN/8, x4, x1, x2)

inst_30443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90400000; valaddr_reg:x3; val_offset:91329*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91329*0 + 3*491*FLEN/8, x4, x1, x2)

inst_30444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90600000; valaddr_reg:x3; val_offset:91332*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91332*0 + 3*492*FLEN/8, x4, x1, x2)

inst_30445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90700000; valaddr_reg:x3; val_offset:91335*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91335*0 + 3*493*FLEN/8, x4, x1, x2)

inst_30446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x90780000; valaddr_reg:x3; val_offset:91338*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91338*0 + 3*494*FLEN/8, x4, x1, x2)

inst_30447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907c0000; valaddr_reg:x3; val_offset:91341*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91341*0 + 3*495*FLEN/8, x4, x1, x2)

inst_30448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907e0000; valaddr_reg:x3; val_offset:91344*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91344*0 + 3*496*FLEN/8, x4, x1, x2)

inst_30449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907f0000; valaddr_reg:x3; val_offset:91347*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91347*0 + 3*497*FLEN/8, x4, x1, x2)

inst_30450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907f8000; valaddr_reg:x3; val_offset:91350*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91350*0 + 3*498*FLEN/8, x4, x1, x2)

inst_30451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907fc000; valaddr_reg:x3; val_offset:91353*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91353*0 + 3*499*FLEN/8, x4, x1, x2)

inst_30452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907fe000; valaddr_reg:x3; val_offset:91356*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91356*0 + 3*500*FLEN/8, x4, x1, x2)

inst_30453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907ff000; valaddr_reg:x3; val_offset:91359*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91359*0 + 3*501*FLEN/8, x4, x1, x2)

inst_30454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907ff800; valaddr_reg:x3; val_offset:91362*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91362*0 + 3*502*FLEN/8, x4, x1, x2)

inst_30455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907ffc00; valaddr_reg:x3; val_offset:91365*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91365*0 + 3*503*FLEN/8, x4, x1, x2)

inst_30456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907ffe00; valaddr_reg:x3; val_offset:91368*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91368*0 + 3*504*FLEN/8, x4, x1, x2)

inst_30457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907fff00; valaddr_reg:x3; val_offset:91371*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91371*0 + 3*505*FLEN/8, x4, x1, x2)

inst_30458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907fff80; valaddr_reg:x3; val_offset:91374*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91374*0 + 3*506*FLEN/8, x4, x1, x2)

inst_30459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907fffc0; valaddr_reg:x3; val_offset:91377*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91377*0 + 3*507*FLEN/8, x4, x1, x2)

inst_30460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907fffe0; valaddr_reg:x3; val_offset:91380*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91380*0 + 3*508*FLEN/8, x4, x1, x2)

inst_30461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907ffff0; valaddr_reg:x3; val_offset:91383*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91383*0 + 3*509*FLEN/8, x4, x1, x2)

inst_30462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907ffff8; valaddr_reg:x3; val_offset:91386*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91386*0 + 3*510*FLEN/8, x4, x1, x2)

inst_30463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907ffffc; valaddr_reg:x3; val_offset:91389*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91389*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_30464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907ffffe; valaddr_reg:x3; val_offset:91392*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91392*0 + 3*512*FLEN/8, x4, x1, x2)

inst_30465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19752b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19752b; op2val:0x80000000;
op3val:0x907fffff; valaddr_reg:x3; val_offset:91395*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91395*0 + 3*513*FLEN/8, x4, x1, x2)

inst_30466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:91398*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91398*0 + 3*514*FLEN/8, x4, x1, x2)

inst_30467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:91401*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91401*0 + 3*515*FLEN/8, x4, x1, x2)

inst_30468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:91404*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91404*0 + 3*516*FLEN/8, x4, x1, x2)

inst_30469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:91407*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91407*0 + 3*517*FLEN/8, x4, x1, x2)

inst_30470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:91410*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91410*0 + 3*518*FLEN/8, x4, x1, x2)

inst_30471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:91413*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91413*0 + 3*519*FLEN/8, x4, x1, x2)

inst_30472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:91416*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91416*0 + 3*520*FLEN/8, x4, x1, x2)

inst_30473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:91419*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91419*0 + 3*521*FLEN/8, x4, x1, x2)

inst_30474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:91422*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91422*0 + 3*522*FLEN/8, x4, x1, x2)

inst_30475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:91425*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91425*0 + 3*523*FLEN/8, x4, x1, x2)

inst_30476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:91428*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91428*0 + 3*524*FLEN/8, x4, x1, x2)

inst_30477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:91431*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91431*0 + 3*525*FLEN/8, x4, x1, x2)

inst_30478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:91434*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91434*0 + 3*526*FLEN/8, x4, x1, x2)

inst_30479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:91437*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91437*0 + 3*527*FLEN/8, x4, x1, x2)

inst_30480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:91440*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91440*0 + 3*528*FLEN/8, x4, x1, x2)

inst_30481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:91443*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91443*0 + 3*529*FLEN/8, x4, x1, x2)

inst_30482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89800000; valaddr_reg:x3; val_offset:91446*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91446*0 + 3*530*FLEN/8, x4, x1, x2)

inst_30483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89800001; valaddr_reg:x3; val_offset:91449*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91449*0 + 3*531*FLEN/8, x4, x1, x2)

inst_30484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89800003; valaddr_reg:x3; val_offset:91452*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91452*0 + 3*532*FLEN/8, x4, x1, x2)

inst_30485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89800007; valaddr_reg:x3; val_offset:91455*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91455*0 + 3*533*FLEN/8, x4, x1, x2)

inst_30486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x8980000f; valaddr_reg:x3; val_offset:91458*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91458*0 + 3*534*FLEN/8, x4, x1, x2)

inst_30487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x8980001f; valaddr_reg:x3; val_offset:91461*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91461*0 + 3*535*FLEN/8, x4, x1, x2)

inst_30488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x8980003f; valaddr_reg:x3; val_offset:91464*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91464*0 + 3*536*FLEN/8, x4, x1, x2)

inst_30489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x8980007f; valaddr_reg:x3; val_offset:91467*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91467*0 + 3*537*FLEN/8, x4, x1, x2)

inst_30490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x898000ff; valaddr_reg:x3; val_offset:91470*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91470*0 + 3*538*FLEN/8, x4, x1, x2)

inst_30491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x898001ff; valaddr_reg:x3; val_offset:91473*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91473*0 + 3*539*FLEN/8, x4, x1, x2)

inst_30492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x898003ff; valaddr_reg:x3; val_offset:91476*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91476*0 + 3*540*FLEN/8, x4, x1, x2)

inst_30493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x898007ff; valaddr_reg:x3; val_offset:91479*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91479*0 + 3*541*FLEN/8, x4, x1, x2)

inst_30494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89800fff; valaddr_reg:x3; val_offset:91482*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91482*0 + 3*542*FLEN/8, x4, x1, x2)

inst_30495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89801fff; valaddr_reg:x3; val_offset:91485*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91485*0 + 3*543*FLEN/8, x4, x1, x2)

inst_30496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89803fff; valaddr_reg:x3; val_offset:91488*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91488*0 + 3*544*FLEN/8, x4, x1, x2)

inst_30497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89807fff; valaddr_reg:x3; val_offset:91491*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91491*0 + 3*545*FLEN/8, x4, x1, x2)

inst_30498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x8980ffff; valaddr_reg:x3; val_offset:91494*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91494*0 + 3*546*FLEN/8, x4, x1, x2)

inst_30499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x8981ffff; valaddr_reg:x3; val_offset:91497*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91497*0 + 3*547*FLEN/8, x4, x1, x2)

inst_30500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x8983ffff; valaddr_reg:x3; val_offset:91500*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91500*0 + 3*548*FLEN/8, x4, x1, x2)

inst_30501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x8987ffff; valaddr_reg:x3; val_offset:91503*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91503*0 + 3*549*FLEN/8, x4, x1, x2)

inst_30502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x898fffff; valaddr_reg:x3; val_offset:91506*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91506*0 + 3*550*FLEN/8, x4, x1, x2)

inst_30503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x899fffff; valaddr_reg:x3; val_offset:91509*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91509*0 + 3*551*FLEN/8, x4, x1, x2)

inst_30504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89bfffff; valaddr_reg:x3; val_offset:91512*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91512*0 + 3*552*FLEN/8, x4, x1, x2)

inst_30505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89c00000; valaddr_reg:x3; val_offset:91515*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91515*0 + 3*553*FLEN/8, x4, x1, x2)

inst_30506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89e00000; valaddr_reg:x3; val_offset:91518*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91518*0 + 3*554*FLEN/8, x4, x1, x2)

inst_30507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89f00000; valaddr_reg:x3; val_offset:91521*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91521*0 + 3*555*FLEN/8, x4, x1, x2)

inst_30508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89f80000; valaddr_reg:x3; val_offset:91524*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91524*0 + 3*556*FLEN/8, x4, x1, x2)

inst_30509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fc0000; valaddr_reg:x3; val_offset:91527*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91527*0 + 3*557*FLEN/8, x4, x1, x2)

inst_30510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fe0000; valaddr_reg:x3; val_offset:91530*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91530*0 + 3*558*FLEN/8, x4, x1, x2)

inst_30511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89ff0000; valaddr_reg:x3; val_offset:91533*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91533*0 + 3*559*FLEN/8, x4, x1, x2)

inst_30512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89ff8000; valaddr_reg:x3; val_offset:91536*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91536*0 + 3*560*FLEN/8, x4, x1, x2)

inst_30513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89ffc000; valaddr_reg:x3; val_offset:91539*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91539*0 + 3*561*FLEN/8, x4, x1, x2)

inst_30514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89ffe000; valaddr_reg:x3; val_offset:91542*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91542*0 + 3*562*FLEN/8, x4, x1, x2)

inst_30515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fff000; valaddr_reg:x3; val_offset:91545*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91545*0 + 3*563*FLEN/8, x4, x1, x2)

inst_30516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fff800; valaddr_reg:x3; val_offset:91548*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91548*0 + 3*564*FLEN/8, x4, x1, x2)

inst_30517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fffc00; valaddr_reg:x3; val_offset:91551*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91551*0 + 3*565*FLEN/8, x4, x1, x2)

inst_30518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fffe00; valaddr_reg:x3; val_offset:91554*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91554*0 + 3*566*FLEN/8, x4, x1, x2)

inst_30519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89ffff00; valaddr_reg:x3; val_offset:91557*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91557*0 + 3*567*FLEN/8, x4, x1, x2)

inst_30520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89ffff80; valaddr_reg:x3; val_offset:91560*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91560*0 + 3*568*FLEN/8, x4, x1, x2)

inst_30521:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89ffffc0; valaddr_reg:x3; val_offset:91563*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91563*0 + 3*569*FLEN/8, x4, x1, x2)

inst_30522:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89ffffe0; valaddr_reg:x3; val_offset:91566*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91566*0 + 3*570*FLEN/8, x4, x1, x2)

inst_30523:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fffff0; valaddr_reg:x3; val_offset:91569*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91569*0 + 3*571*FLEN/8, x4, x1, x2)

inst_30524:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fffff8; valaddr_reg:x3; val_offset:91572*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91572*0 + 3*572*FLEN/8, x4, x1, x2)

inst_30525:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fffffc; valaddr_reg:x3; val_offset:91575*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91575*0 + 3*573*FLEN/8, x4, x1, x2)

inst_30526:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89fffffe; valaddr_reg:x3; val_offset:91578*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91578*0 + 3*574*FLEN/8, x4, x1, x2)

inst_30527:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19e7d8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f19e7d8; op2val:0x80000000;
op3val:0x89ffffff; valaddr_reg:x3; val_offset:91581*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91581*0 + 3*575*FLEN/8, x4, x1, x2)

inst_30528:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5000000; valaddr_reg:x3; val_offset:91584*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91584*0 + 3*576*FLEN/8, x4, x1, x2)

inst_30529:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5000001; valaddr_reg:x3; val_offset:91587*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91587*0 + 3*577*FLEN/8, x4, x1, x2)

inst_30530:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5000003; valaddr_reg:x3; val_offset:91590*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91590*0 + 3*578*FLEN/8, x4, x1, x2)

inst_30531:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5000007; valaddr_reg:x3; val_offset:91593*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91593*0 + 3*579*FLEN/8, x4, x1, x2)

inst_30532:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa500000f; valaddr_reg:x3; val_offset:91596*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91596*0 + 3*580*FLEN/8, x4, x1, x2)

inst_30533:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa500001f; valaddr_reg:x3; val_offset:91599*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91599*0 + 3*581*FLEN/8, x4, x1, x2)

inst_30534:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa500003f; valaddr_reg:x3; val_offset:91602*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91602*0 + 3*582*FLEN/8, x4, x1, x2)

inst_30535:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa500007f; valaddr_reg:x3; val_offset:91605*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91605*0 + 3*583*FLEN/8, x4, x1, x2)

inst_30536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa50000ff; valaddr_reg:x3; val_offset:91608*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91608*0 + 3*584*FLEN/8, x4, x1, x2)

inst_30537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa50001ff; valaddr_reg:x3; val_offset:91611*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91611*0 + 3*585*FLEN/8, x4, x1, x2)

inst_30538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa50003ff; valaddr_reg:x3; val_offset:91614*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91614*0 + 3*586*FLEN/8, x4, x1, x2)

inst_30539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa50007ff; valaddr_reg:x3; val_offset:91617*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91617*0 + 3*587*FLEN/8, x4, x1, x2)

inst_30540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5000fff; valaddr_reg:x3; val_offset:91620*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91620*0 + 3*588*FLEN/8, x4, x1, x2)

inst_30541:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5001fff; valaddr_reg:x3; val_offset:91623*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91623*0 + 3*589*FLEN/8, x4, x1, x2)

inst_30542:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5003fff; valaddr_reg:x3; val_offset:91626*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91626*0 + 3*590*FLEN/8, x4, x1, x2)

inst_30543:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5007fff; valaddr_reg:x3; val_offset:91629*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91629*0 + 3*591*FLEN/8, x4, x1, x2)

inst_30544:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa500ffff; valaddr_reg:x3; val_offset:91632*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91632*0 + 3*592*FLEN/8, x4, x1, x2)

inst_30545:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa501ffff; valaddr_reg:x3; val_offset:91635*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91635*0 + 3*593*FLEN/8, x4, x1, x2)

inst_30546:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa503ffff; valaddr_reg:x3; val_offset:91638*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91638*0 + 3*594*FLEN/8, x4, x1, x2)

inst_30547:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa507ffff; valaddr_reg:x3; val_offset:91641*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91641*0 + 3*595*FLEN/8, x4, x1, x2)

inst_30548:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa50fffff; valaddr_reg:x3; val_offset:91644*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91644*0 + 3*596*FLEN/8, x4, x1, x2)

inst_30549:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa51fffff; valaddr_reg:x3; val_offset:91647*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91647*0 + 3*597*FLEN/8, x4, x1, x2)

inst_30550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa53fffff; valaddr_reg:x3; val_offset:91650*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91650*0 + 3*598*FLEN/8, x4, x1, x2)

inst_30551:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5400000; valaddr_reg:x3; val_offset:91653*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91653*0 + 3*599*FLEN/8, x4, x1, x2)

inst_30552:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5600000; valaddr_reg:x3; val_offset:91656*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91656*0 + 3*600*FLEN/8, x4, x1, x2)

inst_30553:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5700000; valaddr_reg:x3; val_offset:91659*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91659*0 + 3*601*FLEN/8, x4, x1, x2)

inst_30554:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa5780000; valaddr_reg:x3; val_offset:91662*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91662*0 + 3*602*FLEN/8, x4, x1, x2)

inst_30555:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57c0000; valaddr_reg:x3; val_offset:91665*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91665*0 + 3*603*FLEN/8, x4, x1, x2)

inst_30556:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57e0000; valaddr_reg:x3; val_offset:91668*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91668*0 + 3*604*FLEN/8, x4, x1, x2)

inst_30557:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57f0000; valaddr_reg:x3; val_offset:91671*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91671*0 + 3*605*FLEN/8, x4, x1, x2)

inst_30558:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57f8000; valaddr_reg:x3; val_offset:91674*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91674*0 + 3*606*FLEN/8, x4, x1, x2)

inst_30559:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57fc000; valaddr_reg:x3; val_offset:91677*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91677*0 + 3*607*FLEN/8, x4, x1, x2)

inst_30560:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57fe000; valaddr_reg:x3; val_offset:91680*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91680*0 + 3*608*FLEN/8, x4, x1, x2)

inst_30561:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57ff000; valaddr_reg:x3; val_offset:91683*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91683*0 + 3*609*FLEN/8, x4, x1, x2)

inst_30562:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57ff800; valaddr_reg:x3; val_offset:91686*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91686*0 + 3*610*FLEN/8, x4, x1, x2)

inst_30563:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57ffc00; valaddr_reg:x3; val_offset:91689*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91689*0 + 3*611*FLEN/8, x4, x1, x2)

inst_30564:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57ffe00; valaddr_reg:x3; val_offset:91692*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91692*0 + 3*612*FLEN/8, x4, x1, x2)

inst_30565:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57fff00; valaddr_reg:x3; val_offset:91695*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91695*0 + 3*613*FLEN/8, x4, x1, x2)

inst_30566:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57fff80; valaddr_reg:x3; val_offset:91698*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91698*0 + 3*614*FLEN/8, x4, x1, x2)

inst_30567:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57fffc0; valaddr_reg:x3; val_offset:91701*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91701*0 + 3*615*FLEN/8, x4, x1, x2)

inst_30568:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57fffe0; valaddr_reg:x3; val_offset:91704*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91704*0 + 3*616*FLEN/8, x4, x1, x2)

inst_30569:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57ffff0; valaddr_reg:x3; val_offset:91707*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91707*0 + 3*617*FLEN/8, x4, x1, x2)

inst_30570:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57ffff8; valaddr_reg:x3; val_offset:91710*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91710*0 + 3*618*FLEN/8, x4, x1, x2)

inst_30571:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57ffffc; valaddr_reg:x3; val_offset:91713*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91713*0 + 3*619*FLEN/8, x4, x1, x2)

inst_30572:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57ffffe; valaddr_reg:x3; val_offset:91716*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91716*0 + 3*620*FLEN/8, x4, x1, x2)

inst_30573:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xa57fffff; valaddr_reg:x3; val_offset:91719*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91719*0 + 3*621*FLEN/8, x4, x1, x2)

inst_30574:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbf800001; valaddr_reg:x3; val_offset:91722*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91722*0 + 3*622*FLEN/8, x4, x1, x2)

inst_30575:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbf800003; valaddr_reg:x3; val_offset:91725*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91725*0 + 3*623*FLEN/8, x4, x1, x2)

inst_30576:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbf800007; valaddr_reg:x3; val_offset:91728*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91728*0 + 3*624*FLEN/8, x4, x1, x2)

inst_30577:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbf999999; valaddr_reg:x3; val_offset:91731*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91731*0 + 3*625*FLEN/8, x4, x1, x2)

inst_30578:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:91734*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91734*0 + 3*626*FLEN/8, x4, x1, x2)

inst_30579:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:91737*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91737*0 + 3*627*FLEN/8, x4, x1, x2)

inst_30580:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:91740*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91740*0 + 3*628*FLEN/8, x4, x1, x2)

inst_30581:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:91743*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91743*0 + 3*629*FLEN/8, x4, x1, x2)

inst_30582:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:91746*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91746*0 + 3*630*FLEN/8, x4, x1, x2)

inst_30583:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:91749*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91749*0 + 3*631*FLEN/8, x4, x1, x2)

inst_30584:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:91752*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91752*0 + 3*632*FLEN/8, x4, x1, x2)

inst_30585:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:91755*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91755*0 + 3*633*FLEN/8, x4, x1, x2)

inst_30586:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:91758*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91758*0 + 3*634*FLEN/8, x4, x1, x2)

inst_30587:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:91761*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91761*0 + 3*635*FLEN/8, x4, x1, x2)

inst_30588:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:91764*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91764*0 + 3*636*FLEN/8, x4, x1, x2)

inst_30589:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac46e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ee5a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1ac46e; op2val:0x8034ee5a;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:91767*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91767*0 + 3*637*FLEN/8, x4, x1, x2)

inst_30590:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbf800001; valaddr_reg:x3; val_offset:91770*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91770*0 + 3*638*FLEN/8, x4, x1, x2)

inst_30591:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbf800003; valaddr_reg:x3; val_offset:91773*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91773*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_30592:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbf800007; valaddr_reg:x3; val_offset:91776*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91776*0 + 3*640*FLEN/8, x4, x1, x2)

inst_30593:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbf999999; valaddr_reg:x3; val_offset:91779*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91779*0 + 3*641*FLEN/8, x4, x1, x2)

inst_30594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:91782*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91782*0 + 3*642*FLEN/8, x4, x1, x2)

inst_30595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:91785*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91785*0 + 3*643*FLEN/8, x4, x1, x2)

inst_30596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:91788*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91788*0 + 3*644*FLEN/8, x4, x1, x2)

inst_30597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:91791*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91791*0 + 3*645*FLEN/8, x4, x1, x2)

inst_30598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:91794*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91794*0 + 3*646*FLEN/8, x4, x1, x2)

inst_30599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:91797*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91797*0 + 3*647*FLEN/8, x4, x1, x2)

inst_30600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:91800*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91800*0 + 3*648*FLEN/8, x4, x1, x2)

inst_30601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:91803*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91803*0 + 3*649*FLEN/8, x4, x1, x2)

inst_30602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:91806*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91806*0 + 3*650*FLEN/8, x4, x1, x2)

inst_30603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:91809*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91809*0 + 3*651*FLEN/8, x4, x1, x2)

inst_30604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:91812*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91812*0 + 3*652*FLEN/8, x4, x1, x2)

inst_30605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:91815*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91815*0 + 3*653*FLEN/8, x4, x1, x2)

inst_30606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca800000; valaddr_reg:x3; val_offset:91818*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91818*0 + 3*654*FLEN/8, x4, x1, x2)

inst_30607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca800001; valaddr_reg:x3; val_offset:91821*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91821*0 + 3*655*FLEN/8, x4, x1, x2)

inst_30608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca800003; valaddr_reg:x3; val_offset:91824*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91824*0 + 3*656*FLEN/8, x4, x1, x2)

inst_30609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca800007; valaddr_reg:x3; val_offset:91827*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91827*0 + 3*657*FLEN/8, x4, x1, x2)

inst_30610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca80000f; valaddr_reg:x3; val_offset:91830*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91830*0 + 3*658*FLEN/8, x4, x1, x2)

inst_30611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca80001f; valaddr_reg:x3; val_offset:91833*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91833*0 + 3*659*FLEN/8, x4, x1, x2)

inst_30612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca80003f; valaddr_reg:x3; val_offset:91836*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91836*0 + 3*660*FLEN/8, x4, x1, x2)

inst_30613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca80007f; valaddr_reg:x3; val_offset:91839*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91839*0 + 3*661*FLEN/8, x4, x1, x2)

inst_30614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca8000ff; valaddr_reg:x3; val_offset:91842*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91842*0 + 3*662*FLEN/8, x4, x1, x2)

inst_30615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca8001ff; valaddr_reg:x3; val_offset:91845*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91845*0 + 3*663*FLEN/8, x4, x1, x2)

inst_30616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca8003ff; valaddr_reg:x3; val_offset:91848*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91848*0 + 3*664*FLEN/8, x4, x1, x2)

inst_30617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca8007ff; valaddr_reg:x3; val_offset:91851*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91851*0 + 3*665*FLEN/8, x4, x1, x2)

inst_30618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca800fff; valaddr_reg:x3; val_offset:91854*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91854*0 + 3*666*FLEN/8, x4, x1, x2)

inst_30619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca801fff; valaddr_reg:x3; val_offset:91857*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91857*0 + 3*667*FLEN/8, x4, x1, x2)

inst_30620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca803fff; valaddr_reg:x3; val_offset:91860*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91860*0 + 3*668*FLEN/8, x4, x1, x2)

inst_30621:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca807fff; valaddr_reg:x3; val_offset:91863*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91863*0 + 3*669*FLEN/8, x4, x1, x2)

inst_30622:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca80ffff; valaddr_reg:x3; val_offset:91866*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91866*0 + 3*670*FLEN/8, x4, x1, x2)

inst_30623:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca81ffff; valaddr_reg:x3; val_offset:91869*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91869*0 + 3*671*FLEN/8, x4, x1, x2)

inst_30624:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca83ffff; valaddr_reg:x3; val_offset:91872*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91872*0 + 3*672*FLEN/8, x4, x1, x2)

inst_30625:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca87ffff; valaddr_reg:x3; val_offset:91875*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91875*0 + 3*673*FLEN/8, x4, x1, x2)

inst_30626:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca8fffff; valaddr_reg:x3; val_offset:91878*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91878*0 + 3*674*FLEN/8, x4, x1, x2)

inst_30627:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xca9fffff; valaddr_reg:x3; val_offset:91881*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91881*0 + 3*675*FLEN/8, x4, x1, x2)

inst_30628:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcabfffff; valaddr_reg:x3; val_offset:91884*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91884*0 + 3*676*FLEN/8, x4, x1, x2)

inst_30629:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcac00000; valaddr_reg:x3; val_offset:91887*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91887*0 + 3*677*FLEN/8, x4, x1, x2)

inst_30630:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcae00000; valaddr_reg:x3; val_offset:91890*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91890*0 + 3*678*FLEN/8, x4, x1, x2)

inst_30631:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaf00000; valaddr_reg:x3; val_offset:91893*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91893*0 + 3*679*FLEN/8, x4, x1, x2)

inst_30632:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaf80000; valaddr_reg:x3; val_offset:91896*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91896*0 + 3*680*FLEN/8, x4, x1, x2)

inst_30633:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafc0000; valaddr_reg:x3; val_offset:91899*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91899*0 + 3*681*FLEN/8, x4, x1, x2)

inst_30634:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafe0000; valaddr_reg:x3; val_offset:91902*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91902*0 + 3*682*FLEN/8, x4, x1, x2)

inst_30635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaff0000; valaddr_reg:x3; val_offset:91905*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91905*0 + 3*683*FLEN/8, x4, x1, x2)

inst_30636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaff8000; valaddr_reg:x3; val_offset:91908*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91908*0 + 3*684*FLEN/8, x4, x1, x2)

inst_30637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaffc000; valaddr_reg:x3; val_offset:91911*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91911*0 + 3*685*FLEN/8, x4, x1, x2)

inst_30638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaffe000; valaddr_reg:x3; val_offset:91914*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91914*0 + 3*686*FLEN/8, x4, x1, x2)

inst_30639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafff000; valaddr_reg:x3; val_offset:91917*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91917*0 + 3*687*FLEN/8, x4, x1, x2)

inst_30640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafff800; valaddr_reg:x3; val_offset:91920*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91920*0 + 3*688*FLEN/8, x4, x1, x2)

inst_30641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafffc00; valaddr_reg:x3; val_offset:91923*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91923*0 + 3*689*FLEN/8, x4, x1, x2)

inst_30642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafffe00; valaddr_reg:x3; val_offset:91926*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91926*0 + 3*690*FLEN/8, x4, x1, x2)

inst_30643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaffff00; valaddr_reg:x3; val_offset:91929*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91929*0 + 3*691*FLEN/8, x4, x1, x2)

inst_30644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaffff80; valaddr_reg:x3; val_offset:91932*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91932*0 + 3*692*FLEN/8, x4, x1, x2)

inst_30645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaffffc0; valaddr_reg:x3; val_offset:91935*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91935*0 + 3*693*FLEN/8, x4, x1, x2)

inst_30646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaffffe0; valaddr_reg:x3; val_offset:91938*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91938*0 + 3*694*FLEN/8, x4, x1, x2)

inst_30647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafffff0; valaddr_reg:x3; val_offset:91941*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91941*0 + 3*695*FLEN/8, x4, x1, x2)

inst_30648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafffff8; valaddr_reg:x3; val_offset:91944*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91944*0 + 3*696*FLEN/8, x4, x1, x2)

inst_30649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafffffc; valaddr_reg:x3; val_offset:91947*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91947*0 + 3*697*FLEN/8, x4, x1, x2)

inst_30650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcafffffe; valaddr_reg:x3; val_offset:91950*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91950*0 + 3*698*FLEN/8, x4, x1, x2)

inst_30651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acf79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34ea94 and fs3 == 1 and fe3 == 0x95 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1acf79; op2val:0x8034ea94;
op3val:0xcaffffff; valaddr_reg:x3; val_offset:91953*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91953*0 + 3*699*FLEN/8, x4, x1, x2)

inst_30652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:91956*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91956*0 + 3*700*FLEN/8, x4, x1, x2)

inst_30653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:91959*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91959*0 + 3*701*FLEN/8, x4, x1, x2)

inst_30654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:91962*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91962*0 + 3*702*FLEN/8, x4, x1, x2)

inst_30655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:91965*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91965*0 + 3*703*FLEN/8, x4, x1, x2)

inst_30656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:91968*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91968*0 + 3*704*FLEN/8, x4, x1, x2)

inst_30657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:91971*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91971*0 + 3*705*FLEN/8, x4, x1, x2)

inst_30658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:91974*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91974*0 + 3*706*FLEN/8, x4, x1, x2)

inst_30659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:91977*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91977*0 + 3*707*FLEN/8, x4, x1, x2)

inst_30660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:91980*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91980*0 + 3*708*FLEN/8, x4, x1, x2)

inst_30661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:91983*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91983*0 + 3*709*FLEN/8, x4, x1, x2)

inst_30662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:91986*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91986*0 + 3*710*FLEN/8, x4, x1, x2)

inst_30663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:91989*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91989*0 + 3*711*FLEN/8, x4, x1, x2)

inst_30664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:91992*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91992*0 + 3*712*FLEN/8, x4, x1, x2)

inst_30665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:91995*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91995*0 + 3*713*FLEN/8, x4, x1, x2)

inst_30666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:91998*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 91998*0 + 3*714*FLEN/8, x4, x1, x2)

inst_30667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:92001*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92001*0 + 3*715*FLEN/8, x4, x1, x2)

inst_30668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6000000; valaddr_reg:x3; val_offset:92004*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92004*0 + 3*716*FLEN/8, x4, x1, x2)

inst_30669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6000001; valaddr_reg:x3; val_offset:92007*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92007*0 + 3*717*FLEN/8, x4, x1, x2)

inst_30670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6000003; valaddr_reg:x3; val_offset:92010*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92010*0 + 3*718*FLEN/8, x4, x1, x2)

inst_30671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6000007; valaddr_reg:x3; val_offset:92013*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92013*0 + 3*719*FLEN/8, x4, x1, x2)

inst_30672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x600000f; valaddr_reg:x3; val_offset:92016*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92016*0 + 3*720*FLEN/8, x4, x1, x2)

inst_30673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x600001f; valaddr_reg:x3; val_offset:92019*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92019*0 + 3*721*FLEN/8, x4, x1, x2)

inst_30674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x600003f; valaddr_reg:x3; val_offset:92022*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92022*0 + 3*722*FLEN/8, x4, x1, x2)

inst_30675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x600007f; valaddr_reg:x3; val_offset:92025*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92025*0 + 3*723*FLEN/8, x4, x1, x2)

inst_30676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x60000ff; valaddr_reg:x3; val_offset:92028*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92028*0 + 3*724*FLEN/8, x4, x1, x2)

inst_30677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x60001ff; valaddr_reg:x3; val_offset:92031*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92031*0 + 3*725*FLEN/8, x4, x1, x2)

inst_30678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x60003ff; valaddr_reg:x3; val_offset:92034*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92034*0 + 3*726*FLEN/8, x4, x1, x2)

inst_30679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x60007ff; valaddr_reg:x3; val_offset:92037*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92037*0 + 3*727*FLEN/8, x4, x1, x2)

inst_30680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6000fff; valaddr_reg:x3; val_offset:92040*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92040*0 + 3*728*FLEN/8, x4, x1, x2)

inst_30681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6001fff; valaddr_reg:x3; val_offset:92043*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92043*0 + 3*729*FLEN/8, x4, x1, x2)

inst_30682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6003fff; valaddr_reg:x3; val_offset:92046*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92046*0 + 3*730*FLEN/8, x4, x1, x2)

inst_30683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6007fff; valaddr_reg:x3; val_offset:92049*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92049*0 + 3*731*FLEN/8, x4, x1, x2)

inst_30684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x600ffff; valaddr_reg:x3; val_offset:92052*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92052*0 + 3*732*FLEN/8, x4, x1, x2)

inst_30685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x601ffff; valaddr_reg:x3; val_offset:92055*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92055*0 + 3*733*FLEN/8, x4, x1, x2)

inst_30686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x603ffff; valaddr_reg:x3; val_offset:92058*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92058*0 + 3*734*FLEN/8, x4, x1, x2)

inst_30687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x607ffff; valaddr_reg:x3; val_offset:92061*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92061*0 + 3*735*FLEN/8, x4, x1, x2)

inst_30688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x60fffff; valaddr_reg:x3; val_offset:92064*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92064*0 + 3*736*FLEN/8, x4, x1, x2)

inst_30689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x61fffff; valaddr_reg:x3; val_offset:92067*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92067*0 + 3*737*FLEN/8, x4, x1, x2)

inst_30690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x63fffff; valaddr_reg:x3; val_offset:92070*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92070*0 + 3*738*FLEN/8, x4, x1, x2)

inst_30691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6400000; valaddr_reg:x3; val_offset:92073*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92073*0 + 3*739*FLEN/8, x4, x1, x2)

inst_30692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6600000; valaddr_reg:x3; val_offset:92076*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92076*0 + 3*740*FLEN/8, x4, x1, x2)

inst_30693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6700000; valaddr_reg:x3; val_offset:92079*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92079*0 + 3*741*FLEN/8, x4, x1, x2)

inst_30694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x6780000; valaddr_reg:x3; val_offset:92082*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92082*0 + 3*742*FLEN/8, x4, x1, x2)

inst_30695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67c0000; valaddr_reg:x3; val_offset:92085*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92085*0 + 3*743*FLEN/8, x4, x1, x2)

inst_30696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67e0000; valaddr_reg:x3; val_offset:92088*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92088*0 + 3*744*FLEN/8, x4, x1, x2)

inst_30697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67f0000; valaddr_reg:x3; val_offset:92091*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92091*0 + 3*745*FLEN/8, x4, x1, x2)

inst_30698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67f8000; valaddr_reg:x3; val_offset:92094*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92094*0 + 3*746*FLEN/8, x4, x1, x2)

inst_30699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67fc000; valaddr_reg:x3; val_offset:92097*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92097*0 + 3*747*FLEN/8, x4, x1, x2)

inst_30700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67fe000; valaddr_reg:x3; val_offset:92100*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92100*0 + 3*748*FLEN/8, x4, x1, x2)

inst_30701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67ff000; valaddr_reg:x3; val_offset:92103*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92103*0 + 3*749*FLEN/8, x4, x1, x2)

inst_30702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67ff800; valaddr_reg:x3; val_offset:92106*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92106*0 + 3*750*FLEN/8, x4, x1, x2)

inst_30703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67ffc00; valaddr_reg:x3; val_offset:92109*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92109*0 + 3*751*FLEN/8, x4, x1, x2)

inst_30704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67ffe00; valaddr_reg:x3; val_offset:92112*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92112*0 + 3*752*FLEN/8, x4, x1, x2)

inst_30705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67fff00; valaddr_reg:x3; val_offset:92115*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92115*0 + 3*753*FLEN/8, x4, x1, x2)

inst_30706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67fff80; valaddr_reg:x3; val_offset:92118*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92118*0 + 3*754*FLEN/8, x4, x1, x2)

inst_30707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67fffc0; valaddr_reg:x3; val_offset:92121*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92121*0 + 3*755*FLEN/8, x4, x1, x2)

inst_30708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67fffe0; valaddr_reg:x3; val_offset:92124*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92124*0 + 3*756*FLEN/8, x4, x1, x2)

inst_30709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67ffff0; valaddr_reg:x3; val_offset:92127*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92127*0 + 3*757*FLEN/8, x4, x1, x2)

inst_30710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67ffff8; valaddr_reg:x3; val_offset:92130*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92130*0 + 3*758*FLEN/8, x4, x1, x2)

inst_30711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67ffffc; valaddr_reg:x3; val_offset:92133*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92133*0 + 3*759*FLEN/8, x4, x1, x2)

inst_30712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67ffffe; valaddr_reg:x3; val_offset:92136*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92136*0 + 3*760*FLEN/8, x4, x1, x2)

inst_30713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3b0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b3b0e; op2val:0x0;
op3val:0x67fffff; valaddr_reg:x3; val_offset:92139*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92139*0 + 3*761*FLEN/8, x4, x1, x2)

inst_30714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbf800001; valaddr_reg:x3; val_offset:92142*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92142*0 + 3*762*FLEN/8, x4, x1, x2)

inst_30715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbf800003; valaddr_reg:x3; val_offset:92145*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92145*0 + 3*763*FLEN/8, x4, x1, x2)

inst_30716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbf800007; valaddr_reg:x3; val_offset:92148*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92148*0 + 3*764*FLEN/8, x4, x1, x2)

inst_30717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbf999999; valaddr_reg:x3; val_offset:92151*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92151*0 + 3*765*FLEN/8, x4, x1, x2)

inst_30718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:92154*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92154*0 + 3*766*FLEN/8, x4, x1, x2)

inst_30719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b7bce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x34afed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1b7bce; op2val:0x8034afed;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:92157*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 92157*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1056964606,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1056964607,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132238308,32,FLEN)
NAN_BOXED(3546638,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068416,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068417,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068419,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068423,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068431,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068447,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068479,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068543,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068671,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275068927,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275069439,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275070463,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275072511,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275076607,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275084799,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275101183,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275133951,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275199487,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275330559,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1275592703,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1276116991,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1277165567,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1279262719,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1279262720,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1281359872,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1282408448,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1282932736,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283194880,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283325952,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283391488,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283424256,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283440640,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283448832,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283452928,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283454976,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456000,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456512,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456768,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456896,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456960,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283456992,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457008,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457016,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457020,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457022,32,FLEN)
NAN_BOXED(2132278250,32,FLEN)
NAN_BOXED(3532416,32,FLEN)
NAN_BOXED(1283457023,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026624,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026625,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026627,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026631,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026639,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026655,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026687,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026751,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864026879,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864027135,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864027647,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864028671,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864030719,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864034815,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864043007,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864059391,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864092159,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864157695,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864288767,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(864550911,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(865075199,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(866123775,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(868220927,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(868220928,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(870318080,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(871366656,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(871890944,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872153088,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872284160,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872349696,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872382464,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872398848,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872407040,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872411136,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872413184,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872414208,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872414720,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872414976,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415104,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415168,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415200,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415216,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415224,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415228,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415230,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(872415231,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132310642,32,FLEN)
NAN_BOXED(3520965,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038080,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038081,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038083,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038087,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038095,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038111,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038143,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038207,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038335,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038591,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181039103,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181040127,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181042175,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181046271,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181054463,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181070847,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181103615,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181169151,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181300223,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181562367,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2182086655,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2183135231,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232383,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232384,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2187329536,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188378112,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188902400,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189164544,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189295616,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189361152,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189393920,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189410304,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189418496,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189422592,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189424640,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189425664,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426176,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426432,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426560,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426624,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426656,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426672,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426680,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426684,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426686,32,FLEN)
NAN_BOXED(2132331820,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426687,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312768,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312769,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312771,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312775,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312783,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312799,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312831,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312895,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273313023,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273313279,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273313791,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273314815,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273316863,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273320959,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273329151,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273345535,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273378303,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273443839,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273574911,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273837055,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2274361343,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2275409919,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2277507071,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2277507072,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2279604224,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2280652800,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281177088,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281439232,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281570304,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281635840,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281668608,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281684992,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281693184,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281697280,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281699328,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281700352,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281700864,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701120,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701248,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701312,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701344,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701360,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701368,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701372,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701374,32,FLEN)
NAN_BOXED(2132336542,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701375,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535552,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535553,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535555,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535559,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535567,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535583,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535615,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535679,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535807,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256536063,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256536575,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256537599,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256539647,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256543743,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256551935,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256568319,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256601087,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256666623,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256797695,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2257059839,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2257584127,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2258632703,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2260729855,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2260729856,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2262827008,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2263875584,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264399872,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264662016,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264793088,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264858624,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264891392,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264907776,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264915968,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264920064,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264922112,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923136,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923648,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923904,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924032,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924096,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924128,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924144,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924152,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924156,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924158,32,FLEN)
NAN_BOXED(2132357287,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924159,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105152,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105153,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105155,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105159,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105167,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105183,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105215,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105279,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105407,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837105663,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837106175,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837107199,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837109247,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837113343,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837121535,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837137919,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837170687,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837236223,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837367295,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1837629439,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1838153727,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1839202303,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1841299455,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1841299456,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1843396608,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1844445184,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1844969472,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845231616,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845362688,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845428224,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845460992,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845477376,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845485568,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845489664,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845491712,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845492736,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493248,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493504,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493632,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493696,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493728,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493744,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493752,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493756,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493758,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(1845493759,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2132358078,32,FLEN)
NAN_BOXED(1070981930,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163456,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163457,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163459,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163463,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163471,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163487,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163519,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163583,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163711,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414163967,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414164479,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414165503,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414167551,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414171647,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414179839,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414196223,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414228991,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414294527,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414425599,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3414687743,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3415212031,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3416260607,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3418357759,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3418357760,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3420454912,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3421503488,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422027776,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422289920,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422420992,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422486528,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422519296,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422535680,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422543872,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422547968,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422550016,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422551040,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422551552,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422551808,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422551936,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422552000,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422552032,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422552048,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422552056,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422552060,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422552062,32,FLEN)
NAN_BOXED(2132366166,32,FLEN)
NAN_BOXED(2150985158,32,FLEN)
NAN_BOXED(3422552063,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919104,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919105,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919107,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919111,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919119,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919135,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919167,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919231,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919359,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919615,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415920127,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415921151,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415923199,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415927295,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415935487,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415951871,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415984639,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416050175,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416181247,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416443391,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416967679,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2418016255,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113407,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113408,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2422210560,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423259136,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423783424,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424045568,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424176640,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424242176,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424274944,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424291328,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424299520,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424303616,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424305664,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424306688,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307200,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307456,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307584,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307648,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307680,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307696,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307704,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307708,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307710,32,FLEN)
NAN_BOXED(2132374827,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307711,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867200,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867201,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867203,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867207,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867215,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867231,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867263,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867327,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867455,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867711,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306868223,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306869247,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306871295,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306875391,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306883583,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306899967,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306932735,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306998271,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307129343,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307391487,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307915775,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2308964351,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061503,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061504,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2313158656,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314207232,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314731520,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314993664,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315124736,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315190272,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315223040,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315239424,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315247616,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315251712,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315253760,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315254784,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255296,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255552,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255680,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255744,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255776,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255792,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255800,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255804,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255806,32,FLEN)
NAN_BOXED(2132404184,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255807,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768240640,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768240641,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768240643,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768240647,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768240655,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768240671,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768240703,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768240767,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768240895,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768241151,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768241663,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768242687,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768244735,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768248831,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768257023,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768273407,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768306175,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768371711,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768502783,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2768764927,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2769289215,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2770337791,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2772434943,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2772434944,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2774532096,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2775580672,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776104960,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776367104,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776498176,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776563712,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776596480,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776612864,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776621056,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776625152,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776627200,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776628224,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776628736,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776628992,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776629120,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776629184,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776629216,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776629232,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776629240,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776629244,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776629246,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(2776629247,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132460654,32,FLEN)
NAN_BOXED(2150952538,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386240,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386241,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386243,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386247,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386255,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386271,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386303,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386367,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386495,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397386751,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397387263,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397388287,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397390335,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397394431,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397402623,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397419007,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397451775,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397517311,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397648383,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3397910527,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3398434815,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3399483391,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3401580543,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3401580544,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3403677696,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3404726272,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405250560,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405512704,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405643776,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405709312,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405742080,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405758464,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405766656,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405770752,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405772800,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405773824,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774336,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774592,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774720,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774784,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774816,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774832,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774840,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774844,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774846,32,FLEN)
NAN_BOXED(2132463481,32,FLEN)
NAN_BOXED(2150951572,32,FLEN)
NAN_BOXED(3405774847,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663296,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663297,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663299,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663303,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663311,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663327,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663359,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663423,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663551,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663807,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100664319,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100665343,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100667391,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100671487,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100679679,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100696063,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100728831,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100794367,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100925439,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(101187583,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(101711871,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(102760447,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(104857599,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(104857600,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(106954752,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108003328,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108527616,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108789760,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108920832,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108986368,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109019136,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109035520,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109043712,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109047808,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109049856,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109050880,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051392,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051648,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051776,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051840,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051872,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051888,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051896,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051900,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051902,32,FLEN)
NAN_BOXED(2132491022,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051903,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132507598,32,FLEN)
NAN_BOXED(2150936557,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
