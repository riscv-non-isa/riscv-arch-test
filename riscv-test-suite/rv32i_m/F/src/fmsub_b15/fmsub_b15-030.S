
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_22272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97ffc00; valaddr_reg:x3; val_offset:66816*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66816*0 + 3*0*FLEN/8, x4, x1, x2)

inst_22273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97ffe00; valaddr_reg:x3; val_offset:66819*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66819*0 + 3*1*FLEN/8, x4, x1, x2)

inst_22274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97fff00; valaddr_reg:x3; val_offset:66822*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66822*0 + 3*2*FLEN/8, x4, x1, x2)

inst_22275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97fff80; valaddr_reg:x3; val_offset:66825*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66825*0 + 3*3*FLEN/8, x4, x1, x2)

inst_22276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97fffc0; valaddr_reg:x3; val_offset:66828*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66828*0 + 3*4*FLEN/8, x4, x1, x2)

inst_22277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97fffe0; valaddr_reg:x3; val_offset:66831*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66831*0 + 3*5*FLEN/8, x4, x1, x2)

inst_22278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97ffff0; valaddr_reg:x3; val_offset:66834*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66834*0 + 3*6*FLEN/8, x4, x1, x2)

inst_22279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97ffff8; valaddr_reg:x3; val_offset:66837*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66837*0 + 3*7*FLEN/8, x4, x1, x2)

inst_22280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97ffffc; valaddr_reg:x3; val_offset:66840*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66840*0 + 3*8*FLEN/8, x4, x1, x2)

inst_22281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97ffffe; valaddr_reg:x3; val_offset:66843*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66843*0 + 3*9*FLEN/8, x4, x1, x2)

inst_22282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x648b04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee48b04; op2val:0x0;
op3val:0x97fffff; valaddr_reg:x3; val_offset:66846*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66846*0 + 3*10*FLEN/8, x4, x1, x2)

inst_22283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbf800001; valaddr_reg:x3; val_offset:66849*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66849*0 + 3*11*FLEN/8, x4, x1, x2)

inst_22284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbf800003; valaddr_reg:x3; val_offset:66852*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66852*0 + 3*12*FLEN/8, x4, x1, x2)

inst_22285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbf800007; valaddr_reg:x3; val_offset:66855*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66855*0 + 3*13*FLEN/8, x4, x1, x2)

inst_22286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbf999999; valaddr_reg:x3; val_offset:66858*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66858*0 + 3*14*FLEN/8, x4, x1, x2)

inst_22287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:66861*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66861*0 + 3*15*FLEN/8, x4, x1, x2)

inst_22288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:66864*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66864*0 + 3*16*FLEN/8, x4, x1, x2)

inst_22289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:66867*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66867*0 + 3*17*FLEN/8, x4, x1, x2)

inst_22290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:66870*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66870*0 + 3*18*FLEN/8, x4, x1, x2)

inst_22291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:66873*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66873*0 + 3*19*FLEN/8, x4, x1, x2)

inst_22292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:66876*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66876*0 + 3*20*FLEN/8, x4, x1, x2)

inst_22293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:66879*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66879*0 + 3*21*FLEN/8, x4, x1, x2)

inst_22294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:66882*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66882*0 + 3*22*FLEN/8, x4, x1, x2)

inst_22295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:66885*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66885*0 + 3*23*FLEN/8, x4, x1, x2)

inst_22296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:66888*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66888*0 + 3*24*FLEN/8, x4, x1, x2)

inst_22297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:66891*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66891*0 + 3*25*FLEN/8, x4, x1, x2)

inst_22298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:66894*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66894*0 + 3*26*FLEN/8, x4, x1, x2)

inst_22299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5800000; valaddr_reg:x3; val_offset:66897*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66897*0 + 3*27*FLEN/8, x4, x1, x2)

inst_22300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5800001; valaddr_reg:x3; val_offset:66900*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66900*0 + 3*28*FLEN/8, x4, x1, x2)

inst_22301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5800003; valaddr_reg:x3; val_offset:66903*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66903*0 + 3*29*FLEN/8, x4, x1, x2)

inst_22302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5800007; valaddr_reg:x3; val_offset:66906*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66906*0 + 3*30*FLEN/8, x4, x1, x2)

inst_22303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc580000f; valaddr_reg:x3; val_offset:66909*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66909*0 + 3*31*FLEN/8, x4, x1, x2)

inst_22304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc580001f; valaddr_reg:x3; val_offset:66912*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66912*0 + 3*32*FLEN/8, x4, x1, x2)

inst_22305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc580003f; valaddr_reg:x3; val_offset:66915*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66915*0 + 3*33*FLEN/8, x4, x1, x2)

inst_22306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc580007f; valaddr_reg:x3; val_offset:66918*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66918*0 + 3*34*FLEN/8, x4, x1, x2)

inst_22307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc58000ff; valaddr_reg:x3; val_offset:66921*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66921*0 + 3*35*FLEN/8, x4, x1, x2)

inst_22308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc58001ff; valaddr_reg:x3; val_offset:66924*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66924*0 + 3*36*FLEN/8, x4, x1, x2)

inst_22309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc58003ff; valaddr_reg:x3; val_offset:66927*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66927*0 + 3*37*FLEN/8, x4, x1, x2)

inst_22310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc58007ff; valaddr_reg:x3; val_offset:66930*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66930*0 + 3*38*FLEN/8, x4, x1, x2)

inst_22311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5800fff; valaddr_reg:x3; val_offset:66933*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66933*0 + 3*39*FLEN/8, x4, x1, x2)

inst_22312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5801fff; valaddr_reg:x3; val_offset:66936*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66936*0 + 3*40*FLEN/8, x4, x1, x2)

inst_22313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5803fff; valaddr_reg:x3; val_offset:66939*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66939*0 + 3*41*FLEN/8, x4, x1, x2)

inst_22314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5807fff; valaddr_reg:x3; val_offset:66942*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66942*0 + 3*42*FLEN/8, x4, x1, x2)

inst_22315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc580ffff; valaddr_reg:x3; val_offset:66945*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66945*0 + 3*43*FLEN/8, x4, x1, x2)

inst_22316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc581ffff; valaddr_reg:x3; val_offset:66948*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66948*0 + 3*44*FLEN/8, x4, x1, x2)

inst_22317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc583ffff; valaddr_reg:x3; val_offset:66951*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66951*0 + 3*45*FLEN/8, x4, x1, x2)

inst_22318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc587ffff; valaddr_reg:x3; val_offset:66954*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66954*0 + 3*46*FLEN/8, x4, x1, x2)

inst_22319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc58fffff; valaddr_reg:x3; val_offset:66957*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66957*0 + 3*47*FLEN/8, x4, x1, x2)

inst_22320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc59fffff; valaddr_reg:x3; val_offset:66960*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66960*0 + 3*48*FLEN/8, x4, x1, x2)

inst_22321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5bfffff; valaddr_reg:x3; val_offset:66963*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66963*0 + 3*49*FLEN/8, x4, x1, x2)

inst_22322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5c00000; valaddr_reg:x3; val_offset:66966*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66966*0 + 3*50*FLEN/8, x4, x1, x2)

inst_22323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5e00000; valaddr_reg:x3; val_offset:66969*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66969*0 + 3*51*FLEN/8, x4, x1, x2)

inst_22324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5f00000; valaddr_reg:x3; val_offset:66972*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66972*0 + 3*52*FLEN/8, x4, x1, x2)

inst_22325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5f80000; valaddr_reg:x3; val_offset:66975*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66975*0 + 3*53*FLEN/8, x4, x1, x2)

inst_22326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fc0000; valaddr_reg:x3; val_offset:66978*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66978*0 + 3*54*FLEN/8, x4, x1, x2)

inst_22327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fe0000; valaddr_reg:x3; val_offset:66981*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66981*0 + 3*55*FLEN/8, x4, x1, x2)

inst_22328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5ff0000; valaddr_reg:x3; val_offset:66984*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66984*0 + 3*56*FLEN/8, x4, x1, x2)

inst_22329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5ff8000; valaddr_reg:x3; val_offset:66987*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66987*0 + 3*57*FLEN/8, x4, x1, x2)

inst_22330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5ffc000; valaddr_reg:x3; val_offset:66990*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66990*0 + 3*58*FLEN/8, x4, x1, x2)

inst_22331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5ffe000; valaddr_reg:x3; val_offset:66993*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66993*0 + 3*59*FLEN/8, x4, x1, x2)

inst_22332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fff000; valaddr_reg:x3; val_offset:66996*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66996*0 + 3*60*FLEN/8, x4, x1, x2)

inst_22333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fff800; valaddr_reg:x3; val_offset:66999*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 66999*0 + 3*61*FLEN/8, x4, x1, x2)

inst_22334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fffc00; valaddr_reg:x3; val_offset:67002*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67002*0 + 3*62*FLEN/8, x4, x1, x2)

inst_22335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fffe00; valaddr_reg:x3; val_offset:67005*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67005*0 + 3*63*FLEN/8, x4, x1, x2)

inst_22336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5ffff00; valaddr_reg:x3; val_offset:67008*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67008*0 + 3*64*FLEN/8, x4, x1, x2)

inst_22337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5ffff80; valaddr_reg:x3; val_offset:67011*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67011*0 + 3*65*FLEN/8, x4, x1, x2)

inst_22338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5ffffc0; valaddr_reg:x3; val_offset:67014*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67014*0 + 3*66*FLEN/8, x4, x1, x2)

inst_22339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5ffffe0; valaddr_reg:x3; val_offset:67017*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67017*0 + 3*67*FLEN/8, x4, x1, x2)

inst_22340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fffff0; valaddr_reg:x3; val_offset:67020*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67020*0 + 3*68*FLEN/8, x4, x1, x2)

inst_22341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fffff8; valaddr_reg:x3; val_offset:67023*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67023*0 + 3*69*FLEN/8, x4, x1, x2)

inst_22342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fffffc; valaddr_reg:x3; val_offset:67026*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67026*0 + 3*70*FLEN/8, x4, x1, x2)

inst_22343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5fffffe; valaddr_reg:x3; val_offset:67029*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67029*0 + 3*71*FLEN/8, x4, x1, x2)

inst_22344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6513ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x47858d and fs3 == 1 and fe3 == 0x8b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee513ce; op2val:0x8047858d;
op3val:0xc5ffffff; valaddr_reg:x3; val_offset:67032*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67032*0 + 3*72*FLEN/8, x4, x1, x2)

inst_22345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64800000; valaddr_reg:x3; val_offset:67035*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67035*0 + 3*73*FLEN/8, x4, x1, x2)

inst_22346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64800001; valaddr_reg:x3; val_offset:67038*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67038*0 + 3*74*FLEN/8, x4, x1, x2)

inst_22347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64800003; valaddr_reg:x3; val_offset:67041*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67041*0 + 3*75*FLEN/8, x4, x1, x2)

inst_22348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64800007; valaddr_reg:x3; val_offset:67044*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67044*0 + 3*76*FLEN/8, x4, x1, x2)

inst_22349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x6480000f; valaddr_reg:x3; val_offset:67047*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67047*0 + 3*77*FLEN/8, x4, x1, x2)

inst_22350:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x6480001f; valaddr_reg:x3; val_offset:67050*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67050*0 + 3*78*FLEN/8, x4, x1, x2)

inst_22351:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x6480003f; valaddr_reg:x3; val_offset:67053*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67053*0 + 3*79*FLEN/8, x4, x1, x2)

inst_22352:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x6480007f; valaddr_reg:x3; val_offset:67056*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67056*0 + 3*80*FLEN/8, x4, x1, x2)

inst_22353:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x648000ff; valaddr_reg:x3; val_offset:67059*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67059*0 + 3*81*FLEN/8, x4, x1, x2)

inst_22354:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x648001ff; valaddr_reg:x3; val_offset:67062*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67062*0 + 3*82*FLEN/8, x4, x1, x2)

inst_22355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x648003ff; valaddr_reg:x3; val_offset:67065*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67065*0 + 3*83*FLEN/8, x4, x1, x2)

inst_22356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x648007ff; valaddr_reg:x3; val_offset:67068*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67068*0 + 3*84*FLEN/8, x4, x1, x2)

inst_22357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64800fff; valaddr_reg:x3; val_offset:67071*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67071*0 + 3*85*FLEN/8, x4, x1, x2)

inst_22358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64801fff; valaddr_reg:x3; val_offset:67074*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67074*0 + 3*86*FLEN/8, x4, x1, x2)

inst_22359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64803fff; valaddr_reg:x3; val_offset:67077*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67077*0 + 3*87*FLEN/8, x4, x1, x2)

inst_22360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64807fff; valaddr_reg:x3; val_offset:67080*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67080*0 + 3*88*FLEN/8, x4, x1, x2)

inst_22361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x6480ffff; valaddr_reg:x3; val_offset:67083*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67083*0 + 3*89*FLEN/8, x4, x1, x2)

inst_22362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x6481ffff; valaddr_reg:x3; val_offset:67086*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67086*0 + 3*90*FLEN/8, x4, x1, x2)

inst_22363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x6483ffff; valaddr_reg:x3; val_offset:67089*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67089*0 + 3*91*FLEN/8, x4, x1, x2)

inst_22364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x6487ffff; valaddr_reg:x3; val_offset:67092*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67092*0 + 3*92*FLEN/8, x4, x1, x2)

inst_22365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x648fffff; valaddr_reg:x3; val_offset:67095*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67095*0 + 3*93*FLEN/8, x4, x1, x2)

inst_22366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x649fffff; valaddr_reg:x3; val_offset:67098*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67098*0 + 3*94*FLEN/8, x4, x1, x2)

inst_22367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64bfffff; valaddr_reg:x3; val_offset:67101*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67101*0 + 3*95*FLEN/8, x4, x1, x2)

inst_22368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64c00000; valaddr_reg:x3; val_offset:67104*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67104*0 + 3*96*FLEN/8, x4, x1, x2)

inst_22369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64e00000; valaddr_reg:x3; val_offset:67107*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67107*0 + 3*97*FLEN/8, x4, x1, x2)

inst_22370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64f00000; valaddr_reg:x3; val_offset:67110*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67110*0 + 3*98*FLEN/8, x4, x1, x2)

inst_22371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64f80000; valaddr_reg:x3; val_offset:67113*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67113*0 + 3*99*FLEN/8, x4, x1, x2)

inst_22372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fc0000; valaddr_reg:x3; val_offset:67116*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67116*0 + 3*100*FLEN/8, x4, x1, x2)

inst_22373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fe0000; valaddr_reg:x3; val_offset:67119*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67119*0 + 3*101*FLEN/8, x4, x1, x2)

inst_22374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64ff0000; valaddr_reg:x3; val_offset:67122*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67122*0 + 3*102*FLEN/8, x4, x1, x2)

inst_22375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64ff8000; valaddr_reg:x3; val_offset:67125*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67125*0 + 3*103*FLEN/8, x4, x1, x2)

inst_22376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64ffc000; valaddr_reg:x3; val_offset:67128*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67128*0 + 3*104*FLEN/8, x4, x1, x2)

inst_22377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64ffe000; valaddr_reg:x3; val_offset:67131*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67131*0 + 3*105*FLEN/8, x4, x1, x2)

inst_22378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fff000; valaddr_reg:x3; val_offset:67134*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67134*0 + 3*106*FLEN/8, x4, x1, x2)

inst_22379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fff800; valaddr_reg:x3; val_offset:67137*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67137*0 + 3*107*FLEN/8, x4, x1, x2)

inst_22380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fffc00; valaddr_reg:x3; val_offset:67140*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67140*0 + 3*108*FLEN/8, x4, x1, x2)

inst_22381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fffe00; valaddr_reg:x3; val_offset:67143*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67143*0 + 3*109*FLEN/8, x4, x1, x2)

inst_22382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64ffff00; valaddr_reg:x3; val_offset:67146*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67146*0 + 3*110*FLEN/8, x4, x1, x2)

inst_22383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64ffff80; valaddr_reg:x3; val_offset:67149*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67149*0 + 3*111*FLEN/8, x4, x1, x2)

inst_22384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64ffffc0; valaddr_reg:x3; val_offset:67152*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67152*0 + 3*112*FLEN/8, x4, x1, x2)

inst_22385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64ffffe0; valaddr_reg:x3; val_offset:67155*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67155*0 + 3*113*FLEN/8, x4, x1, x2)

inst_22386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fffff0; valaddr_reg:x3; val_offset:67158*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67158*0 + 3*114*FLEN/8, x4, x1, x2)

inst_22387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fffff8; valaddr_reg:x3; val_offset:67161*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67161*0 + 3*115*FLEN/8, x4, x1, x2)

inst_22388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fffffc; valaddr_reg:x3; val_offset:67164*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67164*0 + 3*116*FLEN/8, x4, x1, x2)

inst_22389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64fffffe; valaddr_reg:x3; val_offset:67167*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67167*0 + 3*117*FLEN/8, x4, x1, x2)

inst_22390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xc9 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x64ffffff; valaddr_reg:x3; val_offset:67170*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67170*0 + 3*118*FLEN/8, x4, x1, x2)

inst_22391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f000001; valaddr_reg:x3; val_offset:67173*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67173*0 + 3*119*FLEN/8, x4, x1, x2)

inst_22392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f000003; valaddr_reg:x3; val_offset:67176*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67176*0 + 3*120*FLEN/8, x4, x1, x2)

inst_22393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f000007; valaddr_reg:x3; val_offset:67179*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67179*0 + 3*121*FLEN/8, x4, x1, x2)

inst_22394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f199999; valaddr_reg:x3; val_offset:67182*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67182*0 + 3*122*FLEN/8, x4, x1, x2)

inst_22395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f249249; valaddr_reg:x3; val_offset:67185*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67185*0 + 3*123*FLEN/8, x4, x1, x2)

inst_22396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f333333; valaddr_reg:x3; val_offset:67188*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67188*0 + 3*124*FLEN/8, x4, x1, x2)

inst_22397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:67191*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67191*0 + 3*125*FLEN/8, x4, x1, x2)

inst_22398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:67194*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67194*0 + 3*126*FLEN/8, x4, x1, x2)

inst_22399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f444444; valaddr_reg:x3; val_offset:67197*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67197*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_22400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:67200*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67200*0 + 3*128*FLEN/8, x4, x1, x2)

inst_22401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:67203*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67203*0 + 3*129*FLEN/8, x4, x1, x2)

inst_22402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f666666; valaddr_reg:x3; val_offset:67206*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67206*0 + 3*130*FLEN/8, x4, x1, x2)

inst_22403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:67209*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67209*0 + 3*131*FLEN/8, x4, x1, x2)

inst_22404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:67212*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67212*0 + 3*132*FLEN/8, x4, x1, x2)

inst_22405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:67215*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67215*0 + 3*133*FLEN/8, x4, x1, x2)

inst_22406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65742e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ecf05 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee5742e; op2val:0x400ecf05;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:67218*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67218*0 + 3*134*FLEN/8, x4, x1, x2)

inst_22407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9800000; valaddr_reg:x3; val_offset:67221*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67221*0 + 3*135*FLEN/8, x4, x1, x2)

inst_22408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9800001; valaddr_reg:x3; val_offset:67224*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67224*0 + 3*136*FLEN/8, x4, x1, x2)

inst_22409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9800003; valaddr_reg:x3; val_offset:67227*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67227*0 + 3*137*FLEN/8, x4, x1, x2)

inst_22410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9800007; valaddr_reg:x3; val_offset:67230*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67230*0 + 3*138*FLEN/8, x4, x1, x2)

inst_22411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe980000f; valaddr_reg:x3; val_offset:67233*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67233*0 + 3*139*FLEN/8, x4, x1, x2)

inst_22412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe980001f; valaddr_reg:x3; val_offset:67236*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67236*0 + 3*140*FLEN/8, x4, x1, x2)

inst_22413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe980003f; valaddr_reg:x3; val_offset:67239*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67239*0 + 3*141*FLEN/8, x4, x1, x2)

inst_22414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe980007f; valaddr_reg:x3; val_offset:67242*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67242*0 + 3*142*FLEN/8, x4, x1, x2)

inst_22415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe98000ff; valaddr_reg:x3; val_offset:67245*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67245*0 + 3*143*FLEN/8, x4, x1, x2)

inst_22416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe98001ff; valaddr_reg:x3; val_offset:67248*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67248*0 + 3*144*FLEN/8, x4, x1, x2)

inst_22417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe98003ff; valaddr_reg:x3; val_offset:67251*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67251*0 + 3*145*FLEN/8, x4, x1, x2)

inst_22418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe98007ff; valaddr_reg:x3; val_offset:67254*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67254*0 + 3*146*FLEN/8, x4, x1, x2)

inst_22419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9800fff; valaddr_reg:x3; val_offset:67257*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67257*0 + 3*147*FLEN/8, x4, x1, x2)

inst_22420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9801fff; valaddr_reg:x3; val_offset:67260*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67260*0 + 3*148*FLEN/8, x4, x1, x2)

inst_22421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9803fff; valaddr_reg:x3; val_offset:67263*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67263*0 + 3*149*FLEN/8, x4, x1, x2)

inst_22422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9807fff; valaddr_reg:x3; val_offset:67266*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67266*0 + 3*150*FLEN/8, x4, x1, x2)

inst_22423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe980ffff; valaddr_reg:x3; val_offset:67269*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67269*0 + 3*151*FLEN/8, x4, x1, x2)

inst_22424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe981ffff; valaddr_reg:x3; val_offset:67272*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67272*0 + 3*152*FLEN/8, x4, x1, x2)

inst_22425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe983ffff; valaddr_reg:x3; val_offset:67275*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67275*0 + 3*153*FLEN/8, x4, x1, x2)

inst_22426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe987ffff; valaddr_reg:x3; val_offset:67278*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67278*0 + 3*154*FLEN/8, x4, x1, x2)

inst_22427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe98fffff; valaddr_reg:x3; val_offset:67281*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67281*0 + 3*155*FLEN/8, x4, x1, x2)

inst_22428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe99fffff; valaddr_reg:x3; val_offset:67284*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67284*0 + 3*156*FLEN/8, x4, x1, x2)

inst_22429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9bfffff; valaddr_reg:x3; val_offset:67287*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67287*0 + 3*157*FLEN/8, x4, x1, x2)

inst_22430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9c00000; valaddr_reg:x3; val_offset:67290*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67290*0 + 3*158*FLEN/8, x4, x1, x2)

inst_22431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9e00000; valaddr_reg:x3; val_offset:67293*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67293*0 + 3*159*FLEN/8, x4, x1, x2)

inst_22432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9f00000; valaddr_reg:x3; val_offset:67296*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67296*0 + 3*160*FLEN/8, x4, x1, x2)

inst_22433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9f80000; valaddr_reg:x3; val_offset:67299*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67299*0 + 3*161*FLEN/8, x4, x1, x2)

inst_22434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fc0000; valaddr_reg:x3; val_offset:67302*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67302*0 + 3*162*FLEN/8, x4, x1, x2)

inst_22435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fe0000; valaddr_reg:x3; val_offset:67305*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67305*0 + 3*163*FLEN/8, x4, x1, x2)

inst_22436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9ff0000; valaddr_reg:x3; val_offset:67308*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67308*0 + 3*164*FLEN/8, x4, x1, x2)

inst_22437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9ff8000; valaddr_reg:x3; val_offset:67311*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67311*0 + 3*165*FLEN/8, x4, x1, x2)

inst_22438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9ffc000; valaddr_reg:x3; val_offset:67314*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67314*0 + 3*166*FLEN/8, x4, x1, x2)

inst_22439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9ffe000; valaddr_reg:x3; val_offset:67317*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67317*0 + 3*167*FLEN/8, x4, x1, x2)

inst_22440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fff000; valaddr_reg:x3; val_offset:67320*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67320*0 + 3*168*FLEN/8, x4, x1, x2)

inst_22441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fff800; valaddr_reg:x3; val_offset:67323*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67323*0 + 3*169*FLEN/8, x4, x1, x2)

inst_22442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fffc00; valaddr_reg:x3; val_offset:67326*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67326*0 + 3*170*FLEN/8, x4, x1, x2)

inst_22443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fffe00; valaddr_reg:x3; val_offset:67329*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67329*0 + 3*171*FLEN/8, x4, x1, x2)

inst_22444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9ffff00; valaddr_reg:x3; val_offset:67332*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67332*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9ffff80; valaddr_reg:x3; val_offset:67335*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67335*0 + 3*173*FLEN/8, x4, x1, x2)

inst_22446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9ffffc0; valaddr_reg:x3; val_offset:67338*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67338*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9ffffe0; valaddr_reg:x3; val_offset:67341*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67341*0 + 3*175*FLEN/8, x4, x1, x2)

inst_22448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fffff0; valaddr_reg:x3; val_offset:67344*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67344*0 + 3*176*FLEN/8, x4, x1, x2)

inst_22449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fffff8; valaddr_reg:x3; val_offset:67347*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67347*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fffffc; valaddr_reg:x3; val_offset:67350*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67350*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9fffffe; valaddr_reg:x3; val_offset:67353*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67353*0 + 3*179*FLEN/8, x4, x1, x2)

inst_22452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xd3 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xe9ffffff; valaddr_reg:x3; val_offset:67356*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67356*0 + 3*180*FLEN/8, x4, x1, x2)

inst_22453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff000001; valaddr_reg:x3; val_offset:67359*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67359*0 + 3*181*FLEN/8, x4, x1, x2)

inst_22454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff000003; valaddr_reg:x3; val_offset:67362*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67362*0 + 3*182*FLEN/8, x4, x1, x2)

inst_22455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff000007; valaddr_reg:x3; val_offset:67365*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67365*0 + 3*183*FLEN/8, x4, x1, x2)

inst_22456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff199999; valaddr_reg:x3; val_offset:67368*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67368*0 + 3*184*FLEN/8, x4, x1, x2)

inst_22457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff249249; valaddr_reg:x3; val_offset:67371*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67371*0 + 3*185*FLEN/8, x4, x1, x2)

inst_22458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff333333; valaddr_reg:x3; val_offset:67374*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67374*0 + 3*186*FLEN/8, x4, x1, x2)

inst_22459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:67377*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67377*0 + 3*187*FLEN/8, x4, x1, x2)

inst_22460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:67380*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67380*0 + 3*188*FLEN/8, x4, x1, x2)

inst_22461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff444444; valaddr_reg:x3; val_offset:67383*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67383*0 + 3*189*FLEN/8, x4, x1, x2)

inst_22462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:67386*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67386*0 + 3*190*FLEN/8, x4, x1, x2)

inst_22463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:67389*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67389*0 + 3*191*FLEN/8, x4, x1, x2)

inst_22464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff666666; valaddr_reg:x3; val_offset:67392*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67392*0 + 3*192*FLEN/8, x4, x1, x2)

inst_22465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:67395*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67395*0 + 3*193*FLEN/8, x4, x1, x2)

inst_22466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:67398*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67398*0 + 3*194*FLEN/8, x4, x1, x2)

inst_22467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:67401*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67401*0 + 3*195*FLEN/8, x4, x1, x2)

inst_22468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6726a1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0dc29c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee726a1; op2val:0xc00dc29c;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:67404*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67404*0 + 3*196*FLEN/8, x4, x1, x2)

inst_22469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39000000; valaddr_reg:x3; val_offset:67407*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67407*0 + 3*197*FLEN/8, x4, x1, x2)

inst_22470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39000001; valaddr_reg:x3; val_offset:67410*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67410*0 + 3*198*FLEN/8, x4, x1, x2)

inst_22471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39000003; valaddr_reg:x3; val_offset:67413*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67413*0 + 3*199*FLEN/8, x4, x1, x2)

inst_22472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39000007; valaddr_reg:x3; val_offset:67416*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67416*0 + 3*200*FLEN/8, x4, x1, x2)

inst_22473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3900000f; valaddr_reg:x3; val_offset:67419*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67419*0 + 3*201*FLEN/8, x4, x1, x2)

inst_22474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3900001f; valaddr_reg:x3; val_offset:67422*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67422*0 + 3*202*FLEN/8, x4, x1, x2)

inst_22475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3900003f; valaddr_reg:x3; val_offset:67425*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67425*0 + 3*203*FLEN/8, x4, x1, x2)

inst_22476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3900007f; valaddr_reg:x3; val_offset:67428*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67428*0 + 3*204*FLEN/8, x4, x1, x2)

inst_22477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x390000ff; valaddr_reg:x3; val_offset:67431*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67431*0 + 3*205*FLEN/8, x4, x1, x2)

inst_22478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x390001ff; valaddr_reg:x3; val_offset:67434*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67434*0 + 3*206*FLEN/8, x4, x1, x2)

inst_22479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x390003ff; valaddr_reg:x3; val_offset:67437*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67437*0 + 3*207*FLEN/8, x4, x1, x2)

inst_22480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x390007ff; valaddr_reg:x3; val_offset:67440*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67440*0 + 3*208*FLEN/8, x4, x1, x2)

inst_22481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39000fff; valaddr_reg:x3; val_offset:67443*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67443*0 + 3*209*FLEN/8, x4, x1, x2)

inst_22482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39001fff; valaddr_reg:x3; val_offset:67446*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67446*0 + 3*210*FLEN/8, x4, x1, x2)

inst_22483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39003fff; valaddr_reg:x3; val_offset:67449*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67449*0 + 3*211*FLEN/8, x4, x1, x2)

inst_22484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39007fff; valaddr_reg:x3; val_offset:67452*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67452*0 + 3*212*FLEN/8, x4, x1, x2)

inst_22485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3900ffff; valaddr_reg:x3; val_offset:67455*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67455*0 + 3*213*FLEN/8, x4, x1, x2)

inst_22486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3901ffff; valaddr_reg:x3; val_offset:67458*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67458*0 + 3*214*FLEN/8, x4, x1, x2)

inst_22487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3903ffff; valaddr_reg:x3; val_offset:67461*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67461*0 + 3*215*FLEN/8, x4, x1, x2)

inst_22488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3907ffff; valaddr_reg:x3; val_offset:67464*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67464*0 + 3*216*FLEN/8, x4, x1, x2)

inst_22489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x390fffff; valaddr_reg:x3; val_offset:67467*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67467*0 + 3*217*FLEN/8, x4, x1, x2)

inst_22490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x391fffff; valaddr_reg:x3; val_offset:67470*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67470*0 + 3*218*FLEN/8, x4, x1, x2)

inst_22491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x393fffff; valaddr_reg:x3; val_offset:67473*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67473*0 + 3*219*FLEN/8, x4, x1, x2)

inst_22492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39400000; valaddr_reg:x3; val_offset:67476*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67476*0 + 3*220*FLEN/8, x4, x1, x2)

inst_22493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39600000; valaddr_reg:x3; val_offset:67479*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67479*0 + 3*221*FLEN/8, x4, x1, x2)

inst_22494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39700000; valaddr_reg:x3; val_offset:67482*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67482*0 + 3*222*FLEN/8, x4, x1, x2)

inst_22495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x39780000; valaddr_reg:x3; val_offset:67485*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67485*0 + 3*223*FLEN/8, x4, x1, x2)

inst_22496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397c0000; valaddr_reg:x3; val_offset:67488*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67488*0 + 3*224*FLEN/8, x4, x1, x2)

inst_22497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397e0000; valaddr_reg:x3; val_offset:67491*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67491*0 + 3*225*FLEN/8, x4, x1, x2)

inst_22498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397f0000; valaddr_reg:x3; val_offset:67494*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67494*0 + 3*226*FLEN/8, x4, x1, x2)

inst_22499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397f8000; valaddr_reg:x3; val_offset:67497*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67497*0 + 3*227*FLEN/8, x4, x1, x2)

inst_22500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397fc000; valaddr_reg:x3; val_offset:67500*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67500*0 + 3*228*FLEN/8, x4, x1, x2)

inst_22501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397fe000; valaddr_reg:x3; val_offset:67503*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67503*0 + 3*229*FLEN/8, x4, x1, x2)

inst_22502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397ff000; valaddr_reg:x3; val_offset:67506*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67506*0 + 3*230*FLEN/8, x4, x1, x2)

inst_22503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397ff800; valaddr_reg:x3; val_offset:67509*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67509*0 + 3*231*FLEN/8, x4, x1, x2)

inst_22504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397ffc00; valaddr_reg:x3; val_offset:67512*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67512*0 + 3*232*FLEN/8, x4, x1, x2)

inst_22505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397ffe00; valaddr_reg:x3; val_offset:67515*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67515*0 + 3*233*FLEN/8, x4, x1, x2)

inst_22506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397fff00; valaddr_reg:x3; val_offset:67518*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67518*0 + 3*234*FLEN/8, x4, x1, x2)

inst_22507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397fff80; valaddr_reg:x3; val_offset:67521*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67521*0 + 3*235*FLEN/8, x4, x1, x2)

inst_22508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397fffc0; valaddr_reg:x3; val_offset:67524*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67524*0 + 3*236*FLEN/8, x4, x1, x2)

inst_22509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397fffe0; valaddr_reg:x3; val_offset:67527*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67527*0 + 3*237*FLEN/8, x4, x1, x2)

inst_22510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397ffff0; valaddr_reg:x3; val_offset:67530*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67530*0 + 3*238*FLEN/8, x4, x1, x2)

inst_22511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397ffff8; valaddr_reg:x3; val_offset:67533*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67533*0 + 3*239*FLEN/8, x4, x1, x2)

inst_22512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397ffffc; valaddr_reg:x3; val_offset:67536*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67536*0 + 3*240*FLEN/8, x4, x1, x2)

inst_22513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397ffffe; valaddr_reg:x3; val_offset:67539*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67539*0 + 3*241*FLEN/8, x4, x1, x2)

inst_22514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x397fffff; valaddr_reg:x3; val_offset:67542*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67542*0 + 3*242*FLEN/8, x4, x1, x2)

inst_22515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3f800001; valaddr_reg:x3; val_offset:67545*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67545*0 + 3*243*FLEN/8, x4, x1, x2)

inst_22516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3f800003; valaddr_reg:x3; val_offset:67548*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67548*0 + 3*244*FLEN/8, x4, x1, x2)

inst_22517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3f800007; valaddr_reg:x3; val_offset:67551*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67551*0 + 3*245*FLEN/8, x4, x1, x2)

inst_22518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3f999999; valaddr_reg:x3; val_offset:67554*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67554*0 + 3*246*FLEN/8, x4, x1, x2)

inst_22519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:67557*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67557*0 + 3*247*FLEN/8, x4, x1, x2)

inst_22520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:67560*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67560*0 + 3*248*FLEN/8, x4, x1, x2)

inst_22521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:67563*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67563*0 + 3*249*FLEN/8, x4, x1, x2)

inst_22522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:67566*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67566*0 + 3*250*FLEN/8, x4, x1, x2)

inst_22523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:67569*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67569*0 + 3*251*FLEN/8, x4, x1, x2)

inst_22524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:67572*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67572*0 + 3*252*FLEN/8, x4, x1, x2)

inst_22525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:67575*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67575*0 + 3*253*FLEN/8, x4, x1, x2)

inst_22526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:67578*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67578*0 + 3*254*FLEN/8, x4, x1, x2)

inst_22527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:67581*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67581*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_22528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:67584*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67584*0 + 3*256*FLEN/8, x4, x1, x2)

inst_22529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:67587*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67587*0 + 3*257*FLEN/8, x4, x1, x2)

inst_22530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68613e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x468157 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8613e; op2val:0x468157;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:67590*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67590*0 + 3*258*FLEN/8, x4, x1, x2)

inst_22531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:67593*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67593*0 + 3*259*FLEN/8, x4, x1, x2)

inst_22532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:67596*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67596*0 + 3*260*FLEN/8, x4, x1, x2)

inst_22533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:67599*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67599*0 + 3*261*FLEN/8, x4, x1, x2)

inst_22534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:67602*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67602*0 + 3*262*FLEN/8, x4, x1, x2)

inst_22535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:67605*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67605*0 + 3*263*FLEN/8, x4, x1, x2)

inst_22536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:67608*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67608*0 + 3*264*FLEN/8, x4, x1, x2)

inst_22537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:67611*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67611*0 + 3*265*FLEN/8, x4, x1, x2)

inst_22538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:67614*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67614*0 + 3*266*FLEN/8, x4, x1, x2)

inst_22539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:67617*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67617*0 + 3*267*FLEN/8, x4, x1, x2)

inst_22540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:67620*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67620*0 + 3*268*FLEN/8, x4, x1, x2)

inst_22541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:67623*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67623*0 + 3*269*FLEN/8, x4, x1, x2)

inst_22542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:67626*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67626*0 + 3*270*FLEN/8, x4, x1, x2)

inst_22543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:67629*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67629*0 + 3*271*FLEN/8, x4, x1, x2)

inst_22544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:67632*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67632*0 + 3*272*FLEN/8, x4, x1, x2)

inst_22545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:67635*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67635*0 + 3*273*FLEN/8, x4, x1, x2)

inst_22546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:67638*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67638*0 + 3*274*FLEN/8, x4, x1, x2)

inst_22547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2800000; valaddr_reg:x3; val_offset:67641*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67641*0 + 3*275*FLEN/8, x4, x1, x2)

inst_22548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2800001; valaddr_reg:x3; val_offset:67644*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67644*0 + 3*276*FLEN/8, x4, x1, x2)

inst_22549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2800003; valaddr_reg:x3; val_offset:67647*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67647*0 + 3*277*FLEN/8, x4, x1, x2)

inst_22550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2800007; valaddr_reg:x3; val_offset:67650*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67650*0 + 3*278*FLEN/8, x4, x1, x2)

inst_22551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x280000f; valaddr_reg:x3; val_offset:67653*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67653*0 + 3*279*FLEN/8, x4, x1, x2)

inst_22552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x280001f; valaddr_reg:x3; val_offset:67656*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67656*0 + 3*280*FLEN/8, x4, x1, x2)

inst_22553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x280003f; valaddr_reg:x3; val_offset:67659*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67659*0 + 3*281*FLEN/8, x4, x1, x2)

inst_22554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x280007f; valaddr_reg:x3; val_offset:67662*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67662*0 + 3*282*FLEN/8, x4, x1, x2)

inst_22555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x28000ff; valaddr_reg:x3; val_offset:67665*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67665*0 + 3*283*FLEN/8, x4, x1, x2)

inst_22556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x28001ff; valaddr_reg:x3; val_offset:67668*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67668*0 + 3*284*FLEN/8, x4, x1, x2)

inst_22557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x28003ff; valaddr_reg:x3; val_offset:67671*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67671*0 + 3*285*FLEN/8, x4, x1, x2)

inst_22558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x28007ff; valaddr_reg:x3; val_offset:67674*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67674*0 + 3*286*FLEN/8, x4, x1, x2)

inst_22559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2800fff; valaddr_reg:x3; val_offset:67677*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67677*0 + 3*287*FLEN/8, x4, x1, x2)

inst_22560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2801fff; valaddr_reg:x3; val_offset:67680*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67680*0 + 3*288*FLEN/8, x4, x1, x2)

inst_22561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2803fff; valaddr_reg:x3; val_offset:67683*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67683*0 + 3*289*FLEN/8, x4, x1, x2)

inst_22562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2807fff; valaddr_reg:x3; val_offset:67686*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67686*0 + 3*290*FLEN/8, x4, x1, x2)

inst_22563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x280ffff; valaddr_reg:x3; val_offset:67689*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67689*0 + 3*291*FLEN/8, x4, x1, x2)

inst_22564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x281ffff; valaddr_reg:x3; val_offset:67692*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67692*0 + 3*292*FLEN/8, x4, x1, x2)

inst_22565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x283ffff; valaddr_reg:x3; val_offset:67695*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67695*0 + 3*293*FLEN/8, x4, x1, x2)

inst_22566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x287ffff; valaddr_reg:x3; val_offset:67698*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67698*0 + 3*294*FLEN/8, x4, x1, x2)

inst_22567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x28fffff; valaddr_reg:x3; val_offset:67701*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67701*0 + 3*295*FLEN/8, x4, x1, x2)

inst_22568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x29fffff; valaddr_reg:x3; val_offset:67704*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67704*0 + 3*296*FLEN/8, x4, x1, x2)

inst_22569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2bfffff; valaddr_reg:x3; val_offset:67707*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67707*0 + 3*297*FLEN/8, x4, x1, x2)

inst_22570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2c00000; valaddr_reg:x3; val_offset:67710*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67710*0 + 3*298*FLEN/8, x4, x1, x2)

inst_22571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2e00000; valaddr_reg:x3; val_offset:67713*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67713*0 + 3*299*FLEN/8, x4, x1, x2)

inst_22572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2f00000; valaddr_reg:x3; val_offset:67716*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67716*0 + 3*300*FLEN/8, x4, x1, x2)

inst_22573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2f80000; valaddr_reg:x3; val_offset:67719*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67719*0 + 3*301*FLEN/8, x4, x1, x2)

inst_22574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fc0000; valaddr_reg:x3; val_offset:67722*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67722*0 + 3*302*FLEN/8, x4, x1, x2)

inst_22575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fe0000; valaddr_reg:x3; val_offset:67725*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67725*0 + 3*303*FLEN/8, x4, x1, x2)

inst_22576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2ff0000; valaddr_reg:x3; val_offset:67728*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67728*0 + 3*304*FLEN/8, x4, x1, x2)

inst_22577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2ff8000; valaddr_reg:x3; val_offset:67731*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67731*0 + 3*305*FLEN/8, x4, x1, x2)

inst_22578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2ffc000; valaddr_reg:x3; val_offset:67734*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67734*0 + 3*306*FLEN/8, x4, x1, x2)

inst_22579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2ffe000; valaddr_reg:x3; val_offset:67737*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67737*0 + 3*307*FLEN/8, x4, x1, x2)

inst_22580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fff000; valaddr_reg:x3; val_offset:67740*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67740*0 + 3*308*FLEN/8, x4, x1, x2)

inst_22581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fff800; valaddr_reg:x3; val_offset:67743*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67743*0 + 3*309*FLEN/8, x4, x1, x2)

inst_22582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fffc00; valaddr_reg:x3; val_offset:67746*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67746*0 + 3*310*FLEN/8, x4, x1, x2)

inst_22583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fffe00; valaddr_reg:x3; val_offset:67749*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67749*0 + 3*311*FLEN/8, x4, x1, x2)

inst_22584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2ffff00; valaddr_reg:x3; val_offset:67752*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67752*0 + 3*312*FLEN/8, x4, x1, x2)

inst_22585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2ffff80; valaddr_reg:x3; val_offset:67755*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67755*0 + 3*313*FLEN/8, x4, x1, x2)

inst_22586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2ffffc0; valaddr_reg:x3; val_offset:67758*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67758*0 + 3*314*FLEN/8, x4, x1, x2)

inst_22587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2ffffe0; valaddr_reg:x3; val_offset:67761*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67761*0 + 3*315*FLEN/8, x4, x1, x2)

inst_22588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fffff0; valaddr_reg:x3; val_offset:67764*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67764*0 + 3*316*FLEN/8, x4, x1, x2)

inst_22589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fffff8; valaddr_reg:x3; val_offset:67767*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67767*0 + 3*317*FLEN/8, x4, x1, x2)

inst_22590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fffffc; valaddr_reg:x3; val_offset:67770*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67770*0 + 3*318*FLEN/8, x4, x1, x2)

inst_22591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2fffffe; valaddr_reg:x3; val_offset:67773*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67773*0 + 3*319*FLEN/8, x4, x1, x2)

inst_22592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee8aebb; op2val:0x0;
op3val:0x2ffffff; valaddr_reg:x3; val_offset:67776*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67776*0 + 3*320*FLEN/8, x4, x1, x2)

inst_22593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:67779*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67779*0 + 3*321*FLEN/8, x4, x1, x2)

inst_22594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:67782*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67782*0 + 3*322*FLEN/8, x4, x1, x2)

inst_22595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:67785*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67785*0 + 3*323*FLEN/8, x4, x1, x2)

inst_22596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:67788*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67788*0 + 3*324*FLEN/8, x4, x1, x2)

inst_22597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:67791*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67791*0 + 3*325*FLEN/8, x4, x1, x2)

inst_22598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:67794*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67794*0 + 3*326*FLEN/8, x4, x1, x2)

inst_22599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:67797*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67797*0 + 3*327*FLEN/8, x4, x1, x2)

inst_22600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:67800*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67800*0 + 3*328*FLEN/8, x4, x1, x2)

inst_22601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:67803*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67803*0 + 3*329*FLEN/8, x4, x1, x2)

inst_22602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:67806*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67806*0 + 3*330*FLEN/8, x4, x1, x2)

inst_22603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:67809*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67809*0 + 3*331*FLEN/8, x4, x1, x2)

inst_22604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:67812*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67812*0 + 3*332*FLEN/8, x4, x1, x2)

inst_22605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:67815*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67815*0 + 3*333*FLEN/8, x4, x1, x2)

inst_22606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:67818*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67818*0 + 3*334*FLEN/8, x4, x1, x2)

inst_22607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:67821*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67821*0 + 3*335*FLEN/8, x4, x1, x2)

inst_22608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:67824*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67824*0 + 3*336*FLEN/8, x4, x1, x2)

inst_22609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3000000; valaddr_reg:x3; val_offset:67827*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67827*0 + 3*337*FLEN/8, x4, x1, x2)

inst_22610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3000001; valaddr_reg:x3; val_offset:67830*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67830*0 + 3*338*FLEN/8, x4, x1, x2)

inst_22611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3000003; valaddr_reg:x3; val_offset:67833*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67833*0 + 3*339*FLEN/8, x4, x1, x2)

inst_22612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3000007; valaddr_reg:x3; val_offset:67836*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67836*0 + 3*340*FLEN/8, x4, x1, x2)

inst_22613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x300000f; valaddr_reg:x3; val_offset:67839*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67839*0 + 3*341*FLEN/8, x4, x1, x2)

inst_22614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x300001f; valaddr_reg:x3; val_offset:67842*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67842*0 + 3*342*FLEN/8, x4, x1, x2)

inst_22615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x300003f; valaddr_reg:x3; val_offset:67845*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67845*0 + 3*343*FLEN/8, x4, x1, x2)

inst_22616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x300007f; valaddr_reg:x3; val_offset:67848*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67848*0 + 3*344*FLEN/8, x4, x1, x2)

inst_22617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x30000ff; valaddr_reg:x3; val_offset:67851*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67851*0 + 3*345*FLEN/8, x4, x1, x2)

inst_22618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x30001ff; valaddr_reg:x3; val_offset:67854*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67854*0 + 3*346*FLEN/8, x4, x1, x2)

inst_22619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x30003ff; valaddr_reg:x3; val_offset:67857*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67857*0 + 3*347*FLEN/8, x4, x1, x2)

inst_22620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x30007ff; valaddr_reg:x3; val_offset:67860*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67860*0 + 3*348*FLEN/8, x4, x1, x2)

inst_22621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3000fff; valaddr_reg:x3; val_offset:67863*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67863*0 + 3*349*FLEN/8, x4, x1, x2)

inst_22622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3001fff; valaddr_reg:x3; val_offset:67866*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67866*0 + 3*350*FLEN/8, x4, x1, x2)

inst_22623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3003fff; valaddr_reg:x3; val_offset:67869*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67869*0 + 3*351*FLEN/8, x4, x1, x2)

inst_22624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3007fff; valaddr_reg:x3; val_offset:67872*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67872*0 + 3*352*FLEN/8, x4, x1, x2)

inst_22625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x300ffff; valaddr_reg:x3; val_offset:67875*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67875*0 + 3*353*FLEN/8, x4, x1, x2)

inst_22626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x301ffff; valaddr_reg:x3; val_offset:67878*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67878*0 + 3*354*FLEN/8, x4, x1, x2)

inst_22627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x303ffff; valaddr_reg:x3; val_offset:67881*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67881*0 + 3*355*FLEN/8, x4, x1, x2)

inst_22628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x307ffff; valaddr_reg:x3; val_offset:67884*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67884*0 + 3*356*FLEN/8, x4, x1, x2)

inst_22629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x30fffff; valaddr_reg:x3; val_offset:67887*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67887*0 + 3*357*FLEN/8, x4, x1, x2)

inst_22630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x31fffff; valaddr_reg:x3; val_offset:67890*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67890*0 + 3*358*FLEN/8, x4, x1, x2)

inst_22631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x33fffff; valaddr_reg:x3; val_offset:67893*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67893*0 + 3*359*FLEN/8, x4, x1, x2)

inst_22632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3400000; valaddr_reg:x3; val_offset:67896*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67896*0 + 3*360*FLEN/8, x4, x1, x2)

inst_22633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3600000; valaddr_reg:x3; val_offset:67899*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67899*0 + 3*361*FLEN/8, x4, x1, x2)

inst_22634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3700000; valaddr_reg:x3; val_offset:67902*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67902*0 + 3*362*FLEN/8, x4, x1, x2)

inst_22635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x3780000; valaddr_reg:x3; val_offset:67905*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67905*0 + 3*363*FLEN/8, x4, x1, x2)

inst_22636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37c0000; valaddr_reg:x3; val_offset:67908*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67908*0 + 3*364*FLEN/8, x4, x1, x2)

inst_22637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37e0000; valaddr_reg:x3; val_offset:67911*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67911*0 + 3*365*FLEN/8, x4, x1, x2)

inst_22638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37f0000; valaddr_reg:x3; val_offset:67914*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67914*0 + 3*366*FLEN/8, x4, x1, x2)

inst_22639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37f8000; valaddr_reg:x3; val_offset:67917*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67917*0 + 3*367*FLEN/8, x4, x1, x2)

inst_22640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37fc000; valaddr_reg:x3; val_offset:67920*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67920*0 + 3*368*FLEN/8, x4, x1, x2)

inst_22641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37fe000; valaddr_reg:x3; val_offset:67923*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67923*0 + 3*369*FLEN/8, x4, x1, x2)

inst_22642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37ff000; valaddr_reg:x3; val_offset:67926*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67926*0 + 3*370*FLEN/8, x4, x1, x2)

inst_22643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37ff800; valaddr_reg:x3; val_offset:67929*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67929*0 + 3*371*FLEN/8, x4, x1, x2)

inst_22644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37ffc00; valaddr_reg:x3; val_offset:67932*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67932*0 + 3*372*FLEN/8, x4, x1, x2)

inst_22645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37ffe00; valaddr_reg:x3; val_offset:67935*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67935*0 + 3*373*FLEN/8, x4, x1, x2)

inst_22646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37fff00; valaddr_reg:x3; val_offset:67938*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67938*0 + 3*374*FLEN/8, x4, x1, x2)

inst_22647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37fff80; valaddr_reg:x3; val_offset:67941*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67941*0 + 3*375*FLEN/8, x4, x1, x2)

inst_22648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37fffc0; valaddr_reg:x3; val_offset:67944*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67944*0 + 3*376*FLEN/8, x4, x1, x2)

inst_22649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37fffe0; valaddr_reg:x3; val_offset:67947*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67947*0 + 3*377*FLEN/8, x4, x1, x2)

inst_22650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37ffff0; valaddr_reg:x3; val_offset:67950*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67950*0 + 3*378*FLEN/8, x4, x1, x2)

inst_22651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37ffff8; valaddr_reg:x3; val_offset:67953*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67953*0 + 3*379*FLEN/8, x4, x1, x2)

inst_22652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37ffffc; valaddr_reg:x3; val_offset:67956*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67956*0 + 3*380*FLEN/8, x4, x1, x2)

inst_22653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37ffffe; valaddr_reg:x3; val_offset:67959*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67959*0 + 3*381*FLEN/8, x4, x1, x2)

inst_22654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee90309; op2val:0x0;
op3val:0x37fffff; valaddr_reg:x3; val_offset:67962*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67962*0 + 3*382*FLEN/8, x4, x1, x2)

inst_22655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60800000; valaddr_reg:x3; val_offset:67965*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67965*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_22656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60800001; valaddr_reg:x3; val_offset:67968*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67968*0 + 3*384*FLEN/8, x4, x1, x2)

inst_22657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60800003; valaddr_reg:x3; val_offset:67971*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67971*0 + 3*385*FLEN/8, x4, x1, x2)

inst_22658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60800007; valaddr_reg:x3; val_offset:67974*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67974*0 + 3*386*FLEN/8, x4, x1, x2)

inst_22659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080000f; valaddr_reg:x3; val_offset:67977*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67977*0 + 3*387*FLEN/8, x4, x1, x2)

inst_22660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080001f; valaddr_reg:x3; val_offset:67980*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67980*0 + 3*388*FLEN/8, x4, x1, x2)

inst_22661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080003f; valaddr_reg:x3; val_offset:67983*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67983*0 + 3*389*FLEN/8, x4, x1, x2)

inst_22662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080007f; valaddr_reg:x3; val_offset:67986*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67986*0 + 3*390*FLEN/8, x4, x1, x2)

inst_22663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608000ff; valaddr_reg:x3; val_offset:67989*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67989*0 + 3*391*FLEN/8, x4, x1, x2)

inst_22664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608001ff; valaddr_reg:x3; val_offset:67992*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67992*0 + 3*392*FLEN/8, x4, x1, x2)

inst_22665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608003ff; valaddr_reg:x3; val_offset:67995*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67995*0 + 3*393*FLEN/8, x4, x1, x2)

inst_22666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608007ff; valaddr_reg:x3; val_offset:67998*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 67998*0 + 3*394*FLEN/8, x4, x1, x2)

inst_22667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60800fff; valaddr_reg:x3; val_offset:68001*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68001*0 + 3*395*FLEN/8, x4, x1, x2)

inst_22668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60801fff; valaddr_reg:x3; val_offset:68004*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68004*0 + 3*396*FLEN/8, x4, x1, x2)

inst_22669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60803fff; valaddr_reg:x3; val_offset:68007*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68007*0 + 3*397*FLEN/8, x4, x1, x2)

inst_22670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60807fff; valaddr_reg:x3; val_offset:68010*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68010*0 + 3*398*FLEN/8, x4, x1, x2)

inst_22671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6080ffff; valaddr_reg:x3; val_offset:68013*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68013*0 + 3*399*FLEN/8, x4, x1, x2)

inst_22672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6081ffff; valaddr_reg:x3; val_offset:68016*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68016*0 + 3*400*FLEN/8, x4, x1, x2)

inst_22673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6083ffff; valaddr_reg:x3; val_offset:68019*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68019*0 + 3*401*FLEN/8, x4, x1, x2)

inst_22674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x6087ffff; valaddr_reg:x3; val_offset:68022*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68022*0 + 3*402*FLEN/8, x4, x1, x2)

inst_22675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x608fffff; valaddr_reg:x3; val_offset:68025*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68025*0 + 3*403*FLEN/8, x4, x1, x2)

inst_22676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x609fffff; valaddr_reg:x3; val_offset:68028*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68028*0 + 3*404*FLEN/8, x4, x1, x2)

inst_22677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60bfffff; valaddr_reg:x3; val_offset:68031*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68031*0 + 3*405*FLEN/8, x4, x1, x2)

inst_22678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60c00000; valaddr_reg:x3; val_offset:68034*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68034*0 + 3*406*FLEN/8, x4, x1, x2)

inst_22679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60e00000; valaddr_reg:x3; val_offset:68037*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68037*0 + 3*407*FLEN/8, x4, x1, x2)

inst_22680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60f00000; valaddr_reg:x3; val_offset:68040*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68040*0 + 3*408*FLEN/8, x4, x1, x2)

inst_22681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60f80000; valaddr_reg:x3; val_offset:68043*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68043*0 + 3*409*FLEN/8, x4, x1, x2)

inst_22682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fc0000; valaddr_reg:x3; val_offset:68046*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68046*0 + 3*410*FLEN/8, x4, x1, x2)

inst_22683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fe0000; valaddr_reg:x3; val_offset:68049*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68049*0 + 3*411*FLEN/8, x4, x1, x2)

inst_22684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ff0000; valaddr_reg:x3; val_offset:68052*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68052*0 + 3*412*FLEN/8, x4, x1, x2)

inst_22685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ff8000; valaddr_reg:x3; val_offset:68055*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68055*0 + 3*413*FLEN/8, x4, x1, x2)

inst_22686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffc000; valaddr_reg:x3; val_offset:68058*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68058*0 + 3*414*FLEN/8, x4, x1, x2)

inst_22687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffe000; valaddr_reg:x3; val_offset:68061*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68061*0 + 3*415*FLEN/8, x4, x1, x2)

inst_22688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fff000; valaddr_reg:x3; val_offset:68064*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68064*0 + 3*416*FLEN/8, x4, x1, x2)

inst_22689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fff800; valaddr_reg:x3; val_offset:68067*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68067*0 + 3*417*FLEN/8, x4, x1, x2)

inst_22690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffc00; valaddr_reg:x3; val_offset:68070*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68070*0 + 3*418*FLEN/8, x4, x1, x2)

inst_22691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffe00; valaddr_reg:x3; val_offset:68073*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68073*0 + 3*419*FLEN/8, x4, x1, x2)

inst_22692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffff00; valaddr_reg:x3; val_offset:68076*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68076*0 + 3*420*FLEN/8, x4, x1, x2)

inst_22693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffff80; valaddr_reg:x3; val_offset:68079*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68079*0 + 3*421*FLEN/8, x4, x1, x2)

inst_22694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffffc0; valaddr_reg:x3; val_offset:68082*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68082*0 + 3*422*FLEN/8, x4, x1, x2)

inst_22695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffffe0; valaddr_reg:x3; val_offset:68085*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68085*0 + 3*423*FLEN/8, x4, x1, x2)

inst_22696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffff0; valaddr_reg:x3; val_offset:68088*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68088*0 + 3*424*FLEN/8, x4, x1, x2)

inst_22697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffff8; valaddr_reg:x3; val_offset:68091*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68091*0 + 3*425*FLEN/8, x4, x1, x2)

inst_22698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffffc; valaddr_reg:x3; val_offset:68094*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68094*0 + 3*426*FLEN/8, x4, x1, x2)

inst_22699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60fffffe; valaddr_reg:x3; val_offset:68097*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68097*0 + 3*427*FLEN/8, x4, x1, x2)

inst_22700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xc1 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x60ffffff; valaddr_reg:x3; val_offset:68100*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68100*0 + 3*428*FLEN/8, x4, x1, x2)

inst_22701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f000001; valaddr_reg:x3; val_offset:68103*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68103*0 + 3*429*FLEN/8, x4, x1, x2)

inst_22702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f000003; valaddr_reg:x3; val_offset:68106*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68106*0 + 3*430*FLEN/8, x4, x1, x2)

inst_22703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f000007; valaddr_reg:x3; val_offset:68109*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68109*0 + 3*431*FLEN/8, x4, x1, x2)

inst_22704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f199999; valaddr_reg:x3; val_offset:68112*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68112*0 + 3*432*FLEN/8, x4, x1, x2)

inst_22705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f249249; valaddr_reg:x3; val_offset:68115*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68115*0 + 3*433*FLEN/8, x4, x1, x2)

inst_22706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f333333; valaddr_reg:x3; val_offset:68118*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68118*0 + 3*434*FLEN/8, x4, x1, x2)

inst_22707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:68121*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68121*0 + 3*435*FLEN/8, x4, x1, x2)

inst_22708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:68124*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68124*0 + 3*436*FLEN/8, x4, x1, x2)

inst_22709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f444444; valaddr_reg:x3; val_offset:68127*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68127*0 + 3*437*FLEN/8, x4, x1, x2)

inst_22710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:68130*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68130*0 + 3*438*FLEN/8, x4, x1, x2)

inst_22711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:68133*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68133*0 + 3*439*FLEN/8, x4, x1, x2)

inst_22712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f666666; valaddr_reg:x3; val_offset:68136*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68136*0 + 3*440*FLEN/8, x4, x1, x2)

inst_22713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:68139*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68139*0 + 3*441*FLEN/8, x4, x1, x2)

inst_22714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:68142*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68142*0 + 3*442*FLEN/8, x4, x1, x2)

inst_22715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:68145*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68145*0 + 3*443*FLEN/8, x4, x1, x2)

inst_22716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6268 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bcdf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eea6268; op2val:0x400bcdf4;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:68148*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68148*0 + 3*444*FLEN/8, x4, x1, x2)

inst_22717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:68151*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68151*0 + 3*445*FLEN/8, x4, x1, x2)

inst_22718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:68154*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68154*0 + 3*446*FLEN/8, x4, x1, x2)

inst_22719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:68157*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68157*0 + 3*447*FLEN/8, x4, x1, x2)

inst_22720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:68160*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68160*0 + 3*448*FLEN/8, x4, x1, x2)

inst_22721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:68163*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68163*0 + 3*449*FLEN/8, x4, x1, x2)

inst_22722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:68166*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68166*0 + 3*450*FLEN/8, x4, x1, x2)

inst_22723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:68169*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68169*0 + 3*451*FLEN/8, x4, x1, x2)

inst_22724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:68172*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68172*0 + 3*452*FLEN/8, x4, x1, x2)

inst_22725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:68175*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68175*0 + 3*453*FLEN/8, x4, x1, x2)

inst_22726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:68178*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68178*0 + 3*454*FLEN/8, x4, x1, x2)

inst_22727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:68181*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68181*0 + 3*455*FLEN/8, x4, x1, x2)

inst_22728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:68184*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68184*0 + 3*456*FLEN/8, x4, x1, x2)

inst_22729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:68187*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68187*0 + 3*457*FLEN/8, x4, x1, x2)

inst_22730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:68190*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68190*0 + 3*458*FLEN/8, x4, x1, x2)

inst_22731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:68193*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68193*0 + 3*459*FLEN/8, x4, x1, x2)

inst_22732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:68196*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68196*0 + 3*460*FLEN/8, x4, x1, x2)

inst_22733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000000; valaddr_reg:x3; val_offset:68199*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68199*0 + 3*461*FLEN/8, x4, x1, x2)

inst_22734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000001; valaddr_reg:x3; val_offset:68202*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68202*0 + 3*462*FLEN/8, x4, x1, x2)

inst_22735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000003; valaddr_reg:x3; val_offset:68205*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68205*0 + 3*463*FLEN/8, x4, x1, x2)

inst_22736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000007; valaddr_reg:x3; val_offset:68208*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68208*0 + 3*464*FLEN/8, x4, x1, x2)

inst_22737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00000f; valaddr_reg:x3; val_offset:68211*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68211*0 + 3*465*FLEN/8, x4, x1, x2)

inst_22738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00001f; valaddr_reg:x3; val_offset:68214*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68214*0 + 3*466*FLEN/8, x4, x1, x2)

inst_22739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00003f; valaddr_reg:x3; val_offset:68217*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68217*0 + 3*467*FLEN/8, x4, x1, x2)

inst_22740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00007f; valaddr_reg:x3; val_offset:68220*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68220*0 + 3*468*FLEN/8, x4, x1, x2)

inst_22741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0000ff; valaddr_reg:x3; val_offset:68223*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68223*0 + 3*469*FLEN/8, x4, x1, x2)

inst_22742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0001ff; valaddr_reg:x3; val_offset:68226*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68226*0 + 3*470*FLEN/8, x4, x1, x2)

inst_22743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0003ff; valaddr_reg:x3; val_offset:68229*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68229*0 + 3*471*FLEN/8, x4, x1, x2)

inst_22744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0007ff; valaddr_reg:x3; val_offset:68232*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68232*0 + 3*472*FLEN/8, x4, x1, x2)

inst_22745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f000fff; valaddr_reg:x3; val_offset:68235*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68235*0 + 3*473*FLEN/8, x4, x1, x2)

inst_22746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f001fff; valaddr_reg:x3; val_offset:68238*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68238*0 + 3*474*FLEN/8, x4, x1, x2)

inst_22747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f003fff; valaddr_reg:x3; val_offset:68241*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68241*0 + 3*475*FLEN/8, x4, x1, x2)

inst_22748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f007fff; valaddr_reg:x3; val_offset:68244*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68244*0 + 3*476*FLEN/8, x4, x1, x2)

inst_22749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f00ffff; valaddr_reg:x3; val_offset:68247*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68247*0 + 3*477*FLEN/8, x4, x1, x2)

inst_22750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f01ffff; valaddr_reg:x3; val_offset:68250*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68250*0 + 3*478*FLEN/8, x4, x1, x2)

inst_22751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f03ffff; valaddr_reg:x3; val_offset:68253*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68253*0 + 3*479*FLEN/8, x4, x1, x2)

inst_22752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f07ffff; valaddr_reg:x3; val_offset:68256*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68256*0 + 3*480*FLEN/8, x4, x1, x2)

inst_22753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f0fffff; valaddr_reg:x3; val_offset:68259*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68259*0 + 3*481*FLEN/8, x4, x1, x2)

inst_22754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f1fffff; valaddr_reg:x3; val_offset:68262*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68262*0 + 3*482*FLEN/8, x4, x1, x2)

inst_22755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f3fffff; valaddr_reg:x3; val_offset:68265*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68265*0 + 3*483*FLEN/8, x4, x1, x2)

inst_22756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f400000; valaddr_reg:x3; val_offset:68268*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68268*0 + 3*484*FLEN/8, x4, x1, x2)

inst_22757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f600000; valaddr_reg:x3; val_offset:68271*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68271*0 + 3*485*FLEN/8, x4, x1, x2)

inst_22758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f700000; valaddr_reg:x3; val_offset:68274*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68274*0 + 3*486*FLEN/8, x4, x1, x2)

inst_22759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f780000; valaddr_reg:x3; val_offset:68277*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68277*0 + 3*487*FLEN/8, x4, x1, x2)

inst_22760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7c0000; valaddr_reg:x3; val_offset:68280*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68280*0 + 3*488*FLEN/8, x4, x1, x2)

inst_22761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7e0000; valaddr_reg:x3; val_offset:68283*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68283*0 + 3*489*FLEN/8, x4, x1, x2)

inst_22762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7f0000; valaddr_reg:x3; val_offset:68286*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68286*0 + 3*490*FLEN/8, x4, x1, x2)

inst_22763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7f8000; valaddr_reg:x3; val_offset:68289*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68289*0 + 3*491*FLEN/8, x4, x1, x2)

inst_22764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fc000; valaddr_reg:x3; val_offset:68292*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68292*0 + 3*492*FLEN/8, x4, x1, x2)

inst_22765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fe000; valaddr_reg:x3; val_offset:68295*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68295*0 + 3*493*FLEN/8, x4, x1, x2)

inst_22766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ff000; valaddr_reg:x3; val_offset:68298*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68298*0 + 3*494*FLEN/8, x4, x1, x2)

inst_22767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ff800; valaddr_reg:x3; val_offset:68301*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68301*0 + 3*495*FLEN/8, x4, x1, x2)

inst_22768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffc00; valaddr_reg:x3; val_offset:68304*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68304*0 + 3*496*FLEN/8, x4, x1, x2)

inst_22769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffe00; valaddr_reg:x3; val_offset:68307*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68307*0 + 3*497*FLEN/8, x4, x1, x2)

inst_22770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fff00; valaddr_reg:x3; val_offset:68310*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68310*0 + 3*498*FLEN/8, x4, x1, x2)

inst_22771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fff80; valaddr_reg:x3; val_offset:68313*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68313*0 + 3*499*FLEN/8, x4, x1, x2)

inst_22772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fffc0; valaddr_reg:x3; val_offset:68316*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68316*0 + 3*500*FLEN/8, x4, x1, x2)

inst_22773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fffe0; valaddr_reg:x3; val_offset:68319*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68319*0 + 3*501*FLEN/8, x4, x1, x2)

inst_22774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffff0; valaddr_reg:x3; val_offset:68322*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68322*0 + 3*502*FLEN/8, x4, x1, x2)

inst_22775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffff8; valaddr_reg:x3; val_offset:68325*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68325*0 + 3*503*FLEN/8, x4, x1, x2)

inst_22776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffffc; valaddr_reg:x3; val_offset:68328*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68328*0 + 3*504*FLEN/8, x4, x1, x2)

inst_22777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7ffffe; valaddr_reg:x3; val_offset:68331*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68331*0 + 3*505*FLEN/8, x4, x1, x2)

inst_22778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6acc19 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeacc19; op2val:0x80000000;
op3val:0x8f7fffff; valaddr_reg:x3; val_offset:68334*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68334*0 + 3*506*FLEN/8, x4, x1, x2)

inst_22779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:68337*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68337*0 + 3*507*FLEN/8, x4, x1, x2)

inst_22780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:68340*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68340*0 + 3*508*FLEN/8, x4, x1, x2)

inst_22781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:68343*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68343*0 + 3*509*FLEN/8, x4, x1, x2)

inst_22782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:68346*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68346*0 + 3*510*FLEN/8, x4, x1, x2)

inst_22783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:68349*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68349*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_22784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:68352*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68352*0 + 3*512*FLEN/8, x4, x1, x2)

inst_22785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:68355*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68355*0 + 3*513*FLEN/8, x4, x1, x2)

inst_22786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:68358*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68358*0 + 3*514*FLEN/8, x4, x1, x2)

inst_22787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:68361*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68361*0 + 3*515*FLEN/8, x4, x1, x2)

inst_22788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:68364*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68364*0 + 3*516*FLEN/8, x4, x1, x2)

inst_22789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:68367*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68367*0 + 3*517*FLEN/8, x4, x1, x2)

inst_22790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:68370*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68370*0 + 3*518*FLEN/8, x4, x1, x2)

inst_22791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:68373*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68373*0 + 3*519*FLEN/8, x4, x1, x2)

inst_22792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:68376*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68376*0 + 3*520*FLEN/8, x4, x1, x2)

inst_22793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:68379*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68379*0 + 3*521*FLEN/8, x4, x1, x2)

inst_22794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:68382*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68382*0 + 3*522*FLEN/8, x4, x1, x2)

inst_22795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000000; valaddr_reg:x3; val_offset:68385*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68385*0 + 3*523*FLEN/8, x4, x1, x2)

inst_22796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000001; valaddr_reg:x3; val_offset:68388*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68388*0 + 3*524*FLEN/8, x4, x1, x2)

inst_22797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000003; valaddr_reg:x3; val_offset:68391*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68391*0 + 3*525*FLEN/8, x4, x1, x2)

inst_22798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000007; valaddr_reg:x3; val_offset:68394*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68394*0 + 3*526*FLEN/8, x4, x1, x2)

inst_22799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00000f; valaddr_reg:x3; val_offset:68397*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68397*0 + 3*527*FLEN/8, x4, x1, x2)

inst_22800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00001f; valaddr_reg:x3; val_offset:68400*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68400*0 + 3*528*FLEN/8, x4, x1, x2)

inst_22801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00003f; valaddr_reg:x3; val_offset:68403*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68403*0 + 3*529*FLEN/8, x4, x1, x2)

inst_22802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00007f; valaddr_reg:x3; val_offset:68406*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68406*0 + 3*530*FLEN/8, x4, x1, x2)

inst_22803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0000ff; valaddr_reg:x3; val_offset:68409*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68409*0 + 3*531*FLEN/8, x4, x1, x2)

inst_22804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0001ff; valaddr_reg:x3; val_offset:68412*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68412*0 + 3*532*FLEN/8, x4, x1, x2)

inst_22805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0003ff; valaddr_reg:x3; val_offset:68415*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68415*0 + 3*533*FLEN/8, x4, x1, x2)

inst_22806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0007ff; valaddr_reg:x3; val_offset:68418*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68418*0 + 3*534*FLEN/8, x4, x1, x2)

inst_22807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c000fff; valaddr_reg:x3; val_offset:68421*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68421*0 + 3*535*FLEN/8, x4, x1, x2)

inst_22808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c001fff; valaddr_reg:x3; val_offset:68424*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68424*0 + 3*536*FLEN/8, x4, x1, x2)

inst_22809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c003fff; valaddr_reg:x3; val_offset:68427*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68427*0 + 3*537*FLEN/8, x4, x1, x2)

inst_22810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c007fff; valaddr_reg:x3; val_offset:68430*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68430*0 + 3*538*FLEN/8, x4, x1, x2)

inst_22811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c00ffff; valaddr_reg:x3; val_offset:68433*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68433*0 + 3*539*FLEN/8, x4, x1, x2)

inst_22812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c01ffff; valaddr_reg:x3; val_offset:68436*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68436*0 + 3*540*FLEN/8, x4, x1, x2)

inst_22813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c03ffff; valaddr_reg:x3; val_offset:68439*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68439*0 + 3*541*FLEN/8, x4, x1, x2)

inst_22814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c07ffff; valaddr_reg:x3; val_offset:68442*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68442*0 + 3*542*FLEN/8, x4, x1, x2)

inst_22815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c0fffff; valaddr_reg:x3; val_offset:68445*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68445*0 + 3*543*FLEN/8, x4, x1, x2)

inst_22816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c1fffff; valaddr_reg:x3; val_offset:68448*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68448*0 + 3*544*FLEN/8, x4, x1, x2)

inst_22817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c3fffff; valaddr_reg:x3; val_offset:68451*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68451*0 + 3*545*FLEN/8, x4, x1, x2)

inst_22818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c400000; valaddr_reg:x3; val_offset:68454*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68454*0 + 3*546*FLEN/8, x4, x1, x2)

inst_22819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c600000; valaddr_reg:x3; val_offset:68457*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68457*0 + 3*547*FLEN/8, x4, x1, x2)

inst_22820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c700000; valaddr_reg:x3; val_offset:68460*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68460*0 + 3*548*FLEN/8, x4, x1, x2)

inst_22821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c780000; valaddr_reg:x3; val_offset:68463*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68463*0 + 3*549*FLEN/8, x4, x1, x2)

inst_22822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7c0000; valaddr_reg:x3; val_offset:68466*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68466*0 + 3*550*FLEN/8, x4, x1, x2)

inst_22823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7e0000; valaddr_reg:x3; val_offset:68469*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68469*0 + 3*551*FLEN/8, x4, x1, x2)

inst_22824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7f0000; valaddr_reg:x3; val_offset:68472*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68472*0 + 3*552*FLEN/8, x4, x1, x2)

inst_22825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7f8000; valaddr_reg:x3; val_offset:68475*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68475*0 + 3*553*FLEN/8, x4, x1, x2)

inst_22826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fc000; valaddr_reg:x3; val_offset:68478*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68478*0 + 3*554*FLEN/8, x4, x1, x2)

inst_22827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fe000; valaddr_reg:x3; val_offset:68481*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68481*0 + 3*555*FLEN/8, x4, x1, x2)

inst_22828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ff000; valaddr_reg:x3; val_offset:68484*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68484*0 + 3*556*FLEN/8, x4, x1, x2)

inst_22829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ff800; valaddr_reg:x3; val_offset:68487*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68487*0 + 3*557*FLEN/8, x4, x1, x2)

inst_22830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffc00; valaddr_reg:x3; val_offset:68490*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68490*0 + 3*558*FLEN/8, x4, x1, x2)

inst_22831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffe00; valaddr_reg:x3; val_offset:68493*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68493*0 + 3*559*FLEN/8, x4, x1, x2)

inst_22832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fff00; valaddr_reg:x3; val_offset:68496*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68496*0 + 3*560*FLEN/8, x4, x1, x2)

inst_22833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fff80; valaddr_reg:x3; val_offset:68499*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68499*0 + 3*561*FLEN/8, x4, x1, x2)

inst_22834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fffc0; valaddr_reg:x3; val_offset:68502*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68502*0 + 3*562*FLEN/8, x4, x1, x2)

inst_22835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fffe0; valaddr_reg:x3; val_offset:68505*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68505*0 + 3*563*FLEN/8, x4, x1, x2)

inst_22836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffff0; valaddr_reg:x3; val_offset:68508*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68508*0 + 3*564*FLEN/8, x4, x1, x2)

inst_22837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffff8; valaddr_reg:x3; val_offset:68511*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68511*0 + 3*565*FLEN/8, x4, x1, x2)

inst_22838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffffc; valaddr_reg:x3; val_offset:68514*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68514*0 + 3*566*FLEN/8, x4, x1, x2)

inst_22839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7ffffe; valaddr_reg:x3; val_offset:68517*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68517*0 + 3*567*FLEN/8, x4, x1, x2)

inst_22840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6afac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeafac2; op2val:0x80000000;
op3val:0x8c7fffff; valaddr_reg:x3; val_offset:68520*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68520*0 + 3*568*FLEN/8, x4, x1, x2)

inst_22841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:68523*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68523*0 + 3*569*FLEN/8, x4, x1, x2)

inst_22842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:68526*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68526*0 + 3*570*FLEN/8, x4, x1, x2)

inst_22843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:68529*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68529*0 + 3*571*FLEN/8, x4, x1, x2)

inst_22844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:68532*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68532*0 + 3*572*FLEN/8, x4, x1, x2)

inst_22845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:68535*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68535*0 + 3*573*FLEN/8, x4, x1, x2)

inst_22846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:68538*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68538*0 + 3*574*FLEN/8, x4, x1, x2)

inst_22847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:68541*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68541*0 + 3*575*FLEN/8, x4, x1, x2)

inst_22848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:68544*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68544*0 + 3*576*FLEN/8, x4, x1, x2)

inst_22849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:68547*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68547*0 + 3*577*FLEN/8, x4, x1, x2)

inst_22850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:68550*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68550*0 + 3*578*FLEN/8, x4, x1, x2)

inst_22851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:68553*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68553*0 + 3*579*FLEN/8, x4, x1, x2)

inst_22852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:68556*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68556*0 + 3*580*FLEN/8, x4, x1, x2)

inst_22853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:68559*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68559*0 + 3*581*FLEN/8, x4, x1, x2)

inst_22854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:68562*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68562*0 + 3*582*FLEN/8, x4, x1, x2)

inst_22855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:68565*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68565*0 + 3*583*FLEN/8, x4, x1, x2)

inst_22856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:68568*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68568*0 + 3*584*FLEN/8, x4, x1, x2)

inst_22857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800000; valaddr_reg:x3; val_offset:68571*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68571*0 + 3*585*FLEN/8, x4, x1, x2)

inst_22858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800001; valaddr_reg:x3; val_offset:68574*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68574*0 + 3*586*FLEN/8, x4, x1, x2)

inst_22859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800003; valaddr_reg:x3; val_offset:68577*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68577*0 + 3*587*FLEN/8, x4, x1, x2)

inst_22860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800007; valaddr_reg:x3; val_offset:68580*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68580*0 + 3*588*FLEN/8, x4, x1, x2)

inst_22861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480000f; valaddr_reg:x3; val_offset:68583*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68583*0 + 3*589*FLEN/8, x4, x1, x2)

inst_22862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480001f; valaddr_reg:x3; val_offset:68586*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68586*0 + 3*590*FLEN/8, x4, x1, x2)

inst_22863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480003f; valaddr_reg:x3; val_offset:68589*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68589*0 + 3*591*FLEN/8, x4, x1, x2)

inst_22864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480007f; valaddr_reg:x3; val_offset:68592*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68592*0 + 3*592*FLEN/8, x4, x1, x2)

inst_22865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48000ff; valaddr_reg:x3; val_offset:68595*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68595*0 + 3*593*FLEN/8, x4, x1, x2)

inst_22866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48001ff; valaddr_reg:x3; val_offset:68598*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68598*0 + 3*594*FLEN/8, x4, x1, x2)

inst_22867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48003ff; valaddr_reg:x3; val_offset:68601*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68601*0 + 3*595*FLEN/8, x4, x1, x2)

inst_22868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48007ff; valaddr_reg:x3; val_offset:68604*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68604*0 + 3*596*FLEN/8, x4, x1, x2)

inst_22869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4800fff; valaddr_reg:x3; val_offset:68607*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68607*0 + 3*597*FLEN/8, x4, x1, x2)

inst_22870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4801fff; valaddr_reg:x3; val_offset:68610*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68610*0 + 3*598*FLEN/8, x4, x1, x2)

inst_22871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4803fff; valaddr_reg:x3; val_offset:68613*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68613*0 + 3*599*FLEN/8, x4, x1, x2)

inst_22872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4807fff; valaddr_reg:x3; val_offset:68616*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68616*0 + 3*600*FLEN/8, x4, x1, x2)

inst_22873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x480ffff; valaddr_reg:x3; val_offset:68619*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68619*0 + 3*601*FLEN/8, x4, x1, x2)

inst_22874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x481ffff; valaddr_reg:x3; val_offset:68622*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68622*0 + 3*602*FLEN/8, x4, x1, x2)

inst_22875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x483ffff; valaddr_reg:x3; val_offset:68625*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68625*0 + 3*603*FLEN/8, x4, x1, x2)

inst_22876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x487ffff; valaddr_reg:x3; val_offset:68628*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68628*0 + 3*604*FLEN/8, x4, x1, x2)

inst_22877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x48fffff; valaddr_reg:x3; val_offset:68631*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68631*0 + 3*605*FLEN/8, x4, x1, x2)

inst_22878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x49fffff; valaddr_reg:x3; val_offset:68634*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68634*0 + 3*606*FLEN/8, x4, x1, x2)

inst_22879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4bfffff; valaddr_reg:x3; val_offset:68637*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68637*0 + 3*607*FLEN/8, x4, x1, x2)

inst_22880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4c00000; valaddr_reg:x3; val_offset:68640*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68640*0 + 3*608*FLEN/8, x4, x1, x2)

inst_22881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4e00000; valaddr_reg:x3; val_offset:68643*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68643*0 + 3*609*FLEN/8, x4, x1, x2)

inst_22882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4f00000; valaddr_reg:x3; val_offset:68646*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68646*0 + 3*610*FLEN/8, x4, x1, x2)

inst_22883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4f80000; valaddr_reg:x3; val_offset:68649*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68649*0 + 3*611*FLEN/8, x4, x1, x2)

inst_22884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fc0000; valaddr_reg:x3; val_offset:68652*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68652*0 + 3*612*FLEN/8, x4, x1, x2)

inst_22885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fe0000; valaddr_reg:x3; val_offset:68655*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68655*0 + 3*613*FLEN/8, x4, x1, x2)

inst_22886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ff0000; valaddr_reg:x3; val_offset:68658*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68658*0 + 3*614*FLEN/8, x4, x1, x2)

inst_22887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ff8000; valaddr_reg:x3; val_offset:68661*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68661*0 + 3*615*FLEN/8, x4, x1, x2)

inst_22888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffc000; valaddr_reg:x3; val_offset:68664*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68664*0 + 3*616*FLEN/8, x4, x1, x2)

inst_22889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffe000; valaddr_reg:x3; val_offset:68667*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68667*0 + 3*617*FLEN/8, x4, x1, x2)

inst_22890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fff000; valaddr_reg:x3; val_offset:68670*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68670*0 + 3*618*FLEN/8, x4, x1, x2)

inst_22891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fff800; valaddr_reg:x3; val_offset:68673*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68673*0 + 3*619*FLEN/8, x4, x1, x2)

inst_22892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffc00; valaddr_reg:x3; val_offset:68676*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68676*0 + 3*620*FLEN/8, x4, x1, x2)

inst_22893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffe00; valaddr_reg:x3; val_offset:68679*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68679*0 + 3*621*FLEN/8, x4, x1, x2)

inst_22894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffff00; valaddr_reg:x3; val_offset:68682*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68682*0 + 3*622*FLEN/8, x4, x1, x2)

inst_22895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffff80; valaddr_reg:x3; val_offset:68685*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68685*0 + 3*623*FLEN/8, x4, x1, x2)

inst_22896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffffc0; valaddr_reg:x3; val_offset:68688*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68688*0 + 3*624*FLEN/8, x4, x1, x2)

inst_22897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffffe0; valaddr_reg:x3; val_offset:68691*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68691*0 + 3*625*FLEN/8, x4, x1, x2)

inst_22898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffff0; valaddr_reg:x3; val_offset:68694*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68694*0 + 3*626*FLEN/8, x4, x1, x2)

inst_22899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffff8; valaddr_reg:x3; val_offset:68697*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68697*0 + 3*627*FLEN/8, x4, x1, x2)

inst_22900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffffc; valaddr_reg:x3; val_offset:68700*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68700*0 + 3*628*FLEN/8, x4, x1, x2)

inst_22901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4fffffe; valaddr_reg:x3; val_offset:68703*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68703*0 + 3*629*FLEN/8, x4, x1, x2)

inst_22902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b93e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb93e8; op2val:0x0;
op3val:0x4ffffff; valaddr_reg:x3; val_offset:68706*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68706*0 + 3*630*FLEN/8, x4, x1, x2)

inst_22903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3000000; valaddr_reg:x3; val_offset:68709*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68709*0 + 3*631*FLEN/8, x4, x1, x2)

inst_22904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3000001; valaddr_reg:x3; val_offset:68712*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68712*0 + 3*632*FLEN/8, x4, x1, x2)

inst_22905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3000003; valaddr_reg:x3; val_offset:68715*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68715*0 + 3*633*FLEN/8, x4, x1, x2)

inst_22906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3000007; valaddr_reg:x3; val_offset:68718*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68718*0 + 3*634*FLEN/8, x4, x1, x2)

inst_22907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb300000f; valaddr_reg:x3; val_offset:68721*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68721*0 + 3*635*FLEN/8, x4, x1, x2)

inst_22908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb300001f; valaddr_reg:x3; val_offset:68724*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68724*0 + 3*636*FLEN/8, x4, x1, x2)

inst_22909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb300003f; valaddr_reg:x3; val_offset:68727*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68727*0 + 3*637*FLEN/8, x4, x1, x2)

inst_22910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb300007f; valaddr_reg:x3; val_offset:68730*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68730*0 + 3*638*FLEN/8, x4, x1, x2)

inst_22911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb30000ff; valaddr_reg:x3; val_offset:68733*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68733*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_22912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb30001ff; valaddr_reg:x3; val_offset:68736*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68736*0 + 3*640*FLEN/8, x4, x1, x2)

inst_22913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb30003ff; valaddr_reg:x3; val_offset:68739*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68739*0 + 3*641*FLEN/8, x4, x1, x2)

inst_22914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb30007ff; valaddr_reg:x3; val_offset:68742*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68742*0 + 3*642*FLEN/8, x4, x1, x2)

inst_22915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3000fff; valaddr_reg:x3; val_offset:68745*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68745*0 + 3*643*FLEN/8, x4, x1, x2)

inst_22916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3001fff; valaddr_reg:x3; val_offset:68748*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68748*0 + 3*644*FLEN/8, x4, x1, x2)

inst_22917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3003fff; valaddr_reg:x3; val_offset:68751*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68751*0 + 3*645*FLEN/8, x4, x1, x2)

inst_22918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3007fff; valaddr_reg:x3; val_offset:68754*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68754*0 + 3*646*FLEN/8, x4, x1, x2)

inst_22919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb300ffff; valaddr_reg:x3; val_offset:68757*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68757*0 + 3*647*FLEN/8, x4, x1, x2)

inst_22920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb301ffff; valaddr_reg:x3; val_offset:68760*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68760*0 + 3*648*FLEN/8, x4, x1, x2)

inst_22921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb303ffff; valaddr_reg:x3; val_offset:68763*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68763*0 + 3*649*FLEN/8, x4, x1, x2)

inst_22922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb307ffff; valaddr_reg:x3; val_offset:68766*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68766*0 + 3*650*FLEN/8, x4, x1, x2)

inst_22923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb30fffff; valaddr_reg:x3; val_offset:68769*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68769*0 + 3*651*FLEN/8, x4, x1, x2)

inst_22924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb31fffff; valaddr_reg:x3; val_offset:68772*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68772*0 + 3*652*FLEN/8, x4, x1, x2)

inst_22925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb33fffff; valaddr_reg:x3; val_offset:68775*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68775*0 + 3*653*FLEN/8, x4, x1, x2)

inst_22926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3400000; valaddr_reg:x3; val_offset:68778*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68778*0 + 3*654*FLEN/8, x4, x1, x2)

inst_22927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3600000; valaddr_reg:x3; val_offset:68781*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68781*0 + 3*655*FLEN/8, x4, x1, x2)

inst_22928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3700000; valaddr_reg:x3; val_offset:68784*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68784*0 + 3*656*FLEN/8, x4, x1, x2)

inst_22929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb3780000; valaddr_reg:x3; val_offset:68787*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68787*0 + 3*657*FLEN/8, x4, x1, x2)

inst_22930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37c0000; valaddr_reg:x3; val_offset:68790*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68790*0 + 3*658*FLEN/8, x4, x1, x2)

inst_22931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37e0000; valaddr_reg:x3; val_offset:68793*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68793*0 + 3*659*FLEN/8, x4, x1, x2)

inst_22932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37f0000; valaddr_reg:x3; val_offset:68796*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68796*0 + 3*660*FLEN/8, x4, x1, x2)

inst_22933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37f8000; valaddr_reg:x3; val_offset:68799*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68799*0 + 3*661*FLEN/8, x4, x1, x2)

inst_22934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37fc000; valaddr_reg:x3; val_offset:68802*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68802*0 + 3*662*FLEN/8, x4, x1, x2)

inst_22935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37fe000; valaddr_reg:x3; val_offset:68805*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68805*0 + 3*663*FLEN/8, x4, x1, x2)

inst_22936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37ff000; valaddr_reg:x3; val_offset:68808*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68808*0 + 3*664*FLEN/8, x4, x1, x2)

inst_22937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37ff800; valaddr_reg:x3; val_offset:68811*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68811*0 + 3*665*FLEN/8, x4, x1, x2)

inst_22938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37ffc00; valaddr_reg:x3; val_offset:68814*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68814*0 + 3*666*FLEN/8, x4, x1, x2)

inst_22939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37ffe00; valaddr_reg:x3; val_offset:68817*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68817*0 + 3*667*FLEN/8, x4, x1, x2)

inst_22940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37fff00; valaddr_reg:x3; val_offset:68820*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68820*0 + 3*668*FLEN/8, x4, x1, x2)

inst_22941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37fff80; valaddr_reg:x3; val_offset:68823*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68823*0 + 3*669*FLEN/8, x4, x1, x2)

inst_22942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37fffc0; valaddr_reg:x3; val_offset:68826*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68826*0 + 3*670*FLEN/8, x4, x1, x2)

inst_22943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37fffe0; valaddr_reg:x3; val_offset:68829*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68829*0 + 3*671*FLEN/8, x4, x1, x2)

inst_22944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37ffff0; valaddr_reg:x3; val_offset:68832*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68832*0 + 3*672*FLEN/8, x4, x1, x2)

inst_22945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37ffff8; valaddr_reg:x3; val_offset:68835*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68835*0 + 3*673*FLEN/8, x4, x1, x2)

inst_22946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37ffffc; valaddr_reg:x3; val_offset:68838*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68838*0 + 3*674*FLEN/8, x4, x1, x2)

inst_22947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37ffffe; valaddr_reg:x3; val_offset:68841*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68841*0 + 3*675*FLEN/8, x4, x1, x2)

inst_22948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xb37fffff; valaddr_reg:x3; val_offset:68844*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68844*0 + 3*676*FLEN/8, x4, x1, x2)

inst_22949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbf800001; valaddr_reg:x3; val_offset:68847*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68847*0 + 3*677*FLEN/8, x4, x1, x2)

inst_22950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbf800003; valaddr_reg:x3; val_offset:68850*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68850*0 + 3*678*FLEN/8, x4, x1, x2)

inst_22951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbf800007; valaddr_reg:x3; val_offset:68853*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68853*0 + 3*679*FLEN/8, x4, x1, x2)

inst_22952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbf999999; valaddr_reg:x3; val_offset:68856*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68856*0 + 3*680*FLEN/8, x4, x1, x2)

inst_22953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:68859*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68859*0 + 3*681*FLEN/8, x4, x1, x2)

inst_22954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:68862*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68862*0 + 3*682*FLEN/8, x4, x1, x2)

inst_22955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:68865*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68865*0 + 3*683*FLEN/8, x4, x1, x2)

inst_22956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:68868*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68868*0 + 3*684*FLEN/8, x4, x1, x2)

inst_22957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:68871*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68871*0 + 3*685*FLEN/8, x4, x1, x2)

inst_22958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:68874*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68874*0 + 3*686*FLEN/8, x4, x1, x2)

inst_22959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:68877*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68877*0 + 3*687*FLEN/8, x4, x1, x2)

inst_22960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:68880*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68880*0 + 3*688*FLEN/8, x4, x1, x2)

inst_22961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:68883*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68883*0 + 3*689*FLEN/8, x4, x1, x2)

inst_22962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:68886*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68886*0 + 3*690*FLEN/8, x4, x1, x2)

inst_22963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:68889*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68889*0 + 3*691*FLEN/8, x4, x1, x2)

inst_22964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9b11 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x458a37 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb9b11; op2val:0x80458a37;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:68892*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68892*0 + 3*692*FLEN/8, x4, x1, x2)

inst_22965:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f000000; valaddr_reg:x3; val_offset:68895*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68895*0 + 3*693*FLEN/8, x4, x1, x2)

inst_22966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f000001; valaddr_reg:x3; val_offset:68898*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68898*0 + 3*694*FLEN/8, x4, x1, x2)

inst_22967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f000003; valaddr_reg:x3; val_offset:68901*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68901*0 + 3*695*FLEN/8, x4, x1, x2)

inst_22968:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f000007; valaddr_reg:x3; val_offset:68904*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68904*0 + 3*696*FLEN/8, x4, x1, x2)

inst_22969:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f00000f; valaddr_reg:x3; val_offset:68907*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68907*0 + 3*697*FLEN/8, x4, x1, x2)

inst_22970:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f00001f; valaddr_reg:x3; val_offset:68910*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68910*0 + 3*698*FLEN/8, x4, x1, x2)

inst_22971:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f00003f; valaddr_reg:x3; val_offset:68913*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68913*0 + 3*699*FLEN/8, x4, x1, x2)

inst_22972:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f00007f; valaddr_reg:x3; val_offset:68916*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68916*0 + 3*700*FLEN/8, x4, x1, x2)

inst_22973:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f0000ff; valaddr_reg:x3; val_offset:68919*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68919*0 + 3*701*FLEN/8, x4, x1, x2)

inst_22974:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f0001ff; valaddr_reg:x3; val_offset:68922*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68922*0 + 3*702*FLEN/8, x4, x1, x2)

inst_22975:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f0003ff; valaddr_reg:x3; val_offset:68925*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68925*0 + 3*703*FLEN/8, x4, x1, x2)

inst_22976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f0007ff; valaddr_reg:x3; val_offset:68928*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68928*0 + 3*704*FLEN/8, x4, x1, x2)

inst_22977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f000fff; valaddr_reg:x3; val_offset:68931*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68931*0 + 3*705*FLEN/8, x4, x1, x2)

inst_22978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f001fff; valaddr_reg:x3; val_offset:68934*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68934*0 + 3*706*FLEN/8, x4, x1, x2)

inst_22979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f003fff; valaddr_reg:x3; val_offset:68937*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68937*0 + 3*707*FLEN/8, x4, x1, x2)

inst_22980:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f007fff; valaddr_reg:x3; val_offset:68940*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68940*0 + 3*708*FLEN/8, x4, x1, x2)

inst_22981:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f00ffff; valaddr_reg:x3; val_offset:68943*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68943*0 + 3*709*FLEN/8, x4, x1, x2)

inst_22982:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f01ffff; valaddr_reg:x3; val_offset:68946*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68946*0 + 3*710*FLEN/8, x4, x1, x2)

inst_22983:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f03ffff; valaddr_reg:x3; val_offset:68949*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68949*0 + 3*711*FLEN/8, x4, x1, x2)

inst_22984:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f07ffff; valaddr_reg:x3; val_offset:68952*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68952*0 + 3*712*FLEN/8, x4, x1, x2)

inst_22985:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f0fffff; valaddr_reg:x3; val_offset:68955*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68955*0 + 3*713*FLEN/8, x4, x1, x2)

inst_22986:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f1fffff; valaddr_reg:x3; val_offset:68958*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68958*0 + 3*714*FLEN/8, x4, x1, x2)

inst_22987:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f3fffff; valaddr_reg:x3; val_offset:68961*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68961*0 + 3*715*FLEN/8, x4, x1, x2)

inst_22988:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f400000; valaddr_reg:x3; val_offset:68964*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68964*0 + 3*716*FLEN/8, x4, x1, x2)

inst_22989:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f600000; valaddr_reg:x3; val_offset:68967*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68967*0 + 3*717*FLEN/8, x4, x1, x2)

inst_22990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f700000; valaddr_reg:x3; val_offset:68970*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68970*0 + 3*718*FLEN/8, x4, x1, x2)

inst_22991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f780000; valaddr_reg:x3; val_offset:68973*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68973*0 + 3*719*FLEN/8, x4, x1, x2)

inst_22992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7c0000; valaddr_reg:x3; val_offset:68976*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68976*0 + 3*720*FLEN/8, x4, x1, x2)

inst_22993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7e0000; valaddr_reg:x3; val_offset:68979*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68979*0 + 3*721*FLEN/8, x4, x1, x2)

inst_22994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7f0000; valaddr_reg:x3; val_offset:68982*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68982*0 + 3*722*FLEN/8, x4, x1, x2)

inst_22995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7f8000; valaddr_reg:x3; val_offset:68985*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68985*0 + 3*723*FLEN/8, x4, x1, x2)

inst_22996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7fc000; valaddr_reg:x3; val_offset:68988*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68988*0 + 3*724*FLEN/8, x4, x1, x2)

inst_22997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7fe000; valaddr_reg:x3; val_offset:68991*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68991*0 + 3*725*FLEN/8, x4, x1, x2)

inst_22998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7ff000; valaddr_reg:x3; val_offset:68994*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68994*0 + 3*726*FLEN/8, x4, x1, x2)

inst_22999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7ff800; valaddr_reg:x3; val_offset:68997*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 68997*0 + 3*727*FLEN/8, x4, x1, x2)

inst_23000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7ffc00; valaddr_reg:x3; val_offset:69000*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69000*0 + 3*728*FLEN/8, x4, x1, x2)

inst_23001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7ffe00; valaddr_reg:x3; val_offset:69003*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69003*0 + 3*729*FLEN/8, x4, x1, x2)

inst_23002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7fff00; valaddr_reg:x3; val_offset:69006*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69006*0 + 3*730*FLEN/8, x4, x1, x2)

inst_23003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7fff80; valaddr_reg:x3; val_offset:69009*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69009*0 + 3*731*FLEN/8, x4, x1, x2)

inst_23004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7fffc0; valaddr_reg:x3; val_offset:69012*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69012*0 + 3*732*FLEN/8, x4, x1, x2)

inst_23005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7fffe0; valaddr_reg:x3; val_offset:69015*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69015*0 + 3*733*FLEN/8, x4, x1, x2)

inst_23006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7ffff0; valaddr_reg:x3; val_offset:69018*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69018*0 + 3*734*FLEN/8, x4, x1, x2)

inst_23007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7ffff8; valaddr_reg:x3; val_offset:69021*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69021*0 + 3*735*FLEN/8, x4, x1, x2)

inst_23008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7ffffc; valaddr_reg:x3; val_offset:69024*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69024*0 + 3*736*FLEN/8, x4, x1, x2)

inst_23009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7ffffe; valaddr_reg:x3; val_offset:69027*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69027*0 + 3*737*FLEN/8, x4, x1, x2)

inst_23010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x3e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x1f7fffff; valaddr_reg:x3; val_offset:69030*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69030*0 + 3*738*FLEN/8, x4, x1, x2)

inst_23011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3f800001; valaddr_reg:x3; val_offset:69033*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69033*0 + 3*739*FLEN/8, x4, x1, x2)

inst_23012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3f800003; valaddr_reg:x3; val_offset:69036*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69036*0 + 3*740*FLEN/8, x4, x1, x2)

inst_23013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3f800007; valaddr_reg:x3; val_offset:69039*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69039*0 + 3*741*FLEN/8, x4, x1, x2)

inst_23014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3f999999; valaddr_reg:x3; val_offset:69042*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69042*0 + 3*742*FLEN/8, x4, x1, x2)

inst_23015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:69045*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69045*0 + 3*743*FLEN/8, x4, x1, x2)

inst_23016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:69048*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69048*0 + 3*744*FLEN/8, x4, x1, x2)

inst_23017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:69051*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69051*0 + 3*745*FLEN/8, x4, x1, x2)

inst_23018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:69054*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69054*0 + 3*746*FLEN/8, x4, x1, x2)

inst_23019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:69057*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69057*0 + 3*747*FLEN/8, x4, x1, x2)

inst_23020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:69060*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69060*0 + 3*748*FLEN/8, x4, x1, x2)

inst_23021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:69063*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69063*0 + 3*749*FLEN/8, x4, x1, x2)

inst_23022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:69066*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69066*0 + 3*750*FLEN/8, x4, x1, x2)

inst_23023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:69069*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69069*0 + 3*751*FLEN/8, x4, x1, x2)

inst_23024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:69072*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69072*0 + 3*752*FLEN/8, x4, x1, x2)

inst_23025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:69075*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69075*0 + 3*753*FLEN/8, x4, x1, x2)

inst_23026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7868 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x45491f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eec7868; op2val:0x45491f;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:69078*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69078*0 + 3*754*FLEN/8, x4, x1, x2)

inst_23027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:69081*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69081*0 + 3*755*FLEN/8, x4, x1, x2)

inst_23028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:69084*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69084*0 + 3*756*FLEN/8, x4, x1, x2)

inst_23029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:69087*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69087*0 + 3*757*FLEN/8, x4, x1, x2)

inst_23030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:69090*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69090*0 + 3*758*FLEN/8, x4, x1, x2)

inst_23031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:69093*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69093*0 + 3*759*FLEN/8, x4, x1, x2)

inst_23032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:69096*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69096*0 + 3*760*FLEN/8, x4, x1, x2)

inst_23033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:69099*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69099*0 + 3*761*FLEN/8, x4, x1, x2)

inst_23034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:69102*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69102*0 + 3*762*FLEN/8, x4, x1, x2)

inst_23035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:69105*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69105*0 + 3*763*FLEN/8, x4, x1, x2)

inst_23036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:69108*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69108*0 + 3*764*FLEN/8, x4, x1, x2)

inst_23037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:69111*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69111*0 + 3*765*FLEN/8, x4, x1, x2)

inst_23038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:69114*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69114*0 + 3*766*FLEN/8, x4, x1, x2)

inst_23039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6cad48 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eecad48; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:69117*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 69117*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159382528,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383040,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383296,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383424,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383488,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383520,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383536,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383544,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383548,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383550,32,FLEN)
NAN_BOXED(2128907012,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383551,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500160,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500161,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500163,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500167,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500175,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500191,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500223,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500287,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500415,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313500671,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313501183,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313502207,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313504255,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313508351,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313516543,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313532927,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313565695,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313631231,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3313762303,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3314024447,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3314548735,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3315597311,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3317694463,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3317694464,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3319791616,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3320840192,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321364480,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321626624,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321757696,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321823232,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321856000,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321872384,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321880576,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321884672,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321886720,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321887744,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888256,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888512,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888640,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888704,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888736,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888752,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888760,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888764,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888766,32,FLEN)
NAN_BOXED(2128942030,32,FLEN)
NAN_BOXED(2152170893,32,FLEN)
NAN_BOXED(3321888767,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110208,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110209,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110211,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110215,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110223,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110239,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110271,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110335,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110463,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686110719,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686111231,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686112255,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686114303,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686118399,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686126591,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686142975,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686175743,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686241279,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686372351,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1686634495,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1687158783,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1688207359,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1690304511,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1690304512,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1692401664,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1693450240,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1693974528,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694236672,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694367744,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694433280,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694466048,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694482432,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694490624,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694494720,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694496768,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694497792,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498304,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498560,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498688,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498752,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498784,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498800,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498808,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498812,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498814,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(1694498815,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2128966702,32,FLEN)
NAN_BOXED(1074712325,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917479936,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917479937,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917479939,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917479943,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917479951,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917479967,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917479999,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917480063,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917480191,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917480447,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917480959,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917481983,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917484031,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917488127,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917496319,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917512703,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917545471,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917611007,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3917742079,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3918004223,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3918528511,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3919577087,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3921674239,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3921674240,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3923771392,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3924819968,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925344256,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925606400,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925737472,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925803008,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925835776,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925852160,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925860352,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925864448,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925866496,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925867520,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868032,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868288,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868416,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868480,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868512,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868528,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868536,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868540,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868542,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(3925868543,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2129077921,32,FLEN)
NAN_BOXED(3222127260,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301312,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301313,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301315,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301319,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301327,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301343,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301375,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301439,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301567,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956301823,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956302335,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956303359,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956305407,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956309503,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956317695,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956334079,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956366847,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956432383,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956563455,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(956825599,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(957349887,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(958398463,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(960495615,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(960495616,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(962592768,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(963641344,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964165632,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964427776,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964558848,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964624384,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964657152,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964673536,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964681728,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964685824,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964687872,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964688896,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689408,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689664,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689792,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689856,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689888,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689904,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689912,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689916,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689918,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(964689919,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2129158462,32,FLEN)
NAN_BOXED(4620631,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943040,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943041,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943043,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943047,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943055,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943071,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943103,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943167,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943295,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943551,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41944063,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41945087,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41947135,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41951231,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41959423,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41975807,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42008575,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42074111,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42205183,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42467327,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42991615,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(44040191,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(46137343,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(46137344,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(48234496,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(49283072,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(49807360,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50069504,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50200576,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50266112,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50298880,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50315264,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50323456,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50327552,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50329600,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50330624,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331136,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331392,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331520,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331584,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331616,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331632,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331640,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331644,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331646,32,FLEN)
NAN_BOXED(2129178299,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331647,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331648,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331649,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331651,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331655,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331663,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331679,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331711,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331775,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331903,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50332159,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50332671,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50333695,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50335743,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50339839,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50348031,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50364415,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50397183,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50462719,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50593791,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50855935,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(51380223,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(52428799,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(54525951,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(54525952,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(56623104,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(57671680,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58195968,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58458112,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58589184,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58654720,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58687488,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58703872,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58712064,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58716160,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58718208,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58719232,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58719744,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720000,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720128,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720192,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720224,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720240,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720248,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720252,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720254,32,FLEN)
NAN_BOXED(2129199881,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58720255,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001344,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001345,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001347,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001351,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001359,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001375,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001407,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001471,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001599,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619001855,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619002367,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619003391,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619005439,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619009535,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619017727,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619034111,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619066879,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619132415,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619263487,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1619525631,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1620049919,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1621098495,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1623195647,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1623195648,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1625292800,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1626341376,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1626865664,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627127808,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627258880,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627324416,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627357184,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627373568,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627381760,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627385856,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627387904,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627388928,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389440,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389696,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389824,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389888,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389920,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389936,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389944,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389948,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389950,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(1627389951,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2129289832,32,FLEN)
NAN_BOXED(1074515444,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141888,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141889,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141891,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141895,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141903,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141919,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141951,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142015,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142143,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142399,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142911,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399143935,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399145983,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399150079,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399158271,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399174655,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399207423,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399272959,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399404031,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399666175,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2400190463,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2401239039,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336191,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336192,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2405433344,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2406481920,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407006208,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407268352,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407399424,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407464960,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407497728,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407514112,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407522304,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407526400,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407528448,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529472,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529984,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530240,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530368,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530432,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530464,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530480,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530488,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530492,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530494,32,FLEN)
NAN_BOXED(2129316889,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530495,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810240,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810241,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810243,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810247,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810255,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810271,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810303,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810367,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810495,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810751,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348811263,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348812287,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348814335,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348818431,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348826623,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348843007,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348875775,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348941311,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349072383,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349334527,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349858815,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2350907391,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2353004543,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2353004544,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2355101696,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356150272,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356674560,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356936704,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357067776,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357133312,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357166080,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357182464,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357190656,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357194752,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357196800,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357197824,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198336,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198592,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198720,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198784,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198816,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198832,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198840,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198844,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198846,32,FLEN)
NAN_BOXED(2129328834,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198847,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497472,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497473,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497475,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497479,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497487,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497503,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497535,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497599,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497727,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497983,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75498495,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75499519,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75501567,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75505663,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75513855,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75530239,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75563007,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75628543,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75759615,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(76021759,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(76546047,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(77594623,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(79691775,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(79691776,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(81788928,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(82837504,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83361792,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83623936,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83755008,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83820544,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83853312,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83869696,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83877888,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83881984,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83884032,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885056,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885568,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885824,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885952,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886016,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886048,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886064,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886072,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886076,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886078,32,FLEN)
NAN_BOXED(2129368040,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886079,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121664,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121665,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121667,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121671,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121679,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121695,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121727,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121791,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003121919,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003122175,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003122687,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003123711,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003125759,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003129855,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003138047,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003154431,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003187199,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003252735,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003383807,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3003645951,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3004170239,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3005218815,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3007315967,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3007315968,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3009413120,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3010461696,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3010985984,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011248128,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011379200,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011444736,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011477504,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011493888,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011502080,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011506176,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011508224,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011509248,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011509760,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011510016,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011510144,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011510208,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011510240,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011510256,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011510264,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011510268,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011510270,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3011510271,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2129369873,32,FLEN)
NAN_BOXED(2152041015,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520093696,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520093697,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520093699,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520093703,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520093711,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520093727,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520093759,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520093823,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520093951,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520094207,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520094719,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520095743,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520097791,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520101887,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520110079,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520126463,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520159231,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520224767,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520355839,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(520617983,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(521142271,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(522190847,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(524287999,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(524288000,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(526385152,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(527433728,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(527958016,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528220160,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528351232,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528416768,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528449536,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528465920,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528474112,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528478208,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528480256,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528481280,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528481792,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528482048,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528482176,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528482240,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528482272,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528482288,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528482296,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528482300,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528482302,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(528482303,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2129426536,32,FLEN)
NAN_BOXED(4540703,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2129440072,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
