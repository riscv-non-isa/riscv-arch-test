
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_32256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x236174 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f236174; op2val:0x80000000;
op3val:0x867fff80; valaddr_reg:x3; val_offset:96768*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96768*0 + 3*0*FLEN/8, x4, x1, x2)

inst_32257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x236174 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f236174; op2val:0x80000000;
op3val:0x867fffc0; valaddr_reg:x3; val_offset:96771*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96771*0 + 3*1*FLEN/8, x4, x1, x2)

inst_32258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x236174 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f236174; op2val:0x80000000;
op3val:0x867fffe0; valaddr_reg:x3; val_offset:96774*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96774*0 + 3*2*FLEN/8, x4, x1, x2)

inst_32259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x236174 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f236174; op2val:0x80000000;
op3val:0x867ffff0; valaddr_reg:x3; val_offset:96777*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96777*0 + 3*3*FLEN/8, x4, x1, x2)

inst_32260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x236174 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f236174; op2val:0x80000000;
op3val:0x867ffff8; valaddr_reg:x3; val_offset:96780*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96780*0 + 3*4*FLEN/8, x4, x1, x2)

inst_32261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x236174 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f236174; op2val:0x80000000;
op3val:0x867ffffc; valaddr_reg:x3; val_offset:96783*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96783*0 + 3*5*FLEN/8, x4, x1, x2)

inst_32262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x236174 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f236174; op2val:0x80000000;
op3val:0x867ffffe; valaddr_reg:x3; val_offset:96786*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96786*0 + 3*6*FLEN/8, x4, x1, x2)

inst_32263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x236174 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f236174; op2val:0x80000000;
op3val:0x867fffff; valaddr_reg:x3; val_offset:96789*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96789*0 + 3*7*FLEN/8, x4, x1, x2)

inst_32264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80000000; valaddr_reg:x3; val_offset:96792*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96792*0 + 3*8*FLEN/8, x4, x1, x2)

inst_32265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:96795*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96795*0 + 3*9*FLEN/8, x4, x1, x2)

inst_32266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:96798*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96798*0 + 3*10*FLEN/8, x4, x1, x2)

inst_32267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:96801*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96801*0 + 3*11*FLEN/8, x4, x1, x2)

inst_32268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x8000000f; valaddr_reg:x3; val_offset:96804*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96804*0 + 3*12*FLEN/8, x4, x1, x2)

inst_32269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x8000001f; valaddr_reg:x3; val_offset:96807*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96807*0 + 3*13*FLEN/8, x4, x1, x2)

inst_32270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x8000003f; valaddr_reg:x3; val_offset:96810*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96810*0 + 3*14*FLEN/8, x4, x1, x2)

inst_32271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x8000007f; valaddr_reg:x3; val_offset:96813*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96813*0 + 3*15*FLEN/8, x4, x1, x2)

inst_32272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x800000ff; valaddr_reg:x3; val_offset:96816*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96816*0 + 3*16*FLEN/8, x4, x1, x2)

inst_32273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x800001ff; valaddr_reg:x3; val_offset:96819*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96819*0 + 3*17*FLEN/8, x4, x1, x2)

inst_32274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x800003ff; valaddr_reg:x3; val_offset:96822*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96822*0 + 3*18*FLEN/8, x4, x1, x2)

inst_32275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x800007ff; valaddr_reg:x3; val_offset:96825*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96825*0 + 3*19*FLEN/8, x4, x1, x2)

inst_32276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80000fff; valaddr_reg:x3; val_offset:96828*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96828*0 + 3*20*FLEN/8, x4, x1, x2)

inst_32277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80001fff; valaddr_reg:x3; val_offset:96831*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96831*0 + 3*21*FLEN/8, x4, x1, x2)

inst_32278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80003fff; valaddr_reg:x3; val_offset:96834*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96834*0 + 3*22*FLEN/8, x4, x1, x2)

inst_32279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80007fff; valaddr_reg:x3; val_offset:96837*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96837*0 + 3*23*FLEN/8, x4, x1, x2)

inst_32280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x8000ffff; valaddr_reg:x3; val_offset:96840*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96840*0 + 3*24*FLEN/8, x4, x1, x2)

inst_32281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x8001ffff; valaddr_reg:x3; val_offset:96843*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96843*0 + 3*25*FLEN/8, x4, x1, x2)

inst_32282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x8003ffff; valaddr_reg:x3; val_offset:96846*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96846*0 + 3*26*FLEN/8, x4, x1, x2)

inst_32283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x8007ffff; valaddr_reg:x3; val_offset:96849*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96849*0 + 3*27*FLEN/8, x4, x1, x2)

inst_32284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x800fffff; valaddr_reg:x3; val_offset:96852*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96852*0 + 3*28*FLEN/8, x4, x1, x2)

inst_32285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:96855*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96855*0 + 3*29*FLEN/8, x4, x1, x2)

inst_32286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x801fffff; valaddr_reg:x3; val_offset:96858*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96858*0 + 3*30*FLEN/8, x4, x1, x2)

inst_32287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:96861*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96861*0 + 3*31*FLEN/8, x4, x1, x2)

inst_32288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:96864*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96864*0 + 3*32*FLEN/8, x4, x1, x2)

inst_32289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:96867*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96867*0 + 3*33*FLEN/8, x4, x1, x2)

inst_32290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:96870*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96870*0 + 3*34*FLEN/8, x4, x1, x2)

inst_32291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x803fffff; valaddr_reg:x3; val_offset:96873*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96873*0 + 3*35*FLEN/8, x4, x1, x2)

inst_32292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80400000; valaddr_reg:x3; val_offset:96876*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96876*0 + 3*36*FLEN/8, x4, x1, x2)

inst_32293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:96879*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96879*0 + 3*37*FLEN/8, x4, x1, x2)

inst_32294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:96882*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96882*0 + 3*38*FLEN/8, x4, x1, x2)

inst_32295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:96885*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96885*0 + 3*39*FLEN/8, x4, x1, x2)

inst_32296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80600000; valaddr_reg:x3; val_offset:96888*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96888*0 + 3*40*FLEN/8, x4, x1, x2)

inst_32297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:96891*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96891*0 + 3*41*FLEN/8, x4, x1, x2)

inst_32298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:96894*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96894*0 + 3*42*FLEN/8, x4, x1, x2)

inst_32299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80700000; valaddr_reg:x3; val_offset:96897*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96897*0 + 3*43*FLEN/8, x4, x1, x2)

inst_32300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x80780000; valaddr_reg:x3; val_offset:96900*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96900*0 + 3*44*FLEN/8, x4, x1, x2)

inst_32301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807c0000; valaddr_reg:x3; val_offset:96903*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96903*0 + 3*45*FLEN/8, x4, x1, x2)

inst_32302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807e0000; valaddr_reg:x3; val_offset:96906*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96906*0 + 3*46*FLEN/8, x4, x1, x2)

inst_32303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807f0000; valaddr_reg:x3; val_offset:96909*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96909*0 + 3*47*FLEN/8, x4, x1, x2)

inst_32304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807f8000; valaddr_reg:x3; val_offset:96912*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96912*0 + 3*48*FLEN/8, x4, x1, x2)

inst_32305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807fc000; valaddr_reg:x3; val_offset:96915*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96915*0 + 3*49*FLEN/8, x4, x1, x2)

inst_32306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807fe000; valaddr_reg:x3; val_offset:96918*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96918*0 + 3*50*FLEN/8, x4, x1, x2)

inst_32307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807ff000; valaddr_reg:x3; val_offset:96921*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96921*0 + 3*51*FLEN/8, x4, x1, x2)

inst_32308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807ff800; valaddr_reg:x3; val_offset:96924*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96924*0 + 3*52*FLEN/8, x4, x1, x2)

inst_32309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807ffc00; valaddr_reg:x3; val_offset:96927*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96927*0 + 3*53*FLEN/8, x4, x1, x2)

inst_32310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807ffe00; valaddr_reg:x3; val_offset:96930*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96930*0 + 3*54*FLEN/8, x4, x1, x2)

inst_32311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807fff00; valaddr_reg:x3; val_offset:96933*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96933*0 + 3*55*FLEN/8, x4, x1, x2)

inst_32312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807fff80; valaddr_reg:x3; val_offset:96936*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96936*0 + 3*56*FLEN/8, x4, x1, x2)

inst_32313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807fffc0; valaddr_reg:x3; val_offset:96939*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96939*0 + 3*57*FLEN/8, x4, x1, x2)

inst_32314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807fffe0; valaddr_reg:x3; val_offset:96942*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96942*0 + 3*58*FLEN/8, x4, x1, x2)

inst_32315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807ffff0; valaddr_reg:x3; val_offset:96945*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96945*0 + 3*59*FLEN/8, x4, x1, x2)

inst_32316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:96948*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96948*0 + 3*60*FLEN/8, x4, x1, x2)

inst_32317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:96951*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96951*0 + 3*61*FLEN/8, x4, x1, x2)

inst_32318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:96954*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96954*0 + 3*62*FLEN/8, x4, x1, x2)

inst_32319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23991a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23991a; op2val:0x80000000;
op3val:0x807fffff; valaddr_reg:x3; val_offset:96957*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96957*0 + 3*63*FLEN/8, x4, x1, x2)

inst_32320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e800000; valaddr_reg:x3; val_offset:96960*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96960*0 + 3*64*FLEN/8, x4, x1, x2)

inst_32321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e800001; valaddr_reg:x3; val_offset:96963*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96963*0 + 3*65*FLEN/8, x4, x1, x2)

inst_32322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e800003; valaddr_reg:x3; val_offset:96966*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96966*0 + 3*66*FLEN/8, x4, x1, x2)

inst_32323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e800007; valaddr_reg:x3; val_offset:96969*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96969*0 + 3*67*FLEN/8, x4, x1, x2)

inst_32324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e80000f; valaddr_reg:x3; val_offset:96972*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96972*0 + 3*68*FLEN/8, x4, x1, x2)

inst_32325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e80001f; valaddr_reg:x3; val_offset:96975*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96975*0 + 3*69*FLEN/8, x4, x1, x2)

inst_32326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e80003f; valaddr_reg:x3; val_offset:96978*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96978*0 + 3*70*FLEN/8, x4, x1, x2)

inst_32327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e80007f; valaddr_reg:x3; val_offset:96981*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96981*0 + 3*71*FLEN/8, x4, x1, x2)

inst_32328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e8000ff; valaddr_reg:x3; val_offset:96984*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96984*0 + 3*72*FLEN/8, x4, x1, x2)

inst_32329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e8001ff; valaddr_reg:x3; val_offset:96987*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96987*0 + 3*73*FLEN/8, x4, x1, x2)

inst_32330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e8003ff; valaddr_reg:x3; val_offset:96990*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96990*0 + 3*74*FLEN/8, x4, x1, x2)

inst_32331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e8007ff; valaddr_reg:x3; val_offset:96993*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96993*0 + 3*75*FLEN/8, x4, x1, x2)

inst_32332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e800fff; valaddr_reg:x3; val_offset:96996*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96996*0 + 3*76*FLEN/8, x4, x1, x2)

inst_32333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e801fff; valaddr_reg:x3; val_offset:96999*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96999*0 + 3*77*FLEN/8, x4, x1, x2)

inst_32334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e803fff; valaddr_reg:x3; val_offset:97002*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97002*0 + 3*78*FLEN/8, x4, x1, x2)

inst_32335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e807fff; valaddr_reg:x3; val_offset:97005*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97005*0 + 3*79*FLEN/8, x4, x1, x2)

inst_32336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e80ffff; valaddr_reg:x3; val_offset:97008*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97008*0 + 3*80*FLEN/8, x4, x1, x2)

inst_32337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e81ffff; valaddr_reg:x3; val_offset:97011*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97011*0 + 3*81*FLEN/8, x4, x1, x2)

inst_32338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e83ffff; valaddr_reg:x3; val_offset:97014*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97014*0 + 3*82*FLEN/8, x4, x1, x2)

inst_32339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e87ffff; valaddr_reg:x3; val_offset:97017*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97017*0 + 3*83*FLEN/8, x4, x1, x2)

inst_32340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e8fffff; valaddr_reg:x3; val_offset:97020*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97020*0 + 3*84*FLEN/8, x4, x1, x2)

inst_32341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7e9fffff; valaddr_reg:x3; val_offset:97023*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97023*0 + 3*85*FLEN/8, x4, x1, x2)

inst_32342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7ebfffff; valaddr_reg:x3; val_offset:97026*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97026*0 + 3*86*FLEN/8, x4, x1, x2)

inst_32343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7ec00000; valaddr_reg:x3; val_offset:97029*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97029*0 + 3*87*FLEN/8, x4, x1, x2)

inst_32344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7ee00000; valaddr_reg:x3; val_offset:97032*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97032*0 + 3*88*FLEN/8, x4, x1, x2)

inst_32345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7ef00000; valaddr_reg:x3; val_offset:97035*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97035*0 + 3*89*FLEN/8, x4, x1, x2)

inst_32346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7ef80000; valaddr_reg:x3; val_offset:97038*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97038*0 + 3*90*FLEN/8, x4, x1, x2)

inst_32347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efc0000; valaddr_reg:x3; val_offset:97041*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97041*0 + 3*91*FLEN/8, x4, x1, x2)

inst_32348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efe0000; valaddr_reg:x3; val_offset:97044*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97044*0 + 3*92*FLEN/8, x4, x1, x2)

inst_32349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7eff0000; valaddr_reg:x3; val_offset:97047*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97047*0 + 3*93*FLEN/8, x4, x1, x2)

inst_32350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7eff8000; valaddr_reg:x3; val_offset:97050*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97050*0 + 3*94*FLEN/8, x4, x1, x2)

inst_32351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7effc000; valaddr_reg:x3; val_offset:97053*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97053*0 + 3*95*FLEN/8, x4, x1, x2)

inst_32352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7effe000; valaddr_reg:x3; val_offset:97056*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97056*0 + 3*96*FLEN/8, x4, x1, x2)

inst_32353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efff000; valaddr_reg:x3; val_offset:97059*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97059*0 + 3*97*FLEN/8, x4, x1, x2)

inst_32354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efff800; valaddr_reg:x3; val_offset:97062*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97062*0 + 3*98*FLEN/8, x4, x1, x2)

inst_32355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efffc00; valaddr_reg:x3; val_offset:97065*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97065*0 + 3*99*FLEN/8, x4, x1, x2)

inst_32356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efffe00; valaddr_reg:x3; val_offset:97068*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97068*0 + 3*100*FLEN/8, x4, x1, x2)

inst_32357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7effff00; valaddr_reg:x3; val_offset:97071*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97071*0 + 3*101*FLEN/8, x4, x1, x2)

inst_32358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7effff80; valaddr_reg:x3; val_offset:97074*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97074*0 + 3*102*FLEN/8, x4, x1, x2)

inst_32359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7effffc0; valaddr_reg:x3; val_offset:97077*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97077*0 + 3*103*FLEN/8, x4, x1, x2)

inst_32360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7effffe0; valaddr_reg:x3; val_offset:97080*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97080*0 + 3*104*FLEN/8, x4, x1, x2)

inst_32361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efffff0; valaddr_reg:x3; val_offset:97083*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97083*0 + 3*105*FLEN/8, x4, x1, x2)

inst_32362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efffff8; valaddr_reg:x3; val_offset:97086*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97086*0 + 3*106*FLEN/8, x4, x1, x2)

inst_32363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efffffc; valaddr_reg:x3; val_offset:97089*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97089*0 + 3*107*FLEN/8, x4, x1, x2)

inst_32364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7efffffe; valaddr_reg:x3; val_offset:97092*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97092*0 + 3*108*FLEN/8, x4, x1, x2)

inst_32365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7effffff; valaddr_reg:x3; val_offset:97095*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97095*0 + 3*109*FLEN/8, x4, x1, x2)

inst_32366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f000001; valaddr_reg:x3; val_offset:97098*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97098*0 + 3*110*FLEN/8, x4, x1, x2)

inst_32367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f000003; valaddr_reg:x3; val_offset:97101*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97101*0 + 3*111*FLEN/8, x4, x1, x2)

inst_32368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f000007; valaddr_reg:x3; val_offset:97104*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97104*0 + 3*112*FLEN/8, x4, x1, x2)

inst_32369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f199999; valaddr_reg:x3; val_offset:97107*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97107*0 + 3*113*FLEN/8, x4, x1, x2)

inst_32370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f249249; valaddr_reg:x3; val_offset:97110*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97110*0 + 3*114*FLEN/8, x4, x1, x2)

inst_32371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f333333; valaddr_reg:x3; val_offset:97113*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97113*0 + 3*115*FLEN/8, x4, x1, x2)

inst_32372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:97116*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97116*0 + 3*116*FLEN/8, x4, x1, x2)

inst_32373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:97119*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97119*0 + 3*117*FLEN/8, x4, x1, x2)

inst_32374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f444444; valaddr_reg:x3; val_offset:97122*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97122*0 + 3*118*FLEN/8, x4, x1, x2)

inst_32375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:97125*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97125*0 + 3*119*FLEN/8, x4, x1, x2)

inst_32376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:97128*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97128*0 + 3*120*FLEN/8, x4, x1, x2)

inst_32377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f666666; valaddr_reg:x3; val_offset:97131*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97131*0 + 3*121*FLEN/8, x4, x1, x2)

inst_32378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:97134*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97134*0 + 3*122*FLEN/8, x4, x1, x2)

inst_32379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:97137*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97137*0 + 3*123*FLEN/8, x4, x1, x2)

inst_32380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:97140*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97140*0 + 3*124*FLEN/8, x4, x1, x2)

inst_32381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24da2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x46c599 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24da2f; op2val:0x3fc6c599;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:97143*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97143*0 + 3*125*FLEN/8, x4, x1, x2)

inst_32382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:97146*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97146*0 + 3*126*FLEN/8, x4, x1, x2)

inst_32383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:97149*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97149*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_32384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:97152*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97152*0 + 3*128*FLEN/8, x4, x1, x2)

inst_32385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:97155*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97155*0 + 3*129*FLEN/8, x4, x1, x2)

inst_32386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:97158*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97158*0 + 3*130*FLEN/8, x4, x1, x2)

inst_32387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:97161*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97161*0 + 3*131*FLEN/8, x4, x1, x2)

inst_32388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:97164*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97164*0 + 3*132*FLEN/8, x4, x1, x2)

inst_32389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:97167*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97167*0 + 3*133*FLEN/8, x4, x1, x2)

inst_32390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:97170*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97170*0 + 3*134*FLEN/8, x4, x1, x2)

inst_32391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:97173*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97173*0 + 3*135*FLEN/8, x4, x1, x2)

inst_32392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:97176*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97176*0 + 3*136*FLEN/8, x4, x1, x2)

inst_32393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:97179*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97179*0 + 3*137*FLEN/8, x4, x1, x2)

inst_32394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:97182*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97182*0 + 3*138*FLEN/8, x4, x1, x2)

inst_32395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:97185*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97185*0 + 3*139*FLEN/8, x4, x1, x2)

inst_32396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:97188*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97188*0 + 3*140*FLEN/8, x4, x1, x2)

inst_32397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:97191*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97191*0 + 3*141*FLEN/8, x4, x1, x2)

inst_32398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82800000; valaddr_reg:x3; val_offset:97194*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97194*0 + 3*142*FLEN/8, x4, x1, x2)

inst_32399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82800001; valaddr_reg:x3; val_offset:97197*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97197*0 + 3*143*FLEN/8, x4, x1, x2)

inst_32400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82800003; valaddr_reg:x3; val_offset:97200*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97200*0 + 3*144*FLEN/8, x4, x1, x2)

inst_32401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82800007; valaddr_reg:x3; val_offset:97203*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97203*0 + 3*145*FLEN/8, x4, x1, x2)

inst_32402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x8280000f; valaddr_reg:x3; val_offset:97206*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97206*0 + 3*146*FLEN/8, x4, x1, x2)

inst_32403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x8280001f; valaddr_reg:x3; val_offset:97209*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97209*0 + 3*147*FLEN/8, x4, x1, x2)

inst_32404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x8280003f; valaddr_reg:x3; val_offset:97212*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97212*0 + 3*148*FLEN/8, x4, x1, x2)

inst_32405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x8280007f; valaddr_reg:x3; val_offset:97215*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97215*0 + 3*149*FLEN/8, x4, x1, x2)

inst_32406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x828000ff; valaddr_reg:x3; val_offset:97218*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97218*0 + 3*150*FLEN/8, x4, x1, x2)

inst_32407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x828001ff; valaddr_reg:x3; val_offset:97221*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97221*0 + 3*151*FLEN/8, x4, x1, x2)

inst_32408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x828003ff; valaddr_reg:x3; val_offset:97224*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97224*0 + 3*152*FLEN/8, x4, x1, x2)

inst_32409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x828007ff; valaddr_reg:x3; val_offset:97227*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97227*0 + 3*153*FLEN/8, x4, x1, x2)

inst_32410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82800fff; valaddr_reg:x3; val_offset:97230*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97230*0 + 3*154*FLEN/8, x4, x1, x2)

inst_32411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82801fff; valaddr_reg:x3; val_offset:97233*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97233*0 + 3*155*FLEN/8, x4, x1, x2)

inst_32412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82803fff; valaddr_reg:x3; val_offset:97236*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97236*0 + 3*156*FLEN/8, x4, x1, x2)

inst_32413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82807fff; valaddr_reg:x3; val_offset:97239*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97239*0 + 3*157*FLEN/8, x4, x1, x2)

inst_32414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x8280ffff; valaddr_reg:x3; val_offset:97242*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97242*0 + 3*158*FLEN/8, x4, x1, x2)

inst_32415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x8281ffff; valaddr_reg:x3; val_offset:97245*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97245*0 + 3*159*FLEN/8, x4, x1, x2)

inst_32416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x8283ffff; valaddr_reg:x3; val_offset:97248*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97248*0 + 3*160*FLEN/8, x4, x1, x2)

inst_32417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x8287ffff; valaddr_reg:x3; val_offset:97251*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97251*0 + 3*161*FLEN/8, x4, x1, x2)

inst_32418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x828fffff; valaddr_reg:x3; val_offset:97254*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97254*0 + 3*162*FLEN/8, x4, x1, x2)

inst_32419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x829fffff; valaddr_reg:x3; val_offset:97257*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97257*0 + 3*163*FLEN/8, x4, x1, x2)

inst_32420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82bfffff; valaddr_reg:x3; val_offset:97260*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97260*0 + 3*164*FLEN/8, x4, x1, x2)

inst_32421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82c00000; valaddr_reg:x3; val_offset:97263*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97263*0 + 3*165*FLEN/8, x4, x1, x2)

inst_32422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82e00000; valaddr_reg:x3; val_offset:97266*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97266*0 + 3*166*FLEN/8, x4, x1, x2)

inst_32423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82f00000; valaddr_reg:x3; val_offset:97269*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97269*0 + 3*167*FLEN/8, x4, x1, x2)

inst_32424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82f80000; valaddr_reg:x3; val_offset:97272*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97272*0 + 3*168*FLEN/8, x4, x1, x2)

inst_32425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fc0000; valaddr_reg:x3; val_offset:97275*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97275*0 + 3*169*FLEN/8, x4, x1, x2)

inst_32426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fe0000; valaddr_reg:x3; val_offset:97278*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97278*0 + 3*170*FLEN/8, x4, x1, x2)

inst_32427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82ff0000; valaddr_reg:x3; val_offset:97281*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97281*0 + 3*171*FLEN/8, x4, x1, x2)

inst_32428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82ff8000; valaddr_reg:x3; val_offset:97284*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97284*0 + 3*172*FLEN/8, x4, x1, x2)

inst_32429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82ffc000; valaddr_reg:x3; val_offset:97287*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97287*0 + 3*173*FLEN/8, x4, x1, x2)

inst_32430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82ffe000; valaddr_reg:x3; val_offset:97290*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97290*0 + 3*174*FLEN/8, x4, x1, x2)

inst_32431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fff000; valaddr_reg:x3; val_offset:97293*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97293*0 + 3*175*FLEN/8, x4, x1, x2)

inst_32432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fff800; valaddr_reg:x3; val_offset:97296*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97296*0 + 3*176*FLEN/8, x4, x1, x2)

inst_32433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fffc00; valaddr_reg:x3; val_offset:97299*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97299*0 + 3*177*FLEN/8, x4, x1, x2)

inst_32434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fffe00; valaddr_reg:x3; val_offset:97302*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97302*0 + 3*178*FLEN/8, x4, x1, x2)

inst_32435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82ffff00; valaddr_reg:x3; val_offset:97305*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97305*0 + 3*179*FLEN/8, x4, x1, x2)

inst_32436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82ffff80; valaddr_reg:x3; val_offset:97308*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97308*0 + 3*180*FLEN/8, x4, x1, x2)

inst_32437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82ffffc0; valaddr_reg:x3; val_offset:97311*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97311*0 + 3*181*FLEN/8, x4, x1, x2)

inst_32438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82ffffe0; valaddr_reg:x3; val_offset:97314*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97314*0 + 3*182*FLEN/8, x4, x1, x2)

inst_32439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fffff0; valaddr_reg:x3; val_offset:97317*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97317*0 + 3*183*FLEN/8, x4, x1, x2)

inst_32440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fffff8; valaddr_reg:x3; val_offset:97320*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97320*0 + 3*184*FLEN/8, x4, x1, x2)

inst_32441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fffffc; valaddr_reg:x3; val_offset:97323*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97323*0 + 3*185*FLEN/8, x4, x1, x2)

inst_32442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82fffffe; valaddr_reg:x3; val_offset:97326*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97326*0 + 3*186*FLEN/8, x4, x1, x2)

inst_32443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24ebef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24ebef; op2val:0x80000000;
op3val:0x82ffffff; valaddr_reg:x3; val_offset:97329*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97329*0 + 3*187*FLEN/8, x4, x1, x2)

inst_32444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef000000; valaddr_reg:x3; val_offset:97332*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97332*0 + 3*188*FLEN/8, x4, x1, x2)

inst_32445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef000001; valaddr_reg:x3; val_offset:97335*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97335*0 + 3*189*FLEN/8, x4, x1, x2)

inst_32446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef000003; valaddr_reg:x3; val_offset:97338*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97338*0 + 3*190*FLEN/8, x4, x1, x2)

inst_32447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef000007; valaddr_reg:x3; val_offset:97341*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97341*0 + 3*191*FLEN/8, x4, x1, x2)

inst_32448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef00000f; valaddr_reg:x3; val_offset:97344*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97344*0 + 3*192*FLEN/8, x4, x1, x2)

inst_32449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef00001f; valaddr_reg:x3; val_offset:97347*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97347*0 + 3*193*FLEN/8, x4, x1, x2)

inst_32450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef00003f; valaddr_reg:x3; val_offset:97350*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97350*0 + 3*194*FLEN/8, x4, x1, x2)

inst_32451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef00007f; valaddr_reg:x3; val_offset:97353*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97353*0 + 3*195*FLEN/8, x4, x1, x2)

inst_32452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef0000ff; valaddr_reg:x3; val_offset:97356*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97356*0 + 3*196*FLEN/8, x4, x1, x2)

inst_32453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef0001ff; valaddr_reg:x3; val_offset:97359*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97359*0 + 3*197*FLEN/8, x4, x1, x2)

inst_32454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef0003ff; valaddr_reg:x3; val_offset:97362*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97362*0 + 3*198*FLEN/8, x4, x1, x2)

inst_32455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef0007ff; valaddr_reg:x3; val_offset:97365*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97365*0 + 3*199*FLEN/8, x4, x1, x2)

inst_32456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef000fff; valaddr_reg:x3; val_offset:97368*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97368*0 + 3*200*FLEN/8, x4, x1, x2)

inst_32457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef001fff; valaddr_reg:x3; val_offset:97371*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97371*0 + 3*201*FLEN/8, x4, x1, x2)

inst_32458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef003fff; valaddr_reg:x3; val_offset:97374*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97374*0 + 3*202*FLEN/8, x4, x1, x2)

inst_32459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef007fff; valaddr_reg:x3; val_offset:97377*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97377*0 + 3*203*FLEN/8, x4, x1, x2)

inst_32460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef00ffff; valaddr_reg:x3; val_offset:97380*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97380*0 + 3*204*FLEN/8, x4, x1, x2)

inst_32461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef01ffff; valaddr_reg:x3; val_offset:97383*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97383*0 + 3*205*FLEN/8, x4, x1, x2)

inst_32462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef03ffff; valaddr_reg:x3; val_offset:97386*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97386*0 + 3*206*FLEN/8, x4, x1, x2)

inst_32463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef07ffff; valaddr_reg:x3; val_offset:97389*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97389*0 + 3*207*FLEN/8, x4, x1, x2)

inst_32464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef0fffff; valaddr_reg:x3; val_offset:97392*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97392*0 + 3*208*FLEN/8, x4, x1, x2)

inst_32465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef1fffff; valaddr_reg:x3; val_offset:97395*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97395*0 + 3*209*FLEN/8, x4, x1, x2)

inst_32466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef3fffff; valaddr_reg:x3; val_offset:97398*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97398*0 + 3*210*FLEN/8, x4, x1, x2)

inst_32467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef400000; valaddr_reg:x3; val_offset:97401*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97401*0 + 3*211*FLEN/8, x4, x1, x2)

inst_32468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef600000; valaddr_reg:x3; val_offset:97404*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97404*0 + 3*212*FLEN/8, x4, x1, x2)

inst_32469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef700000; valaddr_reg:x3; val_offset:97407*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97407*0 + 3*213*FLEN/8, x4, x1, x2)

inst_32470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef780000; valaddr_reg:x3; val_offset:97410*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97410*0 + 3*214*FLEN/8, x4, x1, x2)

inst_32471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7c0000; valaddr_reg:x3; val_offset:97413*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97413*0 + 3*215*FLEN/8, x4, x1, x2)

inst_32472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7e0000; valaddr_reg:x3; val_offset:97416*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97416*0 + 3*216*FLEN/8, x4, x1, x2)

inst_32473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7f0000; valaddr_reg:x3; val_offset:97419*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97419*0 + 3*217*FLEN/8, x4, x1, x2)

inst_32474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7f8000; valaddr_reg:x3; val_offset:97422*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97422*0 + 3*218*FLEN/8, x4, x1, x2)

inst_32475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7fc000; valaddr_reg:x3; val_offset:97425*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97425*0 + 3*219*FLEN/8, x4, x1, x2)

inst_32476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7fe000; valaddr_reg:x3; val_offset:97428*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97428*0 + 3*220*FLEN/8, x4, x1, x2)

inst_32477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7ff000; valaddr_reg:x3; val_offset:97431*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97431*0 + 3*221*FLEN/8, x4, x1, x2)

inst_32478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7ff800; valaddr_reg:x3; val_offset:97434*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97434*0 + 3*222*FLEN/8, x4, x1, x2)

inst_32479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7ffc00; valaddr_reg:x3; val_offset:97437*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97437*0 + 3*223*FLEN/8, x4, x1, x2)

inst_32480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7ffe00; valaddr_reg:x3; val_offset:97440*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97440*0 + 3*224*FLEN/8, x4, x1, x2)

inst_32481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7fff00; valaddr_reg:x3; val_offset:97443*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97443*0 + 3*225*FLEN/8, x4, x1, x2)

inst_32482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7fff80; valaddr_reg:x3; val_offset:97446*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97446*0 + 3*226*FLEN/8, x4, x1, x2)

inst_32483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7fffc0; valaddr_reg:x3; val_offset:97449*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97449*0 + 3*227*FLEN/8, x4, x1, x2)

inst_32484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7fffe0; valaddr_reg:x3; val_offset:97452*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97452*0 + 3*228*FLEN/8, x4, x1, x2)

inst_32485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7ffff0; valaddr_reg:x3; val_offset:97455*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97455*0 + 3*229*FLEN/8, x4, x1, x2)

inst_32486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7ffff8; valaddr_reg:x3; val_offset:97458*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97458*0 + 3*230*FLEN/8, x4, x1, x2)

inst_32487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7ffffc; valaddr_reg:x3; val_offset:97461*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97461*0 + 3*231*FLEN/8, x4, x1, x2)

inst_32488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7ffffe; valaddr_reg:x3; val_offset:97464*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97464*0 + 3*232*FLEN/8, x4, x1, x2)

inst_32489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xef7fffff; valaddr_reg:x3; val_offset:97467*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97467*0 + 3*233*FLEN/8, x4, x1, x2)

inst_32490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff000001; valaddr_reg:x3; val_offset:97470*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97470*0 + 3*234*FLEN/8, x4, x1, x2)

inst_32491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff000003; valaddr_reg:x3; val_offset:97473*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97473*0 + 3*235*FLEN/8, x4, x1, x2)

inst_32492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff000007; valaddr_reg:x3; val_offset:97476*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97476*0 + 3*236*FLEN/8, x4, x1, x2)

inst_32493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff199999; valaddr_reg:x3; val_offset:97479*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97479*0 + 3*237*FLEN/8, x4, x1, x2)

inst_32494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff249249; valaddr_reg:x3; val_offset:97482*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97482*0 + 3*238*FLEN/8, x4, x1, x2)

inst_32495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff333333; valaddr_reg:x3; val_offset:97485*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97485*0 + 3*239*FLEN/8, x4, x1, x2)

inst_32496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:97488*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97488*0 + 3*240*FLEN/8, x4, x1, x2)

inst_32497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:97491*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97491*0 + 3*241*FLEN/8, x4, x1, x2)

inst_32498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff444444; valaddr_reg:x3; val_offset:97494*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97494*0 + 3*242*FLEN/8, x4, x1, x2)

inst_32499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:97497*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97497*0 + 3*243*FLEN/8, x4, x1, x2)

inst_32500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:97500*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97500*0 + 3*244*FLEN/8, x4, x1, x2)

inst_32501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff666666; valaddr_reg:x3; val_offset:97503*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97503*0 + 3*245*FLEN/8, x4, x1, x2)

inst_32502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:97506*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97506*0 + 3*246*FLEN/8, x4, x1, x2)

inst_32503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:97509*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97509*0 + 3*247*FLEN/8, x4, x1, x2)

inst_32504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:97512*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97512*0 + 3*248*FLEN/8, x4, x1, x2)

inst_32505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x255c5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46291b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f255c5f; op2val:0xbfc6291b;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:97515*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97515*0 + 3*249*FLEN/8, x4, x1, x2)

inst_32506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb800000; valaddr_reg:x3; val_offset:97518*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97518*0 + 3*250*FLEN/8, x4, x1, x2)

inst_32507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb800001; valaddr_reg:x3; val_offset:97521*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97521*0 + 3*251*FLEN/8, x4, x1, x2)

inst_32508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb800003; valaddr_reg:x3; val_offset:97524*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97524*0 + 3*252*FLEN/8, x4, x1, x2)

inst_32509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb800007; valaddr_reg:x3; val_offset:97527*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97527*0 + 3*253*FLEN/8, x4, x1, x2)

inst_32510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb80000f; valaddr_reg:x3; val_offset:97530*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97530*0 + 3*254*FLEN/8, x4, x1, x2)

inst_32511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb80001f; valaddr_reg:x3; val_offset:97533*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97533*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_32512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb80003f; valaddr_reg:x3; val_offset:97536*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97536*0 + 3*256*FLEN/8, x4, x1, x2)

inst_32513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb80007f; valaddr_reg:x3; val_offset:97539*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97539*0 + 3*257*FLEN/8, x4, x1, x2)

inst_32514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb8000ff; valaddr_reg:x3; val_offset:97542*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97542*0 + 3*258*FLEN/8, x4, x1, x2)

inst_32515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb8001ff; valaddr_reg:x3; val_offset:97545*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97545*0 + 3*259*FLEN/8, x4, x1, x2)

inst_32516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb8003ff; valaddr_reg:x3; val_offset:97548*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97548*0 + 3*260*FLEN/8, x4, x1, x2)

inst_32517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb8007ff; valaddr_reg:x3; val_offset:97551*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97551*0 + 3*261*FLEN/8, x4, x1, x2)

inst_32518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb800fff; valaddr_reg:x3; val_offset:97554*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97554*0 + 3*262*FLEN/8, x4, x1, x2)

inst_32519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb801fff; valaddr_reg:x3; val_offset:97557*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97557*0 + 3*263*FLEN/8, x4, x1, x2)

inst_32520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb803fff; valaddr_reg:x3; val_offset:97560*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97560*0 + 3*264*FLEN/8, x4, x1, x2)

inst_32521:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb807fff; valaddr_reg:x3; val_offset:97563*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97563*0 + 3*265*FLEN/8, x4, x1, x2)

inst_32522:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb80ffff; valaddr_reg:x3; val_offset:97566*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97566*0 + 3*266*FLEN/8, x4, x1, x2)

inst_32523:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb81ffff; valaddr_reg:x3; val_offset:97569*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97569*0 + 3*267*FLEN/8, x4, x1, x2)

inst_32524:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb83ffff; valaddr_reg:x3; val_offset:97572*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97572*0 + 3*268*FLEN/8, x4, x1, x2)

inst_32525:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb87ffff; valaddr_reg:x3; val_offset:97575*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97575*0 + 3*269*FLEN/8, x4, x1, x2)

inst_32526:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb8fffff; valaddr_reg:x3; val_offset:97578*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97578*0 + 3*270*FLEN/8, x4, x1, x2)

inst_32527:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfb9fffff; valaddr_reg:x3; val_offset:97581*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97581*0 + 3*271*FLEN/8, x4, x1, x2)

inst_32528:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbbfffff; valaddr_reg:x3; val_offset:97584*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97584*0 + 3*272*FLEN/8, x4, x1, x2)

inst_32529:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbc00000; valaddr_reg:x3; val_offset:97587*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97587*0 + 3*273*FLEN/8, x4, x1, x2)

inst_32530:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbe00000; valaddr_reg:x3; val_offset:97590*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97590*0 + 3*274*FLEN/8, x4, x1, x2)

inst_32531:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbf00000; valaddr_reg:x3; val_offset:97593*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97593*0 + 3*275*FLEN/8, x4, x1, x2)

inst_32532:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbf80000; valaddr_reg:x3; val_offset:97596*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97596*0 + 3*276*FLEN/8, x4, x1, x2)

inst_32533:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfc0000; valaddr_reg:x3; val_offset:97599*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97599*0 + 3*277*FLEN/8, x4, x1, x2)

inst_32534:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfe0000; valaddr_reg:x3; val_offset:97602*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97602*0 + 3*278*FLEN/8, x4, x1, x2)

inst_32535:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbff0000; valaddr_reg:x3; val_offset:97605*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97605*0 + 3*279*FLEN/8, x4, x1, x2)

inst_32536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbff8000; valaddr_reg:x3; val_offset:97608*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97608*0 + 3*280*FLEN/8, x4, x1, x2)

inst_32537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbffc000; valaddr_reg:x3; val_offset:97611*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97611*0 + 3*281*FLEN/8, x4, x1, x2)

inst_32538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbffe000; valaddr_reg:x3; val_offset:97614*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97614*0 + 3*282*FLEN/8, x4, x1, x2)

inst_32539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfff000; valaddr_reg:x3; val_offset:97617*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97617*0 + 3*283*FLEN/8, x4, x1, x2)

inst_32540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfff800; valaddr_reg:x3; val_offset:97620*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97620*0 + 3*284*FLEN/8, x4, x1, x2)

inst_32541:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfffc00; valaddr_reg:x3; val_offset:97623*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97623*0 + 3*285*FLEN/8, x4, x1, x2)

inst_32542:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfffe00; valaddr_reg:x3; val_offset:97626*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97626*0 + 3*286*FLEN/8, x4, x1, x2)

inst_32543:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbffff00; valaddr_reg:x3; val_offset:97629*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97629*0 + 3*287*FLEN/8, x4, x1, x2)

inst_32544:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbffff80; valaddr_reg:x3; val_offset:97632*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97632*0 + 3*288*FLEN/8, x4, x1, x2)

inst_32545:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbffffc0; valaddr_reg:x3; val_offset:97635*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97635*0 + 3*289*FLEN/8, x4, x1, x2)

inst_32546:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbffffe0; valaddr_reg:x3; val_offset:97638*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97638*0 + 3*290*FLEN/8, x4, x1, x2)

inst_32547:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfffff0; valaddr_reg:x3; val_offset:97641*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97641*0 + 3*291*FLEN/8, x4, x1, x2)

inst_32548:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfffff8; valaddr_reg:x3; val_offset:97644*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97644*0 + 3*292*FLEN/8, x4, x1, x2)

inst_32549:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfffffc; valaddr_reg:x3; val_offset:97647*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97647*0 + 3*293*FLEN/8, x4, x1, x2)

inst_32550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbfffffe; valaddr_reg:x3; val_offset:97650*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97650*0 + 3*294*FLEN/8, x4, x1, x2)

inst_32551:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xf7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xfbffffff; valaddr_reg:x3; val_offset:97653*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97653*0 + 3*295*FLEN/8, x4, x1, x2)

inst_32552:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff000001; valaddr_reg:x3; val_offset:97656*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97656*0 + 3*296*FLEN/8, x4, x1, x2)

inst_32553:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff000003; valaddr_reg:x3; val_offset:97659*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97659*0 + 3*297*FLEN/8, x4, x1, x2)

inst_32554:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff000007; valaddr_reg:x3; val_offset:97662*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97662*0 + 3*298*FLEN/8, x4, x1, x2)

inst_32555:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff199999; valaddr_reg:x3; val_offset:97665*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97665*0 + 3*299*FLEN/8, x4, x1, x2)

inst_32556:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff249249; valaddr_reg:x3; val_offset:97668*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97668*0 + 3*300*FLEN/8, x4, x1, x2)

inst_32557:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff333333; valaddr_reg:x3; val_offset:97671*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97671*0 + 3*301*FLEN/8, x4, x1, x2)

inst_32558:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:97674*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97674*0 + 3*302*FLEN/8, x4, x1, x2)

inst_32559:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:97677*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97677*0 + 3*303*FLEN/8, x4, x1, x2)

inst_32560:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff444444; valaddr_reg:x3; val_offset:97680*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97680*0 + 3*304*FLEN/8, x4, x1, x2)

inst_32561:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:97683*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97683*0 + 3*305*FLEN/8, x4, x1, x2)

inst_32562:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:97686*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97686*0 + 3*306*FLEN/8, x4, x1, x2)

inst_32563:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff666666; valaddr_reg:x3; val_offset:97689*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97689*0 + 3*307*FLEN/8, x4, x1, x2)

inst_32564:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:97692*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97692*0 + 3*308*FLEN/8, x4, x1, x2)

inst_32565:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:97695*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97695*0 + 3*309*FLEN/8, x4, x1, x2)

inst_32566:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:97698*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97698*0 + 3*310*FLEN/8, x4, x1, x2)

inst_32567:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258545 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x45f825 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258545; op2val:0xbfc5f825;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:97701*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97701*0 + 3*311*FLEN/8, x4, x1, x2)

inst_32568:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:97704*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97704*0 + 3*312*FLEN/8, x4, x1, x2)

inst_32569:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:97707*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97707*0 + 3*313*FLEN/8, x4, x1, x2)

inst_32570:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:97710*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97710*0 + 3*314*FLEN/8, x4, x1, x2)

inst_32571:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:97713*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97713*0 + 3*315*FLEN/8, x4, x1, x2)

inst_32572:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:97716*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97716*0 + 3*316*FLEN/8, x4, x1, x2)

inst_32573:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:97719*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97719*0 + 3*317*FLEN/8, x4, x1, x2)

inst_32574:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:97722*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97722*0 + 3*318*FLEN/8, x4, x1, x2)

inst_32575:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:97725*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97725*0 + 3*319*FLEN/8, x4, x1, x2)

inst_32576:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:97728*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97728*0 + 3*320*FLEN/8, x4, x1, x2)

inst_32577:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:97731*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97731*0 + 3*321*FLEN/8, x4, x1, x2)

inst_32578:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:97734*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97734*0 + 3*322*FLEN/8, x4, x1, x2)

inst_32579:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:97737*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97737*0 + 3*323*FLEN/8, x4, x1, x2)

inst_32580:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:97740*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97740*0 + 3*324*FLEN/8, x4, x1, x2)

inst_32581:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:97743*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97743*0 + 3*325*FLEN/8, x4, x1, x2)

inst_32582:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:97746*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97746*0 + 3*326*FLEN/8, x4, x1, x2)

inst_32583:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:97749*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97749*0 + 3*327*FLEN/8, x4, x1, x2)

inst_32584:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f800000; valaddr_reg:x3; val_offset:97752*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97752*0 + 3*328*FLEN/8, x4, x1, x2)

inst_32585:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f800001; valaddr_reg:x3; val_offset:97755*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97755*0 + 3*329*FLEN/8, x4, x1, x2)

inst_32586:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f800003; valaddr_reg:x3; val_offset:97758*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97758*0 + 3*330*FLEN/8, x4, x1, x2)

inst_32587:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f800007; valaddr_reg:x3; val_offset:97761*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97761*0 + 3*331*FLEN/8, x4, x1, x2)

inst_32588:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f80000f; valaddr_reg:x3; val_offset:97764*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97764*0 + 3*332*FLEN/8, x4, x1, x2)

inst_32589:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f80001f; valaddr_reg:x3; val_offset:97767*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97767*0 + 3*333*FLEN/8, x4, x1, x2)

inst_32590:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f80003f; valaddr_reg:x3; val_offset:97770*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97770*0 + 3*334*FLEN/8, x4, x1, x2)

inst_32591:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f80007f; valaddr_reg:x3; val_offset:97773*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97773*0 + 3*335*FLEN/8, x4, x1, x2)

inst_32592:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f8000ff; valaddr_reg:x3; val_offset:97776*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97776*0 + 3*336*FLEN/8, x4, x1, x2)

inst_32593:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f8001ff; valaddr_reg:x3; val_offset:97779*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97779*0 + 3*337*FLEN/8, x4, x1, x2)

inst_32594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f8003ff; valaddr_reg:x3; val_offset:97782*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97782*0 + 3*338*FLEN/8, x4, x1, x2)

inst_32595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f8007ff; valaddr_reg:x3; val_offset:97785*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97785*0 + 3*339*FLEN/8, x4, x1, x2)

inst_32596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f800fff; valaddr_reg:x3; val_offset:97788*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97788*0 + 3*340*FLEN/8, x4, x1, x2)

inst_32597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f801fff; valaddr_reg:x3; val_offset:97791*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97791*0 + 3*341*FLEN/8, x4, x1, x2)

inst_32598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f803fff; valaddr_reg:x3; val_offset:97794*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97794*0 + 3*342*FLEN/8, x4, x1, x2)

inst_32599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f807fff; valaddr_reg:x3; val_offset:97797*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97797*0 + 3*343*FLEN/8, x4, x1, x2)

inst_32600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f80ffff; valaddr_reg:x3; val_offset:97800*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97800*0 + 3*344*FLEN/8, x4, x1, x2)

inst_32601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f81ffff; valaddr_reg:x3; val_offset:97803*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97803*0 + 3*345*FLEN/8, x4, x1, x2)

inst_32602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f83ffff; valaddr_reg:x3; val_offset:97806*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97806*0 + 3*346*FLEN/8, x4, x1, x2)

inst_32603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f87ffff; valaddr_reg:x3; val_offset:97809*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97809*0 + 3*347*FLEN/8, x4, x1, x2)

inst_32604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f8fffff; valaddr_reg:x3; val_offset:97812*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97812*0 + 3*348*FLEN/8, x4, x1, x2)

inst_32605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8f9fffff; valaddr_reg:x3; val_offset:97815*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97815*0 + 3*349*FLEN/8, x4, x1, x2)

inst_32606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fbfffff; valaddr_reg:x3; val_offset:97818*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97818*0 + 3*350*FLEN/8, x4, x1, x2)

inst_32607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fc00000; valaddr_reg:x3; val_offset:97821*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97821*0 + 3*351*FLEN/8, x4, x1, x2)

inst_32608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fe00000; valaddr_reg:x3; val_offset:97824*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97824*0 + 3*352*FLEN/8, x4, x1, x2)

inst_32609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ff00000; valaddr_reg:x3; val_offset:97827*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97827*0 + 3*353*FLEN/8, x4, x1, x2)

inst_32610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ff80000; valaddr_reg:x3; val_offset:97830*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97830*0 + 3*354*FLEN/8, x4, x1, x2)

inst_32611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffc0000; valaddr_reg:x3; val_offset:97833*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97833*0 + 3*355*FLEN/8, x4, x1, x2)

inst_32612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffe0000; valaddr_reg:x3; val_offset:97836*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97836*0 + 3*356*FLEN/8, x4, x1, x2)

inst_32613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fff0000; valaddr_reg:x3; val_offset:97839*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97839*0 + 3*357*FLEN/8, x4, x1, x2)

inst_32614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fff8000; valaddr_reg:x3; val_offset:97842*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97842*0 + 3*358*FLEN/8, x4, x1, x2)

inst_32615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fffc000; valaddr_reg:x3; val_offset:97845*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97845*0 + 3*359*FLEN/8, x4, x1, x2)

inst_32616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fffe000; valaddr_reg:x3; val_offset:97848*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97848*0 + 3*360*FLEN/8, x4, x1, x2)

inst_32617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffff000; valaddr_reg:x3; val_offset:97851*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97851*0 + 3*361*FLEN/8, x4, x1, x2)

inst_32618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffff800; valaddr_reg:x3; val_offset:97854*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97854*0 + 3*362*FLEN/8, x4, x1, x2)

inst_32619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffffc00; valaddr_reg:x3; val_offset:97857*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97857*0 + 3*363*FLEN/8, x4, x1, x2)

inst_32620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffffe00; valaddr_reg:x3; val_offset:97860*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97860*0 + 3*364*FLEN/8, x4, x1, x2)

inst_32621:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fffff00; valaddr_reg:x3; val_offset:97863*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97863*0 + 3*365*FLEN/8, x4, x1, x2)

inst_32622:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fffff80; valaddr_reg:x3; val_offset:97866*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97866*0 + 3*366*FLEN/8, x4, x1, x2)

inst_32623:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fffffc0; valaddr_reg:x3; val_offset:97869*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97869*0 + 3*367*FLEN/8, x4, x1, x2)

inst_32624:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fffffe0; valaddr_reg:x3; val_offset:97872*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97872*0 + 3*368*FLEN/8, x4, x1, x2)

inst_32625:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffffff0; valaddr_reg:x3; val_offset:97875*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97875*0 + 3*369*FLEN/8, x4, x1, x2)

inst_32626:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffffff8; valaddr_reg:x3; val_offset:97878*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97878*0 + 3*370*FLEN/8, x4, x1, x2)

inst_32627:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffffffc; valaddr_reg:x3; val_offset:97881*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97881*0 + 3*371*FLEN/8, x4, x1, x2)

inst_32628:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8ffffffe; valaddr_reg:x3; val_offset:97884*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97884*0 + 3*372*FLEN/8, x4, x1, x2)

inst_32629:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x258f9d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f258f9d; op2val:0x80000000;
op3val:0x8fffffff; valaddr_reg:x3; val_offset:97887*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97887*0 + 3*373*FLEN/8, x4, x1, x2)

inst_32630:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbf800001; valaddr_reg:x3; val_offset:97890*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97890*0 + 3*374*FLEN/8, x4, x1, x2)

inst_32631:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbf800003; valaddr_reg:x3; val_offset:97893*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97893*0 + 3*375*FLEN/8, x4, x1, x2)

inst_32632:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbf800007; valaddr_reg:x3; val_offset:97896*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97896*0 + 3*376*FLEN/8, x4, x1, x2)

inst_32633:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbf999999; valaddr_reg:x3; val_offset:97899*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97899*0 + 3*377*FLEN/8, x4, x1, x2)

inst_32634:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:97902*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97902*0 + 3*378*FLEN/8, x4, x1, x2)

inst_32635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:97905*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97905*0 + 3*379*FLEN/8, x4, x1, x2)

inst_32636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:97908*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97908*0 + 3*380*FLEN/8, x4, x1, x2)

inst_32637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:97911*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97911*0 + 3*381*FLEN/8, x4, x1, x2)

inst_32638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:97914*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97914*0 + 3*382*FLEN/8, x4, x1, x2)

inst_32639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:97917*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97917*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_32640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:97920*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97920*0 + 3*384*FLEN/8, x4, x1, x2)

inst_32641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:97923*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97923*0 + 3*385*FLEN/8, x4, x1, x2)

inst_32642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:97926*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97926*0 + 3*386*FLEN/8, x4, x1, x2)

inst_32643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:97929*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97929*0 + 3*387*FLEN/8, x4, x1, x2)

inst_32644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:97932*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97932*0 + 3*388*FLEN/8, x4, x1, x2)

inst_32645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:97935*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97935*0 + 3*389*FLEN/8, x4, x1, x2)

inst_32646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1800000; valaddr_reg:x3; val_offset:97938*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97938*0 + 3*390*FLEN/8, x4, x1, x2)

inst_32647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1800001; valaddr_reg:x3; val_offset:97941*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97941*0 + 3*391*FLEN/8, x4, x1, x2)

inst_32648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1800003; valaddr_reg:x3; val_offset:97944*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97944*0 + 3*392*FLEN/8, x4, x1, x2)

inst_32649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1800007; valaddr_reg:x3; val_offset:97947*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97947*0 + 3*393*FLEN/8, x4, x1, x2)

inst_32650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc180000f; valaddr_reg:x3; val_offset:97950*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97950*0 + 3*394*FLEN/8, x4, x1, x2)

inst_32651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc180001f; valaddr_reg:x3; val_offset:97953*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97953*0 + 3*395*FLEN/8, x4, x1, x2)

inst_32652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc180003f; valaddr_reg:x3; val_offset:97956*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97956*0 + 3*396*FLEN/8, x4, x1, x2)

inst_32653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc180007f; valaddr_reg:x3; val_offset:97959*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97959*0 + 3*397*FLEN/8, x4, x1, x2)

inst_32654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc18000ff; valaddr_reg:x3; val_offset:97962*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97962*0 + 3*398*FLEN/8, x4, x1, x2)

inst_32655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc18001ff; valaddr_reg:x3; val_offset:97965*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97965*0 + 3*399*FLEN/8, x4, x1, x2)

inst_32656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc18003ff; valaddr_reg:x3; val_offset:97968*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97968*0 + 3*400*FLEN/8, x4, x1, x2)

inst_32657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc18007ff; valaddr_reg:x3; val_offset:97971*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97971*0 + 3*401*FLEN/8, x4, x1, x2)

inst_32658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1800fff; valaddr_reg:x3; val_offset:97974*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97974*0 + 3*402*FLEN/8, x4, x1, x2)

inst_32659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1801fff; valaddr_reg:x3; val_offset:97977*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97977*0 + 3*403*FLEN/8, x4, x1, x2)

inst_32660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1803fff; valaddr_reg:x3; val_offset:97980*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97980*0 + 3*404*FLEN/8, x4, x1, x2)

inst_32661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1807fff; valaddr_reg:x3; val_offset:97983*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97983*0 + 3*405*FLEN/8, x4, x1, x2)

inst_32662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc180ffff; valaddr_reg:x3; val_offset:97986*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97986*0 + 3*406*FLEN/8, x4, x1, x2)

inst_32663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc181ffff; valaddr_reg:x3; val_offset:97989*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97989*0 + 3*407*FLEN/8, x4, x1, x2)

inst_32664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc183ffff; valaddr_reg:x3; val_offset:97992*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97992*0 + 3*408*FLEN/8, x4, x1, x2)

inst_32665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc187ffff; valaddr_reg:x3; val_offset:97995*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97995*0 + 3*409*FLEN/8, x4, x1, x2)

inst_32666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc18fffff; valaddr_reg:x3; val_offset:97998*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 97998*0 + 3*410*FLEN/8, x4, x1, x2)

inst_32667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc19fffff; valaddr_reg:x3; val_offset:98001*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98001*0 + 3*411*FLEN/8, x4, x1, x2)

inst_32668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1bfffff; valaddr_reg:x3; val_offset:98004*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98004*0 + 3*412*FLEN/8, x4, x1, x2)

inst_32669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1c00000; valaddr_reg:x3; val_offset:98007*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98007*0 + 3*413*FLEN/8, x4, x1, x2)

inst_32670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1e00000; valaddr_reg:x3; val_offset:98010*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98010*0 + 3*414*FLEN/8, x4, x1, x2)

inst_32671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1f00000; valaddr_reg:x3; val_offset:98013*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98013*0 + 3*415*FLEN/8, x4, x1, x2)

inst_32672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1f80000; valaddr_reg:x3; val_offset:98016*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98016*0 + 3*416*FLEN/8, x4, x1, x2)

inst_32673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fc0000; valaddr_reg:x3; val_offset:98019*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98019*0 + 3*417*FLEN/8, x4, x1, x2)

inst_32674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fe0000; valaddr_reg:x3; val_offset:98022*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98022*0 + 3*418*FLEN/8, x4, x1, x2)

inst_32675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1ff0000; valaddr_reg:x3; val_offset:98025*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98025*0 + 3*419*FLEN/8, x4, x1, x2)

inst_32676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1ff8000; valaddr_reg:x3; val_offset:98028*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98028*0 + 3*420*FLEN/8, x4, x1, x2)

inst_32677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1ffc000; valaddr_reg:x3; val_offset:98031*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98031*0 + 3*421*FLEN/8, x4, x1, x2)

inst_32678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1ffe000; valaddr_reg:x3; val_offset:98034*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98034*0 + 3*422*FLEN/8, x4, x1, x2)

inst_32679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fff000; valaddr_reg:x3; val_offset:98037*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98037*0 + 3*423*FLEN/8, x4, x1, x2)

inst_32680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fff800; valaddr_reg:x3; val_offset:98040*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98040*0 + 3*424*FLEN/8, x4, x1, x2)

inst_32681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fffc00; valaddr_reg:x3; val_offset:98043*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98043*0 + 3*425*FLEN/8, x4, x1, x2)

inst_32682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fffe00; valaddr_reg:x3; val_offset:98046*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98046*0 + 3*426*FLEN/8, x4, x1, x2)

inst_32683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1ffff00; valaddr_reg:x3; val_offset:98049*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98049*0 + 3*427*FLEN/8, x4, x1, x2)

inst_32684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1ffff80; valaddr_reg:x3; val_offset:98052*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98052*0 + 3*428*FLEN/8, x4, x1, x2)

inst_32685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1ffffc0; valaddr_reg:x3; val_offset:98055*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98055*0 + 3*429*FLEN/8, x4, x1, x2)

inst_32686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1ffffe0; valaddr_reg:x3; val_offset:98058*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98058*0 + 3*430*FLEN/8, x4, x1, x2)

inst_32687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fffff0; valaddr_reg:x3; val_offset:98061*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98061*0 + 3*431*FLEN/8, x4, x1, x2)

inst_32688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fffff8; valaddr_reg:x3; val_offset:98064*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98064*0 + 3*432*FLEN/8, x4, x1, x2)

inst_32689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fffffc; valaddr_reg:x3; val_offset:98067*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98067*0 + 3*433*FLEN/8, x4, x1, x2)

inst_32690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1fffffe; valaddr_reg:x3; val_offset:98070*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98070*0 + 3*434*FLEN/8, x4, x1, x2)

inst_32691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x263b79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3147c9 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f263b79; op2val:0x803147c9;
op3val:0xc1ffffff; valaddr_reg:x3; val_offset:98073*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98073*0 + 3*435*FLEN/8, x4, x1, x2)

inst_32692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5000000; valaddr_reg:x3; val_offset:98076*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98076*0 + 3*436*FLEN/8, x4, x1, x2)

inst_32693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5000001; valaddr_reg:x3; val_offset:98079*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98079*0 + 3*437*FLEN/8, x4, x1, x2)

inst_32694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5000003; valaddr_reg:x3; val_offset:98082*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98082*0 + 3*438*FLEN/8, x4, x1, x2)

inst_32695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5000007; valaddr_reg:x3; val_offset:98085*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98085*0 + 3*439*FLEN/8, x4, x1, x2)

inst_32696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf500000f; valaddr_reg:x3; val_offset:98088*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98088*0 + 3*440*FLEN/8, x4, x1, x2)

inst_32697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf500001f; valaddr_reg:x3; val_offset:98091*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98091*0 + 3*441*FLEN/8, x4, x1, x2)

inst_32698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf500003f; valaddr_reg:x3; val_offset:98094*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98094*0 + 3*442*FLEN/8, x4, x1, x2)

inst_32699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf500007f; valaddr_reg:x3; val_offset:98097*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98097*0 + 3*443*FLEN/8, x4, x1, x2)

inst_32700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf50000ff; valaddr_reg:x3; val_offset:98100*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98100*0 + 3*444*FLEN/8, x4, x1, x2)

inst_32701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf50001ff; valaddr_reg:x3; val_offset:98103*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98103*0 + 3*445*FLEN/8, x4, x1, x2)

inst_32702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf50003ff; valaddr_reg:x3; val_offset:98106*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98106*0 + 3*446*FLEN/8, x4, x1, x2)

inst_32703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf50007ff; valaddr_reg:x3; val_offset:98109*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98109*0 + 3*447*FLEN/8, x4, x1, x2)

inst_32704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5000fff; valaddr_reg:x3; val_offset:98112*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98112*0 + 3*448*FLEN/8, x4, x1, x2)

inst_32705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5001fff; valaddr_reg:x3; val_offset:98115*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98115*0 + 3*449*FLEN/8, x4, x1, x2)

inst_32706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5003fff; valaddr_reg:x3; val_offset:98118*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98118*0 + 3*450*FLEN/8, x4, x1, x2)

inst_32707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5007fff; valaddr_reg:x3; val_offset:98121*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98121*0 + 3*451*FLEN/8, x4, x1, x2)

inst_32708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf500ffff; valaddr_reg:x3; val_offset:98124*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98124*0 + 3*452*FLEN/8, x4, x1, x2)

inst_32709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf501ffff; valaddr_reg:x3; val_offset:98127*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98127*0 + 3*453*FLEN/8, x4, x1, x2)

inst_32710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf503ffff; valaddr_reg:x3; val_offset:98130*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98130*0 + 3*454*FLEN/8, x4, x1, x2)

inst_32711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf507ffff; valaddr_reg:x3; val_offset:98133*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98133*0 + 3*455*FLEN/8, x4, x1, x2)

inst_32712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf50fffff; valaddr_reg:x3; val_offset:98136*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98136*0 + 3*456*FLEN/8, x4, x1, x2)

inst_32713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf51fffff; valaddr_reg:x3; val_offset:98139*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98139*0 + 3*457*FLEN/8, x4, x1, x2)

inst_32714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf53fffff; valaddr_reg:x3; val_offset:98142*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98142*0 + 3*458*FLEN/8, x4, x1, x2)

inst_32715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5400000; valaddr_reg:x3; val_offset:98145*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98145*0 + 3*459*FLEN/8, x4, x1, x2)

inst_32716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5600000; valaddr_reg:x3; val_offset:98148*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98148*0 + 3*460*FLEN/8, x4, x1, x2)

inst_32717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5700000; valaddr_reg:x3; val_offset:98151*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98151*0 + 3*461*FLEN/8, x4, x1, x2)

inst_32718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf5780000; valaddr_reg:x3; val_offset:98154*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98154*0 + 3*462*FLEN/8, x4, x1, x2)

inst_32719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57c0000; valaddr_reg:x3; val_offset:98157*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98157*0 + 3*463*FLEN/8, x4, x1, x2)

inst_32720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57e0000; valaddr_reg:x3; val_offset:98160*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98160*0 + 3*464*FLEN/8, x4, x1, x2)

inst_32721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57f0000; valaddr_reg:x3; val_offset:98163*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98163*0 + 3*465*FLEN/8, x4, x1, x2)

inst_32722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57f8000; valaddr_reg:x3; val_offset:98166*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98166*0 + 3*466*FLEN/8, x4, x1, x2)

inst_32723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57fc000; valaddr_reg:x3; val_offset:98169*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98169*0 + 3*467*FLEN/8, x4, x1, x2)

inst_32724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57fe000; valaddr_reg:x3; val_offset:98172*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98172*0 + 3*468*FLEN/8, x4, x1, x2)

inst_32725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57ff000; valaddr_reg:x3; val_offset:98175*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98175*0 + 3*469*FLEN/8, x4, x1, x2)

inst_32726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57ff800; valaddr_reg:x3; val_offset:98178*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98178*0 + 3*470*FLEN/8, x4, x1, x2)

inst_32727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57ffc00; valaddr_reg:x3; val_offset:98181*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98181*0 + 3*471*FLEN/8, x4, x1, x2)

inst_32728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57ffe00; valaddr_reg:x3; val_offset:98184*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98184*0 + 3*472*FLEN/8, x4, x1, x2)

inst_32729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57fff00; valaddr_reg:x3; val_offset:98187*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98187*0 + 3*473*FLEN/8, x4, x1, x2)

inst_32730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57fff80; valaddr_reg:x3; val_offset:98190*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98190*0 + 3*474*FLEN/8, x4, x1, x2)

inst_32731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57fffc0; valaddr_reg:x3; val_offset:98193*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98193*0 + 3*475*FLEN/8, x4, x1, x2)

inst_32732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57fffe0; valaddr_reg:x3; val_offset:98196*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98196*0 + 3*476*FLEN/8, x4, x1, x2)

inst_32733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57ffff0; valaddr_reg:x3; val_offset:98199*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98199*0 + 3*477*FLEN/8, x4, x1, x2)

inst_32734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57ffff8; valaddr_reg:x3; val_offset:98202*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98202*0 + 3*478*FLEN/8, x4, x1, x2)

inst_32735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57ffffc; valaddr_reg:x3; val_offset:98205*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98205*0 + 3*479*FLEN/8, x4, x1, x2)

inst_32736:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57ffffe; valaddr_reg:x3; val_offset:98208*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98208*0 + 3*480*FLEN/8, x4, x1, x2)

inst_32737:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xea and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xf57fffff; valaddr_reg:x3; val_offset:98211*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98211*0 + 3*481*FLEN/8, x4, x1, x2)

inst_32738:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff000001; valaddr_reg:x3; val_offset:98214*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98214*0 + 3*482*FLEN/8, x4, x1, x2)

inst_32739:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff000003; valaddr_reg:x3; val_offset:98217*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98217*0 + 3*483*FLEN/8, x4, x1, x2)

inst_32740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff000007; valaddr_reg:x3; val_offset:98220*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98220*0 + 3*484*FLEN/8, x4, x1, x2)

inst_32741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff199999; valaddr_reg:x3; val_offset:98223*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98223*0 + 3*485*FLEN/8, x4, x1, x2)

inst_32742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff249249; valaddr_reg:x3; val_offset:98226*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98226*0 + 3*486*FLEN/8, x4, x1, x2)

inst_32743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff333333; valaddr_reg:x3; val_offset:98229*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98229*0 + 3*487*FLEN/8, x4, x1, x2)

inst_32744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:98232*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98232*0 + 3*488*FLEN/8, x4, x1, x2)

inst_32745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:98235*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98235*0 + 3*489*FLEN/8, x4, x1, x2)

inst_32746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff444444; valaddr_reg:x3; val_offset:98238*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98238*0 + 3*490*FLEN/8, x4, x1, x2)

inst_32747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:98241*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98241*0 + 3*491*FLEN/8, x4, x1, x2)

inst_32748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:98244*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98244*0 + 3*492*FLEN/8, x4, x1, x2)

inst_32749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff666666; valaddr_reg:x3; val_offset:98247*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98247*0 + 3*493*FLEN/8, x4, x1, x2)

inst_32750:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:98250*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98250*0 + 3*494*FLEN/8, x4, x1, x2)

inst_32751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:98253*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98253*0 + 3*495*FLEN/8, x4, x1, x2)

inst_32752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:98256*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98256*0 + 3*496*FLEN/8, x4, x1, x2)

inst_32753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26b03d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x449511 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f26b03d; op2val:0xbfc49511;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:98259*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98259*0 + 3*497*FLEN/8, x4, x1, x2)

inst_32754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad800000; valaddr_reg:x3; val_offset:98262*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98262*0 + 3*498*FLEN/8, x4, x1, x2)

inst_32755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad800001; valaddr_reg:x3; val_offset:98265*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98265*0 + 3*499*FLEN/8, x4, x1, x2)

inst_32756:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad800003; valaddr_reg:x3; val_offset:98268*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98268*0 + 3*500*FLEN/8, x4, x1, x2)

inst_32757:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad800007; valaddr_reg:x3; val_offset:98271*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98271*0 + 3*501*FLEN/8, x4, x1, x2)

inst_32758:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad80000f; valaddr_reg:x3; val_offset:98274*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98274*0 + 3*502*FLEN/8, x4, x1, x2)

inst_32759:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad80001f; valaddr_reg:x3; val_offset:98277*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98277*0 + 3*503*FLEN/8, x4, x1, x2)

inst_32760:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad80003f; valaddr_reg:x3; val_offset:98280*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98280*0 + 3*504*FLEN/8, x4, x1, x2)

inst_32761:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad80007f; valaddr_reg:x3; val_offset:98283*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98283*0 + 3*505*FLEN/8, x4, x1, x2)

inst_32762:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad8000ff; valaddr_reg:x3; val_offset:98286*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98286*0 + 3*506*FLEN/8, x4, x1, x2)

inst_32763:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad8001ff; valaddr_reg:x3; val_offset:98289*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98289*0 + 3*507*FLEN/8, x4, x1, x2)

inst_32764:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad8003ff; valaddr_reg:x3; val_offset:98292*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98292*0 + 3*508*FLEN/8, x4, x1, x2)

inst_32765:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad8007ff; valaddr_reg:x3; val_offset:98295*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98295*0 + 3*509*FLEN/8, x4, x1, x2)

inst_32766:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad800fff; valaddr_reg:x3; val_offset:98298*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98298*0 + 3*510*FLEN/8, x4, x1, x2)

inst_32767:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad801fff; valaddr_reg:x3; val_offset:98301*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98301*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_32768:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad803fff; valaddr_reg:x3; val_offset:98304*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98304*0 + 3*512*FLEN/8, x4, x1, x2)

inst_32769:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad807fff; valaddr_reg:x3; val_offset:98307*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98307*0 + 3*513*FLEN/8, x4, x1, x2)

inst_32770:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad80ffff; valaddr_reg:x3; val_offset:98310*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98310*0 + 3*514*FLEN/8, x4, x1, x2)

inst_32771:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad81ffff; valaddr_reg:x3; val_offset:98313*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98313*0 + 3*515*FLEN/8, x4, x1, x2)

inst_32772:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad83ffff; valaddr_reg:x3; val_offset:98316*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98316*0 + 3*516*FLEN/8, x4, x1, x2)

inst_32773:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad87ffff; valaddr_reg:x3; val_offset:98319*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98319*0 + 3*517*FLEN/8, x4, x1, x2)

inst_32774:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad8fffff; valaddr_reg:x3; val_offset:98322*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98322*0 + 3*518*FLEN/8, x4, x1, x2)

inst_32775:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xad9fffff; valaddr_reg:x3; val_offset:98325*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98325*0 + 3*519*FLEN/8, x4, x1, x2)

inst_32776:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadbfffff; valaddr_reg:x3; val_offset:98328*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98328*0 + 3*520*FLEN/8, x4, x1, x2)

inst_32777:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadc00000; valaddr_reg:x3; val_offset:98331*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98331*0 + 3*521*FLEN/8, x4, x1, x2)

inst_32778:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xade00000; valaddr_reg:x3; val_offset:98334*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98334*0 + 3*522*FLEN/8, x4, x1, x2)

inst_32779:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadf00000; valaddr_reg:x3; val_offset:98337*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98337*0 + 3*523*FLEN/8, x4, x1, x2)

inst_32780:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadf80000; valaddr_reg:x3; val_offset:98340*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98340*0 + 3*524*FLEN/8, x4, x1, x2)

inst_32781:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfc0000; valaddr_reg:x3; val_offset:98343*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98343*0 + 3*525*FLEN/8, x4, x1, x2)

inst_32782:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfe0000; valaddr_reg:x3; val_offset:98346*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98346*0 + 3*526*FLEN/8, x4, x1, x2)

inst_32783:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadff0000; valaddr_reg:x3; val_offset:98349*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98349*0 + 3*527*FLEN/8, x4, x1, x2)

inst_32784:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadff8000; valaddr_reg:x3; val_offset:98352*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98352*0 + 3*528*FLEN/8, x4, x1, x2)

inst_32785:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadffc000; valaddr_reg:x3; val_offset:98355*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98355*0 + 3*529*FLEN/8, x4, x1, x2)

inst_32786:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadffe000; valaddr_reg:x3; val_offset:98358*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98358*0 + 3*530*FLEN/8, x4, x1, x2)

inst_32787:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfff000; valaddr_reg:x3; val_offset:98361*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98361*0 + 3*531*FLEN/8, x4, x1, x2)

inst_32788:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfff800; valaddr_reg:x3; val_offset:98364*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98364*0 + 3*532*FLEN/8, x4, x1, x2)

inst_32789:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfffc00; valaddr_reg:x3; val_offset:98367*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98367*0 + 3*533*FLEN/8, x4, x1, x2)

inst_32790:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfffe00; valaddr_reg:x3; val_offset:98370*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98370*0 + 3*534*FLEN/8, x4, x1, x2)

inst_32791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadffff00; valaddr_reg:x3; val_offset:98373*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98373*0 + 3*535*FLEN/8, x4, x1, x2)

inst_32792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadffff80; valaddr_reg:x3; val_offset:98376*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98376*0 + 3*536*FLEN/8, x4, x1, x2)

inst_32793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadffffc0; valaddr_reg:x3; val_offset:98379*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98379*0 + 3*537*FLEN/8, x4, x1, x2)

inst_32794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadffffe0; valaddr_reg:x3; val_offset:98382*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98382*0 + 3*538*FLEN/8, x4, x1, x2)

inst_32795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfffff0; valaddr_reg:x3; val_offset:98385*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98385*0 + 3*539*FLEN/8, x4, x1, x2)

inst_32796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfffff8; valaddr_reg:x3; val_offset:98388*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98388*0 + 3*540*FLEN/8, x4, x1, x2)

inst_32797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfffffc; valaddr_reg:x3; val_offset:98391*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98391*0 + 3*541*FLEN/8, x4, x1, x2)

inst_32798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadfffffe; valaddr_reg:x3; val_offset:98394*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98394*0 + 3*542*FLEN/8, x4, x1, x2)

inst_32799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x5b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xadffffff; valaddr_reg:x3; val_offset:98397*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98397*0 + 3*543*FLEN/8, x4, x1, x2)

inst_32800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbf800001; valaddr_reg:x3; val_offset:98400*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98400*0 + 3*544*FLEN/8, x4, x1, x2)

inst_32801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbf800003; valaddr_reg:x3; val_offset:98403*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98403*0 + 3*545*FLEN/8, x4, x1, x2)

inst_32802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbf800007; valaddr_reg:x3; val_offset:98406*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98406*0 + 3*546*FLEN/8, x4, x1, x2)

inst_32803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbf999999; valaddr_reg:x3; val_offset:98409*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98409*0 + 3*547*FLEN/8, x4, x1, x2)

inst_32804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:98412*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98412*0 + 3*548*FLEN/8, x4, x1, x2)

inst_32805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:98415*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98415*0 + 3*549*FLEN/8, x4, x1, x2)

inst_32806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:98418*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98418*0 + 3*550*FLEN/8, x4, x1, x2)

inst_32807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:98421*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98421*0 + 3*551*FLEN/8, x4, x1, x2)

inst_32808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:98424*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98424*0 + 3*552*FLEN/8, x4, x1, x2)

inst_32809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:98427*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98427*0 + 3*553*FLEN/8, x4, x1, x2)

inst_32810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:98430*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98430*0 + 3*554*FLEN/8, x4, x1, x2)

inst_32811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:98433*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98433*0 + 3*555*FLEN/8, x4, x1, x2)

inst_32812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:98436*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98436*0 + 3*556*FLEN/8, x4, x1, x2)

inst_32813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:98439*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98439*0 + 3*557*FLEN/8, x4, x1, x2)

inst_32814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:98442*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98442*0 + 3*558*FLEN/8, x4, x1, x2)

inst_32815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27dfe7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x30cc5e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27dfe7; op2val:0x8030cc5e;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:98445*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98445*0 + 3*559*FLEN/8, x4, x1, x2)

inst_32816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3f800001; valaddr_reg:x3; val_offset:98448*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98448*0 + 3*560*FLEN/8, x4, x1, x2)

inst_32817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3f800003; valaddr_reg:x3; val_offset:98451*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98451*0 + 3*561*FLEN/8, x4, x1, x2)

inst_32818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3f800007; valaddr_reg:x3; val_offset:98454*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98454*0 + 3*562*FLEN/8, x4, x1, x2)

inst_32819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3f999999; valaddr_reg:x3; val_offset:98457*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98457*0 + 3*563*FLEN/8, x4, x1, x2)

inst_32820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:98460*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98460*0 + 3*564*FLEN/8, x4, x1, x2)

inst_32821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:98463*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98463*0 + 3*565*FLEN/8, x4, x1, x2)

inst_32822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:98466*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98466*0 + 3*566*FLEN/8, x4, x1, x2)

inst_32823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:98469*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98469*0 + 3*567*FLEN/8, x4, x1, x2)

inst_32824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:98472*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98472*0 + 3*568*FLEN/8, x4, x1, x2)

inst_32825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:98475*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98475*0 + 3*569*FLEN/8, x4, x1, x2)

inst_32826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:98478*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98478*0 + 3*570*FLEN/8, x4, x1, x2)

inst_32827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:98481*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98481*0 + 3*571*FLEN/8, x4, x1, x2)

inst_32828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:98484*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98484*0 + 3*572*FLEN/8, x4, x1, x2)

inst_32829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:98487*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98487*0 + 3*573*FLEN/8, x4, x1, x2)

inst_32830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:98490*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98490*0 + 3*574*FLEN/8, x4, x1, x2)

inst_32831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:98493*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98493*0 + 3*575*FLEN/8, x4, x1, x2)

inst_32832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41800000; valaddr_reg:x3; val_offset:98496*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98496*0 + 3*576*FLEN/8, x4, x1, x2)

inst_32833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41800001; valaddr_reg:x3; val_offset:98499*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98499*0 + 3*577*FLEN/8, x4, x1, x2)

inst_32834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41800003; valaddr_reg:x3; val_offset:98502*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98502*0 + 3*578*FLEN/8, x4, x1, x2)

inst_32835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41800007; valaddr_reg:x3; val_offset:98505*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98505*0 + 3*579*FLEN/8, x4, x1, x2)

inst_32836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x4180000f; valaddr_reg:x3; val_offset:98508*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98508*0 + 3*580*FLEN/8, x4, x1, x2)

inst_32837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x4180001f; valaddr_reg:x3; val_offset:98511*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98511*0 + 3*581*FLEN/8, x4, x1, x2)

inst_32838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x4180003f; valaddr_reg:x3; val_offset:98514*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98514*0 + 3*582*FLEN/8, x4, x1, x2)

inst_32839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x4180007f; valaddr_reg:x3; val_offset:98517*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98517*0 + 3*583*FLEN/8, x4, x1, x2)

inst_32840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x418000ff; valaddr_reg:x3; val_offset:98520*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98520*0 + 3*584*FLEN/8, x4, x1, x2)

inst_32841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x418001ff; valaddr_reg:x3; val_offset:98523*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98523*0 + 3*585*FLEN/8, x4, x1, x2)

inst_32842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x418003ff; valaddr_reg:x3; val_offset:98526*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98526*0 + 3*586*FLEN/8, x4, x1, x2)

inst_32843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x418007ff; valaddr_reg:x3; val_offset:98529*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98529*0 + 3*587*FLEN/8, x4, x1, x2)

inst_32844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41800fff; valaddr_reg:x3; val_offset:98532*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98532*0 + 3*588*FLEN/8, x4, x1, x2)

inst_32845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41801fff; valaddr_reg:x3; val_offset:98535*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98535*0 + 3*589*FLEN/8, x4, x1, x2)

inst_32846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41803fff; valaddr_reg:x3; val_offset:98538*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98538*0 + 3*590*FLEN/8, x4, x1, x2)

inst_32847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41807fff; valaddr_reg:x3; val_offset:98541*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98541*0 + 3*591*FLEN/8, x4, x1, x2)

inst_32848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x4180ffff; valaddr_reg:x3; val_offset:98544*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98544*0 + 3*592*FLEN/8, x4, x1, x2)

inst_32849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x4181ffff; valaddr_reg:x3; val_offset:98547*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98547*0 + 3*593*FLEN/8, x4, x1, x2)

inst_32850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x4183ffff; valaddr_reg:x3; val_offset:98550*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98550*0 + 3*594*FLEN/8, x4, x1, x2)

inst_32851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x4187ffff; valaddr_reg:x3; val_offset:98553*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98553*0 + 3*595*FLEN/8, x4, x1, x2)

inst_32852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x418fffff; valaddr_reg:x3; val_offset:98556*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98556*0 + 3*596*FLEN/8, x4, x1, x2)

inst_32853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x419fffff; valaddr_reg:x3; val_offset:98559*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98559*0 + 3*597*FLEN/8, x4, x1, x2)

inst_32854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41bfffff; valaddr_reg:x3; val_offset:98562*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98562*0 + 3*598*FLEN/8, x4, x1, x2)

inst_32855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41c00000; valaddr_reg:x3; val_offset:98565*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98565*0 + 3*599*FLEN/8, x4, x1, x2)

inst_32856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41e00000; valaddr_reg:x3; val_offset:98568*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98568*0 + 3*600*FLEN/8, x4, x1, x2)

inst_32857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41f00000; valaddr_reg:x3; val_offset:98571*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98571*0 + 3*601*FLEN/8, x4, x1, x2)

inst_32858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41f80000; valaddr_reg:x3; val_offset:98574*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98574*0 + 3*602*FLEN/8, x4, x1, x2)

inst_32859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fc0000; valaddr_reg:x3; val_offset:98577*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98577*0 + 3*603*FLEN/8, x4, x1, x2)

inst_32860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fe0000; valaddr_reg:x3; val_offset:98580*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98580*0 + 3*604*FLEN/8, x4, x1, x2)

inst_32861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41ff0000; valaddr_reg:x3; val_offset:98583*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98583*0 + 3*605*FLEN/8, x4, x1, x2)

inst_32862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41ff8000; valaddr_reg:x3; val_offset:98586*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98586*0 + 3*606*FLEN/8, x4, x1, x2)

inst_32863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41ffc000; valaddr_reg:x3; val_offset:98589*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98589*0 + 3*607*FLEN/8, x4, x1, x2)

inst_32864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41ffe000; valaddr_reg:x3; val_offset:98592*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98592*0 + 3*608*FLEN/8, x4, x1, x2)

inst_32865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fff000; valaddr_reg:x3; val_offset:98595*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98595*0 + 3*609*FLEN/8, x4, x1, x2)

inst_32866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fff800; valaddr_reg:x3; val_offset:98598*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98598*0 + 3*610*FLEN/8, x4, x1, x2)

inst_32867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fffc00; valaddr_reg:x3; val_offset:98601*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98601*0 + 3*611*FLEN/8, x4, x1, x2)

inst_32868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fffe00; valaddr_reg:x3; val_offset:98604*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98604*0 + 3*612*FLEN/8, x4, x1, x2)

inst_32869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41ffff00; valaddr_reg:x3; val_offset:98607*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98607*0 + 3*613*FLEN/8, x4, x1, x2)

inst_32870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41ffff80; valaddr_reg:x3; val_offset:98610*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98610*0 + 3*614*FLEN/8, x4, x1, x2)

inst_32871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41ffffc0; valaddr_reg:x3; val_offset:98613*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98613*0 + 3*615*FLEN/8, x4, x1, x2)

inst_32872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41ffffe0; valaddr_reg:x3; val_offset:98616*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98616*0 + 3*616*FLEN/8, x4, x1, x2)

inst_32873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fffff0; valaddr_reg:x3; val_offset:98619*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98619*0 + 3*617*FLEN/8, x4, x1, x2)

inst_32874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fffff8; valaddr_reg:x3; val_offset:98622*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98622*0 + 3*618*FLEN/8, x4, x1, x2)

inst_32875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fffffc; valaddr_reg:x3; val_offset:98625*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98625*0 + 3*619*FLEN/8, x4, x1, x2)

inst_32876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41fffffe; valaddr_reg:x3; val_offset:98628*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98628*0 + 3*620*FLEN/8, x4, x1, x2)

inst_32877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e4a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30cafe and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e4a2; op2val:0x30cafe;
op3val:0x41ffffff; valaddr_reg:x3; val_offset:98631*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98631*0 + 3*621*FLEN/8, x4, x1, x2)

inst_32878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79000000; valaddr_reg:x3; val_offset:98634*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98634*0 + 3*622*FLEN/8, x4, x1, x2)

inst_32879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79000001; valaddr_reg:x3; val_offset:98637*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98637*0 + 3*623*FLEN/8, x4, x1, x2)

inst_32880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79000003; valaddr_reg:x3; val_offset:98640*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98640*0 + 3*624*FLEN/8, x4, x1, x2)

inst_32881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79000007; valaddr_reg:x3; val_offset:98643*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98643*0 + 3*625*FLEN/8, x4, x1, x2)

inst_32882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7900000f; valaddr_reg:x3; val_offset:98646*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98646*0 + 3*626*FLEN/8, x4, x1, x2)

inst_32883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7900001f; valaddr_reg:x3; val_offset:98649*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98649*0 + 3*627*FLEN/8, x4, x1, x2)

inst_32884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7900003f; valaddr_reg:x3; val_offset:98652*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98652*0 + 3*628*FLEN/8, x4, x1, x2)

inst_32885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7900007f; valaddr_reg:x3; val_offset:98655*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98655*0 + 3*629*FLEN/8, x4, x1, x2)

inst_32886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x790000ff; valaddr_reg:x3; val_offset:98658*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98658*0 + 3*630*FLEN/8, x4, x1, x2)

inst_32887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x790001ff; valaddr_reg:x3; val_offset:98661*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98661*0 + 3*631*FLEN/8, x4, x1, x2)

inst_32888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x790003ff; valaddr_reg:x3; val_offset:98664*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98664*0 + 3*632*FLEN/8, x4, x1, x2)

inst_32889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x790007ff; valaddr_reg:x3; val_offset:98667*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98667*0 + 3*633*FLEN/8, x4, x1, x2)

inst_32890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79000fff; valaddr_reg:x3; val_offset:98670*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98670*0 + 3*634*FLEN/8, x4, x1, x2)

inst_32891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79001fff; valaddr_reg:x3; val_offset:98673*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98673*0 + 3*635*FLEN/8, x4, x1, x2)

inst_32892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79003fff; valaddr_reg:x3; val_offset:98676*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98676*0 + 3*636*FLEN/8, x4, x1, x2)

inst_32893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79007fff; valaddr_reg:x3; val_offset:98679*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98679*0 + 3*637*FLEN/8, x4, x1, x2)

inst_32894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7900ffff; valaddr_reg:x3; val_offset:98682*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98682*0 + 3*638*FLEN/8, x4, x1, x2)

inst_32895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7901ffff; valaddr_reg:x3; val_offset:98685*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98685*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_32896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7903ffff; valaddr_reg:x3; val_offset:98688*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98688*0 + 3*640*FLEN/8, x4, x1, x2)

inst_32897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7907ffff; valaddr_reg:x3; val_offset:98691*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98691*0 + 3*641*FLEN/8, x4, x1, x2)

inst_32898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x790fffff; valaddr_reg:x3; val_offset:98694*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98694*0 + 3*642*FLEN/8, x4, x1, x2)

inst_32899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x791fffff; valaddr_reg:x3; val_offset:98697*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98697*0 + 3*643*FLEN/8, x4, x1, x2)

inst_32900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x793fffff; valaddr_reg:x3; val_offset:98700*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98700*0 + 3*644*FLEN/8, x4, x1, x2)

inst_32901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79400000; valaddr_reg:x3; val_offset:98703*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98703*0 + 3*645*FLEN/8, x4, x1, x2)

inst_32902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79600000; valaddr_reg:x3; val_offset:98706*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98706*0 + 3*646*FLEN/8, x4, x1, x2)

inst_32903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79700000; valaddr_reg:x3; val_offset:98709*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98709*0 + 3*647*FLEN/8, x4, x1, x2)

inst_32904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x79780000; valaddr_reg:x3; val_offset:98712*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98712*0 + 3*648*FLEN/8, x4, x1, x2)

inst_32905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797c0000; valaddr_reg:x3; val_offset:98715*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98715*0 + 3*649*FLEN/8, x4, x1, x2)

inst_32906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797e0000; valaddr_reg:x3; val_offset:98718*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98718*0 + 3*650*FLEN/8, x4, x1, x2)

inst_32907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797f0000; valaddr_reg:x3; val_offset:98721*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98721*0 + 3*651*FLEN/8, x4, x1, x2)

inst_32908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797f8000; valaddr_reg:x3; val_offset:98724*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98724*0 + 3*652*FLEN/8, x4, x1, x2)

inst_32909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797fc000; valaddr_reg:x3; val_offset:98727*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98727*0 + 3*653*FLEN/8, x4, x1, x2)

inst_32910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797fe000; valaddr_reg:x3; val_offset:98730*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98730*0 + 3*654*FLEN/8, x4, x1, x2)

inst_32911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797ff000; valaddr_reg:x3; val_offset:98733*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98733*0 + 3*655*FLEN/8, x4, x1, x2)

inst_32912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797ff800; valaddr_reg:x3; val_offset:98736*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98736*0 + 3*656*FLEN/8, x4, x1, x2)

inst_32913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797ffc00; valaddr_reg:x3; val_offset:98739*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98739*0 + 3*657*FLEN/8, x4, x1, x2)

inst_32914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797ffe00; valaddr_reg:x3; val_offset:98742*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98742*0 + 3*658*FLEN/8, x4, x1, x2)

inst_32915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797fff00; valaddr_reg:x3; val_offset:98745*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98745*0 + 3*659*FLEN/8, x4, x1, x2)

inst_32916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797fff80; valaddr_reg:x3; val_offset:98748*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98748*0 + 3*660*FLEN/8, x4, x1, x2)

inst_32917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797fffc0; valaddr_reg:x3; val_offset:98751*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98751*0 + 3*661*FLEN/8, x4, x1, x2)

inst_32918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797fffe0; valaddr_reg:x3; val_offset:98754*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98754*0 + 3*662*FLEN/8, x4, x1, x2)

inst_32919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797ffff0; valaddr_reg:x3; val_offset:98757*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98757*0 + 3*663*FLEN/8, x4, x1, x2)

inst_32920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797ffff8; valaddr_reg:x3; val_offset:98760*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98760*0 + 3*664*FLEN/8, x4, x1, x2)

inst_32921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797ffffc; valaddr_reg:x3; val_offset:98763*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98763*0 + 3*665*FLEN/8, x4, x1, x2)

inst_32922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797ffffe; valaddr_reg:x3; val_offset:98766*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98766*0 + 3*666*FLEN/8, x4, x1, x2)

inst_32923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x797fffff; valaddr_reg:x3; val_offset:98769*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98769*0 + 3*667*FLEN/8, x4, x1, x2)

inst_32924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f000001; valaddr_reg:x3; val_offset:98772*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98772*0 + 3*668*FLEN/8, x4, x1, x2)

inst_32925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f000003; valaddr_reg:x3; val_offset:98775*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98775*0 + 3*669*FLEN/8, x4, x1, x2)

inst_32926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f000007; valaddr_reg:x3; val_offset:98778*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98778*0 + 3*670*FLEN/8, x4, x1, x2)

inst_32927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f199999; valaddr_reg:x3; val_offset:98781*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98781*0 + 3*671*FLEN/8, x4, x1, x2)

inst_32928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f249249; valaddr_reg:x3; val_offset:98784*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98784*0 + 3*672*FLEN/8, x4, x1, x2)

inst_32929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f333333; valaddr_reg:x3; val_offset:98787*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98787*0 + 3*673*FLEN/8, x4, x1, x2)

inst_32930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:98790*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98790*0 + 3*674*FLEN/8, x4, x1, x2)

inst_32931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:98793*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98793*0 + 3*675*FLEN/8, x4, x1, x2)

inst_32932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f444444; valaddr_reg:x3; val_offset:98796*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98796*0 + 3*676*FLEN/8, x4, x1, x2)

inst_32933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:98799*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98799*0 + 3*677*FLEN/8, x4, x1, x2)

inst_32934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:98802*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98802*0 + 3*678*FLEN/8, x4, x1, x2)

inst_32935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f666666; valaddr_reg:x3; val_offset:98805*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98805*0 + 3*679*FLEN/8, x4, x1, x2)

inst_32936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:98808*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98808*0 + 3*680*FLEN/8, x4, x1, x2)

inst_32937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:98811*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98811*0 + 3*681*FLEN/8, x4, x1, x2)

inst_32938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:98814*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98814*0 + 3*682*FLEN/8, x4, x1, x2)

inst_32939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2818ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x42ef7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2818ba; op2val:0x3fc2ef7e;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:98817*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98817*0 + 3*683*FLEN/8, x4, x1, x2)

inst_32940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:98820*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98820*0 + 3*684*FLEN/8, x4, x1, x2)

inst_32941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:98823*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98823*0 + 3*685*FLEN/8, x4, x1, x2)

inst_32942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:98826*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98826*0 + 3*686*FLEN/8, x4, x1, x2)

inst_32943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:98829*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98829*0 + 3*687*FLEN/8, x4, x1, x2)

inst_32944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:98832*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98832*0 + 3*688*FLEN/8, x4, x1, x2)

inst_32945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:98835*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98835*0 + 3*689*FLEN/8, x4, x1, x2)

inst_32946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:98838*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98838*0 + 3*690*FLEN/8, x4, x1, x2)

inst_32947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:98841*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98841*0 + 3*691*FLEN/8, x4, x1, x2)

inst_32948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:98844*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98844*0 + 3*692*FLEN/8, x4, x1, x2)

inst_32949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:98847*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98847*0 + 3*693*FLEN/8, x4, x1, x2)

inst_32950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:98850*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98850*0 + 3*694*FLEN/8, x4, x1, x2)

inst_32951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:98853*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98853*0 + 3*695*FLEN/8, x4, x1, x2)

inst_32952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:98856*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98856*0 + 3*696*FLEN/8, x4, x1, x2)

inst_32953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:98859*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98859*0 + 3*697*FLEN/8, x4, x1, x2)

inst_32954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:98862*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98862*0 + 3*698*FLEN/8, x4, x1, x2)

inst_32955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:98865*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98865*0 + 3*699*FLEN/8, x4, x1, x2)

inst_32956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d800000; valaddr_reg:x3; val_offset:98868*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98868*0 + 3*700*FLEN/8, x4, x1, x2)

inst_32957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d800001; valaddr_reg:x3; val_offset:98871*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98871*0 + 3*701*FLEN/8, x4, x1, x2)

inst_32958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d800003; valaddr_reg:x3; val_offset:98874*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98874*0 + 3*702*FLEN/8, x4, x1, x2)

inst_32959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d800007; valaddr_reg:x3; val_offset:98877*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98877*0 + 3*703*FLEN/8, x4, x1, x2)

inst_32960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d80000f; valaddr_reg:x3; val_offset:98880*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98880*0 + 3*704*FLEN/8, x4, x1, x2)

inst_32961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d80001f; valaddr_reg:x3; val_offset:98883*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98883*0 + 3*705*FLEN/8, x4, x1, x2)

inst_32962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d80003f; valaddr_reg:x3; val_offset:98886*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98886*0 + 3*706*FLEN/8, x4, x1, x2)

inst_32963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d80007f; valaddr_reg:x3; val_offset:98889*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98889*0 + 3*707*FLEN/8, x4, x1, x2)

inst_32964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d8000ff; valaddr_reg:x3; val_offset:98892*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98892*0 + 3*708*FLEN/8, x4, x1, x2)

inst_32965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d8001ff; valaddr_reg:x3; val_offset:98895*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98895*0 + 3*709*FLEN/8, x4, x1, x2)

inst_32966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d8003ff; valaddr_reg:x3; val_offset:98898*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98898*0 + 3*710*FLEN/8, x4, x1, x2)

inst_32967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d8007ff; valaddr_reg:x3; val_offset:98901*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98901*0 + 3*711*FLEN/8, x4, x1, x2)

inst_32968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d800fff; valaddr_reg:x3; val_offset:98904*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98904*0 + 3*712*FLEN/8, x4, x1, x2)

inst_32969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d801fff; valaddr_reg:x3; val_offset:98907*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98907*0 + 3*713*FLEN/8, x4, x1, x2)

inst_32970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d803fff; valaddr_reg:x3; val_offset:98910*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98910*0 + 3*714*FLEN/8, x4, x1, x2)

inst_32971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d807fff; valaddr_reg:x3; val_offset:98913*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98913*0 + 3*715*FLEN/8, x4, x1, x2)

inst_32972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d80ffff; valaddr_reg:x3; val_offset:98916*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98916*0 + 3*716*FLEN/8, x4, x1, x2)

inst_32973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d81ffff; valaddr_reg:x3; val_offset:98919*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98919*0 + 3*717*FLEN/8, x4, x1, x2)

inst_32974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d83ffff; valaddr_reg:x3; val_offset:98922*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98922*0 + 3*718*FLEN/8, x4, x1, x2)

inst_32975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d87ffff; valaddr_reg:x3; val_offset:98925*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98925*0 + 3*719*FLEN/8, x4, x1, x2)

inst_32976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d8fffff; valaddr_reg:x3; val_offset:98928*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98928*0 + 3*720*FLEN/8, x4, x1, x2)

inst_32977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8d9fffff; valaddr_reg:x3; val_offset:98931*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98931*0 + 3*721*FLEN/8, x4, x1, x2)

inst_32978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dbfffff; valaddr_reg:x3; val_offset:98934*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98934*0 + 3*722*FLEN/8, x4, x1, x2)

inst_32979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dc00000; valaddr_reg:x3; val_offset:98937*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98937*0 + 3*723*FLEN/8, x4, x1, x2)

inst_32980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8de00000; valaddr_reg:x3; val_offset:98940*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98940*0 + 3*724*FLEN/8, x4, x1, x2)

inst_32981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8df00000; valaddr_reg:x3; val_offset:98943*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98943*0 + 3*725*FLEN/8, x4, x1, x2)

inst_32982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8df80000; valaddr_reg:x3; val_offset:98946*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98946*0 + 3*726*FLEN/8, x4, x1, x2)

inst_32983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfc0000; valaddr_reg:x3; val_offset:98949*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98949*0 + 3*727*FLEN/8, x4, x1, x2)

inst_32984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfe0000; valaddr_reg:x3; val_offset:98952*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98952*0 + 3*728*FLEN/8, x4, x1, x2)

inst_32985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dff0000; valaddr_reg:x3; val_offset:98955*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98955*0 + 3*729*FLEN/8, x4, x1, x2)

inst_32986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dff8000; valaddr_reg:x3; val_offset:98958*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98958*0 + 3*730*FLEN/8, x4, x1, x2)

inst_32987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dffc000; valaddr_reg:x3; val_offset:98961*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98961*0 + 3*731*FLEN/8, x4, x1, x2)

inst_32988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dffe000; valaddr_reg:x3; val_offset:98964*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98964*0 + 3*732*FLEN/8, x4, x1, x2)

inst_32989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfff000; valaddr_reg:x3; val_offset:98967*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98967*0 + 3*733*FLEN/8, x4, x1, x2)

inst_32990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfff800; valaddr_reg:x3; val_offset:98970*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98970*0 + 3*734*FLEN/8, x4, x1, x2)

inst_32991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfffc00; valaddr_reg:x3; val_offset:98973*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98973*0 + 3*735*FLEN/8, x4, x1, x2)

inst_32992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfffe00; valaddr_reg:x3; val_offset:98976*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98976*0 + 3*736*FLEN/8, x4, x1, x2)

inst_32993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dffff00; valaddr_reg:x3; val_offset:98979*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98979*0 + 3*737*FLEN/8, x4, x1, x2)

inst_32994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dffff80; valaddr_reg:x3; val_offset:98982*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98982*0 + 3*738*FLEN/8, x4, x1, x2)

inst_32995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dffffc0; valaddr_reg:x3; val_offset:98985*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98985*0 + 3*739*FLEN/8, x4, x1, x2)

inst_32996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dffffe0; valaddr_reg:x3; val_offset:98988*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98988*0 + 3*740*FLEN/8, x4, x1, x2)

inst_32997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfffff0; valaddr_reg:x3; val_offset:98991*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98991*0 + 3*741*FLEN/8, x4, x1, x2)

inst_32998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfffff8; valaddr_reg:x3; val_offset:98994*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98994*0 + 3*742*FLEN/8, x4, x1, x2)

inst_32999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfffffc; valaddr_reg:x3; val_offset:98997*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 98997*0 + 3*743*FLEN/8, x4, x1, x2)

inst_33000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dfffffe; valaddr_reg:x3; val_offset:99000*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99000*0 + 3*744*FLEN/8, x4, x1, x2)

inst_33001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28535e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28535e; op2val:0x80000000;
op3val:0x8dffffff; valaddr_reg:x3; val_offset:99003*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99003*0 + 3*745*FLEN/8, x4, x1, x2)

inst_33002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:99006*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99006*0 + 3*746*FLEN/8, x4, x1, x2)

inst_33003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:99009*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99009*0 + 3*747*FLEN/8, x4, x1, x2)

inst_33004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:99012*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99012*0 + 3*748*FLEN/8, x4, x1, x2)

inst_33005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:99015*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99015*0 + 3*749*FLEN/8, x4, x1, x2)

inst_33006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:99018*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99018*0 + 3*750*FLEN/8, x4, x1, x2)

inst_33007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:99021*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99021*0 + 3*751*FLEN/8, x4, x1, x2)

inst_33008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:99024*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99024*0 + 3*752*FLEN/8, x4, x1, x2)

inst_33009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:99027*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99027*0 + 3*753*FLEN/8, x4, x1, x2)

inst_33010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:99030*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99030*0 + 3*754*FLEN/8, x4, x1, x2)

inst_33011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:99033*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99033*0 + 3*755*FLEN/8, x4, x1, x2)

inst_33012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:99036*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99036*0 + 3*756*FLEN/8, x4, x1, x2)

inst_33013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:99039*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99039*0 + 3*757*FLEN/8, x4, x1, x2)

inst_33014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:99042*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99042*0 + 3*758*FLEN/8, x4, x1, x2)

inst_33015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:99045*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99045*0 + 3*759*FLEN/8, x4, x1, x2)

inst_33016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:99048*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99048*0 + 3*760*FLEN/8, x4, x1, x2)

inst_33017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:99051*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99051*0 + 3*761*FLEN/8, x4, x1, x2)

inst_33018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x3000000; valaddr_reg:x3; val_offset:99054*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99054*0 + 3*762*FLEN/8, x4, x1, x2)

inst_33019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x3000001; valaddr_reg:x3; val_offset:99057*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99057*0 + 3*763*FLEN/8, x4, x1, x2)

inst_33020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x3000003; valaddr_reg:x3; val_offset:99060*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99060*0 + 3*764*FLEN/8, x4, x1, x2)

inst_33021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x3000007; valaddr_reg:x3; val_offset:99063*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99063*0 + 3*765*FLEN/8, x4, x1, x2)

inst_33022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x300000f; valaddr_reg:x3; val_offset:99066*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99066*0 + 3*766*FLEN/8, x4, x1, x2)

inst_33023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x287bf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f287bf4; op2val:0x0;
op3val:0x300001f; valaddr_reg:x3; val_offset:99069*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99069*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2133025140,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535424,32,FLEN)
NAN_BOXED(2133025140,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535488,32,FLEN)
NAN_BOXED(2133025140,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535520,32,FLEN)
NAN_BOXED(2133025140,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535536,32,FLEN)
NAN_BOXED(2133025140,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535544,32,FLEN)
NAN_BOXED(2133025140,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535548,32,FLEN)
NAN_BOXED(2133025140,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535550,32,FLEN)
NAN_BOXED(2133025140,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535551,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2133039386,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122317824,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122317825,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122317827,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122317831,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122317839,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122317855,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122317887,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122317951,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122318079,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122318335,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122318847,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122319871,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122321919,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122326015,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122334207,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122350591,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122383359,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122448895,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122579967,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2122842111,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2123366399,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2124414975,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2126512127,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2126512128,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2128609280,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2129657856,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130182144,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130444288,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130575360,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130640896,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130673664,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130690048,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130698240,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130702336,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130704384,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130705408,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130705920,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706176,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706304,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706368,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706400,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706416,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706424,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706428,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706430,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706431,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2133121583,32,FLEN)
NAN_BOXED(1069991321,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426688,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426689,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426691,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426695,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426703,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426719,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426751,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426815,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426943,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427199,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427711,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189428735,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189430783,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189434879,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189443071,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189459455,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189492223,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189557759,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189688831,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189950975,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2190475263,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2191523839,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620991,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620992,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2195718144,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2196766720,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197291008,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197553152,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197684224,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197749760,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197782528,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197798912,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197807104,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197811200,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197813248,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814272,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814784,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815040,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815168,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815232,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815264,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815280,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815288,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815292,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815294,32,FLEN)
NAN_BOXED(2133126127,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815295,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009754624,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009754625,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009754627,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009754631,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009754639,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009754655,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009754687,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009754751,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009754879,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009755135,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009755647,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009756671,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009758719,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009762815,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009771007,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009787391,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009820159,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4009885695,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4010016767,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4010278911,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4010803199,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4011851775,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4013948927,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4013948928,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4016046080,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4017094656,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4017618944,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4017881088,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018012160,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018077696,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018110464,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018126848,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018135040,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018139136,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018141184,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018142208,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018142720,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018142976,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018143104,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018143168,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018143200,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018143216,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018143224,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018143228,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018143230,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4018143231,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2133154911,32,FLEN)
NAN_BOXED(3217434907,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219469824,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219469825,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219469827,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219469831,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219469839,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219469855,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219469887,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219469951,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219470079,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219470335,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219470847,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219471871,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219473919,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219478015,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219486207,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219502591,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219535359,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219600895,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219731967,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4219994111,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4220518399,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4221566975,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4223664127,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4223664128,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4225761280,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4226809856,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227334144,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227596288,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227727360,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227792896,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227825664,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227842048,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227850240,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227854336,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227856384,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227857408,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227857920,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227858176,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227858304,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227858368,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227858400,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227858416,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227858424,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227858428,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227858430,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4227858431,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2133165381,32,FLEN)
NAN_BOXED(3217422373,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530496,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530497,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530499,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530503,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530511,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530527,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530559,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530623,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530751,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407531007,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407531519,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407532543,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407534591,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407538687,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407546879,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407563263,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407596031,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407661567,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407792639,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2408054783,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2408579071,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2409627647,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2411724799,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2411724800,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2413821952,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2414870528,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415394816,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415656960,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415788032,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415853568,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415886336,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415902720,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415910912,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415915008,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415917056,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918080,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918592,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918848,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918976,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919040,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919072,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919088,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919096,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919100,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919102,32,FLEN)
NAN_BOXED(2133168029,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919103,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391296,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391297,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391299,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391303,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391311,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391327,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391359,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391423,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391551,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246391807,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246392319,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246393343,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246395391,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246399487,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246407679,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246424063,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246456831,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246522367,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246653439,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3246915583,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3247439871,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3248488447,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3250585599,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3250585600,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3252682752,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3253731328,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254255616,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254517760,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254648832,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254714368,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254747136,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254763520,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254771712,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254775808,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254777856,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254778880,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779392,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779648,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779776,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779840,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779872,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779888,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779896,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779900,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779902,32,FLEN)
NAN_BOXED(2133212025,32,FLEN)
NAN_BOXED(2150713289,32,FLEN)
NAN_BOXED(3254779903,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110417920,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110417921,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110417923,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110417927,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110417935,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110417951,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110417983,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110418047,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110418175,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110418431,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110418943,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110419967,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110422015,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110426111,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110434303,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110450687,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110483455,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110548991,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110680063,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4110942207,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4111466495,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4112515071,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4114612223,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4114612224,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4116709376,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4117757952,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118282240,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118544384,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118675456,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118740992,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118773760,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118790144,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118798336,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118802432,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118804480,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118805504,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806016,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806272,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806400,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806464,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806496,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806512,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806520,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806524,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806526,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4118806527,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2133241917,32,FLEN)
NAN_BOXED(3217331473,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910846976,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910846977,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910846979,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910846983,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910846991,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910847007,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910847039,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910847103,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910847231,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910847487,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910847999,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910849023,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910851071,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910855167,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910863359,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910879743,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910912511,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2910978047,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2911109119,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2911371263,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2911895551,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2912944127,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2915041279,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2915041280,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2917138432,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2918187008,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2918711296,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2918973440,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919104512,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919170048,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919202816,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919219200,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919227392,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919231488,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919233536,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919234560,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235072,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235328,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235456,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235520,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235552,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235568,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235576,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235580,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235582,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(2919235583,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2133319655,32,FLEN)
NAN_BOXED(2150681694,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098907648,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098907649,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098907651,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098907655,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098907663,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098907679,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098907711,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098907775,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098907903,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098908159,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098908671,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098909695,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098911743,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098915839,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098924031,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098940415,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1098973183,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1099038719,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1099169791,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1099431935,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1099956223,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1101004799,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1103101951,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1103101952,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1105199104,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1106247680,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1106771968,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107034112,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107165184,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107230720,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107263488,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107279872,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107288064,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107292160,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107294208,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107295232,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107295744,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107296000,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107296128,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107296192,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107296224,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107296240,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107296248,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107296252,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107296254,32,FLEN)
NAN_BOXED(2133320866,32,FLEN)
NAN_BOXED(3197694,32,FLEN)
NAN_BOXED(1107296255,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043136,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043137,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043139,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043143,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043151,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043167,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043199,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043263,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043391,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030043647,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030044159,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030045183,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030047231,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030051327,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030059519,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030075903,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030108671,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030174207,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030305279,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2030567423,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2031091711,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2032140287,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2034237439,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2034237440,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2036334592,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2037383168,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2037907456,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038169600,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038300672,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038366208,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038398976,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038415360,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038423552,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038427648,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038429696,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038430720,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431232,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431488,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431616,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431680,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431712,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431728,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431736,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431740,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431742,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2038431743,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2133334202,32,FLEN)
NAN_BOXED(1069739902,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976064,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976065,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976067,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976071,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976079,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976095,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976127,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976191,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976319,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976575,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373977087,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373978111,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373980159,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373984255,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373992447,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374008831,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374041599,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374107135,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374238207,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2374500351,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2375024639,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2376073215,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170367,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2378170368,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2380267520,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381316096,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2381840384,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382102528,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382233600,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382299136,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382331904,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382348288,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382356480,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382360576,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382362624,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382363648,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364160,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364416,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364544,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364608,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364640,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364656,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364664,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364668,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364670,32,FLEN)
NAN_BOXED(2133349214,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364671,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331648,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331649,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331651,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331655,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331663,32,FLEN)
NAN_BOXED(2133359604,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331679,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
