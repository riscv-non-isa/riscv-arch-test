
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_25344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d001fff; valaddr_reg:x3; val_offset:76032*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76032*0 + 3*0*FLEN/8, x4, x1, x2)

inst_25345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d003fff; valaddr_reg:x3; val_offset:76035*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76035*0 + 3*1*FLEN/8, x4, x1, x2)

inst_25346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d007fff; valaddr_reg:x3; val_offset:76038*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76038*0 + 3*2*FLEN/8, x4, x1, x2)

inst_25347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d00ffff; valaddr_reg:x3; val_offset:76041*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76041*0 + 3*3*FLEN/8, x4, x1, x2)

inst_25348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d01ffff; valaddr_reg:x3; val_offset:76044*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76044*0 + 3*4*FLEN/8, x4, x1, x2)

inst_25349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d03ffff; valaddr_reg:x3; val_offset:76047*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76047*0 + 3*5*FLEN/8, x4, x1, x2)

inst_25350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d07ffff; valaddr_reg:x3; val_offset:76050*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76050*0 + 3*6*FLEN/8, x4, x1, x2)

inst_25351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d0fffff; valaddr_reg:x3; val_offset:76053*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76053*0 + 3*7*FLEN/8, x4, x1, x2)

inst_25352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d1fffff; valaddr_reg:x3; val_offset:76056*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76056*0 + 3*8*FLEN/8, x4, x1, x2)

inst_25353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d3fffff; valaddr_reg:x3; val_offset:76059*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76059*0 + 3*9*FLEN/8, x4, x1, x2)

inst_25354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d400000; valaddr_reg:x3; val_offset:76062*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76062*0 + 3*10*FLEN/8, x4, x1, x2)

inst_25355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d600000; valaddr_reg:x3; val_offset:76065*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76065*0 + 3*11*FLEN/8, x4, x1, x2)

inst_25356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d700000; valaddr_reg:x3; val_offset:76068*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76068*0 + 3*12*FLEN/8, x4, x1, x2)

inst_25357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d780000; valaddr_reg:x3; val_offset:76071*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76071*0 + 3*13*FLEN/8, x4, x1, x2)

inst_25358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7c0000; valaddr_reg:x3; val_offset:76074*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76074*0 + 3*14*FLEN/8, x4, x1, x2)

inst_25359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7e0000; valaddr_reg:x3; val_offset:76077*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76077*0 + 3*15*FLEN/8, x4, x1, x2)

inst_25360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7f0000; valaddr_reg:x3; val_offset:76080*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76080*0 + 3*16*FLEN/8, x4, x1, x2)

inst_25361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7f8000; valaddr_reg:x3; val_offset:76083*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76083*0 + 3*17*FLEN/8, x4, x1, x2)

inst_25362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7fc000; valaddr_reg:x3; val_offset:76086*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76086*0 + 3*18*FLEN/8, x4, x1, x2)

inst_25363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7fe000; valaddr_reg:x3; val_offset:76089*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76089*0 + 3*19*FLEN/8, x4, x1, x2)

inst_25364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7ff000; valaddr_reg:x3; val_offset:76092*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76092*0 + 3*20*FLEN/8, x4, x1, x2)

inst_25365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7ff800; valaddr_reg:x3; val_offset:76095*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76095*0 + 3*21*FLEN/8, x4, x1, x2)

inst_25366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7ffc00; valaddr_reg:x3; val_offset:76098*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76098*0 + 3*22*FLEN/8, x4, x1, x2)

inst_25367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7ffe00; valaddr_reg:x3; val_offset:76101*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76101*0 + 3*23*FLEN/8, x4, x1, x2)

inst_25368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7fff00; valaddr_reg:x3; val_offset:76104*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76104*0 + 3*24*FLEN/8, x4, x1, x2)

inst_25369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7fff80; valaddr_reg:x3; val_offset:76107*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76107*0 + 3*25*FLEN/8, x4, x1, x2)

inst_25370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7fffc0; valaddr_reg:x3; val_offset:76110*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76110*0 + 3*26*FLEN/8, x4, x1, x2)

inst_25371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7fffe0; valaddr_reg:x3; val_offset:76113*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76113*0 + 3*27*FLEN/8, x4, x1, x2)

inst_25372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7ffff0; valaddr_reg:x3; val_offset:76116*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76116*0 + 3*28*FLEN/8, x4, x1, x2)

inst_25373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7ffff8; valaddr_reg:x3; val_offset:76119*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76119*0 + 3*29*FLEN/8, x4, x1, x2)

inst_25374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7ffffc; valaddr_reg:x3; val_offset:76122*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76122*0 + 3*30*FLEN/8, x4, x1, x2)

inst_25375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7ffffe; valaddr_reg:x3; val_offset:76125*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76125*0 + 3*31*FLEN/8, x4, x1, x2)

inst_25376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024f42 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f024f42; op2val:0x80000000;
op3val:0x8d7fffff; valaddr_reg:x3; val_offset:76128*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76128*0 + 3*32*FLEN/8, x4, x1, x2)

inst_25377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b800000; valaddr_reg:x3; val_offset:76131*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76131*0 + 3*33*FLEN/8, x4, x1, x2)

inst_25378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b800001; valaddr_reg:x3; val_offset:76134*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76134*0 + 3*34*FLEN/8, x4, x1, x2)

inst_25379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b800003; valaddr_reg:x3; val_offset:76137*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76137*0 + 3*35*FLEN/8, x4, x1, x2)

inst_25380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b800007; valaddr_reg:x3; val_offset:76140*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76140*0 + 3*36*FLEN/8, x4, x1, x2)

inst_25381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b80000f; valaddr_reg:x3; val_offset:76143*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76143*0 + 3*37*FLEN/8, x4, x1, x2)

inst_25382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b80001f; valaddr_reg:x3; val_offset:76146*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76146*0 + 3*38*FLEN/8, x4, x1, x2)

inst_25383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b80003f; valaddr_reg:x3; val_offset:76149*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76149*0 + 3*39*FLEN/8, x4, x1, x2)

inst_25384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b80007f; valaddr_reg:x3; val_offset:76152*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76152*0 + 3*40*FLEN/8, x4, x1, x2)

inst_25385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b8000ff; valaddr_reg:x3; val_offset:76155*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76155*0 + 3*41*FLEN/8, x4, x1, x2)

inst_25386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b8001ff; valaddr_reg:x3; val_offset:76158*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76158*0 + 3*42*FLEN/8, x4, x1, x2)

inst_25387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b8003ff; valaddr_reg:x3; val_offset:76161*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76161*0 + 3*43*FLEN/8, x4, x1, x2)

inst_25388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b8007ff; valaddr_reg:x3; val_offset:76164*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76164*0 + 3*44*FLEN/8, x4, x1, x2)

inst_25389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b800fff; valaddr_reg:x3; val_offset:76167*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76167*0 + 3*45*FLEN/8, x4, x1, x2)

inst_25390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b801fff; valaddr_reg:x3; val_offset:76170*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76170*0 + 3*46*FLEN/8, x4, x1, x2)

inst_25391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b803fff; valaddr_reg:x3; val_offset:76173*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76173*0 + 3*47*FLEN/8, x4, x1, x2)

inst_25392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b807fff; valaddr_reg:x3; val_offset:76176*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76176*0 + 3*48*FLEN/8, x4, x1, x2)

inst_25393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b80ffff; valaddr_reg:x3; val_offset:76179*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76179*0 + 3*49*FLEN/8, x4, x1, x2)

inst_25394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b81ffff; valaddr_reg:x3; val_offset:76182*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76182*0 + 3*50*FLEN/8, x4, x1, x2)

inst_25395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b83ffff; valaddr_reg:x3; val_offset:76185*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76185*0 + 3*51*FLEN/8, x4, x1, x2)

inst_25396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b87ffff; valaddr_reg:x3; val_offset:76188*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76188*0 + 3*52*FLEN/8, x4, x1, x2)

inst_25397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b8fffff; valaddr_reg:x3; val_offset:76191*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76191*0 + 3*53*FLEN/8, x4, x1, x2)

inst_25398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6b9fffff; valaddr_reg:x3; val_offset:76194*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76194*0 + 3*54*FLEN/8, x4, x1, x2)

inst_25399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bbfffff; valaddr_reg:x3; val_offset:76197*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76197*0 + 3*55*FLEN/8, x4, x1, x2)

inst_25400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bc00000; valaddr_reg:x3; val_offset:76200*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76200*0 + 3*56*FLEN/8, x4, x1, x2)

inst_25401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6be00000; valaddr_reg:x3; val_offset:76203*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76203*0 + 3*57*FLEN/8, x4, x1, x2)

inst_25402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bf00000; valaddr_reg:x3; val_offset:76206*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76206*0 + 3*58*FLEN/8, x4, x1, x2)

inst_25403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bf80000; valaddr_reg:x3; val_offset:76209*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76209*0 + 3*59*FLEN/8, x4, x1, x2)

inst_25404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfc0000; valaddr_reg:x3; val_offset:76212*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76212*0 + 3*60*FLEN/8, x4, x1, x2)

inst_25405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfe0000; valaddr_reg:x3; val_offset:76215*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76215*0 + 3*61*FLEN/8, x4, x1, x2)

inst_25406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bff0000; valaddr_reg:x3; val_offset:76218*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76218*0 + 3*62*FLEN/8, x4, x1, x2)

inst_25407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bff8000; valaddr_reg:x3; val_offset:76221*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76221*0 + 3*63*FLEN/8, x4, x1, x2)

inst_25408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bffc000; valaddr_reg:x3; val_offset:76224*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76224*0 + 3*64*FLEN/8, x4, x1, x2)

inst_25409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bffe000; valaddr_reg:x3; val_offset:76227*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76227*0 + 3*65*FLEN/8, x4, x1, x2)

inst_25410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfff000; valaddr_reg:x3; val_offset:76230*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76230*0 + 3*66*FLEN/8, x4, x1, x2)

inst_25411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfff800; valaddr_reg:x3; val_offset:76233*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76233*0 + 3*67*FLEN/8, x4, x1, x2)

inst_25412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfffc00; valaddr_reg:x3; val_offset:76236*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76236*0 + 3*68*FLEN/8, x4, x1, x2)

inst_25413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfffe00; valaddr_reg:x3; val_offset:76239*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76239*0 + 3*69*FLEN/8, x4, x1, x2)

inst_25414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bffff00; valaddr_reg:x3; val_offset:76242*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76242*0 + 3*70*FLEN/8, x4, x1, x2)

inst_25415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bffff80; valaddr_reg:x3; val_offset:76245*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76245*0 + 3*71*FLEN/8, x4, x1, x2)

inst_25416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bffffc0; valaddr_reg:x3; val_offset:76248*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76248*0 + 3*72*FLEN/8, x4, x1, x2)

inst_25417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bffffe0; valaddr_reg:x3; val_offset:76251*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76251*0 + 3*73*FLEN/8, x4, x1, x2)

inst_25418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfffff0; valaddr_reg:x3; val_offset:76254*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76254*0 + 3*74*FLEN/8, x4, x1, x2)

inst_25419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfffff8; valaddr_reg:x3; val_offset:76257*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76257*0 + 3*75*FLEN/8, x4, x1, x2)

inst_25420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfffffc; valaddr_reg:x3; val_offset:76260*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76260*0 + 3*76*FLEN/8, x4, x1, x2)

inst_25421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bfffffe; valaddr_reg:x3; val_offset:76263*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76263*0 + 3*77*FLEN/8, x4, x1, x2)

inst_25422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xd7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x6bffffff; valaddr_reg:x3; val_offset:76266*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76266*0 + 3*78*FLEN/8, x4, x1, x2)

inst_25423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f000001; valaddr_reg:x3; val_offset:76269*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76269*0 + 3*79*FLEN/8, x4, x1, x2)

inst_25424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f000003; valaddr_reg:x3; val_offset:76272*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76272*0 + 3*80*FLEN/8, x4, x1, x2)

inst_25425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f000007; valaddr_reg:x3; val_offset:76275*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76275*0 + 3*81*FLEN/8, x4, x1, x2)

inst_25426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f199999; valaddr_reg:x3; val_offset:76278*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76278*0 + 3*82*FLEN/8, x4, x1, x2)

inst_25427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f249249; valaddr_reg:x3; val_offset:76281*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76281*0 + 3*83*FLEN/8, x4, x1, x2)

inst_25428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f333333; valaddr_reg:x3; val_offset:76284*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76284*0 + 3*84*FLEN/8, x4, x1, x2)

inst_25429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:76287*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76287*0 + 3*85*FLEN/8, x4, x1, x2)

inst_25430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:76290*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76290*0 + 3*86*FLEN/8, x4, x1, x2)

inst_25431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f444444; valaddr_reg:x3; val_offset:76293*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76293*0 + 3*87*FLEN/8, x4, x1, x2)

inst_25432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:76296*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76296*0 + 3*88*FLEN/8, x4, x1, x2)

inst_25433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:76299*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76299*0 + 3*89*FLEN/8, x4, x1, x2)

inst_25434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f666666; valaddr_reg:x3; val_offset:76302*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76302*0 + 3*90*FLEN/8, x4, x1, x2)

inst_25435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:76305*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76305*0 + 3*91*FLEN/8, x4, x1, x2)

inst_25436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:76308*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76308*0 + 3*92*FLEN/8, x4, x1, x2)

inst_25437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:76311*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76311*0 + 3*93*FLEN/8, x4, x1, x2)

inst_25438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02820b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b1494 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02820b; op2val:0x3ffb1494;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:76314*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76314*0 + 3*94*FLEN/8, x4, x1, x2)

inst_25439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbf800001; valaddr_reg:x3; val_offset:76317*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76317*0 + 3*95*FLEN/8, x4, x1, x2)

inst_25440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbf800003; valaddr_reg:x3; val_offset:76320*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76320*0 + 3*96*FLEN/8, x4, x1, x2)

inst_25441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbf800007; valaddr_reg:x3; val_offset:76323*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76323*0 + 3*97*FLEN/8, x4, x1, x2)

inst_25442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbf999999; valaddr_reg:x3; val_offset:76326*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76326*0 + 3*98*FLEN/8, x4, x1, x2)

inst_25443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:76329*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76329*0 + 3*99*FLEN/8, x4, x1, x2)

inst_25444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:76332*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76332*0 + 3*100*FLEN/8, x4, x1, x2)

inst_25445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:76335*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76335*0 + 3*101*FLEN/8, x4, x1, x2)

inst_25446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:76338*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76338*0 + 3*102*FLEN/8, x4, x1, x2)

inst_25447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:76341*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76341*0 + 3*103*FLEN/8, x4, x1, x2)

inst_25448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:76344*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76344*0 + 3*104*FLEN/8, x4, x1, x2)

inst_25449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:76347*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76347*0 + 3*105*FLEN/8, x4, x1, x2)

inst_25450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:76350*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76350*0 + 3*106*FLEN/8, x4, x1, x2)

inst_25451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:76353*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76353*0 + 3*107*FLEN/8, x4, x1, x2)

inst_25452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:76356*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76356*0 + 3*108*FLEN/8, x4, x1, x2)

inst_25453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:76359*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76359*0 + 3*109*FLEN/8, x4, x1, x2)

inst_25454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:76362*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76362*0 + 3*110*FLEN/8, x4, x1, x2)

inst_25455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4000000; valaddr_reg:x3; val_offset:76365*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76365*0 + 3*111*FLEN/8, x4, x1, x2)

inst_25456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4000001; valaddr_reg:x3; val_offset:76368*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76368*0 + 3*112*FLEN/8, x4, x1, x2)

inst_25457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4000003; valaddr_reg:x3; val_offset:76371*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76371*0 + 3*113*FLEN/8, x4, x1, x2)

inst_25458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4000007; valaddr_reg:x3; val_offset:76374*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76374*0 + 3*114*FLEN/8, x4, x1, x2)

inst_25459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc400000f; valaddr_reg:x3; val_offset:76377*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76377*0 + 3*115*FLEN/8, x4, x1, x2)

inst_25460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc400001f; valaddr_reg:x3; val_offset:76380*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76380*0 + 3*116*FLEN/8, x4, x1, x2)

inst_25461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc400003f; valaddr_reg:x3; val_offset:76383*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76383*0 + 3*117*FLEN/8, x4, x1, x2)

inst_25462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc400007f; valaddr_reg:x3; val_offset:76386*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76386*0 + 3*118*FLEN/8, x4, x1, x2)

inst_25463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc40000ff; valaddr_reg:x3; val_offset:76389*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76389*0 + 3*119*FLEN/8, x4, x1, x2)

inst_25464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc40001ff; valaddr_reg:x3; val_offset:76392*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76392*0 + 3*120*FLEN/8, x4, x1, x2)

inst_25465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc40003ff; valaddr_reg:x3; val_offset:76395*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76395*0 + 3*121*FLEN/8, x4, x1, x2)

inst_25466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc40007ff; valaddr_reg:x3; val_offset:76398*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76398*0 + 3*122*FLEN/8, x4, x1, x2)

inst_25467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4000fff; valaddr_reg:x3; val_offset:76401*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76401*0 + 3*123*FLEN/8, x4, x1, x2)

inst_25468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4001fff; valaddr_reg:x3; val_offset:76404*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76404*0 + 3*124*FLEN/8, x4, x1, x2)

inst_25469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4003fff; valaddr_reg:x3; val_offset:76407*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76407*0 + 3*125*FLEN/8, x4, x1, x2)

inst_25470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4007fff; valaddr_reg:x3; val_offset:76410*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76410*0 + 3*126*FLEN/8, x4, x1, x2)

inst_25471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc400ffff; valaddr_reg:x3; val_offset:76413*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76413*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_25472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc401ffff; valaddr_reg:x3; val_offset:76416*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76416*0 + 3*128*FLEN/8, x4, x1, x2)

inst_25473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc403ffff; valaddr_reg:x3; val_offset:76419*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76419*0 + 3*129*FLEN/8, x4, x1, x2)

inst_25474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc407ffff; valaddr_reg:x3; val_offset:76422*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76422*0 + 3*130*FLEN/8, x4, x1, x2)

inst_25475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc40fffff; valaddr_reg:x3; val_offset:76425*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76425*0 + 3*131*FLEN/8, x4, x1, x2)

inst_25476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc41fffff; valaddr_reg:x3; val_offset:76428*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76428*0 + 3*132*FLEN/8, x4, x1, x2)

inst_25477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc43fffff; valaddr_reg:x3; val_offset:76431*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76431*0 + 3*133*FLEN/8, x4, x1, x2)

inst_25478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4400000; valaddr_reg:x3; val_offset:76434*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76434*0 + 3*134*FLEN/8, x4, x1, x2)

inst_25479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4600000; valaddr_reg:x3; val_offset:76437*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76437*0 + 3*135*FLEN/8, x4, x1, x2)

inst_25480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4700000; valaddr_reg:x3; val_offset:76440*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76440*0 + 3*136*FLEN/8, x4, x1, x2)

inst_25481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc4780000; valaddr_reg:x3; val_offset:76443*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76443*0 + 3*137*FLEN/8, x4, x1, x2)

inst_25482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47c0000; valaddr_reg:x3; val_offset:76446*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76446*0 + 3*138*FLEN/8, x4, x1, x2)

inst_25483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47e0000; valaddr_reg:x3; val_offset:76449*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76449*0 + 3*139*FLEN/8, x4, x1, x2)

inst_25484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47f0000; valaddr_reg:x3; val_offset:76452*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76452*0 + 3*140*FLEN/8, x4, x1, x2)

inst_25485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47f8000; valaddr_reg:x3; val_offset:76455*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76455*0 + 3*141*FLEN/8, x4, x1, x2)

inst_25486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47fc000; valaddr_reg:x3; val_offset:76458*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76458*0 + 3*142*FLEN/8, x4, x1, x2)

inst_25487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47fe000; valaddr_reg:x3; val_offset:76461*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76461*0 + 3*143*FLEN/8, x4, x1, x2)

inst_25488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47ff000; valaddr_reg:x3; val_offset:76464*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76464*0 + 3*144*FLEN/8, x4, x1, x2)

inst_25489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47ff800; valaddr_reg:x3; val_offset:76467*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76467*0 + 3*145*FLEN/8, x4, x1, x2)

inst_25490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47ffc00; valaddr_reg:x3; val_offset:76470*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76470*0 + 3*146*FLEN/8, x4, x1, x2)

inst_25491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47ffe00; valaddr_reg:x3; val_offset:76473*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76473*0 + 3*147*FLEN/8, x4, x1, x2)

inst_25492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47fff00; valaddr_reg:x3; val_offset:76476*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76476*0 + 3*148*FLEN/8, x4, x1, x2)

inst_25493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47fff80; valaddr_reg:x3; val_offset:76479*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76479*0 + 3*149*FLEN/8, x4, x1, x2)

inst_25494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47fffc0; valaddr_reg:x3; val_offset:76482*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76482*0 + 3*150*FLEN/8, x4, x1, x2)

inst_25495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47fffe0; valaddr_reg:x3; val_offset:76485*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76485*0 + 3*151*FLEN/8, x4, x1, x2)

inst_25496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47ffff0; valaddr_reg:x3; val_offset:76488*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76488*0 + 3*152*FLEN/8, x4, x1, x2)

inst_25497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47ffff8; valaddr_reg:x3; val_offset:76491*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76491*0 + 3*153*FLEN/8, x4, x1, x2)

inst_25498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47ffffc; valaddr_reg:x3; val_offset:76494*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76494*0 + 3*154*FLEN/8, x4, x1, x2)

inst_25499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47ffffe; valaddr_reg:x3; val_offset:76497*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76497*0 + 3*155*FLEN/8, x4, x1, x2)

inst_25500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x029a59 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3eb977 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f029a59; op2val:0x803eb977;
op3val:0xc47fffff; valaddr_reg:x3; val_offset:76500*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76500*0 + 3*156*FLEN/8, x4, x1, x2)

inst_25501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbf800001; valaddr_reg:x3; val_offset:76503*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76503*0 + 3*157*FLEN/8, x4, x1, x2)

inst_25502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbf800003; valaddr_reg:x3; val_offset:76506*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76506*0 + 3*158*FLEN/8, x4, x1, x2)

inst_25503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbf800007; valaddr_reg:x3; val_offset:76509*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76509*0 + 3*159*FLEN/8, x4, x1, x2)

inst_25504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbf999999; valaddr_reg:x3; val_offset:76512*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76512*0 + 3*160*FLEN/8, x4, x1, x2)

inst_25505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:76515*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76515*0 + 3*161*FLEN/8, x4, x1, x2)

inst_25506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:76518*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76518*0 + 3*162*FLEN/8, x4, x1, x2)

inst_25507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:76521*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76521*0 + 3*163*FLEN/8, x4, x1, x2)

inst_25508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:76524*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76524*0 + 3*164*FLEN/8, x4, x1, x2)

inst_25509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:76527*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76527*0 + 3*165*FLEN/8, x4, x1, x2)

inst_25510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:76530*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76530*0 + 3*166*FLEN/8, x4, x1, x2)

inst_25511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:76533*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76533*0 + 3*167*FLEN/8, x4, x1, x2)

inst_25512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:76536*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76536*0 + 3*168*FLEN/8, x4, x1, x2)

inst_25513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:76539*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76539*0 + 3*169*FLEN/8, x4, x1, x2)

inst_25514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:76542*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76542*0 + 3*170*FLEN/8, x4, x1, x2)

inst_25515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:76545*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76545*0 + 3*171*FLEN/8, x4, x1, x2)

inst_25516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:76548*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76548*0 + 3*172*FLEN/8, x4, x1, x2)

inst_25517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc800000; valaddr_reg:x3; val_offset:76551*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76551*0 + 3*173*FLEN/8, x4, x1, x2)

inst_25518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc800001; valaddr_reg:x3; val_offset:76554*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76554*0 + 3*174*FLEN/8, x4, x1, x2)

inst_25519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc800003; valaddr_reg:x3; val_offset:76557*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76557*0 + 3*175*FLEN/8, x4, x1, x2)

inst_25520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc800007; valaddr_reg:x3; val_offset:76560*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76560*0 + 3*176*FLEN/8, x4, x1, x2)

inst_25521:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc80000f; valaddr_reg:x3; val_offset:76563*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76563*0 + 3*177*FLEN/8, x4, x1, x2)

inst_25522:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc80001f; valaddr_reg:x3; val_offset:76566*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76566*0 + 3*178*FLEN/8, x4, x1, x2)

inst_25523:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc80003f; valaddr_reg:x3; val_offset:76569*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76569*0 + 3*179*FLEN/8, x4, x1, x2)

inst_25524:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc80007f; valaddr_reg:x3; val_offset:76572*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76572*0 + 3*180*FLEN/8, x4, x1, x2)

inst_25525:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc8000ff; valaddr_reg:x3; val_offset:76575*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76575*0 + 3*181*FLEN/8, x4, x1, x2)

inst_25526:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc8001ff; valaddr_reg:x3; val_offset:76578*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76578*0 + 3*182*FLEN/8, x4, x1, x2)

inst_25527:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc8003ff; valaddr_reg:x3; val_offset:76581*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76581*0 + 3*183*FLEN/8, x4, x1, x2)

inst_25528:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc8007ff; valaddr_reg:x3; val_offset:76584*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76584*0 + 3*184*FLEN/8, x4, x1, x2)

inst_25529:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc800fff; valaddr_reg:x3; val_offset:76587*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76587*0 + 3*185*FLEN/8, x4, x1, x2)

inst_25530:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc801fff; valaddr_reg:x3; val_offset:76590*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76590*0 + 3*186*FLEN/8, x4, x1, x2)

inst_25531:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc803fff; valaddr_reg:x3; val_offset:76593*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76593*0 + 3*187*FLEN/8, x4, x1, x2)

inst_25532:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc807fff; valaddr_reg:x3; val_offset:76596*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76596*0 + 3*188*FLEN/8, x4, x1, x2)

inst_25533:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc80ffff; valaddr_reg:x3; val_offset:76599*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76599*0 + 3*189*FLEN/8, x4, x1, x2)

inst_25534:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc81ffff; valaddr_reg:x3; val_offset:76602*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76602*0 + 3*190*FLEN/8, x4, x1, x2)

inst_25535:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc83ffff; valaddr_reg:x3; val_offset:76605*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76605*0 + 3*191*FLEN/8, x4, x1, x2)

inst_25536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc87ffff; valaddr_reg:x3; val_offset:76608*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76608*0 + 3*192*FLEN/8, x4, x1, x2)

inst_25537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc8fffff; valaddr_reg:x3; val_offset:76611*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76611*0 + 3*193*FLEN/8, x4, x1, x2)

inst_25538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcc9fffff; valaddr_reg:x3; val_offset:76614*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76614*0 + 3*194*FLEN/8, x4, x1, x2)

inst_25539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccbfffff; valaddr_reg:x3; val_offset:76617*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76617*0 + 3*195*FLEN/8, x4, x1, x2)

inst_25540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccc00000; valaddr_reg:x3; val_offset:76620*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76620*0 + 3*196*FLEN/8, x4, x1, x2)

inst_25541:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xcce00000; valaddr_reg:x3; val_offset:76623*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76623*0 + 3*197*FLEN/8, x4, x1, x2)

inst_25542:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccf00000; valaddr_reg:x3; val_offset:76626*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76626*0 + 3*198*FLEN/8, x4, x1, x2)

inst_25543:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccf80000; valaddr_reg:x3; val_offset:76629*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76629*0 + 3*199*FLEN/8, x4, x1, x2)

inst_25544:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfc0000; valaddr_reg:x3; val_offset:76632*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76632*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25545:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfe0000; valaddr_reg:x3; val_offset:76635*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76635*0 + 3*201*FLEN/8, x4, x1, x2)

inst_25546:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccff0000; valaddr_reg:x3; val_offset:76638*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76638*0 + 3*202*FLEN/8, x4, x1, x2)

inst_25547:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccff8000; valaddr_reg:x3; val_offset:76641*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76641*0 + 3*203*FLEN/8, x4, x1, x2)

inst_25548:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccffc000; valaddr_reg:x3; val_offset:76644*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76644*0 + 3*204*FLEN/8, x4, x1, x2)

inst_25549:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccffe000; valaddr_reg:x3; val_offset:76647*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76647*0 + 3*205*FLEN/8, x4, x1, x2)

inst_25550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfff000; valaddr_reg:x3; val_offset:76650*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76650*0 + 3*206*FLEN/8, x4, x1, x2)

inst_25551:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfff800; valaddr_reg:x3; val_offset:76653*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76653*0 + 3*207*FLEN/8, x4, x1, x2)

inst_25552:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfffc00; valaddr_reg:x3; val_offset:76656*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76656*0 + 3*208*FLEN/8, x4, x1, x2)

inst_25553:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfffe00; valaddr_reg:x3; val_offset:76659*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76659*0 + 3*209*FLEN/8, x4, x1, x2)

inst_25554:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccffff00; valaddr_reg:x3; val_offset:76662*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76662*0 + 3*210*FLEN/8, x4, x1, x2)

inst_25555:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccffff80; valaddr_reg:x3; val_offset:76665*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76665*0 + 3*211*FLEN/8, x4, x1, x2)

inst_25556:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccffffc0; valaddr_reg:x3; val_offset:76668*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76668*0 + 3*212*FLEN/8, x4, x1, x2)

inst_25557:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccffffe0; valaddr_reg:x3; val_offset:76671*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76671*0 + 3*213*FLEN/8, x4, x1, x2)

inst_25558:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfffff0; valaddr_reg:x3; val_offset:76674*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76674*0 + 3*214*FLEN/8, x4, x1, x2)

inst_25559:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfffff8; valaddr_reg:x3; val_offset:76677*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76677*0 + 3*215*FLEN/8, x4, x1, x2)

inst_25560:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfffffc; valaddr_reg:x3; val_offset:76680*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76680*0 + 3*216*FLEN/8, x4, x1, x2)

inst_25561:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccfffffe; valaddr_reg:x3; val_offset:76683*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76683*0 + 3*217*FLEN/8, x4, x1, x2)

inst_25562:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02d1f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e9ece and fs3 == 1 and fe3 == 0x99 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02d1f2; op2val:0x803e9ece;
op3val:0xccffffff; valaddr_reg:x3; val_offset:76686*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76686*0 + 3*218*FLEN/8, x4, x1, x2)

inst_25563:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78800000; valaddr_reg:x3; val_offset:76689*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76689*0 + 3*219*FLEN/8, x4, x1, x2)

inst_25564:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78800001; valaddr_reg:x3; val_offset:76692*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76692*0 + 3*220*FLEN/8, x4, x1, x2)

inst_25565:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78800003; valaddr_reg:x3; val_offset:76695*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76695*0 + 3*221*FLEN/8, x4, x1, x2)

inst_25566:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78800007; valaddr_reg:x3; val_offset:76698*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76698*0 + 3*222*FLEN/8, x4, x1, x2)

inst_25567:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7880000f; valaddr_reg:x3; val_offset:76701*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76701*0 + 3*223*FLEN/8, x4, x1, x2)

inst_25568:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7880001f; valaddr_reg:x3; val_offset:76704*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76704*0 + 3*224*FLEN/8, x4, x1, x2)

inst_25569:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7880003f; valaddr_reg:x3; val_offset:76707*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76707*0 + 3*225*FLEN/8, x4, x1, x2)

inst_25570:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7880007f; valaddr_reg:x3; val_offset:76710*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76710*0 + 3*226*FLEN/8, x4, x1, x2)

inst_25571:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x788000ff; valaddr_reg:x3; val_offset:76713*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76713*0 + 3*227*FLEN/8, x4, x1, x2)

inst_25572:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x788001ff; valaddr_reg:x3; val_offset:76716*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76716*0 + 3*228*FLEN/8, x4, x1, x2)

inst_25573:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x788003ff; valaddr_reg:x3; val_offset:76719*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76719*0 + 3*229*FLEN/8, x4, x1, x2)

inst_25574:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x788007ff; valaddr_reg:x3; val_offset:76722*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76722*0 + 3*230*FLEN/8, x4, x1, x2)

inst_25575:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78800fff; valaddr_reg:x3; val_offset:76725*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76725*0 + 3*231*FLEN/8, x4, x1, x2)

inst_25576:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78801fff; valaddr_reg:x3; val_offset:76728*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76728*0 + 3*232*FLEN/8, x4, x1, x2)

inst_25577:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78803fff; valaddr_reg:x3; val_offset:76731*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76731*0 + 3*233*FLEN/8, x4, x1, x2)

inst_25578:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78807fff; valaddr_reg:x3; val_offset:76734*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76734*0 + 3*234*FLEN/8, x4, x1, x2)

inst_25579:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7880ffff; valaddr_reg:x3; val_offset:76737*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76737*0 + 3*235*FLEN/8, x4, x1, x2)

inst_25580:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7881ffff; valaddr_reg:x3; val_offset:76740*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76740*0 + 3*236*FLEN/8, x4, x1, x2)

inst_25581:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7883ffff; valaddr_reg:x3; val_offset:76743*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76743*0 + 3*237*FLEN/8, x4, x1, x2)

inst_25582:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7887ffff; valaddr_reg:x3; val_offset:76746*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76746*0 + 3*238*FLEN/8, x4, x1, x2)

inst_25583:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x788fffff; valaddr_reg:x3; val_offset:76749*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76749*0 + 3*239*FLEN/8, x4, x1, x2)

inst_25584:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x789fffff; valaddr_reg:x3; val_offset:76752*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76752*0 + 3*240*FLEN/8, x4, x1, x2)

inst_25585:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78bfffff; valaddr_reg:x3; val_offset:76755*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76755*0 + 3*241*FLEN/8, x4, x1, x2)

inst_25586:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78c00000; valaddr_reg:x3; val_offset:76758*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76758*0 + 3*242*FLEN/8, x4, x1, x2)

inst_25587:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78e00000; valaddr_reg:x3; val_offset:76761*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76761*0 + 3*243*FLEN/8, x4, x1, x2)

inst_25588:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78f00000; valaddr_reg:x3; val_offset:76764*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76764*0 + 3*244*FLEN/8, x4, x1, x2)

inst_25589:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78f80000; valaddr_reg:x3; val_offset:76767*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76767*0 + 3*245*FLEN/8, x4, x1, x2)

inst_25590:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fc0000; valaddr_reg:x3; val_offset:76770*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76770*0 + 3*246*FLEN/8, x4, x1, x2)

inst_25591:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fe0000; valaddr_reg:x3; val_offset:76773*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76773*0 + 3*247*FLEN/8, x4, x1, x2)

inst_25592:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ff0000; valaddr_reg:x3; val_offset:76776*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76776*0 + 3*248*FLEN/8, x4, x1, x2)

inst_25593:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ff8000; valaddr_reg:x3; val_offset:76779*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76779*0 + 3*249*FLEN/8, x4, x1, x2)

inst_25594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffc000; valaddr_reg:x3; val_offset:76782*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76782*0 + 3*250*FLEN/8, x4, x1, x2)

inst_25595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffe000; valaddr_reg:x3; val_offset:76785*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76785*0 + 3*251*FLEN/8, x4, x1, x2)

inst_25596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fff000; valaddr_reg:x3; val_offset:76788*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76788*0 + 3*252*FLEN/8, x4, x1, x2)

inst_25597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fff800; valaddr_reg:x3; val_offset:76791*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76791*0 + 3*253*FLEN/8, x4, x1, x2)

inst_25598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffc00; valaddr_reg:x3; val_offset:76794*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76794*0 + 3*254*FLEN/8, x4, x1, x2)

inst_25599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffe00; valaddr_reg:x3; val_offset:76797*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76797*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_25600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffff00; valaddr_reg:x3; val_offset:76800*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76800*0 + 3*256*FLEN/8, x4, x1, x2)

inst_25601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffff80; valaddr_reg:x3; val_offset:76803*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76803*0 + 3*257*FLEN/8, x4, x1, x2)

inst_25602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffffc0; valaddr_reg:x3; val_offset:76806*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76806*0 + 3*258*FLEN/8, x4, x1, x2)

inst_25603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffffe0; valaddr_reg:x3; val_offset:76809*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76809*0 + 3*259*FLEN/8, x4, x1, x2)

inst_25604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffff0; valaddr_reg:x3; val_offset:76812*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76812*0 + 3*260*FLEN/8, x4, x1, x2)

inst_25605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffff8; valaddr_reg:x3; val_offset:76815*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76815*0 + 3*261*FLEN/8, x4, x1, x2)

inst_25606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffffc; valaddr_reg:x3; val_offset:76818*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76818*0 + 3*262*FLEN/8, x4, x1, x2)

inst_25607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78fffffe; valaddr_reg:x3; val_offset:76821*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76821*0 + 3*263*FLEN/8, x4, x1, x2)

inst_25608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xf1 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x78ffffff; valaddr_reg:x3; val_offset:76824*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76824*0 + 3*264*FLEN/8, x4, x1, x2)

inst_25609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f000001; valaddr_reg:x3; val_offset:76827*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76827*0 + 3*265*FLEN/8, x4, x1, x2)

inst_25610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f000003; valaddr_reg:x3; val_offset:76830*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76830*0 + 3*266*FLEN/8, x4, x1, x2)

inst_25611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f000007; valaddr_reg:x3; val_offset:76833*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76833*0 + 3*267*FLEN/8, x4, x1, x2)

inst_25612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f199999; valaddr_reg:x3; val_offset:76836*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76836*0 + 3*268*FLEN/8, x4, x1, x2)

inst_25613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f249249; valaddr_reg:x3; val_offset:76839*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76839*0 + 3*269*FLEN/8, x4, x1, x2)

inst_25614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f333333; valaddr_reg:x3; val_offset:76842*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76842*0 + 3*270*FLEN/8, x4, x1, x2)

inst_25615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:76845*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76845*0 + 3*271*FLEN/8, x4, x1, x2)

inst_25616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:76848*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76848*0 + 3*272*FLEN/8, x4, x1, x2)

inst_25617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f444444; valaddr_reg:x3; val_offset:76851*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76851*0 + 3*273*FLEN/8, x4, x1, x2)

inst_25618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:76854*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76854*0 + 3*274*FLEN/8, x4, x1, x2)

inst_25619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:76857*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76857*0 + 3*275*FLEN/8, x4, x1, x2)

inst_25620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f666666; valaddr_reg:x3; val_offset:76860*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76860*0 + 3*276*FLEN/8, x4, x1, x2)

inst_25621:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:76863*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76863*0 + 3*277*FLEN/8, x4, x1, x2)

inst_25622:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:76866*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76866*0 + 3*278*FLEN/8, x4, x1, x2)

inst_25623:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:76869*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76869*0 + 3*279*FLEN/8, x4, x1, x2)

inst_25624:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ea14 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7a4d0e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02ea14; op2val:0x3ffa4d0e;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:76872*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76872*0 + 3*280*FLEN/8, x4, x1, x2)

inst_25625:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000000; valaddr_reg:x3; val_offset:76875*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76875*0 + 3*281*FLEN/8, x4, x1, x2)

inst_25626:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000001; valaddr_reg:x3; val_offset:76878*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76878*0 + 3*282*FLEN/8, x4, x1, x2)

inst_25627:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000003; valaddr_reg:x3; val_offset:76881*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76881*0 + 3*283*FLEN/8, x4, x1, x2)

inst_25628:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000007; valaddr_reg:x3; val_offset:76884*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76884*0 + 3*284*FLEN/8, x4, x1, x2)

inst_25629:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700000f; valaddr_reg:x3; val_offset:76887*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76887*0 + 3*285*FLEN/8, x4, x1, x2)

inst_25630:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700001f; valaddr_reg:x3; val_offset:76890*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76890*0 + 3*286*FLEN/8, x4, x1, x2)

inst_25631:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700003f; valaddr_reg:x3; val_offset:76893*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76893*0 + 3*287*FLEN/8, x4, x1, x2)

inst_25632:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700007f; valaddr_reg:x3; val_offset:76896*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76896*0 + 3*288*FLEN/8, x4, x1, x2)

inst_25633:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270000ff; valaddr_reg:x3; val_offset:76899*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76899*0 + 3*289*FLEN/8, x4, x1, x2)

inst_25634:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270001ff; valaddr_reg:x3; val_offset:76902*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76902*0 + 3*290*FLEN/8, x4, x1, x2)

inst_25635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270003ff; valaddr_reg:x3; val_offset:76905*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76905*0 + 3*291*FLEN/8, x4, x1, x2)

inst_25636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270007ff; valaddr_reg:x3; val_offset:76908*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76908*0 + 3*292*FLEN/8, x4, x1, x2)

inst_25637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27000fff; valaddr_reg:x3; val_offset:76911*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76911*0 + 3*293*FLEN/8, x4, x1, x2)

inst_25638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27001fff; valaddr_reg:x3; val_offset:76914*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76914*0 + 3*294*FLEN/8, x4, x1, x2)

inst_25639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27003fff; valaddr_reg:x3; val_offset:76917*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76917*0 + 3*295*FLEN/8, x4, x1, x2)

inst_25640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27007fff; valaddr_reg:x3; val_offset:76920*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76920*0 + 3*296*FLEN/8, x4, x1, x2)

inst_25641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2700ffff; valaddr_reg:x3; val_offset:76923*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76923*0 + 3*297*FLEN/8, x4, x1, x2)

inst_25642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2701ffff; valaddr_reg:x3; val_offset:76926*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76926*0 + 3*298*FLEN/8, x4, x1, x2)

inst_25643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2703ffff; valaddr_reg:x3; val_offset:76929*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76929*0 + 3*299*FLEN/8, x4, x1, x2)

inst_25644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x2707ffff; valaddr_reg:x3; val_offset:76932*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76932*0 + 3*300*FLEN/8, x4, x1, x2)

inst_25645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x270fffff; valaddr_reg:x3; val_offset:76935*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76935*0 + 3*301*FLEN/8, x4, x1, x2)

inst_25646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x271fffff; valaddr_reg:x3; val_offset:76938*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76938*0 + 3*302*FLEN/8, x4, x1, x2)

inst_25647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x273fffff; valaddr_reg:x3; val_offset:76941*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76941*0 + 3*303*FLEN/8, x4, x1, x2)

inst_25648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27400000; valaddr_reg:x3; val_offset:76944*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76944*0 + 3*304*FLEN/8, x4, x1, x2)

inst_25649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27600000; valaddr_reg:x3; val_offset:76947*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76947*0 + 3*305*FLEN/8, x4, x1, x2)

inst_25650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27700000; valaddr_reg:x3; val_offset:76950*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76950*0 + 3*306*FLEN/8, x4, x1, x2)

inst_25651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x27780000; valaddr_reg:x3; val_offset:76953*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76953*0 + 3*307*FLEN/8, x4, x1, x2)

inst_25652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277c0000; valaddr_reg:x3; val_offset:76956*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76956*0 + 3*308*FLEN/8, x4, x1, x2)

inst_25653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277e0000; valaddr_reg:x3; val_offset:76959*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76959*0 + 3*309*FLEN/8, x4, x1, x2)

inst_25654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277f0000; valaddr_reg:x3; val_offset:76962*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76962*0 + 3*310*FLEN/8, x4, x1, x2)

inst_25655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277f8000; valaddr_reg:x3; val_offset:76965*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76965*0 + 3*311*FLEN/8, x4, x1, x2)

inst_25656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fc000; valaddr_reg:x3; val_offset:76968*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76968*0 + 3*312*FLEN/8, x4, x1, x2)

inst_25657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fe000; valaddr_reg:x3; val_offset:76971*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76971*0 + 3*313*FLEN/8, x4, x1, x2)

inst_25658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ff000; valaddr_reg:x3; val_offset:76974*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76974*0 + 3*314*FLEN/8, x4, x1, x2)

inst_25659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ff800; valaddr_reg:x3; val_offset:76977*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76977*0 + 3*315*FLEN/8, x4, x1, x2)

inst_25660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffc00; valaddr_reg:x3; val_offset:76980*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76980*0 + 3*316*FLEN/8, x4, x1, x2)

inst_25661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffe00; valaddr_reg:x3; val_offset:76983*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76983*0 + 3*317*FLEN/8, x4, x1, x2)

inst_25662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fff00; valaddr_reg:x3; val_offset:76986*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76986*0 + 3*318*FLEN/8, x4, x1, x2)

inst_25663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fff80; valaddr_reg:x3; val_offset:76989*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76989*0 + 3*319*FLEN/8, x4, x1, x2)

inst_25664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fffc0; valaddr_reg:x3; val_offset:76992*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76992*0 + 3*320*FLEN/8, x4, x1, x2)

inst_25665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fffe0; valaddr_reg:x3; val_offset:76995*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76995*0 + 3*321*FLEN/8, x4, x1, x2)

inst_25666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffff0; valaddr_reg:x3; val_offset:76998*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76998*0 + 3*322*FLEN/8, x4, x1, x2)

inst_25667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffff8; valaddr_reg:x3; val_offset:77001*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77001*0 + 3*323*FLEN/8, x4, x1, x2)

inst_25668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffffc; valaddr_reg:x3; val_offset:77004*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77004*0 + 3*324*FLEN/8, x4, x1, x2)

inst_25669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277ffffe; valaddr_reg:x3; val_offset:77007*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77007*0 + 3*325*FLEN/8, x4, x1, x2)

inst_25670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x4e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x277fffff; valaddr_reg:x3; val_offset:77010*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77010*0 + 3*326*FLEN/8, x4, x1, x2)

inst_25671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3f800001; valaddr_reg:x3; val_offset:77013*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77013*0 + 3*327*FLEN/8, x4, x1, x2)

inst_25672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3f800003; valaddr_reg:x3; val_offset:77016*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77016*0 + 3*328*FLEN/8, x4, x1, x2)

inst_25673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3f800007; valaddr_reg:x3; val_offset:77019*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77019*0 + 3*329*FLEN/8, x4, x1, x2)

inst_25674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3f999999; valaddr_reg:x3; val_offset:77022*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77022*0 + 3*330*FLEN/8, x4, x1, x2)

inst_25675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:77025*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77025*0 + 3*331*FLEN/8, x4, x1, x2)

inst_25676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:77028*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77028*0 + 3*332*FLEN/8, x4, x1, x2)

inst_25677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:77031*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77031*0 + 3*333*FLEN/8, x4, x1, x2)

inst_25678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:77034*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77034*0 + 3*334*FLEN/8, x4, x1, x2)

inst_25679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:77037*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77037*0 + 3*335*FLEN/8, x4, x1, x2)

inst_25680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:77040*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77040*0 + 3*336*FLEN/8, x4, x1, x2)

inst_25681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:77043*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77043*0 + 3*337*FLEN/8, x4, x1, x2)

inst_25682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:77046*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77046*0 + 3*338*FLEN/8, x4, x1, x2)

inst_25683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:77049*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77049*0 + 3*339*FLEN/8, x4, x1, x2)

inst_25684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:77052*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77052*0 + 3*340*FLEN/8, x4, x1, x2)

inst_25685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:77055*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77055*0 + 3*341*FLEN/8, x4, x1, x2)

inst_25686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x030924 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e846e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f030924; op2val:0x3e846e;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:77058*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77058*0 + 3*342*FLEN/8, x4, x1, x2)

inst_25687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800000; valaddr_reg:x3; val_offset:77061*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77061*0 + 3*343*FLEN/8, x4, x1, x2)

inst_25688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800001; valaddr_reg:x3; val_offset:77064*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77064*0 + 3*344*FLEN/8, x4, x1, x2)

inst_25689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800003; valaddr_reg:x3; val_offset:77067*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77067*0 + 3*345*FLEN/8, x4, x1, x2)

inst_25690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800007; valaddr_reg:x3; val_offset:77070*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77070*0 + 3*346*FLEN/8, x4, x1, x2)

inst_25691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180000f; valaddr_reg:x3; val_offset:77073*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77073*0 + 3*347*FLEN/8, x4, x1, x2)

inst_25692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180001f; valaddr_reg:x3; val_offset:77076*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77076*0 + 3*348*FLEN/8, x4, x1, x2)

inst_25693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180003f; valaddr_reg:x3; val_offset:77079*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77079*0 + 3*349*FLEN/8, x4, x1, x2)

inst_25694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180007f; valaddr_reg:x3; val_offset:77082*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77082*0 + 3*350*FLEN/8, x4, x1, x2)

inst_25695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218000ff; valaddr_reg:x3; val_offset:77085*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77085*0 + 3*351*FLEN/8, x4, x1, x2)

inst_25696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218001ff; valaddr_reg:x3; val_offset:77088*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77088*0 + 3*352*FLEN/8, x4, x1, x2)

inst_25697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218003ff; valaddr_reg:x3; val_offset:77091*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77091*0 + 3*353*FLEN/8, x4, x1, x2)

inst_25698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218007ff; valaddr_reg:x3; val_offset:77094*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77094*0 + 3*354*FLEN/8, x4, x1, x2)

inst_25699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21800fff; valaddr_reg:x3; val_offset:77097*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77097*0 + 3*355*FLEN/8, x4, x1, x2)

inst_25700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21801fff; valaddr_reg:x3; val_offset:77100*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77100*0 + 3*356*FLEN/8, x4, x1, x2)

inst_25701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21803fff; valaddr_reg:x3; val_offset:77103*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77103*0 + 3*357*FLEN/8, x4, x1, x2)

inst_25702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21807fff; valaddr_reg:x3; val_offset:77106*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77106*0 + 3*358*FLEN/8, x4, x1, x2)

inst_25703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2180ffff; valaddr_reg:x3; val_offset:77109*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77109*0 + 3*359*FLEN/8, x4, x1, x2)

inst_25704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2181ffff; valaddr_reg:x3; val_offset:77112*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77112*0 + 3*360*FLEN/8, x4, x1, x2)

inst_25705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2183ffff; valaddr_reg:x3; val_offset:77115*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77115*0 + 3*361*FLEN/8, x4, x1, x2)

inst_25706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x2187ffff; valaddr_reg:x3; val_offset:77118*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77118*0 + 3*362*FLEN/8, x4, x1, x2)

inst_25707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x218fffff; valaddr_reg:x3; val_offset:77121*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77121*0 + 3*363*FLEN/8, x4, x1, x2)

inst_25708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x219fffff; valaddr_reg:x3; val_offset:77124*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77124*0 + 3*364*FLEN/8, x4, x1, x2)

inst_25709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21bfffff; valaddr_reg:x3; val_offset:77127*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77127*0 + 3*365*FLEN/8, x4, x1, x2)

inst_25710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21c00000; valaddr_reg:x3; val_offset:77130*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77130*0 + 3*366*FLEN/8, x4, x1, x2)

inst_25711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21e00000; valaddr_reg:x3; val_offset:77133*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77133*0 + 3*367*FLEN/8, x4, x1, x2)

inst_25712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21f00000; valaddr_reg:x3; val_offset:77136*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77136*0 + 3*368*FLEN/8, x4, x1, x2)

inst_25713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21f80000; valaddr_reg:x3; val_offset:77139*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77139*0 + 3*369*FLEN/8, x4, x1, x2)

inst_25714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fc0000; valaddr_reg:x3; val_offset:77142*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77142*0 + 3*370*FLEN/8, x4, x1, x2)

inst_25715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fe0000; valaddr_reg:x3; val_offset:77145*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77145*0 + 3*371*FLEN/8, x4, x1, x2)

inst_25716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ff0000; valaddr_reg:x3; val_offset:77148*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77148*0 + 3*372*FLEN/8, x4, x1, x2)

inst_25717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ff8000; valaddr_reg:x3; val_offset:77151*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77151*0 + 3*373*FLEN/8, x4, x1, x2)

inst_25718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffc000; valaddr_reg:x3; val_offset:77154*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77154*0 + 3*374*FLEN/8, x4, x1, x2)

inst_25719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffe000; valaddr_reg:x3; val_offset:77157*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77157*0 + 3*375*FLEN/8, x4, x1, x2)

inst_25720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fff000; valaddr_reg:x3; val_offset:77160*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77160*0 + 3*376*FLEN/8, x4, x1, x2)

inst_25721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fff800; valaddr_reg:x3; val_offset:77163*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77163*0 + 3*377*FLEN/8, x4, x1, x2)

inst_25722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fffc00; valaddr_reg:x3; val_offset:77166*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77166*0 + 3*378*FLEN/8, x4, x1, x2)

inst_25723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fffe00; valaddr_reg:x3; val_offset:77169*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77169*0 + 3*379*FLEN/8, x4, x1, x2)

inst_25724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffff00; valaddr_reg:x3; val_offset:77172*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77172*0 + 3*380*FLEN/8, x4, x1, x2)

inst_25725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffff80; valaddr_reg:x3; val_offset:77175*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77175*0 + 3*381*FLEN/8, x4, x1, x2)

inst_25726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffffc0; valaddr_reg:x3; val_offset:77178*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77178*0 + 3*382*FLEN/8, x4, x1, x2)

inst_25727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffffe0; valaddr_reg:x3; val_offset:77181*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77181*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_25728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fffff0; valaddr_reg:x3; val_offset:77184*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77184*0 + 3*384*FLEN/8, x4, x1, x2)

inst_25729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fffff8; valaddr_reg:x3; val_offset:77187*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77187*0 + 3*385*FLEN/8, x4, x1, x2)

inst_25730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fffffc; valaddr_reg:x3; val_offset:77190*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77190*0 + 3*386*FLEN/8, x4, x1, x2)

inst_25731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21fffffe; valaddr_reg:x3; val_offset:77193*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77193*0 + 3*387*FLEN/8, x4, x1, x2)

inst_25732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x43 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x21ffffff; valaddr_reg:x3; val_offset:77196*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77196*0 + 3*388*FLEN/8, x4, x1, x2)

inst_25733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3f800001; valaddr_reg:x3; val_offset:77199*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77199*0 + 3*389*FLEN/8, x4, x1, x2)

inst_25734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3f800003; valaddr_reg:x3; val_offset:77202*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77202*0 + 3*390*FLEN/8, x4, x1, x2)

inst_25735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3f800007; valaddr_reg:x3; val_offset:77205*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77205*0 + 3*391*FLEN/8, x4, x1, x2)

inst_25736:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3f999999; valaddr_reg:x3; val_offset:77208*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77208*0 + 3*392*FLEN/8, x4, x1, x2)

inst_25737:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:77211*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77211*0 + 3*393*FLEN/8, x4, x1, x2)

inst_25738:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:77214*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77214*0 + 3*394*FLEN/8, x4, x1, x2)

inst_25739:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:77217*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77217*0 + 3*395*FLEN/8, x4, x1, x2)

inst_25740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:77220*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77220*0 + 3*396*FLEN/8, x4, x1, x2)

inst_25741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:77223*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77223*0 + 3*397*FLEN/8, x4, x1, x2)

inst_25742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:77226*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77226*0 + 3*398*FLEN/8, x4, x1, x2)

inst_25743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:77229*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77229*0 + 3*399*FLEN/8, x4, x1, x2)

inst_25744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:77232*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77232*0 + 3*400*FLEN/8, x4, x1, x2)

inst_25745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:77235*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77235*0 + 3*401*FLEN/8, x4, x1, x2)

inst_25746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:77238*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77238*0 + 3*402*FLEN/8, x4, x1, x2)

inst_25747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:77241*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77241*0 + 3*403*FLEN/8, x4, x1, x2)

inst_25748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x035f5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e5b66 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f035f5c; op2val:0x3e5b66;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:77244*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77244*0 + 3*404*FLEN/8, x4, x1, x2)

inst_25749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3f800001; valaddr_reg:x3; val_offset:77247*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77247*0 + 3*405*FLEN/8, x4, x1, x2)

inst_25750:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3f800003; valaddr_reg:x3; val_offset:77250*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77250*0 + 3*406*FLEN/8, x4, x1, x2)

inst_25751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3f800007; valaddr_reg:x3; val_offset:77253*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77253*0 + 3*407*FLEN/8, x4, x1, x2)

inst_25752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3f999999; valaddr_reg:x3; val_offset:77256*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77256*0 + 3*408*FLEN/8, x4, x1, x2)

inst_25753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:77259*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77259*0 + 3*409*FLEN/8, x4, x1, x2)

inst_25754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:77262*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77262*0 + 3*410*FLEN/8, x4, x1, x2)

inst_25755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:77265*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77265*0 + 3*411*FLEN/8, x4, x1, x2)

inst_25756:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:77268*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77268*0 + 3*412*FLEN/8, x4, x1, x2)

inst_25757:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:77271*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77271*0 + 3*413*FLEN/8, x4, x1, x2)

inst_25758:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:77274*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77274*0 + 3*414*FLEN/8, x4, x1, x2)

inst_25759:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:77277*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77277*0 + 3*415*FLEN/8, x4, x1, x2)

inst_25760:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:77280*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77280*0 + 3*416*FLEN/8, x4, x1, x2)

inst_25761:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:77283*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77283*0 + 3*417*FLEN/8, x4, x1, x2)

inst_25762:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:77286*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77286*0 + 3*418*FLEN/8, x4, x1, x2)

inst_25763:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:77289*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77289*0 + 3*419*FLEN/8, x4, x1, x2)

inst_25764:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:77292*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77292*0 + 3*420*FLEN/8, x4, x1, x2)

inst_25765:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d800000; valaddr_reg:x3; val_offset:77295*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77295*0 + 3*421*FLEN/8, x4, x1, x2)

inst_25766:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d800001; valaddr_reg:x3; val_offset:77298*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77298*0 + 3*422*FLEN/8, x4, x1, x2)

inst_25767:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d800003; valaddr_reg:x3; val_offset:77301*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77301*0 + 3*423*FLEN/8, x4, x1, x2)

inst_25768:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d800007; valaddr_reg:x3; val_offset:77304*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77304*0 + 3*424*FLEN/8, x4, x1, x2)

inst_25769:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d80000f; valaddr_reg:x3; val_offset:77307*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77307*0 + 3*425*FLEN/8, x4, x1, x2)

inst_25770:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d80001f; valaddr_reg:x3; val_offset:77310*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77310*0 + 3*426*FLEN/8, x4, x1, x2)

inst_25771:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d80003f; valaddr_reg:x3; val_offset:77313*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77313*0 + 3*427*FLEN/8, x4, x1, x2)

inst_25772:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d80007f; valaddr_reg:x3; val_offset:77316*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77316*0 + 3*428*FLEN/8, x4, x1, x2)

inst_25773:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d8000ff; valaddr_reg:x3; val_offset:77319*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77319*0 + 3*429*FLEN/8, x4, x1, x2)

inst_25774:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d8001ff; valaddr_reg:x3; val_offset:77322*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77322*0 + 3*430*FLEN/8, x4, x1, x2)

inst_25775:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d8003ff; valaddr_reg:x3; val_offset:77325*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77325*0 + 3*431*FLEN/8, x4, x1, x2)

inst_25776:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d8007ff; valaddr_reg:x3; val_offset:77328*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77328*0 + 3*432*FLEN/8, x4, x1, x2)

inst_25777:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d800fff; valaddr_reg:x3; val_offset:77331*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77331*0 + 3*433*FLEN/8, x4, x1, x2)

inst_25778:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d801fff; valaddr_reg:x3; val_offset:77334*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77334*0 + 3*434*FLEN/8, x4, x1, x2)

inst_25779:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d803fff; valaddr_reg:x3; val_offset:77337*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77337*0 + 3*435*FLEN/8, x4, x1, x2)

inst_25780:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d807fff; valaddr_reg:x3; val_offset:77340*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77340*0 + 3*436*FLEN/8, x4, x1, x2)

inst_25781:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d80ffff; valaddr_reg:x3; val_offset:77343*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77343*0 + 3*437*FLEN/8, x4, x1, x2)

inst_25782:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d81ffff; valaddr_reg:x3; val_offset:77346*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77346*0 + 3*438*FLEN/8, x4, x1, x2)

inst_25783:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d83ffff; valaddr_reg:x3; val_offset:77349*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77349*0 + 3*439*FLEN/8, x4, x1, x2)

inst_25784:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d87ffff; valaddr_reg:x3; val_offset:77352*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77352*0 + 3*440*FLEN/8, x4, x1, x2)

inst_25785:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d8fffff; valaddr_reg:x3; val_offset:77355*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77355*0 + 3*441*FLEN/8, x4, x1, x2)

inst_25786:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4d9fffff; valaddr_reg:x3; val_offset:77358*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77358*0 + 3*442*FLEN/8, x4, x1, x2)

inst_25787:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dbfffff; valaddr_reg:x3; val_offset:77361*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77361*0 + 3*443*FLEN/8, x4, x1, x2)

inst_25788:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dc00000; valaddr_reg:x3; val_offset:77364*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77364*0 + 3*444*FLEN/8, x4, x1, x2)

inst_25789:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4de00000; valaddr_reg:x3; val_offset:77367*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77367*0 + 3*445*FLEN/8, x4, x1, x2)

inst_25790:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4df00000; valaddr_reg:x3; val_offset:77370*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77370*0 + 3*446*FLEN/8, x4, x1, x2)

inst_25791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4df80000; valaddr_reg:x3; val_offset:77373*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77373*0 + 3*447*FLEN/8, x4, x1, x2)

inst_25792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfc0000; valaddr_reg:x3; val_offset:77376*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77376*0 + 3*448*FLEN/8, x4, x1, x2)

inst_25793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfe0000; valaddr_reg:x3; val_offset:77379*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77379*0 + 3*449*FLEN/8, x4, x1, x2)

inst_25794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dff0000; valaddr_reg:x3; val_offset:77382*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77382*0 + 3*450*FLEN/8, x4, x1, x2)

inst_25795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dff8000; valaddr_reg:x3; val_offset:77385*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77385*0 + 3*451*FLEN/8, x4, x1, x2)

inst_25796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dffc000; valaddr_reg:x3; val_offset:77388*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77388*0 + 3*452*FLEN/8, x4, x1, x2)

inst_25797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dffe000; valaddr_reg:x3; val_offset:77391*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77391*0 + 3*453*FLEN/8, x4, x1, x2)

inst_25798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfff000; valaddr_reg:x3; val_offset:77394*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77394*0 + 3*454*FLEN/8, x4, x1, x2)

inst_25799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfff800; valaddr_reg:x3; val_offset:77397*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77397*0 + 3*455*FLEN/8, x4, x1, x2)

inst_25800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfffc00; valaddr_reg:x3; val_offset:77400*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77400*0 + 3*456*FLEN/8, x4, x1, x2)

inst_25801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfffe00; valaddr_reg:x3; val_offset:77403*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77403*0 + 3*457*FLEN/8, x4, x1, x2)

inst_25802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dffff00; valaddr_reg:x3; val_offset:77406*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77406*0 + 3*458*FLEN/8, x4, x1, x2)

inst_25803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dffff80; valaddr_reg:x3; val_offset:77409*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77409*0 + 3*459*FLEN/8, x4, x1, x2)

inst_25804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dffffc0; valaddr_reg:x3; val_offset:77412*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77412*0 + 3*460*FLEN/8, x4, x1, x2)

inst_25805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dffffe0; valaddr_reg:x3; val_offset:77415*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77415*0 + 3*461*FLEN/8, x4, x1, x2)

inst_25806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfffff0; valaddr_reg:x3; val_offset:77418*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77418*0 + 3*462*FLEN/8, x4, x1, x2)

inst_25807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfffff8; valaddr_reg:x3; val_offset:77421*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77421*0 + 3*463*FLEN/8, x4, x1, x2)

inst_25808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfffffc; valaddr_reg:x3; val_offset:77424*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77424*0 + 3*464*FLEN/8, x4, x1, x2)

inst_25809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dfffffe; valaddr_reg:x3; val_offset:77427*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77427*0 + 3*465*FLEN/8, x4, x1, x2)

inst_25810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x036f85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e53bb and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f036f85; op2val:0x3e53bb;
op3val:0x4dffffff; valaddr_reg:x3; val_offset:77430*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77430*0 + 3*466*FLEN/8, x4, x1, x2)

inst_25811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3800000; valaddr_reg:x3; val_offset:77433*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77433*0 + 3*467*FLEN/8, x4, x1, x2)

inst_25812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3800001; valaddr_reg:x3; val_offset:77436*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77436*0 + 3*468*FLEN/8, x4, x1, x2)

inst_25813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3800003; valaddr_reg:x3; val_offset:77439*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77439*0 + 3*469*FLEN/8, x4, x1, x2)

inst_25814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3800007; valaddr_reg:x3; val_offset:77442*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77442*0 + 3*470*FLEN/8, x4, x1, x2)

inst_25815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa380000f; valaddr_reg:x3; val_offset:77445*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77445*0 + 3*471*FLEN/8, x4, x1, x2)

inst_25816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa380001f; valaddr_reg:x3; val_offset:77448*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77448*0 + 3*472*FLEN/8, x4, x1, x2)

inst_25817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa380003f; valaddr_reg:x3; val_offset:77451*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77451*0 + 3*473*FLEN/8, x4, x1, x2)

inst_25818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa380007f; valaddr_reg:x3; val_offset:77454*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77454*0 + 3*474*FLEN/8, x4, x1, x2)

inst_25819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa38000ff; valaddr_reg:x3; val_offset:77457*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77457*0 + 3*475*FLEN/8, x4, x1, x2)

inst_25820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa38001ff; valaddr_reg:x3; val_offset:77460*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77460*0 + 3*476*FLEN/8, x4, x1, x2)

inst_25821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa38003ff; valaddr_reg:x3; val_offset:77463*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77463*0 + 3*477*FLEN/8, x4, x1, x2)

inst_25822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa38007ff; valaddr_reg:x3; val_offset:77466*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77466*0 + 3*478*FLEN/8, x4, x1, x2)

inst_25823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3800fff; valaddr_reg:x3; val_offset:77469*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77469*0 + 3*479*FLEN/8, x4, x1, x2)

inst_25824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3801fff; valaddr_reg:x3; val_offset:77472*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77472*0 + 3*480*FLEN/8, x4, x1, x2)

inst_25825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3803fff; valaddr_reg:x3; val_offset:77475*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77475*0 + 3*481*FLEN/8, x4, x1, x2)

inst_25826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3807fff; valaddr_reg:x3; val_offset:77478*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77478*0 + 3*482*FLEN/8, x4, x1, x2)

inst_25827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa380ffff; valaddr_reg:x3; val_offset:77481*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77481*0 + 3*483*FLEN/8, x4, x1, x2)

inst_25828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa381ffff; valaddr_reg:x3; val_offset:77484*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77484*0 + 3*484*FLEN/8, x4, x1, x2)

inst_25829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa383ffff; valaddr_reg:x3; val_offset:77487*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77487*0 + 3*485*FLEN/8, x4, x1, x2)

inst_25830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa387ffff; valaddr_reg:x3; val_offset:77490*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77490*0 + 3*486*FLEN/8, x4, x1, x2)

inst_25831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa38fffff; valaddr_reg:x3; val_offset:77493*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77493*0 + 3*487*FLEN/8, x4, x1, x2)

inst_25832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa39fffff; valaddr_reg:x3; val_offset:77496*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77496*0 + 3*488*FLEN/8, x4, x1, x2)

inst_25833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3bfffff; valaddr_reg:x3; val_offset:77499*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77499*0 + 3*489*FLEN/8, x4, x1, x2)

inst_25834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3c00000; valaddr_reg:x3; val_offset:77502*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77502*0 + 3*490*FLEN/8, x4, x1, x2)

inst_25835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3e00000; valaddr_reg:x3; val_offset:77505*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77505*0 + 3*491*FLEN/8, x4, x1, x2)

inst_25836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3f00000; valaddr_reg:x3; val_offset:77508*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77508*0 + 3*492*FLEN/8, x4, x1, x2)

inst_25837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3f80000; valaddr_reg:x3; val_offset:77511*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77511*0 + 3*493*FLEN/8, x4, x1, x2)

inst_25838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fc0000; valaddr_reg:x3; val_offset:77514*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77514*0 + 3*494*FLEN/8, x4, x1, x2)

inst_25839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fe0000; valaddr_reg:x3; val_offset:77517*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77517*0 + 3*495*FLEN/8, x4, x1, x2)

inst_25840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3ff0000; valaddr_reg:x3; val_offset:77520*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77520*0 + 3*496*FLEN/8, x4, x1, x2)

inst_25841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3ff8000; valaddr_reg:x3; val_offset:77523*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77523*0 + 3*497*FLEN/8, x4, x1, x2)

inst_25842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3ffc000; valaddr_reg:x3; val_offset:77526*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77526*0 + 3*498*FLEN/8, x4, x1, x2)

inst_25843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3ffe000; valaddr_reg:x3; val_offset:77529*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77529*0 + 3*499*FLEN/8, x4, x1, x2)

inst_25844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fff000; valaddr_reg:x3; val_offset:77532*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77532*0 + 3*500*FLEN/8, x4, x1, x2)

inst_25845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fff800; valaddr_reg:x3; val_offset:77535*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77535*0 + 3*501*FLEN/8, x4, x1, x2)

inst_25846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fffc00; valaddr_reg:x3; val_offset:77538*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77538*0 + 3*502*FLEN/8, x4, x1, x2)

inst_25847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fffe00; valaddr_reg:x3; val_offset:77541*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77541*0 + 3*503*FLEN/8, x4, x1, x2)

inst_25848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3ffff00; valaddr_reg:x3; val_offset:77544*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77544*0 + 3*504*FLEN/8, x4, x1, x2)

inst_25849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3ffff80; valaddr_reg:x3; val_offset:77547*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77547*0 + 3*505*FLEN/8, x4, x1, x2)

inst_25850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3ffffc0; valaddr_reg:x3; val_offset:77550*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77550*0 + 3*506*FLEN/8, x4, x1, x2)

inst_25851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3ffffe0; valaddr_reg:x3; val_offset:77553*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77553*0 + 3*507*FLEN/8, x4, x1, x2)

inst_25852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fffff0; valaddr_reg:x3; val_offset:77556*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77556*0 + 3*508*FLEN/8, x4, x1, x2)

inst_25853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fffff8; valaddr_reg:x3; val_offset:77559*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77559*0 + 3*509*FLEN/8, x4, x1, x2)

inst_25854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fffffc; valaddr_reg:x3; val_offset:77562*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77562*0 + 3*510*FLEN/8, x4, x1, x2)

inst_25855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3fffffe; valaddr_reg:x3; val_offset:77565*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77565*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_25856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xa3ffffff; valaddr_reg:x3; val_offset:77568*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77568*0 + 3*512*FLEN/8, x4, x1, x2)

inst_25857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbf800001; valaddr_reg:x3; val_offset:77571*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77571*0 + 3*513*FLEN/8, x4, x1, x2)

inst_25858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbf800003; valaddr_reg:x3; val_offset:77574*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77574*0 + 3*514*FLEN/8, x4, x1, x2)

inst_25859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbf800007; valaddr_reg:x3; val_offset:77577*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77577*0 + 3*515*FLEN/8, x4, x1, x2)

inst_25860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbf999999; valaddr_reg:x3; val_offset:77580*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77580*0 + 3*516*FLEN/8, x4, x1, x2)

inst_25861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:77583*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77583*0 + 3*517*FLEN/8, x4, x1, x2)

inst_25862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:77586*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77586*0 + 3*518*FLEN/8, x4, x1, x2)

inst_25863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:77589*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77589*0 + 3*519*FLEN/8, x4, x1, x2)

inst_25864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:77592*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77592*0 + 3*520*FLEN/8, x4, x1, x2)

inst_25865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:77595*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77595*0 + 3*521*FLEN/8, x4, x1, x2)

inst_25866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:77598*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77598*0 + 3*522*FLEN/8, x4, x1, x2)

inst_25867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:77601*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77601*0 + 3*523*FLEN/8, x4, x1, x2)

inst_25868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:77604*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77604*0 + 3*524*FLEN/8, x4, x1, x2)

inst_25869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:77607*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77607*0 + 3*525*FLEN/8, x4, x1, x2)

inst_25870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:77610*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77610*0 + 3*526*FLEN/8, x4, x1, x2)

inst_25871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:77613*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77613*0 + 3*527*FLEN/8, x4, x1, x2)

inst_25872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0375b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x3e50cc and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0375b7; op2val:0x803e50cc;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:77616*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77616*0 + 3*528*FLEN/8, x4, x1, x2)

inst_25873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4800000; valaddr_reg:x3; val_offset:77619*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77619*0 + 3*529*FLEN/8, x4, x1, x2)

inst_25874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4800001; valaddr_reg:x3; val_offset:77622*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77622*0 + 3*530*FLEN/8, x4, x1, x2)

inst_25875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4800003; valaddr_reg:x3; val_offset:77625*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77625*0 + 3*531*FLEN/8, x4, x1, x2)

inst_25876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4800007; valaddr_reg:x3; val_offset:77628*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77628*0 + 3*532*FLEN/8, x4, x1, x2)

inst_25877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf480000f; valaddr_reg:x3; val_offset:77631*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77631*0 + 3*533*FLEN/8, x4, x1, x2)

inst_25878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf480001f; valaddr_reg:x3; val_offset:77634*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77634*0 + 3*534*FLEN/8, x4, x1, x2)

inst_25879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf480003f; valaddr_reg:x3; val_offset:77637*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77637*0 + 3*535*FLEN/8, x4, x1, x2)

inst_25880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf480007f; valaddr_reg:x3; val_offset:77640*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77640*0 + 3*536*FLEN/8, x4, x1, x2)

inst_25881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf48000ff; valaddr_reg:x3; val_offset:77643*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77643*0 + 3*537*FLEN/8, x4, x1, x2)

inst_25882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf48001ff; valaddr_reg:x3; val_offset:77646*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77646*0 + 3*538*FLEN/8, x4, x1, x2)

inst_25883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf48003ff; valaddr_reg:x3; val_offset:77649*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77649*0 + 3*539*FLEN/8, x4, x1, x2)

inst_25884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf48007ff; valaddr_reg:x3; val_offset:77652*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77652*0 + 3*540*FLEN/8, x4, x1, x2)

inst_25885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4800fff; valaddr_reg:x3; val_offset:77655*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77655*0 + 3*541*FLEN/8, x4, x1, x2)

inst_25886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4801fff; valaddr_reg:x3; val_offset:77658*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77658*0 + 3*542*FLEN/8, x4, x1, x2)

inst_25887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4803fff; valaddr_reg:x3; val_offset:77661*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77661*0 + 3*543*FLEN/8, x4, x1, x2)

inst_25888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4807fff; valaddr_reg:x3; val_offset:77664*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77664*0 + 3*544*FLEN/8, x4, x1, x2)

inst_25889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf480ffff; valaddr_reg:x3; val_offset:77667*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77667*0 + 3*545*FLEN/8, x4, x1, x2)

inst_25890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf481ffff; valaddr_reg:x3; val_offset:77670*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77670*0 + 3*546*FLEN/8, x4, x1, x2)

inst_25891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf483ffff; valaddr_reg:x3; val_offset:77673*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77673*0 + 3*547*FLEN/8, x4, x1, x2)

inst_25892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf487ffff; valaddr_reg:x3; val_offset:77676*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77676*0 + 3*548*FLEN/8, x4, x1, x2)

inst_25893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf48fffff; valaddr_reg:x3; val_offset:77679*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77679*0 + 3*549*FLEN/8, x4, x1, x2)

inst_25894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf49fffff; valaddr_reg:x3; val_offset:77682*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77682*0 + 3*550*FLEN/8, x4, x1, x2)

inst_25895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4bfffff; valaddr_reg:x3; val_offset:77685*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77685*0 + 3*551*FLEN/8, x4, x1, x2)

inst_25896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4c00000; valaddr_reg:x3; val_offset:77688*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77688*0 + 3*552*FLEN/8, x4, x1, x2)

inst_25897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4e00000; valaddr_reg:x3; val_offset:77691*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77691*0 + 3*553*FLEN/8, x4, x1, x2)

inst_25898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4f00000; valaddr_reg:x3; val_offset:77694*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77694*0 + 3*554*FLEN/8, x4, x1, x2)

inst_25899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4f80000; valaddr_reg:x3; val_offset:77697*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77697*0 + 3*555*FLEN/8, x4, x1, x2)

inst_25900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fc0000; valaddr_reg:x3; val_offset:77700*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77700*0 + 3*556*FLEN/8, x4, x1, x2)

inst_25901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fe0000; valaddr_reg:x3; val_offset:77703*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77703*0 + 3*557*FLEN/8, x4, x1, x2)

inst_25902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4ff0000; valaddr_reg:x3; val_offset:77706*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77706*0 + 3*558*FLEN/8, x4, x1, x2)

inst_25903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4ff8000; valaddr_reg:x3; val_offset:77709*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77709*0 + 3*559*FLEN/8, x4, x1, x2)

inst_25904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4ffc000; valaddr_reg:x3; val_offset:77712*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77712*0 + 3*560*FLEN/8, x4, x1, x2)

inst_25905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4ffe000; valaddr_reg:x3; val_offset:77715*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77715*0 + 3*561*FLEN/8, x4, x1, x2)

inst_25906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fff000; valaddr_reg:x3; val_offset:77718*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77718*0 + 3*562*FLEN/8, x4, x1, x2)

inst_25907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fff800; valaddr_reg:x3; val_offset:77721*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77721*0 + 3*563*FLEN/8, x4, x1, x2)

inst_25908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fffc00; valaddr_reg:x3; val_offset:77724*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77724*0 + 3*564*FLEN/8, x4, x1, x2)

inst_25909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fffe00; valaddr_reg:x3; val_offset:77727*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77727*0 + 3*565*FLEN/8, x4, x1, x2)

inst_25910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4ffff00; valaddr_reg:x3; val_offset:77730*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77730*0 + 3*566*FLEN/8, x4, x1, x2)

inst_25911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4ffff80; valaddr_reg:x3; val_offset:77733*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77733*0 + 3*567*FLEN/8, x4, x1, x2)

inst_25912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4ffffc0; valaddr_reg:x3; val_offset:77736*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77736*0 + 3*568*FLEN/8, x4, x1, x2)

inst_25913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4ffffe0; valaddr_reg:x3; val_offset:77739*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77739*0 + 3*569*FLEN/8, x4, x1, x2)

inst_25914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fffff0; valaddr_reg:x3; val_offset:77742*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77742*0 + 3*570*FLEN/8, x4, x1, x2)

inst_25915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fffff8; valaddr_reg:x3; val_offset:77745*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77745*0 + 3*571*FLEN/8, x4, x1, x2)

inst_25916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fffffc; valaddr_reg:x3; val_offset:77748*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77748*0 + 3*572*FLEN/8, x4, x1, x2)

inst_25917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4fffffe; valaddr_reg:x3; val_offset:77751*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77751*0 + 3*573*FLEN/8, x4, x1, x2)

inst_25918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xf4ffffff; valaddr_reg:x3; val_offset:77754*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77754*0 + 3*574*FLEN/8, x4, x1, x2)

inst_25919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff000001; valaddr_reg:x3; val_offset:77757*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77757*0 + 3*575*FLEN/8, x4, x1, x2)

inst_25920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff000003; valaddr_reg:x3; val_offset:77760*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77760*0 + 3*576*FLEN/8, x4, x1, x2)

inst_25921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff000007; valaddr_reg:x3; val_offset:77763*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77763*0 + 3*577*FLEN/8, x4, x1, x2)

inst_25922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff199999; valaddr_reg:x3; val_offset:77766*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77766*0 + 3*578*FLEN/8, x4, x1, x2)

inst_25923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff249249; valaddr_reg:x3; val_offset:77769*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77769*0 + 3*579*FLEN/8, x4, x1, x2)

inst_25924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff333333; valaddr_reg:x3; val_offset:77772*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77772*0 + 3*580*FLEN/8, x4, x1, x2)

inst_25925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:77775*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77775*0 + 3*581*FLEN/8, x4, x1, x2)

inst_25926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:77778*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77778*0 + 3*582*FLEN/8, x4, x1, x2)

inst_25927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff444444; valaddr_reg:x3; val_offset:77781*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77781*0 + 3*583*FLEN/8, x4, x1, x2)

inst_25928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:77784*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77784*0 + 3*584*FLEN/8, x4, x1, x2)

inst_25929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:77787*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77787*0 + 3*585*FLEN/8, x4, x1, x2)

inst_25930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff666666; valaddr_reg:x3; val_offset:77790*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77790*0 + 3*586*FLEN/8, x4, x1, x2)

inst_25931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:77793*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77793*0 + 3*587*FLEN/8, x4, x1, x2)

inst_25932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:77796*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77796*0 + 3*588*FLEN/8, x4, x1, x2)

inst_25933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:77799*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77799*0 + 3*589*FLEN/8, x4, x1, x2)

inst_25934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03dbc4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x788245 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03dbc4; op2val:0xbff88245;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:77802*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77802*0 + 3*590*FLEN/8, x4, x1, x2)

inst_25935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d000000; valaddr_reg:x3; val_offset:77805*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77805*0 + 3*591*FLEN/8, x4, x1, x2)

inst_25936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d000001; valaddr_reg:x3; val_offset:77808*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77808*0 + 3*592*FLEN/8, x4, x1, x2)

inst_25937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d000003; valaddr_reg:x3; val_offset:77811*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77811*0 + 3*593*FLEN/8, x4, x1, x2)

inst_25938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d000007; valaddr_reg:x3; val_offset:77814*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77814*0 + 3*594*FLEN/8, x4, x1, x2)

inst_25939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d00000f; valaddr_reg:x3; val_offset:77817*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77817*0 + 3*595*FLEN/8, x4, x1, x2)

inst_25940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d00001f; valaddr_reg:x3; val_offset:77820*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77820*0 + 3*596*FLEN/8, x4, x1, x2)

inst_25941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d00003f; valaddr_reg:x3; val_offset:77823*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77823*0 + 3*597*FLEN/8, x4, x1, x2)

inst_25942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d00007f; valaddr_reg:x3; val_offset:77826*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77826*0 + 3*598*FLEN/8, x4, x1, x2)

inst_25943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d0000ff; valaddr_reg:x3; val_offset:77829*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77829*0 + 3*599*FLEN/8, x4, x1, x2)

inst_25944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d0001ff; valaddr_reg:x3; val_offset:77832*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77832*0 + 3*600*FLEN/8, x4, x1, x2)

inst_25945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d0003ff; valaddr_reg:x3; val_offset:77835*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77835*0 + 3*601*FLEN/8, x4, x1, x2)

inst_25946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d0007ff; valaddr_reg:x3; val_offset:77838*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77838*0 + 3*602*FLEN/8, x4, x1, x2)

inst_25947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d000fff; valaddr_reg:x3; val_offset:77841*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77841*0 + 3*603*FLEN/8, x4, x1, x2)

inst_25948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d001fff; valaddr_reg:x3; val_offset:77844*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77844*0 + 3*604*FLEN/8, x4, x1, x2)

inst_25949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d003fff; valaddr_reg:x3; val_offset:77847*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77847*0 + 3*605*FLEN/8, x4, x1, x2)

inst_25950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d007fff; valaddr_reg:x3; val_offset:77850*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77850*0 + 3*606*FLEN/8, x4, x1, x2)

inst_25951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d00ffff; valaddr_reg:x3; val_offset:77853*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77853*0 + 3*607*FLEN/8, x4, x1, x2)

inst_25952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d01ffff; valaddr_reg:x3; val_offset:77856*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77856*0 + 3*608*FLEN/8, x4, x1, x2)

inst_25953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d03ffff; valaddr_reg:x3; val_offset:77859*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77859*0 + 3*609*FLEN/8, x4, x1, x2)

inst_25954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d07ffff; valaddr_reg:x3; val_offset:77862*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77862*0 + 3*610*FLEN/8, x4, x1, x2)

inst_25955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d0fffff; valaddr_reg:x3; val_offset:77865*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77865*0 + 3*611*FLEN/8, x4, x1, x2)

inst_25956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d1fffff; valaddr_reg:x3; val_offset:77868*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77868*0 + 3*612*FLEN/8, x4, x1, x2)

inst_25957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d3fffff; valaddr_reg:x3; val_offset:77871*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77871*0 + 3*613*FLEN/8, x4, x1, x2)

inst_25958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d400000; valaddr_reg:x3; val_offset:77874*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77874*0 + 3*614*FLEN/8, x4, x1, x2)

inst_25959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d600000; valaddr_reg:x3; val_offset:77877*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77877*0 + 3*615*FLEN/8, x4, x1, x2)

inst_25960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d700000; valaddr_reg:x3; val_offset:77880*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77880*0 + 3*616*FLEN/8, x4, x1, x2)

inst_25961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d780000; valaddr_reg:x3; val_offset:77883*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77883*0 + 3*617*FLEN/8, x4, x1, x2)

inst_25962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7c0000; valaddr_reg:x3; val_offset:77886*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77886*0 + 3*618*FLEN/8, x4, x1, x2)

inst_25963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7e0000; valaddr_reg:x3; val_offset:77889*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77889*0 + 3*619*FLEN/8, x4, x1, x2)

inst_25964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7f0000; valaddr_reg:x3; val_offset:77892*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77892*0 + 3*620*FLEN/8, x4, x1, x2)

inst_25965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7f8000; valaddr_reg:x3; val_offset:77895*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77895*0 + 3*621*FLEN/8, x4, x1, x2)

inst_25966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7fc000; valaddr_reg:x3; val_offset:77898*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77898*0 + 3*622*FLEN/8, x4, x1, x2)

inst_25967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7fe000; valaddr_reg:x3; val_offset:77901*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77901*0 + 3*623*FLEN/8, x4, x1, x2)

inst_25968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7ff000; valaddr_reg:x3; val_offset:77904*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77904*0 + 3*624*FLEN/8, x4, x1, x2)

inst_25969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7ff800; valaddr_reg:x3; val_offset:77907*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77907*0 + 3*625*FLEN/8, x4, x1, x2)

inst_25970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7ffc00; valaddr_reg:x3; val_offset:77910*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77910*0 + 3*626*FLEN/8, x4, x1, x2)

inst_25971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7ffe00; valaddr_reg:x3; val_offset:77913*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77913*0 + 3*627*FLEN/8, x4, x1, x2)

inst_25972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7fff00; valaddr_reg:x3; val_offset:77916*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77916*0 + 3*628*FLEN/8, x4, x1, x2)

inst_25973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7fff80; valaddr_reg:x3; val_offset:77919*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77919*0 + 3*629*FLEN/8, x4, x1, x2)

inst_25974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7fffc0; valaddr_reg:x3; val_offset:77922*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77922*0 + 3*630*FLEN/8, x4, x1, x2)

inst_25975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7fffe0; valaddr_reg:x3; val_offset:77925*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77925*0 + 3*631*FLEN/8, x4, x1, x2)

inst_25976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7ffff0; valaddr_reg:x3; val_offset:77928*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77928*0 + 3*632*FLEN/8, x4, x1, x2)

inst_25977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7ffff8; valaddr_reg:x3; val_offset:77931*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77931*0 + 3*633*FLEN/8, x4, x1, x2)

inst_25978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7ffffc; valaddr_reg:x3; val_offset:77934*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77934*0 + 3*634*FLEN/8, x4, x1, x2)

inst_25979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7ffffe; valaddr_reg:x3; val_offset:77937*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77937*0 + 3*635*FLEN/8, x4, x1, x2)

inst_25980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3d7fffff; valaddr_reg:x3; val_offset:77940*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77940*0 + 3*636*FLEN/8, x4, x1, x2)

inst_25981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3f800001; valaddr_reg:x3; val_offset:77943*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77943*0 + 3*637*FLEN/8, x4, x1, x2)

inst_25982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3f800003; valaddr_reg:x3; val_offset:77946*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77946*0 + 3*638*FLEN/8, x4, x1, x2)

inst_25983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3f800007; valaddr_reg:x3; val_offset:77949*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77949*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_25984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3f999999; valaddr_reg:x3; val_offset:77952*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77952*0 + 3*640*FLEN/8, x4, x1, x2)

inst_25985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:77955*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77955*0 + 3*641*FLEN/8, x4, x1, x2)

inst_25986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:77958*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77958*0 + 3*642*FLEN/8, x4, x1, x2)

inst_25987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:77961*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77961*0 + 3*643*FLEN/8, x4, x1, x2)

inst_25988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:77964*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77964*0 + 3*644*FLEN/8, x4, x1, x2)

inst_25989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:77967*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77967*0 + 3*645*FLEN/8, x4, x1, x2)

inst_25990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:77970*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77970*0 + 3*646*FLEN/8, x4, x1, x2)

inst_25991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:77973*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77973*0 + 3*647*FLEN/8, x4, x1, x2)

inst_25992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:77976*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77976*0 + 3*648*FLEN/8, x4, x1, x2)

inst_25993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:77979*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77979*0 + 3*649*FLEN/8, x4, x1, x2)

inst_25994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:77982*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77982*0 + 3*650*FLEN/8, x4, x1, x2)

inst_25995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:77985*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77985*0 + 3*651*FLEN/8, x4, x1, x2)

inst_25996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03fadc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3e11ee and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f03fadc; op2val:0x3e11ee;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:77988*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77988*0 + 3*652*FLEN/8, x4, x1, x2)

inst_25997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1000000; valaddr_reg:x3; val_offset:77991*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77991*0 + 3*653*FLEN/8, x4, x1, x2)

inst_25998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1000001; valaddr_reg:x3; val_offset:77994*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77994*0 + 3*654*FLEN/8, x4, x1, x2)

inst_25999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1000003; valaddr_reg:x3; val_offset:77997*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 77997*0 + 3*655*FLEN/8, x4, x1, x2)

inst_26000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1000007; valaddr_reg:x3; val_offset:78000*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78000*0 + 3*656*FLEN/8, x4, x1, x2)

inst_26001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf100000f; valaddr_reg:x3; val_offset:78003*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78003*0 + 3*657*FLEN/8, x4, x1, x2)

inst_26002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf100001f; valaddr_reg:x3; val_offset:78006*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78006*0 + 3*658*FLEN/8, x4, x1, x2)

inst_26003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf100003f; valaddr_reg:x3; val_offset:78009*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78009*0 + 3*659*FLEN/8, x4, x1, x2)

inst_26004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf100007f; valaddr_reg:x3; val_offset:78012*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78012*0 + 3*660*FLEN/8, x4, x1, x2)

inst_26005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf10000ff; valaddr_reg:x3; val_offset:78015*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78015*0 + 3*661*FLEN/8, x4, x1, x2)

inst_26006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf10001ff; valaddr_reg:x3; val_offset:78018*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78018*0 + 3*662*FLEN/8, x4, x1, x2)

inst_26007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf10003ff; valaddr_reg:x3; val_offset:78021*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78021*0 + 3*663*FLEN/8, x4, x1, x2)

inst_26008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf10007ff; valaddr_reg:x3; val_offset:78024*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78024*0 + 3*664*FLEN/8, x4, x1, x2)

inst_26009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1000fff; valaddr_reg:x3; val_offset:78027*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78027*0 + 3*665*FLEN/8, x4, x1, x2)

inst_26010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1001fff; valaddr_reg:x3; val_offset:78030*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78030*0 + 3*666*FLEN/8, x4, x1, x2)

inst_26011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1003fff; valaddr_reg:x3; val_offset:78033*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78033*0 + 3*667*FLEN/8, x4, x1, x2)

inst_26012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1007fff; valaddr_reg:x3; val_offset:78036*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78036*0 + 3*668*FLEN/8, x4, x1, x2)

inst_26013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf100ffff; valaddr_reg:x3; val_offset:78039*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78039*0 + 3*669*FLEN/8, x4, x1, x2)

inst_26014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf101ffff; valaddr_reg:x3; val_offset:78042*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78042*0 + 3*670*FLEN/8, x4, x1, x2)

inst_26015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf103ffff; valaddr_reg:x3; val_offset:78045*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78045*0 + 3*671*FLEN/8, x4, x1, x2)

inst_26016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf107ffff; valaddr_reg:x3; val_offset:78048*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78048*0 + 3*672*FLEN/8, x4, x1, x2)

inst_26017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf10fffff; valaddr_reg:x3; val_offset:78051*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78051*0 + 3*673*FLEN/8, x4, x1, x2)

inst_26018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf11fffff; valaddr_reg:x3; val_offset:78054*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78054*0 + 3*674*FLEN/8, x4, x1, x2)

inst_26019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf13fffff; valaddr_reg:x3; val_offset:78057*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78057*0 + 3*675*FLEN/8, x4, x1, x2)

inst_26020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1400000; valaddr_reg:x3; val_offset:78060*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78060*0 + 3*676*FLEN/8, x4, x1, x2)

inst_26021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1600000; valaddr_reg:x3; val_offset:78063*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78063*0 + 3*677*FLEN/8, x4, x1, x2)

inst_26022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1700000; valaddr_reg:x3; val_offset:78066*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78066*0 + 3*678*FLEN/8, x4, x1, x2)

inst_26023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf1780000; valaddr_reg:x3; val_offset:78069*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78069*0 + 3*679*FLEN/8, x4, x1, x2)

inst_26024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17c0000; valaddr_reg:x3; val_offset:78072*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78072*0 + 3*680*FLEN/8, x4, x1, x2)

inst_26025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17e0000; valaddr_reg:x3; val_offset:78075*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78075*0 + 3*681*FLEN/8, x4, x1, x2)

inst_26026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17f0000; valaddr_reg:x3; val_offset:78078*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78078*0 + 3*682*FLEN/8, x4, x1, x2)

inst_26027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17f8000; valaddr_reg:x3; val_offset:78081*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78081*0 + 3*683*FLEN/8, x4, x1, x2)

inst_26028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17fc000; valaddr_reg:x3; val_offset:78084*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78084*0 + 3*684*FLEN/8, x4, x1, x2)

inst_26029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17fe000; valaddr_reg:x3; val_offset:78087*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78087*0 + 3*685*FLEN/8, x4, x1, x2)

inst_26030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17ff000; valaddr_reg:x3; val_offset:78090*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78090*0 + 3*686*FLEN/8, x4, x1, x2)

inst_26031:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17ff800; valaddr_reg:x3; val_offset:78093*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78093*0 + 3*687*FLEN/8, x4, x1, x2)

inst_26032:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17ffc00; valaddr_reg:x3; val_offset:78096*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78096*0 + 3*688*FLEN/8, x4, x1, x2)

inst_26033:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17ffe00; valaddr_reg:x3; val_offset:78099*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78099*0 + 3*689*FLEN/8, x4, x1, x2)

inst_26034:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17fff00; valaddr_reg:x3; val_offset:78102*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78102*0 + 3*690*FLEN/8, x4, x1, x2)

inst_26035:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17fff80; valaddr_reg:x3; val_offset:78105*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78105*0 + 3*691*FLEN/8, x4, x1, x2)

inst_26036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17fffc0; valaddr_reg:x3; val_offset:78108*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78108*0 + 3*692*FLEN/8, x4, x1, x2)

inst_26037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17fffe0; valaddr_reg:x3; val_offset:78111*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78111*0 + 3*693*FLEN/8, x4, x1, x2)

inst_26038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17ffff0; valaddr_reg:x3; val_offset:78114*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78114*0 + 3*694*FLEN/8, x4, x1, x2)

inst_26039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17ffff8; valaddr_reg:x3; val_offset:78117*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78117*0 + 3*695*FLEN/8, x4, x1, x2)

inst_26040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17ffffc; valaddr_reg:x3; val_offset:78120*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78120*0 + 3*696*FLEN/8, x4, x1, x2)

inst_26041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17ffffe; valaddr_reg:x3; val_offset:78123*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78123*0 + 3*697*FLEN/8, x4, x1, x2)

inst_26042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xf17fffff; valaddr_reg:x3; val_offset:78126*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78126*0 + 3*698*FLEN/8, x4, x1, x2)

inst_26043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff000001; valaddr_reg:x3; val_offset:78129*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78129*0 + 3*699*FLEN/8, x4, x1, x2)

inst_26044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff000003; valaddr_reg:x3; val_offset:78132*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78132*0 + 3*700*FLEN/8, x4, x1, x2)

inst_26045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff000007; valaddr_reg:x3; val_offset:78135*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78135*0 + 3*701*FLEN/8, x4, x1, x2)

inst_26046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff199999; valaddr_reg:x3; val_offset:78138*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78138*0 + 3*702*FLEN/8, x4, x1, x2)

inst_26047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff249249; valaddr_reg:x3; val_offset:78141*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78141*0 + 3*703*FLEN/8, x4, x1, x2)

inst_26048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff333333; valaddr_reg:x3; val_offset:78144*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78144*0 + 3*704*FLEN/8, x4, x1, x2)

inst_26049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:78147*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78147*0 + 3*705*FLEN/8, x4, x1, x2)

inst_26050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:78150*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78150*0 + 3*706*FLEN/8, x4, x1, x2)

inst_26051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff444444; valaddr_reg:x3; val_offset:78153*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78153*0 + 3*707*FLEN/8, x4, x1, x2)

inst_26052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:78156*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78156*0 + 3*708*FLEN/8, x4, x1, x2)

inst_26053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:78159*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78159*0 + 3*709*FLEN/8, x4, x1, x2)

inst_26054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff666666; valaddr_reg:x3; val_offset:78162*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78162*0 + 3*710*FLEN/8, x4, x1, x2)

inst_26055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:78165*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78165*0 + 3*711*FLEN/8, x4, x1, x2)

inst_26056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:78168*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78168*0 + 3*712*FLEN/8, x4, x1, x2)

inst_26057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:78171*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78171*0 + 3*713*FLEN/8, x4, x1, x2)

inst_26058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x044b63 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x77b097 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f044b63; op2val:0xbff7b097;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:78174*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78174*0 + 3*714*FLEN/8, x4, x1, x2)

inst_26059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80000000; valaddr_reg:x3; val_offset:78177*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78177*0 + 3*715*FLEN/8, x4, x1, x2)

inst_26060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:78180*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78180*0 + 3*716*FLEN/8, x4, x1, x2)

inst_26061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:78183*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78183*0 + 3*717*FLEN/8, x4, x1, x2)

inst_26062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:78186*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78186*0 + 3*718*FLEN/8, x4, x1, x2)

inst_26063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x8000000f; valaddr_reg:x3; val_offset:78189*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78189*0 + 3*719*FLEN/8, x4, x1, x2)

inst_26064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x8000001f; valaddr_reg:x3; val_offset:78192*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78192*0 + 3*720*FLEN/8, x4, x1, x2)

inst_26065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x8000003f; valaddr_reg:x3; val_offset:78195*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78195*0 + 3*721*FLEN/8, x4, x1, x2)

inst_26066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x8000007f; valaddr_reg:x3; val_offset:78198*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78198*0 + 3*722*FLEN/8, x4, x1, x2)

inst_26067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x800000ff; valaddr_reg:x3; val_offset:78201*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78201*0 + 3*723*FLEN/8, x4, x1, x2)

inst_26068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x800001ff; valaddr_reg:x3; val_offset:78204*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78204*0 + 3*724*FLEN/8, x4, x1, x2)

inst_26069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x800003ff; valaddr_reg:x3; val_offset:78207*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78207*0 + 3*725*FLEN/8, x4, x1, x2)

inst_26070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x800007ff; valaddr_reg:x3; val_offset:78210*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78210*0 + 3*726*FLEN/8, x4, x1, x2)

inst_26071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80000fff; valaddr_reg:x3; val_offset:78213*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78213*0 + 3*727*FLEN/8, x4, x1, x2)

inst_26072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80001fff; valaddr_reg:x3; val_offset:78216*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78216*0 + 3*728*FLEN/8, x4, x1, x2)

inst_26073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80003fff; valaddr_reg:x3; val_offset:78219*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78219*0 + 3*729*FLEN/8, x4, x1, x2)

inst_26074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80007fff; valaddr_reg:x3; val_offset:78222*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78222*0 + 3*730*FLEN/8, x4, x1, x2)

inst_26075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x8000ffff; valaddr_reg:x3; val_offset:78225*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78225*0 + 3*731*FLEN/8, x4, x1, x2)

inst_26076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x8001ffff; valaddr_reg:x3; val_offset:78228*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78228*0 + 3*732*FLEN/8, x4, x1, x2)

inst_26077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x8003ffff; valaddr_reg:x3; val_offset:78231*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78231*0 + 3*733*FLEN/8, x4, x1, x2)

inst_26078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x8007ffff; valaddr_reg:x3; val_offset:78234*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78234*0 + 3*734*FLEN/8, x4, x1, x2)

inst_26079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x800fffff; valaddr_reg:x3; val_offset:78237*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78237*0 + 3*735*FLEN/8, x4, x1, x2)

inst_26080:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:78240*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78240*0 + 3*736*FLEN/8, x4, x1, x2)

inst_26081:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x801fffff; valaddr_reg:x3; val_offset:78243*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78243*0 + 3*737*FLEN/8, x4, x1, x2)

inst_26082:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:78246*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78246*0 + 3*738*FLEN/8, x4, x1, x2)

inst_26083:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:78249*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78249*0 + 3*739*FLEN/8, x4, x1, x2)

inst_26084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:78252*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78252*0 + 3*740*FLEN/8, x4, x1, x2)

inst_26085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:78255*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78255*0 + 3*741*FLEN/8, x4, x1, x2)

inst_26086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x803fffff; valaddr_reg:x3; val_offset:78258*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78258*0 + 3*742*FLEN/8, x4, x1, x2)

inst_26087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80400000; valaddr_reg:x3; val_offset:78261*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78261*0 + 3*743*FLEN/8, x4, x1, x2)

inst_26088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:78264*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78264*0 + 3*744*FLEN/8, x4, x1, x2)

inst_26089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:78267*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78267*0 + 3*745*FLEN/8, x4, x1, x2)

inst_26090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:78270*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78270*0 + 3*746*FLEN/8, x4, x1, x2)

inst_26091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80600000; valaddr_reg:x3; val_offset:78273*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78273*0 + 3*747*FLEN/8, x4, x1, x2)

inst_26092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:78276*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78276*0 + 3*748*FLEN/8, x4, x1, x2)

inst_26093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:78279*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78279*0 + 3*749*FLEN/8, x4, x1, x2)

inst_26094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80700000; valaddr_reg:x3; val_offset:78282*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78282*0 + 3*750*FLEN/8, x4, x1, x2)

inst_26095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x80780000; valaddr_reg:x3; val_offset:78285*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78285*0 + 3*751*FLEN/8, x4, x1, x2)

inst_26096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807c0000; valaddr_reg:x3; val_offset:78288*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78288*0 + 3*752*FLEN/8, x4, x1, x2)

inst_26097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807e0000; valaddr_reg:x3; val_offset:78291*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78291*0 + 3*753*FLEN/8, x4, x1, x2)

inst_26098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807f0000; valaddr_reg:x3; val_offset:78294*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78294*0 + 3*754*FLEN/8, x4, x1, x2)

inst_26099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807f8000; valaddr_reg:x3; val_offset:78297*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78297*0 + 3*755*FLEN/8, x4, x1, x2)

inst_26100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807fc000; valaddr_reg:x3; val_offset:78300*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78300*0 + 3*756*FLEN/8, x4, x1, x2)

inst_26101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807fe000; valaddr_reg:x3; val_offset:78303*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78303*0 + 3*757*FLEN/8, x4, x1, x2)

inst_26102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807ff000; valaddr_reg:x3; val_offset:78306*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78306*0 + 3*758*FLEN/8, x4, x1, x2)

inst_26103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807ff800; valaddr_reg:x3; val_offset:78309*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78309*0 + 3*759*FLEN/8, x4, x1, x2)

inst_26104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807ffc00; valaddr_reg:x3; val_offset:78312*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78312*0 + 3*760*FLEN/8, x4, x1, x2)

inst_26105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807ffe00; valaddr_reg:x3; val_offset:78315*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78315*0 + 3*761*FLEN/8, x4, x1, x2)

inst_26106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807fff00; valaddr_reg:x3; val_offset:78318*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78318*0 + 3*762*FLEN/8, x4, x1, x2)

inst_26107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807fff80; valaddr_reg:x3; val_offset:78321*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78321*0 + 3*763*FLEN/8, x4, x1, x2)

inst_26108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807fffc0; valaddr_reg:x3; val_offset:78324*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78324*0 + 3*764*FLEN/8, x4, x1, x2)

inst_26109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807fffe0; valaddr_reg:x3; val_offset:78327*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78327*0 + 3*765*FLEN/8, x4, x1, x2)

inst_26110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807ffff0; valaddr_reg:x3; val_offset:78330*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78330*0 + 3*766*FLEN/8, x4, x1, x2)

inst_26111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x046894 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f046894; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:78333*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 78333*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365595647,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365603839,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365620223,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365652991,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365718527,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365849599,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2366111743,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2366636031,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2367684607,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2369781759,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2369781760,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2371878912,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2372927488,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373451776,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373713920,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373844992,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373910528,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373943296,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373959680,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373967872,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373971968,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373974016,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975040,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975552,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975808,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975936,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976000,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976032,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976048,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976056,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976060,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976062,32,FLEN)
NAN_BOXED(2130857794,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976063,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803550720,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803550721,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803550723,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803550727,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803550735,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803550751,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803550783,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803550847,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803550975,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803551231,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803551743,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803552767,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803554815,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803558911,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803567103,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803583487,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803616255,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803681791,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1803812863,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1804075007,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1804599295,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1805647871,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1807745023,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1807745024,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1809842176,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1810890752,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811415040,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811677184,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811808256,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811873792,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811906560,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811922944,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811931136,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811935232,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811937280,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811938304,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811938816,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811939072,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811939200,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811939264,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811939296,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811939312,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811939320,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811939324,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811939326,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(1811939327,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2130870795,32,FLEN)
NAN_BOXED(1073419412,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334336,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334337,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334339,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334343,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334351,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334367,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334399,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334463,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334591,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288334847,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288335359,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288336383,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288338431,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288342527,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288350719,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288367103,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288399871,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288465407,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288596479,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3288858623,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3289382911,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3290431487,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3292528639,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3292528640,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3294625792,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3295674368,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296198656,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296460800,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296591872,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296657408,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296690176,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296706560,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296714752,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296718848,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296720896,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296721920,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722432,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722688,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722816,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722880,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722912,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722928,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722936,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722940,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722942,32,FLEN)
NAN_BOXED(2130877017,32,FLEN)
NAN_BOXED(2151594359,32,FLEN)
NAN_BOXED(3296722943,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430940672,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430940673,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430940675,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430940679,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430940687,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430940703,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430940735,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430940799,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430940927,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430941183,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430941695,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430942719,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430944767,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430948863,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430957055,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3430973439,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3431006207,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3431071743,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3431202815,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3431464959,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3431989247,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3433037823,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3435134975,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3435134976,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3437232128,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3438280704,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3438804992,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439067136,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439198208,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439263744,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439296512,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439312896,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439321088,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439325184,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439327232,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439328256,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439328768,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439329024,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439329152,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439329216,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439329248,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439329264,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439329272,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439329276,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439329278,32,FLEN)
NAN_BOXED(2130891250,32,FLEN)
NAN_BOXED(2151587534,32,FLEN)
NAN_BOXED(3439329279,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021654528,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021654529,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021654531,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021654535,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021654543,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021654559,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021654591,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021654655,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021654783,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021655039,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021655551,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021656575,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021658623,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021662719,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021670911,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021687295,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021720063,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021785599,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2021916671,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2022178815,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2022703103,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2023751679,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2025848831,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2025848832,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2027945984,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2028994560,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2029518848,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2029780992,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2029912064,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2029977600,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030010368,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030026752,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030034944,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030039040,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030041088,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030042112,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030042624,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030042880,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043008,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043072,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043104,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043120,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043128,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043132,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043134,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2030043135,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2130897428,32,FLEN)
NAN_BOXED(1073368334,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311424,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311425,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311427,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311431,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311439,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311455,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311487,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311551,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311679,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654311935,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654312447,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654313471,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654315519,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654319615,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654327807,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654344191,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654376959,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654442495,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654573567,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(654835711,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(655359999,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(656408575,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(658505727,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(658505728,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(660602880,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(661651456,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662175744,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662437888,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662568960,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662634496,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662667264,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662683648,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662691840,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662695936,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662697984,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699008,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699520,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699776,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699904,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662699968,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700000,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700016,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700024,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700028,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700030,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(662700031,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130905380,32,FLEN)
NAN_BOXED(4097134,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036736,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036737,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036739,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036743,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036751,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036767,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036799,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036863,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562036991,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562037247,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562037759,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562038783,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562040831,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562044927,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562053119,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562069503,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562102271,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562167807,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562298879,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(562561023,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(563085311,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(564133887,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(566231039,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(566231040,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(568328192,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(569376768,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(569901056,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570163200,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570294272,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570359808,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570392576,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570408960,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570417152,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570421248,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570423296,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570424320,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570424832,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425088,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425216,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425280,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425312,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425328,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425336,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425340,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425342,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(570425343,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130927452,32,FLEN)
NAN_BOXED(4086630,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234240,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234241,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234243,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234247,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234255,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234271,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234303,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234367,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234495,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300234751,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300235263,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300236287,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300238335,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300242431,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300250623,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300267007,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300299775,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300365311,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300496383,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1300758527,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1301282815,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1302331391,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1304428543,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1304428544,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1306525696,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1307574272,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308098560,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308360704,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308491776,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308557312,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308590080,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308606464,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308614656,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308618752,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308620800,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308621824,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622336,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622592,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622720,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622784,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622816,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622832,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622840,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622844,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622846,32,FLEN)
NAN_BOXED(2130931589,32,FLEN)
NAN_BOXED(4084667,32,FLEN)
NAN_BOXED(1308622847,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743074816,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743074817,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743074819,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743074823,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743074831,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743074847,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743074879,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743074943,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743075071,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743075327,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743075839,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743076863,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743078911,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743083007,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743091199,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743107583,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743140351,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743205887,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743336959,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2743599103,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2744123391,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2745171967,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2747269119,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2747269120,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2749366272,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2750414848,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2750939136,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751201280,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751332352,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751397888,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751430656,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751447040,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751455232,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751459328,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751461376,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751462400,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751462912,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751463168,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751463296,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751463360,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751463392,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751463408,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751463416,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751463420,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751463422,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(2751463423,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2130933175,32,FLEN)
NAN_BOXED(2151567564,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029312,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029313,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029315,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029319,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029327,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029343,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029375,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029439,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029567,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102029823,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102030335,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102031359,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102033407,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102037503,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102045695,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102062079,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102094847,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102160383,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102291455,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4102553599,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4103077887,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4104126463,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4106223615,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4106223616,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4108320768,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4109369344,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4109893632,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110155776,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110286848,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110352384,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110385152,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110401536,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110409728,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110413824,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110415872,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110416896,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417408,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417664,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417792,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417856,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417888,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417904,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417912,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417916,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417918,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4110417919,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2130959300,32,FLEN)
NAN_BOXED(3220734533,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410176,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410177,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410179,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410183,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410191,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410207,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410239,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410303,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410431,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023410687,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023411199,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023412223,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023414271,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023418367,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023426559,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023442943,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023475711,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023541247,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023672319,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1023934463,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1024458751,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1025507327,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1027604479,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1027604480,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1029701632,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1030750208,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031274496,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031536640,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031667712,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031733248,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031766016,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031782400,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031790592,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031794688,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031796736,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031797760,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798272,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798528,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798656,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798720,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798752,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798768,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798776,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798780,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798782,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1031798783,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130967260,32,FLEN)
NAN_BOXED(4067822,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309056,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309057,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309059,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309063,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309071,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309087,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309119,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309183,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309311,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043309567,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043310079,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043311103,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043313151,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043317247,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043325439,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043341823,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043374591,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043440127,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043571199,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4043833343,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4044357631,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4045406207,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4047503359,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4047503360,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4049600512,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4050649088,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051173376,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051435520,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051566592,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051632128,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051664896,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051681280,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051689472,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051693568,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051695616,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051696640,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697152,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697408,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697536,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697600,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697632,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697648,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697656,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697660,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697662,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4051697663,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2130987875,32,FLEN)
NAN_BOXED(3220680855,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2130995348,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
