
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:17:59 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmadd_b14 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b14)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f30, rs2==f28, rs3==f15, rd==f28,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f28; op3:f15; dest:f28; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x10896378; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f28, f30, f28, f15, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rs3 == rd, rs1==f17, rs2==f17, rs3==f17, rd==f17,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f17; op2:f17; op3:f17; dest:f17; op1val:0x7f222105; op2val:0x7f222105;
op3val:0x7f222105; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f17, f17, f17, f17, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==f21, rs2==f21, rs3==f14, rd==f21,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f21; op2:f21; op3:f14; dest:f21; op1val:0x7f222105; op2val:0x7f222105;
op3val:0x33896378; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f21, f21, f21, f14, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f0, rs2==f31, rs3==f16, rd==f26,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x68 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f0; op2:f31; op3:f16; dest:f26; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x34096378; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f26, f0, f31, f16, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==f22, rs2==f22, rs3==f22, rd==f15,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x69 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f22; op2:f22; op3:f22; dest:f15; op1val:0x7f222105; op2val:0x7f222105;
op3val:0x7f222105; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f15, f22, f22, f22, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f20, rs2==f9, rs3==f29, rd==f20,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f20; op2:f9; op3:f29; dest:f20; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x35096378; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f20, f20, f9, f29, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==f18, rs2==f12, rs3==f12, rd==f12,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6b and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f18; op2:f12; op3:f12; dest:f12; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x7f1186f9; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f12, f18, f12, f12, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f13, rs2==f13, rs3==f24, rd==f4,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f13; op2:f13; op3:f24; dest:f4; op1val:0x7f222105; op2val:0x7f222105;
op3val:0x36096378; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f4, f13, f13, f24, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f5, rs2==f26, rs3==f26, rd==f11,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6d and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f5; op2:f26; op3:f26; dest:f11; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x7f1186f9; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f11, f5, f26, f26, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f23, rs2==f16, rs3==f23, rd==f23,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f23; op2:f16; op3:f23; dest:f23; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x7f222105; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f23, f23, f16, f23, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f8, rs2==f29, rs3==f8, rd==f31,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f8; op2:f29; op3:f8; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x7f222105; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f8, f29, f8, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f29, rs2==f10, rs3==f7, rd==f7,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x70 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f29; op2:f10; op3:f7; dest:f7; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x38096378; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f7, f29, f10, f7, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f14, rs2==f6, rs3==f27, rd==f13,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x71 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f14; op2:f6; op3:f27; dest:f13; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x38896378; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f13, f14, f6, f27, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f31, rs2==f8, rs3==f11, rd==f16,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x72 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f31; op2:f8; op3:f11; dest:f16; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x39096378; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f16, f31, f8, f11, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f26, rs2==f27, rs3==f28, rd==f14,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x73 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f26; op2:f27; op3:f28; dest:f14; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x39896378; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f14, f26, f27, f28, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f25, rs2==f24, rs3==f6, rd==f5,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x74 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f25; op2:f24; op3:f6; dest:f5; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3a096378; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f5, f25, f24, f6, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f19, rs2==f14, rs3==f1, rd==f9,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x75 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f19; op2:f14; op3:f1; dest:f9; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3a896378; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f9, f19, f14, f1, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f3, rs2==f2, rs3==f10, rd==f8,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f3; op2:f2; op3:f10; dest:f8; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3b096378; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f8, f3, f2, f10, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f12, rs2==f0, rs3==f25, rd==f27,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f12; op2:f0; op3:f25; dest:f27; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3b896378; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f27, f12, f0, f25, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f10, rs2==f20, rs3==f31, rd==f30,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f10; op2:f20; op3:f31; dest:f30; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3c096378; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f30, f10, f20, f31, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f28, rs2==f23, rs3==f21, rd==f3,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f28; op2:f23; op3:f21; dest:f3; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3c896378; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f3, f28, f23, f21, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f2, rs2==f5, rs3==f18, rd==f24,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f2; op2:f5; op3:f18; dest:f24; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3d096378; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f24, f2, f5, f18, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f16, rs2==f18, rs3==f0, rd==f19,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f16; op2:f18; op3:f0; dest:f19; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3d896378; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f19, f16, f18, f0, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f11, rs2==f1, rs3==f9, rd==f18,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f11; op2:f1; op3:f9; dest:f18; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3e096378; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f18, f11, f1, f9, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f15, rs2==f11, rs3==f13, rd==f1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f15; op2:f11; op3:f13; dest:f1; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3e896378; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f1, f15, f11, f13, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f27, rs2==f25, rs3==f5, rd==f2,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f27; op2:f25; op3:f5; dest:f2; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3f096378; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f2, f27, f25, f5, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f1, rs2==f4, rs3==f3, rd==f0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f1; op2:f4; op3:f3; dest:f0; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x3f896378; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f0, f1, f4, f3, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f6, rs2==f3, rs3==f19, rd==f10,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f6; op2:f3; op3:f19; dest:f10; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x40096378; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f10, f6, f3, f19, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f4, rs2==f19, rs3==f20, rd==f6,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f4; op2:f19; op3:f20; dest:f6; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x40896378; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f6, f4, f19, f20, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f9, rs2==f30, rs3==f2, rd==f29,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f9; op2:f30; op3:f2; dest:f29; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x41096378; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f29, f9, f30, f2, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f24, rs2==f15, rs3==f4, rd==f25,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x83 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f24; op2:f15; op3:f4; dest:f25; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x41896378; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f25, f24, f15, f4, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f7,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x84 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f7; op2:f31; op3:f26; dest:f24; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x42096378; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f24, f7, f31, f26, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// rs2==f7,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f31; op2:f7; op3:f21; dest:f9; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x42896378; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f9, f31, f7, f21, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// rs3==f30,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f25; op2:f18; op3:f30; dest:f0; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x43096378; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f0, f25, f18, f30, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// rd==f22,fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x87 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f24; op2:f11; op3:f19; dest:f22; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x43896378; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f22, f24, f11, f19, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x88 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x44096378; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x44896378; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8a and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x45096378; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8b and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x45896378; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8c and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x46096378; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8d and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x46896378; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x47096378; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x8f and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x47896378; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x90 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x48096378; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x91 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x48896378; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x92 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x49096378; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x49896378; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x94 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4a096378; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x95 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4a896378; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x96 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4b096378; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4b896378; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x98 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4c096378; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x99 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4c896378; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9a and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4d096378; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9b and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4d896378; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9c and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4e096378; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9d and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4e896378; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4f096378; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x4f896378; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa0 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x50096378; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa1 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x50896378; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa2 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x51096378; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa3 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x51896378; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x52096378; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x52896378; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x53096378; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x53896378; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x54096378; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x54896378; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xaa and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x55096378; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xab and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x55896378; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xac and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x56096378; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0xee and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x77096378; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x10896378; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x33096378; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x67 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x33896378; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x69 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x34896378; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x35096378; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6b and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x35896378; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6c and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x36096378; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6d and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x36896378; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6e and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x37096378; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x6f and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x37896378; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x1186f9 and fs3 == 0 and fe3 == 0x70 and fm3 == 0x096378 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f222105; op2val:0x7f1186f9;
op3val:0x38096378; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(277439352,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(864641912,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(873030520,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(889807736,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(906584952,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(940139384,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(948527992,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(956916600,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(965305208,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(973693816,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(982082424,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(990471032,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(998859640,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1007248248,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1015636856,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1024025464,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1032414072,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1040802680,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1049191288,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1057579896,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1065968504,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1074357112,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1082745720,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1091134328,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1099522936,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1107911544,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1116300152,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1124688760,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1133077368,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1141465976,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1149854584,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1158243192,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1166631800,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1175020408,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1183409016,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1191797624,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1200186232,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1208574840,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1216963448,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1225352056,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1233740664,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1242129272,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1250517880,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1258906488,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1267295096,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1275683704,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1284072312,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1292460920,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1300849528,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1309238136,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1317626744,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1326015352,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1334403960,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1342792568,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1351181176,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1359569784,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1367958392,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1376347000,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1384735608,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1393124216,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1401512824,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1409901432,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1418290040,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1426678648,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1435067256,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1443455864,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(1997103992,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(277439352,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(856253304,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(864641912,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(881419128,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(889807736,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(898196344,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(906584952,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(914973560,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(923362168,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(931750776,32,FLEN)
NAN_BOXED(2132943109,32,FLEN)
NAN_BOXED(2131855097,32,FLEN)
NAN_BOXED(940139384,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 168*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
