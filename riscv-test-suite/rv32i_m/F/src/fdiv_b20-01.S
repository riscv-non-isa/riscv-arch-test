
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:03:22 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fdiv.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fdiv_b20 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fdiv_b20)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1, rs1==f5, rs2==f16, rd==f16,fs1 == 0 and fe1 == 0xf7 and fm1 == 0x506932 and fs2 == 0 and fe2 == 0x99 and fm2 == 0x716acc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f5; op2:f16; dest:f16; op1val:0x7bd06932; op2val:0x4cf16acc;
   valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f16, f5, f16, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rd, rs1==f18, rs2==f18, rd==f18,fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e539a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f18; op2:f18; dest:f18; op1val:0x7c5e539a; op2val:0x7c5e539a;
   valaddr_reg:x3; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f18, f18, f18, dyn, 0, 0, x3, 2*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd != rs2, rs1==f19, rs2==f31, rd==f19,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x68f58b and fs2 == 1 and fe2 == 0xbf and fm2 == 0x756c07 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f19; op2:f31; dest:f19; op1val:0x7ce8f58b; op2val:0xdff56c07;
   valaddr_reg:x3; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f19, f19, f31, dyn, 0, 0, x3, 4*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f31, rs2==f21, rd==f25,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x70766e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f31; op2:f21; dest:f25; op1val:0x7cf0766e; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f25, f31, f21, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 != rd, rs1==f12, rs2==f12, rd==f20,fs1 == 0 and fe1 == 0xfa and fm1 == 0x34967e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x142cb6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f12; op2:f12; dest:f20; op1val:0x7d34967e; op2val:0x7d34967e;
   valaddr_reg:x3; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f20, f12, f12, dyn, 0, 0, x3, 8*FLEN/8, x4, x1, x2)

inst_5:
// rs1==f17, rs2==f6, rd==f11,fs1 == 0 and fe1 == 0xfa and fm1 == 0x60d9a4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f17; op2:f6; dest:f11; op1val:0x7d60d9a4; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f11, f17, f6, dyn, 0, 0, x3, 10*FLEN/8, x4, x1, x2)

inst_6:
// rs1==f0, rs2==f26, rd==f1,fs1 == 0 and fe1 == 0xfa and fm1 == 0x7b1d83 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f0; op2:f26; dest:f1; op1val:0x7d7b1d83; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f1, f0, f26, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_7:
// rs1==f10, rs2==f13, rd==f12,fs1 == 0 and fe1 == 0xfb and fm1 == 0x02119e and fs2 == 0 and fe2 == 0xec and fm2 == 0x25b1fa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f10; op2:f13; dest:f12; op1val:0x7d82119e; op2val:0x7625b1fa;
   valaddr_reg:x3; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f12, f10, f13, dyn, 0, 0, x3, 14*FLEN/8, x4, x1, x2)

inst_8:
// rs1==f26, rs2==f25, rd==f22,fs1 == 0 and fe1 == 0xfb and fm1 == 0x202a98 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f26; op2:f25; dest:f22; op1val:0x7da02a98; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f22, f26, f25, dyn, 0, 0, x3, 16*FLEN/8, x4, x1, x2)

inst_9:
// rs1==f15, rs2==f29, rd==f30,fs1 == 0 and fe1 == 0xfb and fm1 == 0x206546 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f15; op2:f29; dest:f30; op1val:0x7da06546; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f30, f15, f29, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_10:
// rs1==f3, rs2==f22, rd==f4,fs1 == 0 and fe1 == 0xfb and fm1 == 0x4fe433 and fs2 == 0 and fe2 == 0x9c and fm2 == 0x3feae5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f3; op2:f22; dest:f4; op1val:0x7dcfe433; op2val:0x4e3feae5;
   valaddr_reg:x3; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f4, f3, f22, dyn, 0, 0, x3, 20*FLEN/8, x4, x1, x2)

inst_11:
// rs1==f6, rs2==f23, rd==f13,fs1 == 0 and fe1 == 0xfb and fm1 == 0x60f718 and fs2 == 1 and fe2 == 0xe9 and fm2 == 0x33f8e0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f6; op2:f23; dest:f13; op1val:0x7de0f718; op2val:0xf4b3f8e0;
   valaddr_reg:x3; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f13, f6, f23, dyn, 0, 0, x3, 22*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f22, rs2==f24, rd==f6,fs1 == 0 and fe1 == 0xfb and fm1 == 0x761c0c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f22; op2:f24; dest:f6; op1val:0x7df61c0c; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f6, f22, f24, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f4, rs2==f0, rd==f2,fs1 == 0 and fe1 == 0xfc and fm1 == 0x025339 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x064930 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f4; op2:f0; dest:f2; op1val:0x7e025339; op2val:0x7c864930;
   valaddr_reg:x3; val_offset:26*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f2, f4, f0, dyn, 0, 0, x3, 26*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f28, rs2==f14, rd==f27,fs1 == 0 and fe1 == 0xfc and fm1 == 0x03b9a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f28; op2:f14; dest:f27; op1val:0x7e03b9a1; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:28*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f27, f28, f14, dyn, 0, 0, x3, 28*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f8, rs2==f11, rd==f14,fs1 == 0 and fe1 == 0xfc and fm1 == 0x151546 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f8; op2:f11; dest:f14; op1val:0x7e151546; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f14, f8, f11, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f23, rs2==f27, rd==f3,fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a414e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f23; op2:f27; dest:f3; op1val:0x7e1a414e; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:32*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f3, f23, f27, dyn, 0, 0, x3, 32*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f24, rs2==f7, rd==f15,fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e0667 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f24; op2:f7; dest:f15; op1val:0x7e1e0667; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:34*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f15, f24, f7, dyn, 0, 0, x3, 34*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f7, rs2==f2, rd==f10,fs1 == 0 and fe1 == 0xfc and fm1 == 0x238f3f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f7; op2:f2; dest:f10; op1val:0x7e238f3f; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f10, f7, f2, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f2, rs2==f1, rd==f0,fs1 == 0 and fe1 == 0xfc and fm1 == 0x239b5c and fs2 == 0 and fe2 == 0xe7 and fm2 == 0x311bbd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f2; op2:f1; dest:f0; op1val:0x7e239b5c; op2val:0x73b11bbd;
   valaddr_reg:x3; val_offset:38*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f0, f2, f1, dyn, 0, 0, x3, 38*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f27, rs2==f30, rd==f23,fs1 == 0 and fe1 == 0xfc and fm1 == 0x296bac and fs2 == 1 and fe2 == 0x97 and fm2 == 0x169899 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f27; op2:f30; dest:f23; op1val:0x7e296bac; op2val:0xcb969899;
   valaddr_reg:x3; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f23, f27, f30, dyn, 0, 0, x3, 40*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f9, rs2==f20, rd==f29,fs1 == 0 and fe1 == 0xfc and fm1 == 0x2b6a13 and fs2 == 0 and fe2 == 0xad and fm2 == 0x4b2862 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f9; op2:f20; dest:f29; op1val:0x7e2b6a13; op2val:0x56cb2862;
   valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f29, f9, f20, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f11, rs2==f8, rd==f7,fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bcff9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f11; op2:f8; dest:f7; op1val:0x7e2bcff9; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:44*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f7, f11, f8, dyn, 0, 0, x3, 44*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f20, rs2==f10, rd==f5,fs1 == 0 and fe1 == 0xfc and fm1 == 0x34342f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x7cb837 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f20; op2:f10; dest:f5; op1val:0x7e34342f; op2val:0x43fcb837;
   valaddr_reg:x3; val_offset:46*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f5, f20, f10, dyn, 0, 0, x3, 46*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f1, rs2==f3, rd==f17,fs1 == 0 and fe1 == 0xfc and fm1 == 0x41cf9e and fs2 == 1 and fe2 == 0xda and fm2 == 0x244a46 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f1; op2:f3; dest:f17; op1val:0x7e41cf9e; op2val:0xed244a46;
   valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f17, f1, f3, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f30, rs2==f5, rd==f9,fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cd7ff and fs2 == 1 and fe2 == 0xf8 and fm2 == 0x6ccaee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f5; dest:f9; op1val:0x7e4cd7ff; op2val:0xfc6ccaee;
   valaddr_reg:x3; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f9, f30, f5, dyn, 0, 0, x3, 50*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f13, rs2==f28, rd==f21,fs1 == 0 and fe1 == 0xfc and fm1 == 0x5fa740 and fs2 == 0 and fe2 == 0x9f and fm2 == 0x3d6968 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f13; op2:f28; dest:f21; op1val:0x7e5fa740; op2val:0x4fbd6968;
   valaddr_reg:x3; val_offset:52*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f21, f13, f28, dyn, 0, 0, x3, 52*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f21, rs2==f4, rd==f28,fs1 == 0 and fe1 == 0xfc and fm1 == 0x636240 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f21; op2:f4; dest:f28; op1val:0x7e636240; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f28, f21, f4, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f14, rs2==f9, rd==f24,fs1 == 0 and fe1 == 0xfc and fm1 == 0x655450 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f14; op2:f9; dest:f24; op1val:0x7e655450; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:56*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f24, f14, f9, dyn, 0, 0, x3, 56*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f25, rs2==f15, rd==f31,fs1 == 0 and fe1 == 0xfc and fm1 == 0x6b4e0e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f25; op2:f15; dest:f31; op1val:0x7e6b4e0e; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:58*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f25, f15, dyn, 0, 0, x3, 58*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f29, rs2==f19, rd==f26,fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e5bf8 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x24083c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f29; op2:f19; dest:f26; op1val:0x7e6e5bf8; op2val:0x4424083c;
   valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f26, f29, f19, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f16, rs2==f17, rd==f8,fs1 == 0 and fe1 == 0xfc and fm1 == 0x76b77e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f16; op2:f17; dest:f8; op1val:0x7e76b77e; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:62*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f8, f16, f17, dyn, 0, 0, x3, 62*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x79dd8e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e79dd8e; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:64*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 64*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7bb471 and fs2 == 0 and fe2 == 0xb6 and fm2 == 0x789bff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e7bb471; op2val:0x5b789bff;
   valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x023675 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e823675; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:68*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 68*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ab65 and fs2 == 1 and fe2 == 0xef and fm2 == 0x5dffc1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e82ab65; op2val:0xf7ddffc1;
   valaddr_reg:x3; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 70*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02e795 and fs2 == 1 and fe2 == 0xd6 and fm2 == 0x4dad56 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e82e795; op2val:0xeb4dad56;
   valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0409cf and fs2 == 1 and fe2 == 0xb3 and fm2 == 0x3ed825 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e8409cf; op2val:0xd9bed825;
   valaddr_reg:x3; val_offset:74*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 74*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0538b1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e8538b1; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:76*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 76*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d5a7c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e8d5a7c; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1123d8 and fs2 == 1 and fe2 == 0xbd and fm2 == 0x695156 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e9123d8; op2val:0xdee95156;
   valaddr_reg:x3; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 80*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x112ace and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e912ace; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:82*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 82*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17a40d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e97a40d; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1fcf65 and fs2 == 0 and fe2 == 0xd7 and fm2 == 0x25a218 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7e9fcf65; op2val:0x6ba5a218;
   valaddr_reg:x3; val_offset:86*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 86*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2640ba and fs2 == 0 and fe2 == 0xbf and fm2 == 0x4688b4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ea640ba; op2val:0x5fc688b4;
   valaddr_reg:x3; val_offset:88*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 88*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc88c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7eafc88c; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a0c29 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7eba0c29; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:92*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 92*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fec54 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ebfec54; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:94*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 94*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x436852 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ec36852; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x465fcc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ec65fcc; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:98*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 98*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x512a66 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ed12a66; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 100*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53a642 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ed3a642; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58bf61 and fs2 == 1 and fe2 == 0xab and fm2 == 0x17657f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ed8bf61; op2val:0xd597657f;
   valaddr_reg:x3; val_offset:104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 104*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5afcdb and fs2 == 1 and fe2 == 0x92 and fm2 == 0x6f10c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7edafcdb; op2val:0xc96f10c4;
   valaddr_reg:x3; val_offset:106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 106*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b2e1a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7edb2e1a; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d1ff5 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7edd1ff5; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 110*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x667aed and fs2 == 0 and fe2 == 0xe0 and fm2 == 0x0103f8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ee67aed; op2val:0x700103f8;
   valaddr_reg:x3; val_offset:112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 112*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x67ede5 and fs2 == 1 and fe2 == 0xaa and fm2 == 0x7a8f9b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ee7ede5; op2val:0xd57a8f9b;
   valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c3b3e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7eec3b3e; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 116*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7248b2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ef248b2; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 118*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7906c5 and fs2 == 0 and fe2 == 0x8b and fm2 == 0x1f607e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ef906c5; op2val:0x459f607e;
   valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7fba49 and fs2 == 1 and fe2 == 0xf7 and fm2 == 0x5bc718 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7effba49; op2val:0xfbdbc718;
   valaddr_reg:x3; val_offset:122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 122*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x016ff7 and fs2 == 1 and fe2 == 0xc9 and fm2 == 0x0990a3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f016ff7; op2val:0xe48990a3;
   valaddr_reg:x3; val_offset:124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 124*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x017ed0 and fs2 == 0 and fe2 == 0x94 and fm2 == 0x317fe2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f017ed0; op2val:0x4a317fe2;
   valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0235b2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0235b2; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 128*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03ecd6 and fs2 == 1 and fe2 == 0xbf and fm2 == 0x081dd1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f03ecd6; op2val:0xdf881dd1;
   valaddr_reg:x3; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 130*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x072c24 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f072c24; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0748c6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0748c6; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 134*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a0433 and fs2 == 0 and fe2 == 0xb9 and fm2 == 0x1dbba8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0a0433; op2val:0x5c9dbba8;
   valaddr_reg:x3; val_offset:136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 136*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b4a10 and fs2 == 0 and fe2 == 0x9e and fm2 == 0x3c1678 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0b4a10; op2val:0x4f3c1678;
   valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ed153 and fs2 == 1 and fe2 == 0x92 and fm2 == 0x1c3eb7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f0ed153; op2val:0xc91c3eb7;
   valaddr_reg:x3; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 140*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11c013 and fs2 == 1 and fe2 == 0xf2 and fm2 == 0x3d7983 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f11c013; op2val:0xf93d7983;
   valaddr_reg:x3; val_offset:142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 142*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16201f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x631e55 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f16201f; op2val:0x7ee31e55;
   valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x164749 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f164749; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 146*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17517f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f17517f; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 148*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x192dff and fs2 == 0 and fe2 == 0xb8 and fm2 == 0x236443 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f192dff; op2val:0x5c236443;
   valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d53d7 and fs2 == 1 and fe2 == 0xfc and fm2 == 0x377d30 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f1d53d7; op2val:0xfe377d30;
   valaddr_reg:x3; val_offset:152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 152*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f12b9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f1f12b9; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 154*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20d6ae and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x41dcec and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f20d6ae; op2val:0xf841dcec;
   valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x217f53 and fs2 == 0 and fe2 == 0xe3 and fm2 == 0x5d82bd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f217f53; op2val:0x71dd82bd;
   valaddr_reg:x3; val_offset:158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 158*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d5b2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f24d5b2; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 160*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x264de7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f264de7; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x268b6a and fs2 == 1 and fe2 == 0xef and fm2 == 0x3935cd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f268b6a; op2val:0xf7b935cd;
   valaddr_reg:x3; val_offset:164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 164*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x269d2c and fs2 == 1 and fe2 == 0x83 and fm2 == 0x519910 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f269d2c; op2val:0xc1d19910;
   valaddr_reg:x3; val_offset:166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 166*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2759f0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x351a1b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f2759f0; op2val:0xc0b51a1b;
   valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x281a41 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2ac557 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f281a41; op2val:0xff2ac557;
   valaddr_reg:x3; val_offset:170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 170*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28b6bd and fs2 == 0 and fe2 == 0xbf and fm2 == 0x17043e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f28b6bd; op2val:0x5f97043e;
   valaddr_reg:x3; val_offset:172*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 172*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x296b63 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x3a1fe4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f296b63; op2val:0xc43a1fe4;
   valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a5ada and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x2f4d13 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f2a5ada; op2val:0x682f4d13;
   valaddr_reg:x3; val_offset:176*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 176*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b0708 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x0d7389 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f2b0708; op2val:0xc30d7389;
   valaddr_reg:x3; val_offset:178*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 178*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcfc and fs2 == 0 and fe2 == 0xe8 and fm2 == 0x58de83 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f2cbcfc; op2val:0x7458de83;
   valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ee8de and fs2 == 0 and fe2 == 0xac and fm2 == 0x6b9400 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f2ee8de; op2val:0x566b9400;
   valaddr_reg:x3; val_offset:182*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 182*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x319ce6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f319ce6; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:184*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 184*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32fae0 and fs2 == 0 and fe2 == 0xc2 and fm2 == 0x36e76b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f32fae0; op2val:0x6136e76b;
   valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3457e7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f3457e7; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:188*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 188*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x373a1e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f373a1e; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 190*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38be1b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f38be1b; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x39d661 and fs2 == 0 and fe2 == 0xba and fm2 == 0x187b63 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f39d661; op2val:0x5d187b63;
   valaddr_reg:x3; val_offset:194*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 194*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3af6ff and fs2 == 1 and fe2 == 0xa4 and fm2 == 0x799c89 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f3af6ff; op2val:0xd2799c89;
   valaddr_reg:x3; val_offset:196*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 196*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b506b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f3b506b; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d37b2 and fs2 == 0 and fe2 == 0xed and fm2 == 0x54eb08 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f3d37b2; op2val:0x76d4eb08;
   valaddr_reg:x3; val_offset:200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 200*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d8377 and fs2 == 1 and fe2 == 0x91 and fm2 == 0x76277d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7f3d8377; op2val:0xc8f6277d;
   valaddr_reg:x3; val_offset:202*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 202*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x506932 and fs2 == 0 and fe2 == 0x99 and fm2 == 0x716acc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7bd06932; op2val:0x4cf16acc;
   valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e539a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7c5e539a; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:206*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 206*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x68f58b and fs2 == 1 and fe2 == 0xbf and fm2 == 0x756c07 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7ce8f58b; op2val:0xdff56c07;
   valaddr_reg:x3; val_offset:208*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 208*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x34967e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x142cb6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fdiv.s ; op1:f30; op2:f29; dest:f31; op1val:0x7d34967e; op2val:0x40942cb6;
   valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, f31, f30, f29, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2077255986,32,FLEN)
NAN_BOXED(1290889932,32,FLEN)
NAN_BOXED(2086556570,32,FLEN)
NAN_BOXED(2086556570,32,FLEN)
NAN_BOXED(2095641995,32,FLEN)
NAN_BOXED(3757403143,32,FLEN)
NAN_BOXED(2096133742,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2100598398,32,FLEN)
NAN_BOXED(2100598398,32,FLEN)
NAN_BOXED(2103499172,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105220483,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2105676190,32,FLEN)
NAN_BOXED(1982181882,32,FLEN)
NAN_BOXED(2107648664,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2107663686,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2110776371,32,FLEN)
NAN_BOXED(1312811749,32,FLEN)
NAN_BOXED(2111895320,32,FLEN)
NAN_BOXED(4105435360,32,FLEN)
NAN_BOXED(2113281036,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2114081593,32,FLEN)
NAN_BOXED(2089175344,32,FLEN)
NAN_BOXED(2114173345,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2115310918,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2115649870,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2115896935,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2116259647,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2116262748,32,FLEN)
NAN_BOXED(1940986813,32,FLEN)
NAN_BOXED(2116643756,32,FLEN)
NAN_BOXED(3415644313,32,FLEN)
NAN_BOXED(2116774419,32,FLEN)
NAN_BOXED(1456154722,32,FLEN)
NAN_BOXED(2116800505,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2117350447,32,FLEN)
NAN_BOXED(1140635703,32,FLEN)
NAN_BOXED(2118242206,32,FLEN)
NAN_BOXED(3978578502,32,FLEN)
NAN_BOXED(2118965247,32,FLEN)
NAN_BOXED(4234988270,32,FLEN)
NAN_BOXED(2120197952,32,FLEN)
NAN_BOXED(1337813352,32,FLEN)
NAN_BOXED(2120442432,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2120569936,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2120961550,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121161720,32,FLEN)
NAN_BOXED(1143212092,32,FLEN)
NAN_BOXED(2121709438,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2121915790,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122036337,32,FLEN)
NAN_BOXED(1534630911,32,FLEN)
NAN_BOXED(2122462837,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122492773,32,FLEN)
NAN_BOXED(4158521281,32,FLEN)
NAN_BOXED(2122508181,32,FLEN)
NAN_BOXED(3947736406,32,FLEN)
NAN_BOXED(2122582479,32,FLEN)
NAN_BOXED(3653163045,32,FLEN)
NAN_BOXED(2122660017,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2123192956,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2123441112,32,FLEN)
NAN_BOXED(3739832662,32,FLEN)
NAN_BOXED(2123442894,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123867149,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2124402533,32,FLEN)
NAN_BOXED(1806017048,32,FLEN)
NAN_BOXED(2124824762,32,FLEN)
NAN_BOXED(1606846644,32,FLEN)
NAN_BOXED(2125449356,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126122025,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126507092,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126735442,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126929868,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2127637094,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2127799874,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2128133985,32,FLEN)
NAN_BOXED(3583468927,32,FLEN)
NAN_BOXED(2128280795,32,FLEN)
NAN_BOXED(3379499204,32,FLEN)
NAN_BOXED(2128293402,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128420853,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129033965,32,FLEN)
NAN_BOXED(1879114744,32,FLEN)
NAN_BOXED(2129128933,32,FLEN)
NAN_BOXED(3581579163,32,FLEN)
NAN_BOXED(2129410878,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129807538,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130249413,32,FLEN)
NAN_BOXED(1168072830,32,FLEN)
NAN_BOXED(2130688585,32,FLEN)
NAN_BOXED(4225484568,32,FLEN)
NAN_BOXED(2130800631,32,FLEN)
NAN_BOXED(3834220707,32,FLEN)
NAN_BOXED(2130804432,32,FLEN)
NAN_BOXED(1244757986,32,FLEN)
NAN_BOXED(2130851250,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130963670,32,FLEN)
NAN_BOXED(3750239697,32,FLEN)
NAN_BOXED(2131176484,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2131183814,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131362867,32,FLEN)
NAN_BOXED(1553841064,32,FLEN)
NAN_BOXED(2131446288,32,FLEN)
NAN_BOXED(1329337976,32,FLEN)
NAN_BOXED(2131677523,32,FLEN)
NAN_BOXED(3374071479,32,FLEN)
NAN_BOXED(2131869715,32,FLEN)
NAN_BOXED(4181555587,32,FLEN)
NAN_BOXED(2132156447,32,FLEN)
NAN_BOXED(2128813653,32,FLEN)
NAN_BOXED(2132166473,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132234623,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132356607,32,FLEN)
NAN_BOXED(1545823299,32,FLEN)
NAN_BOXED(2132628439,32,FLEN)
NAN_BOXED(4265049392,32,FLEN)
NAN_BOXED(2132742841,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132858542,32,FLEN)
NAN_BOXED(4165065964,32,FLEN)
NAN_BOXED(2132901715,32,FLEN)
NAN_BOXED(1910342333,32,FLEN)
NAN_BOXED(2133120434,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133216743,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133232490,32,FLEN)
NAN_BOXED(4156110285,32,FLEN)
NAN_BOXED(2133237036,32,FLEN)
NAN_BOXED(3251738896,32,FLEN)
NAN_BOXED(2133285360,32,FLEN)
NAN_BOXED(3233094171,32,FLEN)
NAN_BOXED(2133334593,32,FLEN)
NAN_BOXED(4280993111,32,FLEN)
NAN_BOXED(2133374653,32,FLEN)
NAN_BOXED(1603732542,32,FLEN)
NAN_BOXED(2133420899,32,FLEN)
NAN_BOXED(3292143588,32,FLEN)
NAN_BOXED(2133482202,32,FLEN)
NAN_BOXED(1747930387,32,FLEN)
NAN_BOXED(2133526280,32,FLEN)
NAN_BOXED(3272438665,32,FLEN)
NAN_BOXED(2133638396,32,FLEN)
NAN_BOXED(1951981187,32,FLEN)
NAN_BOXED(2133780702,32,FLEN)
NAN_BOXED(1449890816,32,FLEN)
NAN_BOXED(2133957862,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134047456,32,FLEN)
NAN_BOXED(1630988139,32,FLEN)
NAN_BOXED(2134136807,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134325790,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134425115,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134496865,32,FLEN)
NAN_BOXED(1561885539,32,FLEN)
NAN_BOXED(2134570751,32,FLEN)
NAN_BOXED(3531185289,32,FLEN)
NAN_BOXED(2134593643,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134718386,32,FLEN)
NAN_BOXED(1993665288,32,FLEN)
NAN_BOXED(2134737783,32,FLEN)
NAN_BOXED(3371575165,32,FLEN)
NAN_BOXED(2077255986,32,FLEN)
NAN_BOXED(1290889932,32,FLEN)
NAN_BOXED(2086556570,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2095641995,32,FLEN)
NAN_BOXED(3757403143,32,FLEN)
NAN_BOXED(2100598398,32,FLEN)
NAN_BOXED(1083452598,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 212*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
