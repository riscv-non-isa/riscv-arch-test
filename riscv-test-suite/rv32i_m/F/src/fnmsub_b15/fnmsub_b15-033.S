
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_24576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x8280007f; valaddr_reg:x3; val_offset:73728*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73728*0 + 3*0*FLEN/8, x4, x1, x2)

inst_24577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x828000ff; valaddr_reg:x3; val_offset:73731*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73731*0 + 3*1*FLEN/8, x4, x1, x2)

inst_24578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x828001ff; valaddr_reg:x3; val_offset:73734*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73734*0 + 3*2*FLEN/8, x4, x1, x2)

inst_24579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x828003ff; valaddr_reg:x3; val_offset:73737*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73737*0 + 3*3*FLEN/8, x4, x1, x2)

inst_24580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x828007ff; valaddr_reg:x3; val_offset:73740*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73740*0 + 3*4*FLEN/8, x4, x1, x2)

inst_24581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82800fff; valaddr_reg:x3; val_offset:73743*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73743*0 + 3*5*FLEN/8, x4, x1, x2)

inst_24582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82801fff; valaddr_reg:x3; val_offset:73746*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73746*0 + 3*6*FLEN/8, x4, x1, x2)

inst_24583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82803fff; valaddr_reg:x3; val_offset:73749*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73749*0 + 3*7*FLEN/8, x4, x1, x2)

inst_24584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82807fff; valaddr_reg:x3; val_offset:73752*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73752*0 + 3*8*FLEN/8, x4, x1, x2)

inst_24585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x8280ffff; valaddr_reg:x3; val_offset:73755*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73755*0 + 3*9*FLEN/8, x4, x1, x2)

inst_24586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x8281ffff; valaddr_reg:x3; val_offset:73758*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73758*0 + 3*10*FLEN/8, x4, x1, x2)

inst_24587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x8283ffff; valaddr_reg:x3; val_offset:73761*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73761*0 + 3*11*FLEN/8, x4, x1, x2)

inst_24588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x8287ffff; valaddr_reg:x3; val_offset:73764*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73764*0 + 3*12*FLEN/8, x4, x1, x2)

inst_24589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x828fffff; valaddr_reg:x3; val_offset:73767*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73767*0 + 3*13*FLEN/8, x4, x1, x2)

inst_24590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x829fffff; valaddr_reg:x3; val_offset:73770*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73770*0 + 3*14*FLEN/8, x4, x1, x2)

inst_24591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82bfffff; valaddr_reg:x3; val_offset:73773*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73773*0 + 3*15*FLEN/8, x4, x1, x2)

inst_24592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82c00000; valaddr_reg:x3; val_offset:73776*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73776*0 + 3*16*FLEN/8, x4, x1, x2)

inst_24593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82e00000; valaddr_reg:x3; val_offset:73779*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73779*0 + 3*17*FLEN/8, x4, x1, x2)

inst_24594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82f00000; valaddr_reg:x3; val_offset:73782*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73782*0 + 3*18*FLEN/8, x4, x1, x2)

inst_24595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82f80000; valaddr_reg:x3; val_offset:73785*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73785*0 + 3*19*FLEN/8, x4, x1, x2)

inst_24596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fc0000; valaddr_reg:x3; val_offset:73788*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73788*0 + 3*20*FLEN/8, x4, x1, x2)

inst_24597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fe0000; valaddr_reg:x3; val_offset:73791*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73791*0 + 3*21*FLEN/8, x4, x1, x2)

inst_24598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82ff0000; valaddr_reg:x3; val_offset:73794*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73794*0 + 3*22*FLEN/8, x4, x1, x2)

inst_24599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82ff8000; valaddr_reg:x3; val_offset:73797*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73797*0 + 3*23*FLEN/8, x4, x1, x2)

inst_24600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82ffc000; valaddr_reg:x3; val_offset:73800*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73800*0 + 3*24*FLEN/8, x4, x1, x2)

inst_24601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82ffe000; valaddr_reg:x3; val_offset:73803*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73803*0 + 3*25*FLEN/8, x4, x1, x2)

inst_24602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fff000; valaddr_reg:x3; val_offset:73806*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73806*0 + 3*26*FLEN/8, x4, x1, x2)

inst_24603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fff800; valaddr_reg:x3; val_offset:73809*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73809*0 + 3*27*FLEN/8, x4, x1, x2)

inst_24604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fffc00; valaddr_reg:x3; val_offset:73812*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73812*0 + 3*28*FLEN/8, x4, x1, x2)

inst_24605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fffe00; valaddr_reg:x3; val_offset:73815*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73815*0 + 3*29*FLEN/8, x4, x1, x2)

inst_24606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82ffff00; valaddr_reg:x3; val_offset:73818*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73818*0 + 3*30*FLEN/8, x4, x1, x2)

inst_24607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82ffff80; valaddr_reg:x3; val_offset:73821*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73821*0 + 3*31*FLEN/8, x4, x1, x2)

inst_24608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82ffffc0; valaddr_reg:x3; val_offset:73824*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73824*0 + 3*32*FLEN/8, x4, x1, x2)

inst_24609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82ffffe0; valaddr_reg:x3; val_offset:73827*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73827*0 + 3*33*FLEN/8, x4, x1, x2)

inst_24610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fffff0; valaddr_reg:x3; val_offset:73830*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73830*0 + 3*34*FLEN/8, x4, x1, x2)

inst_24611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fffff8; valaddr_reg:x3; val_offset:73833*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73833*0 + 3*35*FLEN/8, x4, x1, x2)

inst_24612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fffffc; valaddr_reg:x3; val_offset:73836*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73836*0 + 3*36*FLEN/8, x4, x1, x2)

inst_24613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82fffffe; valaddr_reg:x3; val_offset:73839*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73839*0 + 3*37*FLEN/8, x4, x1, x2)

inst_24614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724276 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef24276; op2val:0x80000000;
op3val:0x82ffffff; valaddr_reg:x3; val_offset:73842*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73842*0 + 3*38*FLEN/8, x4, x1, x2)

inst_24615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35000000; valaddr_reg:x3; val_offset:73845*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73845*0 + 3*39*FLEN/8, x4, x1, x2)

inst_24616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35000001; valaddr_reg:x3; val_offset:73848*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73848*0 + 3*40*FLEN/8, x4, x1, x2)

inst_24617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35000003; valaddr_reg:x3; val_offset:73851*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73851*0 + 3*41*FLEN/8, x4, x1, x2)

inst_24618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35000007; valaddr_reg:x3; val_offset:73854*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73854*0 + 3*42*FLEN/8, x4, x1, x2)

inst_24619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3500000f; valaddr_reg:x3; val_offset:73857*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73857*0 + 3*43*FLEN/8, x4, x1, x2)

inst_24620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3500001f; valaddr_reg:x3; val_offset:73860*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73860*0 + 3*44*FLEN/8, x4, x1, x2)

inst_24621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3500003f; valaddr_reg:x3; val_offset:73863*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73863*0 + 3*45*FLEN/8, x4, x1, x2)

inst_24622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3500007f; valaddr_reg:x3; val_offset:73866*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73866*0 + 3*46*FLEN/8, x4, x1, x2)

inst_24623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x350000ff; valaddr_reg:x3; val_offset:73869*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73869*0 + 3*47*FLEN/8, x4, x1, x2)

inst_24624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x350001ff; valaddr_reg:x3; val_offset:73872*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73872*0 + 3*48*FLEN/8, x4, x1, x2)

inst_24625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x350003ff; valaddr_reg:x3; val_offset:73875*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73875*0 + 3*49*FLEN/8, x4, x1, x2)

inst_24626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x350007ff; valaddr_reg:x3; val_offset:73878*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73878*0 + 3*50*FLEN/8, x4, x1, x2)

inst_24627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35000fff; valaddr_reg:x3; val_offset:73881*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73881*0 + 3*51*FLEN/8, x4, x1, x2)

inst_24628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35001fff; valaddr_reg:x3; val_offset:73884*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73884*0 + 3*52*FLEN/8, x4, x1, x2)

inst_24629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35003fff; valaddr_reg:x3; val_offset:73887*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73887*0 + 3*53*FLEN/8, x4, x1, x2)

inst_24630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35007fff; valaddr_reg:x3; val_offset:73890*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73890*0 + 3*54*FLEN/8, x4, x1, x2)

inst_24631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3500ffff; valaddr_reg:x3; val_offset:73893*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73893*0 + 3*55*FLEN/8, x4, x1, x2)

inst_24632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3501ffff; valaddr_reg:x3; val_offset:73896*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73896*0 + 3*56*FLEN/8, x4, x1, x2)

inst_24633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3503ffff; valaddr_reg:x3; val_offset:73899*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73899*0 + 3*57*FLEN/8, x4, x1, x2)

inst_24634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3507ffff; valaddr_reg:x3; val_offset:73902*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73902*0 + 3*58*FLEN/8, x4, x1, x2)

inst_24635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x350fffff; valaddr_reg:x3; val_offset:73905*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73905*0 + 3*59*FLEN/8, x4, x1, x2)

inst_24636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x351fffff; valaddr_reg:x3; val_offset:73908*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73908*0 + 3*60*FLEN/8, x4, x1, x2)

inst_24637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x353fffff; valaddr_reg:x3; val_offset:73911*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73911*0 + 3*61*FLEN/8, x4, x1, x2)

inst_24638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35400000; valaddr_reg:x3; val_offset:73914*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73914*0 + 3*62*FLEN/8, x4, x1, x2)

inst_24639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35600000; valaddr_reg:x3; val_offset:73917*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73917*0 + 3*63*FLEN/8, x4, x1, x2)

inst_24640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35700000; valaddr_reg:x3; val_offset:73920*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73920*0 + 3*64*FLEN/8, x4, x1, x2)

inst_24641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x35780000; valaddr_reg:x3; val_offset:73923*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73923*0 + 3*65*FLEN/8, x4, x1, x2)

inst_24642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357c0000; valaddr_reg:x3; val_offset:73926*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73926*0 + 3*66*FLEN/8, x4, x1, x2)

inst_24643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357e0000; valaddr_reg:x3; val_offset:73929*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73929*0 + 3*67*FLEN/8, x4, x1, x2)

inst_24644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357f0000; valaddr_reg:x3; val_offset:73932*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73932*0 + 3*68*FLEN/8, x4, x1, x2)

inst_24645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357f8000; valaddr_reg:x3; val_offset:73935*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73935*0 + 3*69*FLEN/8, x4, x1, x2)

inst_24646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357fc000; valaddr_reg:x3; val_offset:73938*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73938*0 + 3*70*FLEN/8, x4, x1, x2)

inst_24647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357fe000; valaddr_reg:x3; val_offset:73941*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73941*0 + 3*71*FLEN/8, x4, x1, x2)

inst_24648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357ff000; valaddr_reg:x3; val_offset:73944*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73944*0 + 3*72*FLEN/8, x4, x1, x2)

inst_24649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357ff800; valaddr_reg:x3; val_offset:73947*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73947*0 + 3*73*FLEN/8, x4, x1, x2)

inst_24650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357ffc00; valaddr_reg:x3; val_offset:73950*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73950*0 + 3*74*FLEN/8, x4, x1, x2)

inst_24651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357ffe00; valaddr_reg:x3; val_offset:73953*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73953*0 + 3*75*FLEN/8, x4, x1, x2)

inst_24652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357fff00; valaddr_reg:x3; val_offset:73956*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73956*0 + 3*76*FLEN/8, x4, x1, x2)

inst_24653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357fff80; valaddr_reg:x3; val_offset:73959*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73959*0 + 3*77*FLEN/8, x4, x1, x2)

inst_24654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357fffc0; valaddr_reg:x3; val_offset:73962*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73962*0 + 3*78*FLEN/8, x4, x1, x2)

inst_24655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357fffe0; valaddr_reg:x3; val_offset:73965*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73965*0 + 3*79*FLEN/8, x4, x1, x2)

inst_24656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357ffff0; valaddr_reg:x3; val_offset:73968*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73968*0 + 3*80*FLEN/8, x4, x1, x2)

inst_24657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357ffff8; valaddr_reg:x3; val_offset:73971*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73971*0 + 3*81*FLEN/8, x4, x1, x2)

inst_24658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357ffffc; valaddr_reg:x3; val_offset:73974*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73974*0 + 3*82*FLEN/8, x4, x1, x2)

inst_24659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357ffffe; valaddr_reg:x3; val_offset:73977*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73977*0 + 3*83*FLEN/8, x4, x1, x2)

inst_24660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x357fffff; valaddr_reg:x3; val_offset:73980*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73980*0 + 3*84*FLEN/8, x4, x1, x2)

inst_24661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3f800001; valaddr_reg:x3; val_offset:73983*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73983*0 + 3*85*FLEN/8, x4, x1, x2)

inst_24662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3f800003; valaddr_reg:x3; val_offset:73986*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73986*0 + 3*86*FLEN/8, x4, x1, x2)

inst_24663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3f800007; valaddr_reg:x3; val_offset:73989*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73989*0 + 3*87*FLEN/8, x4, x1, x2)

inst_24664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3f999999; valaddr_reg:x3; val_offset:73992*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73992*0 + 3*88*FLEN/8, x4, x1, x2)

inst_24665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:73995*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73995*0 + 3*89*FLEN/8, x4, x1, x2)

inst_24666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:73998*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 73998*0 + 3*90*FLEN/8, x4, x1, x2)

inst_24667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:74001*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74001*0 + 3*91*FLEN/8, x4, x1, x2)

inst_24668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:74004*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74004*0 + 3*92*FLEN/8, x4, x1, x2)

inst_24669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:74007*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74007*0 + 3*93*FLEN/8, x4, x1, x2)

inst_24670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:74010*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74010*0 + 3*94*FLEN/8, x4, x1, x2)

inst_24671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:74013*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74013*0 + 3*95*FLEN/8, x4, x1, x2)

inst_24672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:74016*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74016*0 + 3*96*FLEN/8, x4, x1, x2)

inst_24673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:74019*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74019*0 + 3*97*FLEN/8, x4, x1, x2)

inst_24674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:74022*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74022*0 + 3*98*FLEN/8, x4, x1, x2)

inst_24675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:74025*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74025*0 + 3*99*FLEN/8, x4, x1, x2)

inst_24676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x437dc3 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef2c1df; op2val:0x437dc3;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:74028*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74028*0 + 3*100*FLEN/8, x4, x1, x2)

inst_24677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72000000; valaddr_reg:x3; val_offset:74031*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74031*0 + 3*101*FLEN/8, x4, x1, x2)

inst_24678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72000001; valaddr_reg:x3; val_offset:74034*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74034*0 + 3*102*FLEN/8, x4, x1, x2)

inst_24679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72000003; valaddr_reg:x3; val_offset:74037*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74037*0 + 3*103*FLEN/8, x4, x1, x2)

inst_24680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72000007; valaddr_reg:x3; val_offset:74040*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74040*0 + 3*104*FLEN/8, x4, x1, x2)

inst_24681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7200000f; valaddr_reg:x3; val_offset:74043*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74043*0 + 3*105*FLEN/8, x4, x1, x2)

inst_24682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7200001f; valaddr_reg:x3; val_offset:74046*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74046*0 + 3*106*FLEN/8, x4, x1, x2)

inst_24683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7200003f; valaddr_reg:x3; val_offset:74049*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74049*0 + 3*107*FLEN/8, x4, x1, x2)

inst_24684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7200007f; valaddr_reg:x3; val_offset:74052*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74052*0 + 3*108*FLEN/8, x4, x1, x2)

inst_24685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x720000ff; valaddr_reg:x3; val_offset:74055*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74055*0 + 3*109*FLEN/8, x4, x1, x2)

inst_24686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x720001ff; valaddr_reg:x3; val_offset:74058*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74058*0 + 3*110*FLEN/8, x4, x1, x2)

inst_24687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x720003ff; valaddr_reg:x3; val_offset:74061*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74061*0 + 3*111*FLEN/8, x4, x1, x2)

inst_24688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x720007ff; valaddr_reg:x3; val_offset:74064*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74064*0 + 3*112*FLEN/8, x4, x1, x2)

inst_24689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72000fff; valaddr_reg:x3; val_offset:74067*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74067*0 + 3*113*FLEN/8, x4, x1, x2)

inst_24690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72001fff; valaddr_reg:x3; val_offset:74070*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74070*0 + 3*114*FLEN/8, x4, x1, x2)

inst_24691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72003fff; valaddr_reg:x3; val_offset:74073*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74073*0 + 3*115*FLEN/8, x4, x1, x2)

inst_24692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72007fff; valaddr_reg:x3; val_offset:74076*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74076*0 + 3*116*FLEN/8, x4, x1, x2)

inst_24693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7200ffff; valaddr_reg:x3; val_offset:74079*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74079*0 + 3*117*FLEN/8, x4, x1, x2)

inst_24694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7201ffff; valaddr_reg:x3; val_offset:74082*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74082*0 + 3*118*FLEN/8, x4, x1, x2)

inst_24695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7203ffff; valaddr_reg:x3; val_offset:74085*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74085*0 + 3*119*FLEN/8, x4, x1, x2)

inst_24696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7207ffff; valaddr_reg:x3; val_offset:74088*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74088*0 + 3*120*FLEN/8, x4, x1, x2)

inst_24697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x720fffff; valaddr_reg:x3; val_offset:74091*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74091*0 + 3*121*FLEN/8, x4, x1, x2)

inst_24698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x721fffff; valaddr_reg:x3; val_offset:74094*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74094*0 + 3*122*FLEN/8, x4, x1, x2)

inst_24699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x723fffff; valaddr_reg:x3; val_offset:74097*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74097*0 + 3*123*FLEN/8, x4, x1, x2)

inst_24700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72400000; valaddr_reg:x3; val_offset:74100*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74100*0 + 3*124*FLEN/8, x4, x1, x2)

inst_24701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72600000; valaddr_reg:x3; val_offset:74103*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74103*0 + 3*125*FLEN/8, x4, x1, x2)

inst_24702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72700000; valaddr_reg:x3; val_offset:74106*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74106*0 + 3*126*FLEN/8, x4, x1, x2)

inst_24703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x72780000; valaddr_reg:x3; val_offset:74109*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74109*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_24704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727c0000; valaddr_reg:x3; val_offset:74112*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74112*0 + 3*128*FLEN/8, x4, x1, x2)

inst_24705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727e0000; valaddr_reg:x3; val_offset:74115*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74115*0 + 3*129*FLEN/8, x4, x1, x2)

inst_24706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727f0000; valaddr_reg:x3; val_offset:74118*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74118*0 + 3*130*FLEN/8, x4, x1, x2)

inst_24707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727f8000; valaddr_reg:x3; val_offset:74121*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74121*0 + 3*131*FLEN/8, x4, x1, x2)

inst_24708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727fc000; valaddr_reg:x3; val_offset:74124*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74124*0 + 3*132*FLEN/8, x4, x1, x2)

inst_24709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727fe000; valaddr_reg:x3; val_offset:74127*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74127*0 + 3*133*FLEN/8, x4, x1, x2)

inst_24710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727ff000; valaddr_reg:x3; val_offset:74130*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74130*0 + 3*134*FLEN/8, x4, x1, x2)

inst_24711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727ff800; valaddr_reg:x3; val_offset:74133*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74133*0 + 3*135*FLEN/8, x4, x1, x2)

inst_24712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727ffc00; valaddr_reg:x3; val_offset:74136*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74136*0 + 3*136*FLEN/8, x4, x1, x2)

inst_24713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727ffe00; valaddr_reg:x3; val_offset:74139*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74139*0 + 3*137*FLEN/8, x4, x1, x2)

inst_24714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727fff00; valaddr_reg:x3; val_offset:74142*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74142*0 + 3*138*FLEN/8, x4, x1, x2)

inst_24715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727fff80; valaddr_reg:x3; val_offset:74145*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74145*0 + 3*139*FLEN/8, x4, x1, x2)

inst_24716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727fffc0; valaddr_reg:x3; val_offset:74148*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74148*0 + 3*140*FLEN/8, x4, x1, x2)

inst_24717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727fffe0; valaddr_reg:x3; val_offset:74151*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74151*0 + 3*141*FLEN/8, x4, x1, x2)

inst_24718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727ffff0; valaddr_reg:x3; val_offset:74154*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74154*0 + 3*142*FLEN/8, x4, x1, x2)

inst_24719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727ffff8; valaddr_reg:x3; val_offset:74157*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74157*0 + 3*143*FLEN/8, x4, x1, x2)

inst_24720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727ffffc; valaddr_reg:x3; val_offset:74160*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74160*0 + 3*144*FLEN/8, x4, x1, x2)

inst_24721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727ffffe; valaddr_reg:x3; val_offset:74163*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74163*0 + 3*145*FLEN/8, x4, x1, x2)

inst_24722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xe4 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x727fffff; valaddr_reg:x3; val_offset:74166*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74166*0 + 3*146*FLEN/8, x4, x1, x2)

inst_24723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f000001; valaddr_reg:x3; val_offset:74169*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74169*0 + 3*147*FLEN/8, x4, x1, x2)

inst_24724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f000003; valaddr_reg:x3; val_offset:74172*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74172*0 + 3*148*FLEN/8, x4, x1, x2)

inst_24725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f000007; valaddr_reg:x3; val_offset:74175*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74175*0 + 3*149*FLEN/8, x4, x1, x2)

inst_24726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f199999; valaddr_reg:x3; val_offset:74178*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74178*0 + 3*150*FLEN/8, x4, x1, x2)

inst_24727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f249249; valaddr_reg:x3; val_offset:74181*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74181*0 + 3*151*FLEN/8, x4, x1, x2)

inst_24728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f333333; valaddr_reg:x3; val_offset:74184*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74184*0 + 3*152*FLEN/8, x4, x1, x2)

inst_24729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:74187*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74187*0 + 3*153*FLEN/8, x4, x1, x2)

inst_24730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:74190*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74190*0 + 3*154*FLEN/8, x4, x1, x2)

inst_24731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f444444; valaddr_reg:x3; val_offset:74193*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74193*0 + 3*155*FLEN/8, x4, x1, x2)

inst_24732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:74196*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74196*0 + 3*156*FLEN/8, x4, x1, x2)

inst_24733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:74199*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74199*0 + 3*157*FLEN/8, x4, x1, x2)

inst_24734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f666666; valaddr_reg:x3; val_offset:74202*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74202*0 + 3*158*FLEN/8, x4, x1, x2)

inst_24735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:74205*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74205*0 + 3*159*FLEN/8, x4, x1, x2)

inst_24736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:74208*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74208*0 + 3*160*FLEN/8, x4, x1, x2)

inst_24737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:74211*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74211*0 + 3*161*FLEN/8, x4, x1, x2)

inst_24738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7378a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x069630 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef378a9; op2val:0x40069630;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:74214*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74214*0 + 3*162*FLEN/8, x4, x1, x2)

inst_24739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3f800001; valaddr_reg:x3; val_offset:74217*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74217*0 + 3*163*FLEN/8, x4, x1, x2)

inst_24740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3f800003; valaddr_reg:x3; val_offset:74220*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74220*0 + 3*164*FLEN/8, x4, x1, x2)

inst_24741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3f800007; valaddr_reg:x3; val_offset:74223*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74223*0 + 3*165*FLEN/8, x4, x1, x2)

inst_24742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3f999999; valaddr_reg:x3; val_offset:74226*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74226*0 + 3*166*FLEN/8, x4, x1, x2)

inst_24743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:74229*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74229*0 + 3*167*FLEN/8, x4, x1, x2)

inst_24744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:74232*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74232*0 + 3*168*FLEN/8, x4, x1, x2)

inst_24745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:74235*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74235*0 + 3*169*FLEN/8, x4, x1, x2)

inst_24746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:74238*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74238*0 + 3*170*FLEN/8, x4, x1, x2)

inst_24747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:74241*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74241*0 + 3*171*FLEN/8, x4, x1, x2)

inst_24748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:74244*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74244*0 + 3*172*FLEN/8, x4, x1, x2)

inst_24749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:74247*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74247*0 + 3*173*FLEN/8, x4, x1, x2)

inst_24750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:74250*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74250*0 + 3*174*FLEN/8, x4, x1, x2)

inst_24751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:74253*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74253*0 + 3*175*FLEN/8, x4, x1, x2)

inst_24752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:74256*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74256*0 + 3*176*FLEN/8, x4, x1, x2)

inst_24753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:74259*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74259*0 + 3*177*FLEN/8, x4, x1, x2)

inst_24754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:74262*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74262*0 + 3*178*FLEN/8, x4, x1, x2)

inst_24755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f800000; valaddr_reg:x3; val_offset:74265*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74265*0 + 3*179*FLEN/8, x4, x1, x2)

inst_24756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f800001; valaddr_reg:x3; val_offset:74268*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74268*0 + 3*180*FLEN/8, x4, x1, x2)

inst_24757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f800003; valaddr_reg:x3; val_offset:74271*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74271*0 + 3*181*FLEN/8, x4, x1, x2)

inst_24758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f800007; valaddr_reg:x3; val_offset:74274*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74274*0 + 3*182*FLEN/8, x4, x1, x2)

inst_24759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f80000f; valaddr_reg:x3; val_offset:74277*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74277*0 + 3*183*FLEN/8, x4, x1, x2)

inst_24760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f80001f; valaddr_reg:x3; val_offset:74280*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74280*0 + 3*184*FLEN/8, x4, x1, x2)

inst_24761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f80003f; valaddr_reg:x3; val_offset:74283*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74283*0 + 3*185*FLEN/8, x4, x1, x2)

inst_24762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f80007f; valaddr_reg:x3; val_offset:74286*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74286*0 + 3*186*FLEN/8, x4, x1, x2)

inst_24763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f8000ff; valaddr_reg:x3; val_offset:74289*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74289*0 + 3*187*FLEN/8, x4, x1, x2)

inst_24764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f8001ff; valaddr_reg:x3; val_offset:74292*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74292*0 + 3*188*FLEN/8, x4, x1, x2)

inst_24765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f8003ff; valaddr_reg:x3; val_offset:74295*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74295*0 + 3*189*FLEN/8, x4, x1, x2)

inst_24766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f8007ff; valaddr_reg:x3; val_offset:74298*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74298*0 + 3*190*FLEN/8, x4, x1, x2)

inst_24767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f800fff; valaddr_reg:x3; val_offset:74301*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74301*0 + 3*191*FLEN/8, x4, x1, x2)

inst_24768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f801fff; valaddr_reg:x3; val_offset:74304*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74304*0 + 3*192*FLEN/8, x4, x1, x2)

inst_24769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f803fff; valaddr_reg:x3; val_offset:74307*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74307*0 + 3*193*FLEN/8, x4, x1, x2)

inst_24770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f807fff; valaddr_reg:x3; val_offset:74310*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74310*0 + 3*194*FLEN/8, x4, x1, x2)

inst_24771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f80ffff; valaddr_reg:x3; val_offset:74313*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74313*0 + 3*195*FLEN/8, x4, x1, x2)

inst_24772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f81ffff; valaddr_reg:x3; val_offset:74316*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74316*0 + 3*196*FLEN/8, x4, x1, x2)

inst_24773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f83ffff; valaddr_reg:x3; val_offset:74319*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74319*0 + 3*197*FLEN/8, x4, x1, x2)

inst_24774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f87ffff; valaddr_reg:x3; val_offset:74322*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74322*0 + 3*198*FLEN/8, x4, x1, x2)

inst_24775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f8fffff; valaddr_reg:x3; val_offset:74325*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74325*0 + 3*199*FLEN/8, x4, x1, x2)

inst_24776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4f9fffff; valaddr_reg:x3; val_offset:74328*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74328*0 + 3*200*FLEN/8, x4, x1, x2)

inst_24777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fbfffff; valaddr_reg:x3; val_offset:74331*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74331*0 + 3*201*FLEN/8, x4, x1, x2)

inst_24778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fc00000; valaddr_reg:x3; val_offset:74334*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74334*0 + 3*202*FLEN/8, x4, x1, x2)

inst_24779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fe00000; valaddr_reg:x3; val_offset:74337*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74337*0 + 3*203*FLEN/8, x4, x1, x2)

inst_24780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ff00000; valaddr_reg:x3; val_offset:74340*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74340*0 + 3*204*FLEN/8, x4, x1, x2)

inst_24781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ff80000; valaddr_reg:x3; val_offset:74343*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74343*0 + 3*205*FLEN/8, x4, x1, x2)

inst_24782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffc0000; valaddr_reg:x3; val_offset:74346*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74346*0 + 3*206*FLEN/8, x4, x1, x2)

inst_24783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffe0000; valaddr_reg:x3; val_offset:74349*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74349*0 + 3*207*FLEN/8, x4, x1, x2)

inst_24784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fff0000; valaddr_reg:x3; val_offset:74352*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74352*0 + 3*208*FLEN/8, x4, x1, x2)

inst_24785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fff8000; valaddr_reg:x3; val_offset:74355*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74355*0 + 3*209*FLEN/8, x4, x1, x2)

inst_24786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fffc000; valaddr_reg:x3; val_offset:74358*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74358*0 + 3*210*FLEN/8, x4, x1, x2)

inst_24787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fffe000; valaddr_reg:x3; val_offset:74361*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74361*0 + 3*211*FLEN/8, x4, x1, x2)

inst_24788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffff000; valaddr_reg:x3; val_offset:74364*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74364*0 + 3*212*FLEN/8, x4, x1, x2)

inst_24789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffff800; valaddr_reg:x3; val_offset:74367*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74367*0 + 3*213*FLEN/8, x4, x1, x2)

inst_24790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffffc00; valaddr_reg:x3; val_offset:74370*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74370*0 + 3*214*FLEN/8, x4, x1, x2)

inst_24791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffffe00; valaddr_reg:x3; val_offset:74373*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74373*0 + 3*215*FLEN/8, x4, x1, x2)

inst_24792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fffff00; valaddr_reg:x3; val_offset:74376*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74376*0 + 3*216*FLEN/8, x4, x1, x2)

inst_24793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fffff80; valaddr_reg:x3; val_offset:74379*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74379*0 + 3*217*FLEN/8, x4, x1, x2)

inst_24794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fffffc0; valaddr_reg:x3; val_offset:74382*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74382*0 + 3*218*FLEN/8, x4, x1, x2)

inst_24795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fffffe0; valaddr_reg:x3; val_offset:74385*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74385*0 + 3*219*FLEN/8, x4, x1, x2)

inst_24796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffffff0; valaddr_reg:x3; val_offset:74388*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74388*0 + 3*220*FLEN/8, x4, x1, x2)

inst_24797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffffff8; valaddr_reg:x3; val_offset:74391*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74391*0 + 3*221*FLEN/8, x4, x1, x2)

inst_24798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffffffc; valaddr_reg:x3; val_offset:74394*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74394*0 + 3*222*FLEN/8, x4, x1, x2)

inst_24799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4ffffffe; valaddr_reg:x3; val_offset:74397*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74397*0 + 3*223*FLEN/8, x4, x1, x2)

inst_24800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x427729 and fs3 == 0 and fe3 == 0x9f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef680ff; op2val:0x427729;
op3val:0x4fffffff; valaddr_reg:x3; val_offset:74400*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74400*0 + 3*224*FLEN/8, x4, x1, x2)

inst_24801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c000000; valaddr_reg:x3; val_offset:74403*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74403*0 + 3*225*FLEN/8, x4, x1, x2)

inst_24802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c000001; valaddr_reg:x3; val_offset:74406*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74406*0 + 3*226*FLEN/8, x4, x1, x2)

inst_24803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c000003; valaddr_reg:x3; val_offset:74409*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74409*0 + 3*227*FLEN/8, x4, x1, x2)

inst_24804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c000007; valaddr_reg:x3; val_offset:74412*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74412*0 + 3*228*FLEN/8, x4, x1, x2)

inst_24805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c00000f; valaddr_reg:x3; val_offset:74415*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74415*0 + 3*229*FLEN/8, x4, x1, x2)

inst_24806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c00001f; valaddr_reg:x3; val_offset:74418*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74418*0 + 3*230*FLEN/8, x4, x1, x2)

inst_24807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c00003f; valaddr_reg:x3; val_offset:74421*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74421*0 + 3*231*FLEN/8, x4, x1, x2)

inst_24808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c00007f; valaddr_reg:x3; val_offset:74424*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74424*0 + 3*232*FLEN/8, x4, x1, x2)

inst_24809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c0000ff; valaddr_reg:x3; val_offset:74427*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74427*0 + 3*233*FLEN/8, x4, x1, x2)

inst_24810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c0001ff; valaddr_reg:x3; val_offset:74430*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74430*0 + 3*234*FLEN/8, x4, x1, x2)

inst_24811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c0003ff; valaddr_reg:x3; val_offset:74433*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74433*0 + 3*235*FLEN/8, x4, x1, x2)

inst_24812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c0007ff; valaddr_reg:x3; val_offset:74436*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74436*0 + 3*236*FLEN/8, x4, x1, x2)

inst_24813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c000fff; valaddr_reg:x3; val_offset:74439*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74439*0 + 3*237*FLEN/8, x4, x1, x2)

inst_24814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c001fff; valaddr_reg:x3; val_offset:74442*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74442*0 + 3*238*FLEN/8, x4, x1, x2)

inst_24815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c003fff; valaddr_reg:x3; val_offset:74445*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74445*0 + 3*239*FLEN/8, x4, x1, x2)

inst_24816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c007fff; valaddr_reg:x3; val_offset:74448*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74448*0 + 3*240*FLEN/8, x4, x1, x2)

inst_24817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c00ffff; valaddr_reg:x3; val_offset:74451*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74451*0 + 3*241*FLEN/8, x4, x1, x2)

inst_24818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c01ffff; valaddr_reg:x3; val_offset:74454*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74454*0 + 3*242*FLEN/8, x4, x1, x2)

inst_24819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c03ffff; valaddr_reg:x3; val_offset:74457*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74457*0 + 3*243*FLEN/8, x4, x1, x2)

inst_24820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c07ffff; valaddr_reg:x3; val_offset:74460*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74460*0 + 3*244*FLEN/8, x4, x1, x2)

inst_24821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c0fffff; valaddr_reg:x3; val_offset:74463*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74463*0 + 3*245*FLEN/8, x4, x1, x2)

inst_24822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c1fffff; valaddr_reg:x3; val_offset:74466*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74466*0 + 3*246*FLEN/8, x4, x1, x2)

inst_24823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c3fffff; valaddr_reg:x3; val_offset:74469*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74469*0 + 3*247*FLEN/8, x4, x1, x2)

inst_24824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c400000; valaddr_reg:x3; val_offset:74472*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74472*0 + 3*248*FLEN/8, x4, x1, x2)

inst_24825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c600000; valaddr_reg:x3; val_offset:74475*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74475*0 + 3*249*FLEN/8, x4, x1, x2)

inst_24826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c700000; valaddr_reg:x3; val_offset:74478*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74478*0 + 3*250*FLEN/8, x4, x1, x2)

inst_24827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c780000; valaddr_reg:x3; val_offset:74481*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74481*0 + 3*251*FLEN/8, x4, x1, x2)

inst_24828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7c0000; valaddr_reg:x3; val_offset:74484*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74484*0 + 3*252*FLEN/8, x4, x1, x2)

inst_24829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7e0000; valaddr_reg:x3; val_offset:74487*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74487*0 + 3*253*FLEN/8, x4, x1, x2)

inst_24830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7f0000; valaddr_reg:x3; val_offset:74490*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74490*0 + 3*254*FLEN/8, x4, x1, x2)

inst_24831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7f8000; valaddr_reg:x3; val_offset:74493*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74493*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_24832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7fc000; valaddr_reg:x3; val_offset:74496*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74496*0 + 3*256*FLEN/8, x4, x1, x2)

inst_24833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7fe000; valaddr_reg:x3; val_offset:74499*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74499*0 + 3*257*FLEN/8, x4, x1, x2)

inst_24834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7ff000; valaddr_reg:x3; val_offset:74502*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74502*0 + 3*258*FLEN/8, x4, x1, x2)

inst_24835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7ff800; valaddr_reg:x3; val_offset:74505*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74505*0 + 3*259*FLEN/8, x4, x1, x2)

inst_24836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7ffc00; valaddr_reg:x3; val_offset:74508*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74508*0 + 3*260*FLEN/8, x4, x1, x2)

inst_24837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7ffe00; valaddr_reg:x3; val_offset:74511*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74511*0 + 3*261*FLEN/8, x4, x1, x2)

inst_24838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7fff00; valaddr_reg:x3; val_offset:74514*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74514*0 + 3*262*FLEN/8, x4, x1, x2)

inst_24839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7fff80; valaddr_reg:x3; val_offset:74517*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74517*0 + 3*263*FLEN/8, x4, x1, x2)

inst_24840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7fffc0; valaddr_reg:x3; val_offset:74520*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74520*0 + 3*264*FLEN/8, x4, x1, x2)

inst_24841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7fffe0; valaddr_reg:x3; val_offset:74523*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74523*0 + 3*265*FLEN/8, x4, x1, x2)

inst_24842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7ffff0; valaddr_reg:x3; val_offset:74526*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74526*0 + 3*266*FLEN/8, x4, x1, x2)

inst_24843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7ffff8; valaddr_reg:x3; val_offset:74529*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74529*0 + 3*267*FLEN/8, x4, x1, x2)

inst_24844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7ffffc; valaddr_reg:x3; val_offset:74532*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74532*0 + 3*268*FLEN/8, x4, x1, x2)

inst_24845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7ffffe; valaddr_reg:x3; val_offset:74535*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74535*0 + 3*269*FLEN/8, x4, x1, x2)

inst_24846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x58 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x2c7fffff; valaddr_reg:x3; val_offset:74538*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74538*0 + 3*270*FLEN/8, x4, x1, x2)

inst_24847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3f800001; valaddr_reg:x3; val_offset:74541*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74541*0 + 3*271*FLEN/8, x4, x1, x2)

inst_24848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3f800003; valaddr_reg:x3; val_offset:74544*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74544*0 + 3*272*FLEN/8, x4, x1, x2)

inst_24849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3f800007; valaddr_reg:x3; val_offset:74547*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74547*0 + 3*273*FLEN/8, x4, x1, x2)

inst_24850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3f999999; valaddr_reg:x3; val_offset:74550*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74550*0 + 3*274*FLEN/8, x4, x1, x2)

inst_24851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:74553*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74553*0 + 3*275*FLEN/8, x4, x1, x2)

inst_24852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:74556*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74556*0 + 3*276*FLEN/8, x4, x1, x2)

inst_24853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:74559*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74559*0 + 3*277*FLEN/8, x4, x1, x2)

inst_24854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:74562*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74562*0 + 3*278*FLEN/8, x4, x1, x2)

inst_24855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:74565*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74565*0 + 3*279*FLEN/8, x4, x1, x2)

inst_24856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:74568*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74568*0 + 3*280*FLEN/8, x4, x1, x2)

inst_24857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:74571*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74571*0 + 3*281*FLEN/8, x4, x1, x2)

inst_24858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:74574*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74574*0 + 3*282*FLEN/8, x4, x1, x2)

inst_24859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:74577*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74577*0 + 3*283*FLEN/8, x4, x1, x2)

inst_24860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:74580*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74580*0 + 3*284*FLEN/8, x4, x1, x2)

inst_24861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:74583*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74583*0 + 3*285*FLEN/8, x4, x1, x2)

inst_24862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x424398 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef740d5; op2val:0x424398;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:74586*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74586*0 + 3*286*FLEN/8, x4, x1, x2)

inst_24863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:74589*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74589*0 + 3*287*FLEN/8, x4, x1, x2)

inst_24864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:74592*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74592*0 + 3*288*FLEN/8, x4, x1, x2)

inst_24865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:74595*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74595*0 + 3*289*FLEN/8, x4, x1, x2)

inst_24866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:74598*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74598*0 + 3*290*FLEN/8, x4, x1, x2)

inst_24867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:74601*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74601*0 + 3*291*FLEN/8, x4, x1, x2)

inst_24868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:74604*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74604*0 + 3*292*FLEN/8, x4, x1, x2)

inst_24869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:74607*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74607*0 + 3*293*FLEN/8, x4, x1, x2)

inst_24870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:74610*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74610*0 + 3*294*FLEN/8, x4, x1, x2)

inst_24871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:74613*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74613*0 + 3*295*FLEN/8, x4, x1, x2)

inst_24872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:74616*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74616*0 + 3*296*FLEN/8, x4, x1, x2)

inst_24873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:74619*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74619*0 + 3*297*FLEN/8, x4, x1, x2)

inst_24874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:74622*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74622*0 + 3*298*FLEN/8, x4, x1, x2)

inst_24875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:74625*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74625*0 + 3*299*FLEN/8, x4, x1, x2)

inst_24876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:74628*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74628*0 + 3*300*FLEN/8, x4, x1, x2)

inst_24877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:74631*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74631*0 + 3*301*FLEN/8, x4, x1, x2)

inst_24878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:74634*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74634*0 + 3*302*FLEN/8, x4, x1, x2)

inst_24879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4800000; valaddr_reg:x3; val_offset:74637*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74637*0 + 3*303*FLEN/8, x4, x1, x2)

inst_24880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4800001; valaddr_reg:x3; val_offset:74640*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74640*0 + 3*304*FLEN/8, x4, x1, x2)

inst_24881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4800003; valaddr_reg:x3; val_offset:74643*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74643*0 + 3*305*FLEN/8, x4, x1, x2)

inst_24882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4800007; valaddr_reg:x3; val_offset:74646*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74646*0 + 3*306*FLEN/8, x4, x1, x2)

inst_24883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x480000f; valaddr_reg:x3; val_offset:74649*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74649*0 + 3*307*FLEN/8, x4, x1, x2)

inst_24884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x480001f; valaddr_reg:x3; val_offset:74652*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74652*0 + 3*308*FLEN/8, x4, x1, x2)

inst_24885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x480003f; valaddr_reg:x3; val_offset:74655*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74655*0 + 3*309*FLEN/8, x4, x1, x2)

inst_24886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x480007f; valaddr_reg:x3; val_offset:74658*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74658*0 + 3*310*FLEN/8, x4, x1, x2)

inst_24887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x48000ff; valaddr_reg:x3; val_offset:74661*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74661*0 + 3*311*FLEN/8, x4, x1, x2)

inst_24888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x48001ff; valaddr_reg:x3; val_offset:74664*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74664*0 + 3*312*FLEN/8, x4, x1, x2)

inst_24889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x48003ff; valaddr_reg:x3; val_offset:74667*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74667*0 + 3*313*FLEN/8, x4, x1, x2)

inst_24890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x48007ff; valaddr_reg:x3; val_offset:74670*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74670*0 + 3*314*FLEN/8, x4, x1, x2)

inst_24891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4800fff; valaddr_reg:x3; val_offset:74673*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74673*0 + 3*315*FLEN/8, x4, x1, x2)

inst_24892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4801fff; valaddr_reg:x3; val_offset:74676*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74676*0 + 3*316*FLEN/8, x4, x1, x2)

inst_24893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4803fff; valaddr_reg:x3; val_offset:74679*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74679*0 + 3*317*FLEN/8, x4, x1, x2)

inst_24894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4807fff; valaddr_reg:x3; val_offset:74682*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74682*0 + 3*318*FLEN/8, x4, x1, x2)

inst_24895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x480ffff; valaddr_reg:x3; val_offset:74685*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74685*0 + 3*319*FLEN/8, x4, x1, x2)

inst_24896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x481ffff; valaddr_reg:x3; val_offset:74688*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74688*0 + 3*320*FLEN/8, x4, x1, x2)

inst_24897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x483ffff; valaddr_reg:x3; val_offset:74691*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74691*0 + 3*321*FLEN/8, x4, x1, x2)

inst_24898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x487ffff; valaddr_reg:x3; val_offset:74694*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74694*0 + 3*322*FLEN/8, x4, x1, x2)

inst_24899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x48fffff; valaddr_reg:x3; val_offset:74697*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74697*0 + 3*323*FLEN/8, x4, x1, x2)

inst_24900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x49fffff; valaddr_reg:x3; val_offset:74700*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74700*0 + 3*324*FLEN/8, x4, x1, x2)

inst_24901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4bfffff; valaddr_reg:x3; val_offset:74703*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74703*0 + 3*325*FLEN/8, x4, x1, x2)

inst_24902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4c00000; valaddr_reg:x3; val_offset:74706*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74706*0 + 3*326*FLEN/8, x4, x1, x2)

inst_24903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4e00000; valaddr_reg:x3; val_offset:74709*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74709*0 + 3*327*FLEN/8, x4, x1, x2)

inst_24904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4f00000; valaddr_reg:x3; val_offset:74712*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74712*0 + 3*328*FLEN/8, x4, x1, x2)

inst_24905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4f80000; valaddr_reg:x3; val_offset:74715*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74715*0 + 3*329*FLEN/8, x4, x1, x2)

inst_24906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fc0000; valaddr_reg:x3; val_offset:74718*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74718*0 + 3*330*FLEN/8, x4, x1, x2)

inst_24907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fe0000; valaddr_reg:x3; val_offset:74721*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74721*0 + 3*331*FLEN/8, x4, x1, x2)

inst_24908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4ff0000; valaddr_reg:x3; val_offset:74724*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74724*0 + 3*332*FLEN/8, x4, x1, x2)

inst_24909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4ff8000; valaddr_reg:x3; val_offset:74727*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74727*0 + 3*333*FLEN/8, x4, x1, x2)

inst_24910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4ffc000; valaddr_reg:x3; val_offset:74730*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74730*0 + 3*334*FLEN/8, x4, x1, x2)

inst_24911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4ffe000; valaddr_reg:x3; val_offset:74733*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74733*0 + 3*335*FLEN/8, x4, x1, x2)

inst_24912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fff000; valaddr_reg:x3; val_offset:74736*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74736*0 + 3*336*FLEN/8, x4, x1, x2)

inst_24913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fff800; valaddr_reg:x3; val_offset:74739*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74739*0 + 3*337*FLEN/8, x4, x1, x2)

inst_24914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fffc00; valaddr_reg:x3; val_offset:74742*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74742*0 + 3*338*FLEN/8, x4, x1, x2)

inst_24915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fffe00; valaddr_reg:x3; val_offset:74745*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74745*0 + 3*339*FLEN/8, x4, x1, x2)

inst_24916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4ffff00; valaddr_reg:x3; val_offset:74748*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74748*0 + 3*340*FLEN/8, x4, x1, x2)

inst_24917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4ffff80; valaddr_reg:x3; val_offset:74751*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74751*0 + 3*341*FLEN/8, x4, x1, x2)

inst_24918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4ffffc0; valaddr_reg:x3; val_offset:74754*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74754*0 + 3*342*FLEN/8, x4, x1, x2)

inst_24919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4ffffe0; valaddr_reg:x3; val_offset:74757*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74757*0 + 3*343*FLEN/8, x4, x1, x2)

inst_24920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fffff0; valaddr_reg:x3; val_offset:74760*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74760*0 + 3*344*FLEN/8, x4, x1, x2)

inst_24921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fffff8; valaddr_reg:x3; val_offset:74763*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74763*0 + 3*345*FLEN/8, x4, x1, x2)

inst_24922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fffffc; valaddr_reg:x3; val_offset:74766*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74766*0 + 3*346*FLEN/8, x4, x1, x2)

inst_24923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4fffffe; valaddr_reg:x3; val_offset:74769*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74769*0 + 3*347*FLEN/8, x4, x1, x2)

inst_24924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77699b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x09 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7699b; op2val:0x0;
op3val:0x4ffffff; valaddr_reg:x3; val_offset:74772*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74772*0 + 3*348*FLEN/8, x4, x1, x2)

inst_24925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:74775*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74775*0 + 3*349*FLEN/8, x4, x1, x2)

inst_24926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:74778*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74778*0 + 3*350*FLEN/8, x4, x1, x2)

inst_24927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:74781*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74781*0 + 3*351*FLEN/8, x4, x1, x2)

inst_24928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:74784*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74784*0 + 3*352*FLEN/8, x4, x1, x2)

inst_24929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:74787*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74787*0 + 3*353*FLEN/8, x4, x1, x2)

inst_24930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:74790*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74790*0 + 3*354*FLEN/8, x4, x1, x2)

inst_24931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:74793*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74793*0 + 3*355*FLEN/8, x4, x1, x2)

inst_24932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:74796*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74796*0 + 3*356*FLEN/8, x4, x1, x2)

inst_24933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:74799*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74799*0 + 3*357*FLEN/8, x4, x1, x2)

inst_24934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:74802*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74802*0 + 3*358*FLEN/8, x4, x1, x2)

inst_24935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:74805*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74805*0 + 3*359*FLEN/8, x4, x1, x2)

inst_24936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:74808*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74808*0 + 3*360*FLEN/8, x4, x1, x2)

inst_24937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:74811*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74811*0 + 3*361*FLEN/8, x4, x1, x2)

inst_24938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:74814*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74814*0 + 3*362*FLEN/8, x4, x1, x2)

inst_24939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:74817*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74817*0 + 3*363*FLEN/8, x4, x1, x2)

inst_24940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:74820*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74820*0 + 3*364*FLEN/8, x4, x1, x2)

inst_24941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82000000; valaddr_reg:x3; val_offset:74823*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74823*0 + 3*365*FLEN/8, x4, x1, x2)

inst_24942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82000001; valaddr_reg:x3; val_offset:74826*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74826*0 + 3*366*FLEN/8, x4, x1, x2)

inst_24943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82000003; valaddr_reg:x3; val_offset:74829*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74829*0 + 3*367*FLEN/8, x4, x1, x2)

inst_24944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82000007; valaddr_reg:x3; val_offset:74832*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74832*0 + 3*368*FLEN/8, x4, x1, x2)

inst_24945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x8200000f; valaddr_reg:x3; val_offset:74835*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74835*0 + 3*369*FLEN/8, x4, x1, x2)

inst_24946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x8200001f; valaddr_reg:x3; val_offset:74838*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74838*0 + 3*370*FLEN/8, x4, x1, x2)

inst_24947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x8200003f; valaddr_reg:x3; val_offset:74841*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74841*0 + 3*371*FLEN/8, x4, x1, x2)

inst_24948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x8200007f; valaddr_reg:x3; val_offset:74844*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74844*0 + 3*372*FLEN/8, x4, x1, x2)

inst_24949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x820000ff; valaddr_reg:x3; val_offset:74847*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74847*0 + 3*373*FLEN/8, x4, x1, x2)

inst_24950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x820001ff; valaddr_reg:x3; val_offset:74850*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74850*0 + 3*374*FLEN/8, x4, x1, x2)

inst_24951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x820003ff; valaddr_reg:x3; val_offset:74853*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74853*0 + 3*375*FLEN/8, x4, x1, x2)

inst_24952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x820007ff; valaddr_reg:x3; val_offset:74856*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74856*0 + 3*376*FLEN/8, x4, x1, x2)

inst_24953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82000fff; valaddr_reg:x3; val_offset:74859*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74859*0 + 3*377*FLEN/8, x4, x1, x2)

inst_24954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82001fff; valaddr_reg:x3; val_offset:74862*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74862*0 + 3*378*FLEN/8, x4, x1, x2)

inst_24955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82003fff; valaddr_reg:x3; val_offset:74865*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74865*0 + 3*379*FLEN/8, x4, x1, x2)

inst_24956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82007fff; valaddr_reg:x3; val_offset:74868*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74868*0 + 3*380*FLEN/8, x4, x1, x2)

inst_24957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x8200ffff; valaddr_reg:x3; val_offset:74871*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74871*0 + 3*381*FLEN/8, x4, x1, x2)

inst_24958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x8201ffff; valaddr_reg:x3; val_offset:74874*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74874*0 + 3*382*FLEN/8, x4, x1, x2)

inst_24959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x8203ffff; valaddr_reg:x3; val_offset:74877*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74877*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_24960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x8207ffff; valaddr_reg:x3; val_offset:74880*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74880*0 + 3*384*FLEN/8, x4, x1, x2)

inst_24961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x820fffff; valaddr_reg:x3; val_offset:74883*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74883*0 + 3*385*FLEN/8, x4, x1, x2)

inst_24962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x821fffff; valaddr_reg:x3; val_offset:74886*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74886*0 + 3*386*FLEN/8, x4, x1, x2)

inst_24963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x823fffff; valaddr_reg:x3; val_offset:74889*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74889*0 + 3*387*FLEN/8, x4, x1, x2)

inst_24964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82400000; valaddr_reg:x3; val_offset:74892*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74892*0 + 3*388*FLEN/8, x4, x1, x2)

inst_24965:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82600000; valaddr_reg:x3; val_offset:74895*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74895*0 + 3*389*FLEN/8, x4, x1, x2)

inst_24966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82700000; valaddr_reg:x3; val_offset:74898*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74898*0 + 3*390*FLEN/8, x4, x1, x2)

inst_24967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x82780000; valaddr_reg:x3; val_offset:74901*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74901*0 + 3*391*FLEN/8, x4, x1, x2)

inst_24968:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827c0000; valaddr_reg:x3; val_offset:74904*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74904*0 + 3*392*FLEN/8, x4, x1, x2)

inst_24969:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827e0000; valaddr_reg:x3; val_offset:74907*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74907*0 + 3*393*FLEN/8, x4, x1, x2)

inst_24970:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827f0000; valaddr_reg:x3; val_offset:74910*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74910*0 + 3*394*FLEN/8, x4, x1, x2)

inst_24971:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827f8000; valaddr_reg:x3; val_offset:74913*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74913*0 + 3*395*FLEN/8, x4, x1, x2)

inst_24972:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827fc000; valaddr_reg:x3; val_offset:74916*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74916*0 + 3*396*FLEN/8, x4, x1, x2)

inst_24973:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827fe000; valaddr_reg:x3; val_offset:74919*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74919*0 + 3*397*FLEN/8, x4, x1, x2)

inst_24974:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827ff000; valaddr_reg:x3; val_offset:74922*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74922*0 + 3*398*FLEN/8, x4, x1, x2)

inst_24975:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827ff800; valaddr_reg:x3; val_offset:74925*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74925*0 + 3*399*FLEN/8, x4, x1, x2)

inst_24976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827ffc00; valaddr_reg:x3; val_offset:74928*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74928*0 + 3*400*FLEN/8, x4, x1, x2)

inst_24977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827ffe00; valaddr_reg:x3; val_offset:74931*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74931*0 + 3*401*FLEN/8, x4, x1, x2)

inst_24978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827fff00; valaddr_reg:x3; val_offset:74934*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74934*0 + 3*402*FLEN/8, x4, x1, x2)

inst_24979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827fff80; valaddr_reg:x3; val_offset:74937*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74937*0 + 3*403*FLEN/8, x4, x1, x2)

inst_24980:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827fffc0; valaddr_reg:x3; val_offset:74940*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74940*0 + 3*404*FLEN/8, x4, x1, x2)

inst_24981:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827fffe0; valaddr_reg:x3; val_offset:74943*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74943*0 + 3*405*FLEN/8, x4, x1, x2)

inst_24982:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827ffff0; valaddr_reg:x3; val_offset:74946*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74946*0 + 3*406*FLEN/8, x4, x1, x2)

inst_24983:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827ffff8; valaddr_reg:x3; val_offset:74949*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74949*0 + 3*407*FLEN/8, x4, x1, x2)

inst_24984:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827ffffc; valaddr_reg:x3; val_offset:74952*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74952*0 + 3*408*FLEN/8, x4, x1, x2)

inst_24985:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827ffffe; valaddr_reg:x3; val_offset:74955*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74955*0 + 3*409*FLEN/8, x4, x1, x2)

inst_24986:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77efb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef7efb9; op2val:0x80000000;
op3val:0x827fffff; valaddr_reg:x3; val_offset:74958*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74958*0 + 3*410*FLEN/8, x4, x1, x2)

inst_24987:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbf800001; valaddr_reg:x3; val_offset:74961*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74961*0 + 3*411*FLEN/8, x4, x1, x2)

inst_24988:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbf800003; valaddr_reg:x3; val_offset:74964*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74964*0 + 3*412*FLEN/8, x4, x1, x2)

inst_24989:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbf800007; valaddr_reg:x3; val_offset:74967*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74967*0 + 3*413*FLEN/8, x4, x1, x2)

inst_24990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbf999999; valaddr_reg:x3; val_offset:74970*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74970*0 + 3*414*FLEN/8, x4, x1, x2)

inst_24991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:74973*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74973*0 + 3*415*FLEN/8, x4, x1, x2)

inst_24992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:74976*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74976*0 + 3*416*FLEN/8, x4, x1, x2)

inst_24993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:74979*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74979*0 + 3*417*FLEN/8, x4, x1, x2)

inst_24994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:74982*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74982*0 + 3*418*FLEN/8, x4, x1, x2)

inst_24995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:74985*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74985*0 + 3*419*FLEN/8, x4, x1, x2)

inst_24996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:74988*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74988*0 + 3*420*FLEN/8, x4, x1, x2)

inst_24997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:74991*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74991*0 + 3*421*FLEN/8, x4, x1, x2)

inst_24998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:74994*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74994*0 + 3*422*FLEN/8, x4, x1, x2)

inst_24999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:74997*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 74997*0 + 3*423*FLEN/8, x4, x1, x2)

inst_25000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:75000*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75000*0 + 3*424*FLEN/8, x4, x1, x2)

inst_25001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:75003*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75003*0 + 3*425*FLEN/8, x4, x1, x2)

inst_25002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:75006*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75006*0 + 3*426*FLEN/8, x4, x1, x2)

inst_25003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7000000; valaddr_reg:x3; val_offset:75009*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75009*0 + 3*427*FLEN/8, x4, x1, x2)

inst_25004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7000001; valaddr_reg:x3; val_offset:75012*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75012*0 + 3*428*FLEN/8, x4, x1, x2)

inst_25005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7000003; valaddr_reg:x3; val_offset:75015*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75015*0 + 3*429*FLEN/8, x4, x1, x2)

inst_25006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7000007; valaddr_reg:x3; val_offset:75018*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75018*0 + 3*430*FLEN/8, x4, x1, x2)

inst_25007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc700000f; valaddr_reg:x3; val_offset:75021*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75021*0 + 3*431*FLEN/8, x4, x1, x2)

inst_25008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc700001f; valaddr_reg:x3; val_offset:75024*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75024*0 + 3*432*FLEN/8, x4, x1, x2)

inst_25009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc700003f; valaddr_reg:x3; val_offset:75027*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75027*0 + 3*433*FLEN/8, x4, x1, x2)

inst_25010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc700007f; valaddr_reg:x3; val_offset:75030*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75030*0 + 3*434*FLEN/8, x4, x1, x2)

inst_25011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc70000ff; valaddr_reg:x3; val_offset:75033*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75033*0 + 3*435*FLEN/8, x4, x1, x2)

inst_25012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc70001ff; valaddr_reg:x3; val_offset:75036*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75036*0 + 3*436*FLEN/8, x4, x1, x2)

inst_25013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc70003ff; valaddr_reg:x3; val_offset:75039*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75039*0 + 3*437*FLEN/8, x4, x1, x2)

inst_25014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc70007ff; valaddr_reg:x3; val_offset:75042*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75042*0 + 3*438*FLEN/8, x4, x1, x2)

inst_25015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7000fff; valaddr_reg:x3; val_offset:75045*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75045*0 + 3*439*FLEN/8, x4, x1, x2)

inst_25016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7001fff; valaddr_reg:x3; val_offset:75048*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75048*0 + 3*440*FLEN/8, x4, x1, x2)

inst_25017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7003fff; valaddr_reg:x3; val_offset:75051*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75051*0 + 3*441*FLEN/8, x4, x1, x2)

inst_25018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7007fff; valaddr_reg:x3; val_offset:75054*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75054*0 + 3*442*FLEN/8, x4, x1, x2)

inst_25019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc700ffff; valaddr_reg:x3; val_offset:75057*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75057*0 + 3*443*FLEN/8, x4, x1, x2)

inst_25020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc701ffff; valaddr_reg:x3; val_offset:75060*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75060*0 + 3*444*FLEN/8, x4, x1, x2)

inst_25021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc703ffff; valaddr_reg:x3; val_offset:75063*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75063*0 + 3*445*FLEN/8, x4, x1, x2)

inst_25022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc707ffff; valaddr_reg:x3; val_offset:75066*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75066*0 + 3*446*FLEN/8, x4, x1, x2)

inst_25023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc70fffff; valaddr_reg:x3; val_offset:75069*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75069*0 + 3*447*FLEN/8, x4, x1, x2)

inst_25024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc71fffff; valaddr_reg:x3; val_offset:75072*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75072*0 + 3*448*FLEN/8, x4, x1, x2)

inst_25025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc73fffff; valaddr_reg:x3; val_offset:75075*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75075*0 + 3*449*FLEN/8, x4, x1, x2)

inst_25026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7400000; valaddr_reg:x3; val_offset:75078*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75078*0 + 3*450*FLEN/8, x4, x1, x2)

inst_25027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7600000; valaddr_reg:x3; val_offset:75081*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75081*0 + 3*451*FLEN/8, x4, x1, x2)

inst_25028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7700000; valaddr_reg:x3; val_offset:75084*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75084*0 + 3*452*FLEN/8, x4, x1, x2)

inst_25029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc7780000; valaddr_reg:x3; val_offset:75087*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75087*0 + 3*453*FLEN/8, x4, x1, x2)

inst_25030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77c0000; valaddr_reg:x3; val_offset:75090*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75090*0 + 3*454*FLEN/8, x4, x1, x2)

inst_25031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77e0000; valaddr_reg:x3; val_offset:75093*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75093*0 + 3*455*FLEN/8, x4, x1, x2)

inst_25032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77f0000; valaddr_reg:x3; val_offset:75096*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75096*0 + 3*456*FLEN/8, x4, x1, x2)

inst_25033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77f8000; valaddr_reg:x3; val_offset:75099*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75099*0 + 3*457*FLEN/8, x4, x1, x2)

inst_25034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77fc000; valaddr_reg:x3; val_offset:75102*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75102*0 + 3*458*FLEN/8, x4, x1, x2)

inst_25035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77fe000; valaddr_reg:x3; val_offset:75105*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75105*0 + 3*459*FLEN/8, x4, x1, x2)

inst_25036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77ff000; valaddr_reg:x3; val_offset:75108*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75108*0 + 3*460*FLEN/8, x4, x1, x2)

inst_25037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77ff800; valaddr_reg:x3; val_offset:75111*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75111*0 + 3*461*FLEN/8, x4, x1, x2)

inst_25038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77ffc00; valaddr_reg:x3; val_offset:75114*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75114*0 + 3*462*FLEN/8, x4, x1, x2)

inst_25039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77ffe00; valaddr_reg:x3; val_offset:75117*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75117*0 + 3*463*FLEN/8, x4, x1, x2)

inst_25040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77fff00; valaddr_reg:x3; val_offset:75120*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75120*0 + 3*464*FLEN/8, x4, x1, x2)

inst_25041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77fff80; valaddr_reg:x3; val_offset:75123*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75123*0 + 3*465*FLEN/8, x4, x1, x2)

inst_25042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77fffc0; valaddr_reg:x3; val_offset:75126*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75126*0 + 3*466*FLEN/8, x4, x1, x2)

inst_25043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77fffe0; valaddr_reg:x3; val_offset:75129*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75129*0 + 3*467*FLEN/8, x4, x1, x2)

inst_25044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77ffff0; valaddr_reg:x3; val_offset:75132*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75132*0 + 3*468*FLEN/8, x4, x1, x2)

inst_25045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77ffff8; valaddr_reg:x3; val_offset:75135*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75135*0 + 3*469*FLEN/8, x4, x1, x2)

inst_25046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77ffffc; valaddr_reg:x3; val_offset:75138*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75138*0 + 3*470*FLEN/8, x4, x1, x2)

inst_25047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77ffffe; valaddr_reg:x3; val_offset:75141*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75141*0 + 3*471*FLEN/8, x4, x1, x2)

inst_25048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x41f446 and fs3 == 1 and fe3 == 0x8e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef86a31; op2val:0x8041f446;
op3val:0xc77fffff; valaddr_reg:x3; val_offset:75144*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75144*0 + 3*472*FLEN/8, x4, x1, x2)

inst_25049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:75147*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75147*0 + 3*473*FLEN/8, x4, x1, x2)

inst_25050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:75150*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75150*0 + 3*474*FLEN/8, x4, x1, x2)

inst_25051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:75153*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75153*0 + 3*475*FLEN/8, x4, x1, x2)

inst_25052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:75156*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75156*0 + 3*476*FLEN/8, x4, x1, x2)

inst_25053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:75159*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75159*0 + 3*477*FLEN/8, x4, x1, x2)

inst_25054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:75162*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75162*0 + 3*478*FLEN/8, x4, x1, x2)

inst_25055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:75165*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75165*0 + 3*479*FLEN/8, x4, x1, x2)

inst_25056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:75168*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75168*0 + 3*480*FLEN/8, x4, x1, x2)

inst_25057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:75171*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75171*0 + 3*481*FLEN/8, x4, x1, x2)

inst_25058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:75174*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75174*0 + 3*482*FLEN/8, x4, x1, x2)

inst_25059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:75177*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75177*0 + 3*483*FLEN/8, x4, x1, x2)

inst_25060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:75180*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75180*0 + 3*484*FLEN/8, x4, x1, x2)

inst_25061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:75183*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75183*0 + 3*485*FLEN/8, x4, x1, x2)

inst_25062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:75186*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75186*0 + 3*486*FLEN/8, x4, x1, x2)

inst_25063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:75189*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75189*0 + 3*487*FLEN/8, x4, x1, x2)

inst_25064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:75192*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75192*0 + 3*488*FLEN/8, x4, x1, x2)

inst_25065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88000000; valaddr_reg:x3; val_offset:75195*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75195*0 + 3*489*FLEN/8, x4, x1, x2)

inst_25066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88000001; valaddr_reg:x3; val_offset:75198*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75198*0 + 3*490*FLEN/8, x4, x1, x2)

inst_25067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88000003; valaddr_reg:x3; val_offset:75201*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75201*0 + 3*491*FLEN/8, x4, x1, x2)

inst_25068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88000007; valaddr_reg:x3; val_offset:75204*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75204*0 + 3*492*FLEN/8, x4, x1, x2)

inst_25069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x8800000f; valaddr_reg:x3; val_offset:75207*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75207*0 + 3*493*FLEN/8, x4, x1, x2)

inst_25070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x8800001f; valaddr_reg:x3; val_offset:75210*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75210*0 + 3*494*FLEN/8, x4, x1, x2)

inst_25071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x8800003f; valaddr_reg:x3; val_offset:75213*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75213*0 + 3*495*FLEN/8, x4, x1, x2)

inst_25072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x8800007f; valaddr_reg:x3; val_offset:75216*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75216*0 + 3*496*FLEN/8, x4, x1, x2)

inst_25073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x880000ff; valaddr_reg:x3; val_offset:75219*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75219*0 + 3*497*FLEN/8, x4, x1, x2)

inst_25074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x880001ff; valaddr_reg:x3; val_offset:75222*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75222*0 + 3*498*FLEN/8, x4, x1, x2)

inst_25075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x880003ff; valaddr_reg:x3; val_offset:75225*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75225*0 + 3*499*FLEN/8, x4, x1, x2)

inst_25076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x880007ff; valaddr_reg:x3; val_offset:75228*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75228*0 + 3*500*FLEN/8, x4, x1, x2)

inst_25077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88000fff; valaddr_reg:x3; val_offset:75231*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75231*0 + 3*501*FLEN/8, x4, x1, x2)

inst_25078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88001fff; valaddr_reg:x3; val_offset:75234*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75234*0 + 3*502*FLEN/8, x4, x1, x2)

inst_25079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88003fff; valaddr_reg:x3; val_offset:75237*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75237*0 + 3*503*FLEN/8, x4, x1, x2)

inst_25080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88007fff; valaddr_reg:x3; val_offset:75240*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75240*0 + 3*504*FLEN/8, x4, x1, x2)

inst_25081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x8800ffff; valaddr_reg:x3; val_offset:75243*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75243*0 + 3*505*FLEN/8, x4, x1, x2)

inst_25082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x8801ffff; valaddr_reg:x3; val_offset:75246*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75246*0 + 3*506*FLEN/8, x4, x1, x2)

inst_25083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x8803ffff; valaddr_reg:x3; val_offset:75249*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75249*0 + 3*507*FLEN/8, x4, x1, x2)

inst_25084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x8807ffff; valaddr_reg:x3; val_offset:75252*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75252*0 + 3*508*FLEN/8, x4, x1, x2)

inst_25085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x880fffff; valaddr_reg:x3; val_offset:75255*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75255*0 + 3*509*FLEN/8, x4, x1, x2)

inst_25086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x881fffff; valaddr_reg:x3; val_offset:75258*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75258*0 + 3*510*FLEN/8, x4, x1, x2)

inst_25087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x883fffff; valaddr_reg:x3; val_offset:75261*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75261*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_25088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88400000; valaddr_reg:x3; val_offset:75264*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75264*0 + 3*512*FLEN/8, x4, x1, x2)

inst_25089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88600000; valaddr_reg:x3; val_offset:75267*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75267*0 + 3*513*FLEN/8, x4, x1, x2)

inst_25090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88700000; valaddr_reg:x3; val_offset:75270*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75270*0 + 3*514*FLEN/8, x4, x1, x2)

inst_25091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x88780000; valaddr_reg:x3; val_offset:75273*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75273*0 + 3*515*FLEN/8, x4, x1, x2)

inst_25092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887c0000; valaddr_reg:x3; val_offset:75276*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75276*0 + 3*516*FLEN/8, x4, x1, x2)

inst_25093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887e0000; valaddr_reg:x3; val_offset:75279*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75279*0 + 3*517*FLEN/8, x4, x1, x2)

inst_25094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887f0000; valaddr_reg:x3; val_offset:75282*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75282*0 + 3*518*FLEN/8, x4, x1, x2)

inst_25095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887f8000; valaddr_reg:x3; val_offset:75285*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75285*0 + 3*519*FLEN/8, x4, x1, x2)

inst_25096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887fc000; valaddr_reg:x3; val_offset:75288*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75288*0 + 3*520*FLEN/8, x4, x1, x2)

inst_25097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887fe000; valaddr_reg:x3; val_offset:75291*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75291*0 + 3*521*FLEN/8, x4, x1, x2)

inst_25098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887ff000; valaddr_reg:x3; val_offset:75294*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75294*0 + 3*522*FLEN/8, x4, x1, x2)

inst_25099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887ff800; valaddr_reg:x3; val_offset:75297*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75297*0 + 3*523*FLEN/8, x4, x1, x2)

inst_25100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887ffc00; valaddr_reg:x3; val_offset:75300*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75300*0 + 3*524*FLEN/8, x4, x1, x2)

inst_25101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887ffe00; valaddr_reg:x3; val_offset:75303*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75303*0 + 3*525*FLEN/8, x4, x1, x2)

inst_25102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887fff00; valaddr_reg:x3; val_offset:75306*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75306*0 + 3*526*FLEN/8, x4, x1, x2)

inst_25103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887fff80; valaddr_reg:x3; val_offset:75309*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75309*0 + 3*527*FLEN/8, x4, x1, x2)

inst_25104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887fffc0; valaddr_reg:x3; val_offset:75312*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75312*0 + 3*528*FLEN/8, x4, x1, x2)

inst_25105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887fffe0; valaddr_reg:x3; val_offset:75315*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75315*0 + 3*529*FLEN/8, x4, x1, x2)

inst_25106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887ffff0; valaddr_reg:x3; val_offset:75318*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75318*0 + 3*530*FLEN/8, x4, x1, x2)

inst_25107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887ffff8; valaddr_reg:x3; val_offset:75321*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75321*0 + 3*531*FLEN/8, x4, x1, x2)

inst_25108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887ffffc; valaddr_reg:x3; val_offset:75324*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75324*0 + 3*532*FLEN/8, x4, x1, x2)

inst_25109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887ffffe; valaddr_reg:x3; val_offset:75327*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75327*0 + 3*533*FLEN/8, x4, x1, x2)

inst_25110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78a28a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x10 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef8a28a; op2val:0x80000000;
op3val:0x887fffff; valaddr_reg:x3; val_offset:75330*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75330*0 + 3*534*FLEN/8, x4, x1, x2)

inst_25111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8800000; valaddr_reg:x3; val_offset:75333*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75333*0 + 3*535*FLEN/8, x4, x1, x2)

inst_25112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8800001; valaddr_reg:x3; val_offset:75336*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75336*0 + 3*536*FLEN/8, x4, x1, x2)

inst_25113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8800003; valaddr_reg:x3; val_offset:75339*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75339*0 + 3*537*FLEN/8, x4, x1, x2)

inst_25114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8800007; valaddr_reg:x3; val_offset:75342*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75342*0 + 3*538*FLEN/8, x4, x1, x2)

inst_25115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe880000f; valaddr_reg:x3; val_offset:75345*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75345*0 + 3*539*FLEN/8, x4, x1, x2)

inst_25116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe880001f; valaddr_reg:x3; val_offset:75348*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75348*0 + 3*540*FLEN/8, x4, x1, x2)

inst_25117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe880003f; valaddr_reg:x3; val_offset:75351*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75351*0 + 3*541*FLEN/8, x4, x1, x2)

inst_25118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe880007f; valaddr_reg:x3; val_offset:75354*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75354*0 + 3*542*FLEN/8, x4, x1, x2)

inst_25119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe88000ff; valaddr_reg:x3; val_offset:75357*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75357*0 + 3*543*FLEN/8, x4, x1, x2)

inst_25120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe88001ff; valaddr_reg:x3; val_offset:75360*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75360*0 + 3*544*FLEN/8, x4, x1, x2)

inst_25121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe88003ff; valaddr_reg:x3; val_offset:75363*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75363*0 + 3*545*FLEN/8, x4, x1, x2)

inst_25122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe88007ff; valaddr_reg:x3; val_offset:75366*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75366*0 + 3*546*FLEN/8, x4, x1, x2)

inst_25123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8800fff; valaddr_reg:x3; val_offset:75369*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75369*0 + 3*547*FLEN/8, x4, x1, x2)

inst_25124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8801fff; valaddr_reg:x3; val_offset:75372*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75372*0 + 3*548*FLEN/8, x4, x1, x2)

inst_25125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8803fff; valaddr_reg:x3; val_offset:75375*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75375*0 + 3*549*FLEN/8, x4, x1, x2)

inst_25126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8807fff; valaddr_reg:x3; val_offset:75378*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75378*0 + 3*550*FLEN/8, x4, x1, x2)

inst_25127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe880ffff; valaddr_reg:x3; val_offset:75381*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75381*0 + 3*551*FLEN/8, x4, x1, x2)

inst_25128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe881ffff; valaddr_reg:x3; val_offset:75384*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75384*0 + 3*552*FLEN/8, x4, x1, x2)

inst_25129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe883ffff; valaddr_reg:x3; val_offset:75387*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75387*0 + 3*553*FLEN/8, x4, x1, x2)

inst_25130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe887ffff; valaddr_reg:x3; val_offset:75390*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75390*0 + 3*554*FLEN/8, x4, x1, x2)

inst_25131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe88fffff; valaddr_reg:x3; val_offset:75393*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75393*0 + 3*555*FLEN/8, x4, x1, x2)

inst_25132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe89fffff; valaddr_reg:x3; val_offset:75396*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75396*0 + 3*556*FLEN/8, x4, x1, x2)

inst_25133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8bfffff; valaddr_reg:x3; val_offset:75399*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75399*0 + 3*557*FLEN/8, x4, x1, x2)

inst_25134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8c00000; valaddr_reg:x3; val_offset:75402*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75402*0 + 3*558*FLEN/8, x4, x1, x2)

inst_25135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8e00000; valaddr_reg:x3; val_offset:75405*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75405*0 + 3*559*FLEN/8, x4, x1, x2)

inst_25136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8f00000; valaddr_reg:x3; val_offset:75408*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75408*0 + 3*560*FLEN/8, x4, x1, x2)

inst_25137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8f80000; valaddr_reg:x3; val_offset:75411*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75411*0 + 3*561*FLEN/8, x4, x1, x2)

inst_25138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fc0000; valaddr_reg:x3; val_offset:75414*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75414*0 + 3*562*FLEN/8, x4, x1, x2)

inst_25139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fe0000; valaddr_reg:x3; val_offset:75417*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75417*0 + 3*563*FLEN/8, x4, x1, x2)

inst_25140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8ff0000; valaddr_reg:x3; val_offset:75420*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75420*0 + 3*564*FLEN/8, x4, x1, x2)

inst_25141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8ff8000; valaddr_reg:x3; val_offset:75423*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75423*0 + 3*565*FLEN/8, x4, x1, x2)

inst_25142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8ffc000; valaddr_reg:x3; val_offset:75426*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75426*0 + 3*566*FLEN/8, x4, x1, x2)

inst_25143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8ffe000; valaddr_reg:x3; val_offset:75429*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75429*0 + 3*567*FLEN/8, x4, x1, x2)

inst_25144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fff000; valaddr_reg:x3; val_offset:75432*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75432*0 + 3*568*FLEN/8, x4, x1, x2)

inst_25145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fff800; valaddr_reg:x3; val_offset:75435*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75435*0 + 3*569*FLEN/8, x4, x1, x2)

inst_25146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fffc00; valaddr_reg:x3; val_offset:75438*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75438*0 + 3*570*FLEN/8, x4, x1, x2)

inst_25147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fffe00; valaddr_reg:x3; val_offset:75441*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75441*0 + 3*571*FLEN/8, x4, x1, x2)

inst_25148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8ffff00; valaddr_reg:x3; val_offset:75444*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75444*0 + 3*572*FLEN/8, x4, x1, x2)

inst_25149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8ffff80; valaddr_reg:x3; val_offset:75447*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75447*0 + 3*573*FLEN/8, x4, x1, x2)

inst_25150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8ffffc0; valaddr_reg:x3; val_offset:75450*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75450*0 + 3*574*FLEN/8, x4, x1, x2)

inst_25151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8ffffe0; valaddr_reg:x3; val_offset:75453*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75453*0 + 3*575*FLEN/8, x4, x1, x2)

inst_25152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fffff0; valaddr_reg:x3; val_offset:75456*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75456*0 + 3*576*FLEN/8, x4, x1, x2)

inst_25153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fffff8; valaddr_reg:x3; val_offset:75459*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75459*0 + 3*577*FLEN/8, x4, x1, x2)

inst_25154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fffffc; valaddr_reg:x3; val_offset:75462*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75462*0 + 3*578*FLEN/8, x4, x1, x2)

inst_25155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8fffffe; valaddr_reg:x3; val_offset:75465*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75465*0 + 3*579*FLEN/8, x4, x1, x2)

inst_25156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xd1 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xe8ffffff; valaddr_reg:x3; val_offset:75468*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75468*0 + 3*580*FLEN/8, x4, x1, x2)

inst_25157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff000001; valaddr_reg:x3; val_offset:75471*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75471*0 + 3*581*FLEN/8, x4, x1, x2)

inst_25158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff000003; valaddr_reg:x3; val_offset:75474*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75474*0 + 3*582*FLEN/8, x4, x1, x2)

inst_25159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff000007; valaddr_reg:x3; val_offset:75477*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75477*0 + 3*583*FLEN/8, x4, x1, x2)

inst_25160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff199999; valaddr_reg:x3; val_offset:75480*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75480*0 + 3*584*FLEN/8, x4, x1, x2)

inst_25161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff249249; valaddr_reg:x3; val_offset:75483*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75483*0 + 3*585*FLEN/8, x4, x1, x2)

inst_25162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff333333; valaddr_reg:x3; val_offset:75486*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75486*0 + 3*586*FLEN/8, x4, x1, x2)

inst_25163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:75489*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75489*0 + 3*587*FLEN/8, x4, x1, x2)

inst_25164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:75492*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75492*0 + 3*588*FLEN/8, x4, x1, x2)

inst_25165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff444444; valaddr_reg:x3; val_offset:75495*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75495*0 + 3*589*FLEN/8, x4, x1, x2)

inst_25166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:75498*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75498*0 + 3*590*FLEN/8, x4, x1, x2)

inst_25167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:75501*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75501*0 + 3*591*FLEN/8, x4, x1, x2)

inst_25168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff666666; valaddr_reg:x3; val_offset:75504*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75504*0 + 3*592*FLEN/8, x4, x1, x2)

inst_25169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:75507*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75507*0 + 3*593*FLEN/8, x4, x1, x2)

inst_25170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:75510*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75510*0 + 3*594*FLEN/8, x4, x1, x2)

inst_25171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:75513*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75513*0 + 3*595*FLEN/8, x4, x1, x2)

inst_25172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x794f1c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x036f6d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef94f1c; op2val:0xc0036f6d;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:75516*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75516*0 + 3*596*FLEN/8, x4, x1, x2)

inst_25173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3f800001; valaddr_reg:x3; val_offset:75519*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75519*0 + 3*597*FLEN/8, x4, x1, x2)

inst_25174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3f800003; valaddr_reg:x3; val_offset:75522*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75522*0 + 3*598*FLEN/8, x4, x1, x2)

inst_25175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3f800007; valaddr_reg:x3; val_offset:75525*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75525*0 + 3*599*FLEN/8, x4, x1, x2)

inst_25176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3f999999; valaddr_reg:x3; val_offset:75528*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75528*0 + 3*600*FLEN/8, x4, x1, x2)

inst_25177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:75531*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75531*0 + 3*601*FLEN/8, x4, x1, x2)

inst_25178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:75534*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75534*0 + 3*602*FLEN/8, x4, x1, x2)

inst_25179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:75537*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75537*0 + 3*603*FLEN/8, x4, x1, x2)

inst_25180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:75540*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75540*0 + 3*604*FLEN/8, x4, x1, x2)

inst_25181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:75543*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75543*0 + 3*605*FLEN/8, x4, x1, x2)

inst_25182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:75546*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75546*0 + 3*606*FLEN/8, x4, x1, x2)

inst_25183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:75549*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75549*0 + 3*607*FLEN/8, x4, x1, x2)

inst_25184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:75552*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75552*0 + 3*608*FLEN/8, x4, x1, x2)

inst_25185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:75555*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75555*0 + 3*609*FLEN/8, x4, x1, x2)

inst_25186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:75558*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75558*0 + 3*610*FLEN/8, x4, x1, x2)

inst_25187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:75561*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75561*0 + 3*611*FLEN/8, x4, x1, x2)

inst_25188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:75564*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75564*0 + 3*612*FLEN/8, x4, x1, x2)

inst_25189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49800000; valaddr_reg:x3; val_offset:75567*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75567*0 + 3*613*FLEN/8, x4, x1, x2)

inst_25190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49800001; valaddr_reg:x3; val_offset:75570*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75570*0 + 3*614*FLEN/8, x4, x1, x2)

inst_25191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49800003; valaddr_reg:x3; val_offset:75573*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75573*0 + 3*615*FLEN/8, x4, x1, x2)

inst_25192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49800007; valaddr_reg:x3; val_offset:75576*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75576*0 + 3*616*FLEN/8, x4, x1, x2)

inst_25193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x4980000f; valaddr_reg:x3; val_offset:75579*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75579*0 + 3*617*FLEN/8, x4, x1, x2)

inst_25194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x4980001f; valaddr_reg:x3; val_offset:75582*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75582*0 + 3*618*FLEN/8, x4, x1, x2)

inst_25195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x4980003f; valaddr_reg:x3; val_offset:75585*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75585*0 + 3*619*FLEN/8, x4, x1, x2)

inst_25196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x4980007f; valaddr_reg:x3; val_offset:75588*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75588*0 + 3*620*FLEN/8, x4, x1, x2)

inst_25197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x498000ff; valaddr_reg:x3; val_offset:75591*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75591*0 + 3*621*FLEN/8, x4, x1, x2)

inst_25198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x498001ff; valaddr_reg:x3; val_offset:75594*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75594*0 + 3*622*FLEN/8, x4, x1, x2)

inst_25199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x498003ff; valaddr_reg:x3; val_offset:75597*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75597*0 + 3*623*FLEN/8, x4, x1, x2)

inst_25200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x498007ff; valaddr_reg:x3; val_offset:75600*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75600*0 + 3*624*FLEN/8, x4, x1, x2)

inst_25201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49800fff; valaddr_reg:x3; val_offset:75603*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75603*0 + 3*625*FLEN/8, x4, x1, x2)

inst_25202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49801fff; valaddr_reg:x3; val_offset:75606*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75606*0 + 3*626*FLEN/8, x4, x1, x2)

inst_25203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49803fff; valaddr_reg:x3; val_offset:75609*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75609*0 + 3*627*FLEN/8, x4, x1, x2)

inst_25204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49807fff; valaddr_reg:x3; val_offset:75612*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75612*0 + 3*628*FLEN/8, x4, x1, x2)

inst_25205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x4980ffff; valaddr_reg:x3; val_offset:75615*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75615*0 + 3*629*FLEN/8, x4, x1, x2)

inst_25206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x4981ffff; valaddr_reg:x3; val_offset:75618*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75618*0 + 3*630*FLEN/8, x4, x1, x2)

inst_25207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x4983ffff; valaddr_reg:x3; val_offset:75621*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75621*0 + 3*631*FLEN/8, x4, x1, x2)

inst_25208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x4987ffff; valaddr_reg:x3; val_offset:75624*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75624*0 + 3*632*FLEN/8, x4, x1, x2)

inst_25209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x498fffff; valaddr_reg:x3; val_offset:75627*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75627*0 + 3*633*FLEN/8, x4, x1, x2)

inst_25210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x499fffff; valaddr_reg:x3; val_offset:75630*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75630*0 + 3*634*FLEN/8, x4, x1, x2)

inst_25211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49bfffff; valaddr_reg:x3; val_offset:75633*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75633*0 + 3*635*FLEN/8, x4, x1, x2)

inst_25212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49c00000; valaddr_reg:x3; val_offset:75636*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75636*0 + 3*636*FLEN/8, x4, x1, x2)

inst_25213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49e00000; valaddr_reg:x3; val_offset:75639*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75639*0 + 3*637*FLEN/8, x4, x1, x2)

inst_25214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49f00000; valaddr_reg:x3; val_offset:75642*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75642*0 + 3*638*FLEN/8, x4, x1, x2)

inst_25215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49f80000; valaddr_reg:x3; val_offset:75645*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75645*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_25216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fc0000; valaddr_reg:x3; val_offset:75648*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75648*0 + 3*640*FLEN/8, x4, x1, x2)

inst_25217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fe0000; valaddr_reg:x3; val_offset:75651*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75651*0 + 3*641*FLEN/8, x4, x1, x2)

inst_25218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49ff0000; valaddr_reg:x3; val_offset:75654*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75654*0 + 3*642*FLEN/8, x4, x1, x2)

inst_25219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49ff8000; valaddr_reg:x3; val_offset:75657*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75657*0 + 3*643*FLEN/8, x4, x1, x2)

inst_25220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49ffc000; valaddr_reg:x3; val_offset:75660*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75660*0 + 3*644*FLEN/8, x4, x1, x2)

inst_25221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49ffe000; valaddr_reg:x3; val_offset:75663*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75663*0 + 3*645*FLEN/8, x4, x1, x2)

inst_25222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fff000; valaddr_reg:x3; val_offset:75666*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75666*0 + 3*646*FLEN/8, x4, x1, x2)

inst_25223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fff800; valaddr_reg:x3; val_offset:75669*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75669*0 + 3*647*FLEN/8, x4, x1, x2)

inst_25224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fffc00; valaddr_reg:x3; val_offset:75672*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75672*0 + 3*648*FLEN/8, x4, x1, x2)

inst_25225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fffe00; valaddr_reg:x3; val_offset:75675*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75675*0 + 3*649*FLEN/8, x4, x1, x2)

inst_25226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49ffff00; valaddr_reg:x3; val_offset:75678*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75678*0 + 3*650*FLEN/8, x4, x1, x2)

inst_25227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49ffff80; valaddr_reg:x3; val_offset:75681*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75681*0 + 3*651*FLEN/8, x4, x1, x2)

inst_25228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49ffffc0; valaddr_reg:x3; val_offset:75684*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75684*0 + 3*652*FLEN/8, x4, x1, x2)

inst_25229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49ffffe0; valaddr_reg:x3; val_offset:75687*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75687*0 + 3*653*FLEN/8, x4, x1, x2)

inst_25230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fffff0; valaddr_reg:x3; val_offset:75690*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75690*0 + 3*654*FLEN/8, x4, x1, x2)

inst_25231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fffff8; valaddr_reg:x3; val_offset:75693*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75693*0 + 3*655*FLEN/8, x4, x1, x2)

inst_25232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fffffc; valaddr_reg:x3; val_offset:75696*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75696*0 + 3*656*FLEN/8, x4, x1, x2)

inst_25233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49fffffe; valaddr_reg:x3; val_offset:75699*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75699*0 + 3*657*FLEN/8, x4, x1, x2)

inst_25234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x419e19 and fs3 == 0 and fe3 == 0x93 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9b070; op2val:0x419e19;
op3val:0x49ffffff; valaddr_reg:x3; val_offset:75702*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75702*0 + 3*658*FLEN/8, x4, x1, x2)

inst_25235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:75705*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75705*0 + 3*659*FLEN/8, x4, x1, x2)

inst_25236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:75708*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75708*0 + 3*660*FLEN/8, x4, x1, x2)

inst_25237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:75711*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75711*0 + 3*661*FLEN/8, x4, x1, x2)

inst_25238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:75714*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75714*0 + 3*662*FLEN/8, x4, x1, x2)

inst_25239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:75717*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75717*0 + 3*663*FLEN/8, x4, x1, x2)

inst_25240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:75720*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75720*0 + 3*664*FLEN/8, x4, x1, x2)

inst_25241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:75723*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75723*0 + 3*665*FLEN/8, x4, x1, x2)

inst_25242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:75726*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75726*0 + 3*666*FLEN/8, x4, x1, x2)

inst_25243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:75729*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75729*0 + 3*667*FLEN/8, x4, x1, x2)

inst_25244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:75732*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75732*0 + 3*668*FLEN/8, x4, x1, x2)

inst_25245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:75735*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75735*0 + 3*669*FLEN/8, x4, x1, x2)

inst_25246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:75738*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75738*0 + 3*670*FLEN/8, x4, x1, x2)

inst_25247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:75741*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75741*0 + 3*671*FLEN/8, x4, x1, x2)

inst_25248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:75744*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75744*0 + 3*672*FLEN/8, x4, x1, x2)

inst_25249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:75747*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75747*0 + 3*673*FLEN/8, x4, x1, x2)

inst_25250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:75750*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75750*0 + 3*674*FLEN/8, x4, x1, x2)

inst_25251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84000000; valaddr_reg:x3; val_offset:75753*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75753*0 + 3*675*FLEN/8, x4, x1, x2)

inst_25252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84000001; valaddr_reg:x3; val_offset:75756*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75756*0 + 3*676*FLEN/8, x4, x1, x2)

inst_25253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84000003; valaddr_reg:x3; val_offset:75759*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75759*0 + 3*677*FLEN/8, x4, x1, x2)

inst_25254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84000007; valaddr_reg:x3; val_offset:75762*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75762*0 + 3*678*FLEN/8, x4, x1, x2)

inst_25255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x8400000f; valaddr_reg:x3; val_offset:75765*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75765*0 + 3*679*FLEN/8, x4, x1, x2)

inst_25256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x8400001f; valaddr_reg:x3; val_offset:75768*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75768*0 + 3*680*FLEN/8, x4, x1, x2)

inst_25257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x8400003f; valaddr_reg:x3; val_offset:75771*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75771*0 + 3*681*FLEN/8, x4, x1, x2)

inst_25258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x8400007f; valaddr_reg:x3; val_offset:75774*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75774*0 + 3*682*FLEN/8, x4, x1, x2)

inst_25259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x840000ff; valaddr_reg:x3; val_offset:75777*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75777*0 + 3*683*FLEN/8, x4, x1, x2)

inst_25260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x840001ff; valaddr_reg:x3; val_offset:75780*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75780*0 + 3*684*FLEN/8, x4, x1, x2)

inst_25261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x840003ff; valaddr_reg:x3; val_offset:75783*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75783*0 + 3*685*FLEN/8, x4, x1, x2)

inst_25262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x840007ff; valaddr_reg:x3; val_offset:75786*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75786*0 + 3*686*FLEN/8, x4, x1, x2)

inst_25263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84000fff; valaddr_reg:x3; val_offset:75789*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75789*0 + 3*687*FLEN/8, x4, x1, x2)

inst_25264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84001fff; valaddr_reg:x3; val_offset:75792*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75792*0 + 3*688*FLEN/8, x4, x1, x2)

inst_25265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84003fff; valaddr_reg:x3; val_offset:75795*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75795*0 + 3*689*FLEN/8, x4, x1, x2)

inst_25266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84007fff; valaddr_reg:x3; val_offset:75798*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75798*0 + 3*690*FLEN/8, x4, x1, x2)

inst_25267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x8400ffff; valaddr_reg:x3; val_offset:75801*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75801*0 + 3*691*FLEN/8, x4, x1, x2)

inst_25268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x8401ffff; valaddr_reg:x3; val_offset:75804*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75804*0 + 3*692*FLEN/8, x4, x1, x2)

inst_25269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x8403ffff; valaddr_reg:x3; val_offset:75807*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75807*0 + 3*693*FLEN/8, x4, x1, x2)

inst_25270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x8407ffff; valaddr_reg:x3; val_offset:75810*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75810*0 + 3*694*FLEN/8, x4, x1, x2)

inst_25271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x840fffff; valaddr_reg:x3; val_offset:75813*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75813*0 + 3*695*FLEN/8, x4, x1, x2)

inst_25272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x841fffff; valaddr_reg:x3; val_offset:75816*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75816*0 + 3*696*FLEN/8, x4, x1, x2)

inst_25273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x843fffff; valaddr_reg:x3; val_offset:75819*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75819*0 + 3*697*FLEN/8, x4, x1, x2)

inst_25274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84400000; valaddr_reg:x3; val_offset:75822*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75822*0 + 3*698*FLEN/8, x4, x1, x2)

inst_25275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84600000; valaddr_reg:x3; val_offset:75825*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75825*0 + 3*699*FLEN/8, x4, x1, x2)

inst_25276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84700000; valaddr_reg:x3; val_offset:75828*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75828*0 + 3*700*FLEN/8, x4, x1, x2)

inst_25277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x84780000; valaddr_reg:x3; val_offset:75831*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75831*0 + 3*701*FLEN/8, x4, x1, x2)

inst_25278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847c0000; valaddr_reg:x3; val_offset:75834*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75834*0 + 3*702*FLEN/8, x4, x1, x2)

inst_25279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847e0000; valaddr_reg:x3; val_offset:75837*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75837*0 + 3*703*FLEN/8, x4, x1, x2)

inst_25280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847f0000; valaddr_reg:x3; val_offset:75840*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75840*0 + 3*704*FLEN/8, x4, x1, x2)

inst_25281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847f8000; valaddr_reg:x3; val_offset:75843*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75843*0 + 3*705*FLEN/8, x4, x1, x2)

inst_25282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847fc000; valaddr_reg:x3; val_offset:75846*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75846*0 + 3*706*FLEN/8, x4, x1, x2)

inst_25283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847fe000; valaddr_reg:x3; val_offset:75849*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75849*0 + 3*707*FLEN/8, x4, x1, x2)

inst_25284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847ff000; valaddr_reg:x3; val_offset:75852*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75852*0 + 3*708*FLEN/8, x4, x1, x2)

inst_25285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847ff800; valaddr_reg:x3; val_offset:75855*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75855*0 + 3*709*FLEN/8, x4, x1, x2)

inst_25286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847ffc00; valaddr_reg:x3; val_offset:75858*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75858*0 + 3*710*FLEN/8, x4, x1, x2)

inst_25287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847ffe00; valaddr_reg:x3; val_offset:75861*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75861*0 + 3*711*FLEN/8, x4, x1, x2)

inst_25288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847fff00; valaddr_reg:x3; val_offset:75864*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75864*0 + 3*712*FLEN/8, x4, x1, x2)

inst_25289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847fff80; valaddr_reg:x3; val_offset:75867*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75867*0 + 3*713*FLEN/8, x4, x1, x2)

inst_25290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847fffc0; valaddr_reg:x3; val_offset:75870*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75870*0 + 3*714*FLEN/8, x4, x1, x2)

inst_25291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847fffe0; valaddr_reg:x3; val_offset:75873*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75873*0 + 3*715*FLEN/8, x4, x1, x2)

inst_25292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847ffff0; valaddr_reg:x3; val_offset:75876*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75876*0 + 3*716*FLEN/8, x4, x1, x2)

inst_25293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847ffff8; valaddr_reg:x3; val_offset:75879*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75879*0 + 3*717*FLEN/8, x4, x1, x2)

inst_25294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847ffffc; valaddr_reg:x3; val_offset:75882*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75882*0 + 3*718*FLEN/8, x4, x1, x2)

inst_25295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847ffffe; valaddr_reg:x3; val_offset:75885*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75885*0 + 3*719*FLEN/8, x4, x1, x2)

inst_25296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba99e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efba99e; op2val:0x80000000;
op3val:0x847fffff; valaddr_reg:x3; val_offset:75888*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75888*0 + 3*720*FLEN/8, x4, x1, x2)

inst_25297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79000000; valaddr_reg:x3; val_offset:75891*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75891*0 + 3*721*FLEN/8, x4, x1, x2)

inst_25298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79000001; valaddr_reg:x3; val_offset:75894*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75894*0 + 3*722*FLEN/8, x4, x1, x2)

inst_25299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79000003; valaddr_reg:x3; val_offset:75897*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75897*0 + 3*723*FLEN/8, x4, x1, x2)

inst_25300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79000007; valaddr_reg:x3; val_offset:75900*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75900*0 + 3*724*FLEN/8, x4, x1, x2)

inst_25301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x7900000f; valaddr_reg:x3; val_offset:75903*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75903*0 + 3*725*FLEN/8, x4, x1, x2)

inst_25302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x7900001f; valaddr_reg:x3; val_offset:75906*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75906*0 + 3*726*FLEN/8, x4, x1, x2)

inst_25303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x7900003f; valaddr_reg:x3; val_offset:75909*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75909*0 + 3*727*FLEN/8, x4, x1, x2)

inst_25304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x7900007f; valaddr_reg:x3; val_offset:75912*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75912*0 + 3*728*FLEN/8, x4, x1, x2)

inst_25305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x790000ff; valaddr_reg:x3; val_offset:75915*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75915*0 + 3*729*FLEN/8, x4, x1, x2)

inst_25306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x790001ff; valaddr_reg:x3; val_offset:75918*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75918*0 + 3*730*FLEN/8, x4, x1, x2)

inst_25307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x790003ff; valaddr_reg:x3; val_offset:75921*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75921*0 + 3*731*FLEN/8, x4, x1, x2)

inst_25308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x790007ff; valaddr_reg:x3; val_offset:75924*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75924*0 + 3*732*FLEN/8, x4, x1, x2)

inst_25309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79000fff; valaddr_reg:x3; val_offset:75927*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75927*0 + 3*733*FLEN/8, x4, x1, x2)

inst_25310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79001fff; valaddr_reg:x3; val_offset:75930*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75930*0 + 3*734*FLEN/8, x4, x1, x2)

inst_25311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79003fff; valaddr_reg:x3; val_offset:75933*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75933*0 + 3*735*FLEN/8, x4, x1, x2)

inst_25312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79007fff; valaddr_reg:x3; val_offset:75936*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75936*0 + 3*736*FLEN/8, x4, x1, x2)

inst_25313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x7900ffff; valaddr_reg:x3; val_offset:75939*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75939*0 + 3*737*FLEN/8, x4, x1, x2)

inst_25314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x7901ffff; valaddr_reg:x3; val_offset:75942*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75942*0 + 3*738*FLEN/8, x4, x1, x2)

inst_25315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x7903ffff; valaddr_reg:x3; val_offset:75945*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75945*0 + 3*739*FLEN/8, x4, x1, x2)

inst_25316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x7907ffff; valaddr_reg:x3; val_offset:75948*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75948*0 + 3*740*FLEN/8, x4, x1, x2)

inst_25317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x790fffff; valaddr_reg:x3; val_offset:75951*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75951*0 + 3*741*FLEN/8, x4, x1, x2)

inst_25318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x791fffff; valaddr_reg:x3; val_offset:75954*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75954*0 + 3*742*FLEN/8, x4, x1, x2)

inst_25319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x793fffff; valaddr_reg:x3; val_offset:75957*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75957*0 + 3*743*FLEN/8, x4, x1, x2)

inst_25320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79400000; valaddr_reg:x3; val_offset:75960*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75960*0 + 3*744*FLEN/8, x4, x1, x2)

inst_25321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79600000; valaddr_reg:x3; val_offset:75963*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75963*0 + 3*745*FLEN/8, x4, x1, x2)

inst_25322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79700000; valaddr_reg:x3; val_offset:75966*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75966*0 + 3*746*FLEN/8, x4, x1, x2)

inst_25323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x79780000; valaddr_reg:x3; val_offset:75969*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75969*0 + 3*747*FLEN/8, x4, x1, x2)

inst_25324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797c0000; valaddr_reg:x3; val_offset:75972*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75972*0 + 3*748*FLEN/8, x4, x1, x2)

inst_25325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797e0000; valaddr_reg:x3; val_offset:75975*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75975*0 + 3*749*FLEN/8, x4, x1, x2)

inst_25326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797f0000; valaddr_reg:x3; val_offset:75978*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75978*0 + 3*750*FLEN/8, x4, x1, x2)

inst_25327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797f8000; valaddr_reg:x3; val_offset:75981*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75981*0 + 3*751*FLEN/8, x4, x1, x2)

inst_25328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797fc000; valaddr_reg:x3; val_offset:75984*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75984*0 + 3*752*FLEN/8, x4, x1, x2)

inst_25329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797fe000; valaddr_reg:x3; val_offset:75987*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75987*0 + 3*753*FLEN/8, x4, x1, x2)

inst_25330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797ff000; valaddr_reg:x3; val_offset:75990*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75990*0 + 3*754*FLEN/8, x4, x1, x2)

inst_25331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797ff800; valaddr_reg:x3; val_offset:75993*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75993*0 + 3*755*FLEN/8, x4, x1, x2)

inst_25332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797ffc00; valaddr_reg:x3; val_offset:75996*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75996*0 + 3*756*FLEN/8, x4, x1, x2)

inst_25333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797ffe00; valaddr_reg:x3; val_offset:75999*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 75999*0 + 3*757*FLEN/8, x4, x1, x2)

inst_25334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797fff00; valaddr_reg:x3; val_offset:76002*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76002*0 + 3*758*FLEN/8, x4, x1, x2)

inst_25335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797fff80; valaddr_reg:x3; val_offset:76005*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76005*0 + 3*759*FLEN/8, x4, x1, x2)

inst_25336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797fffc0; valaddr_reg:x3; val_offset:76008*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76008*0 + 3*760*FLEN/8, x4, x1, x2)

inst_25337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797fffe0; valaddr_reg:x3; val_offset:76011*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76011*0 + 3*761*FLEN/8, x4, x1, x2)

inst_25338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797ffff0; valaddr_reg:x3; val_offset:76014*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76014*0 + 3*762*FLEN/8, x4, x1, x2)

inst_25339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797ffff8; valaddr_reg:x3; val_offset:76017*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76017*0 + 3*763*FLEN/8, x4, x1, x2)

inst_25340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797ffffc; valaddr_reg:x3; val_offset:76020*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76020*0 + 3*764*FLEN/8, x4, x1, x2)

inst_25341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797ffffe; valaddr_reg:x3; val_offset:76023*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76023*0 + 3*765*FLEN/8, x4, x1, x2)

inst_25342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xf2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x797fffff; valaddr_reg:x3; val_offset:76026*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76026*0 + 3*766*FLEN/8, x4, x1, x2)

inst_25343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c7bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01c84b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efc7bf1; op2val:0x4001c84b;
op3val:0x7f000001; valaddr_reg:x3; val_offset:76029*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 76029*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426815,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426943,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427199,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427711,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189428735,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189430783,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189434879,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189443071,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189459455,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189492223,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189557759,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189688831,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189950975,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2190475263,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2191523839,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620991,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620992,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2195718144,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2196766720,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197291008,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197553152,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197684224,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197749760,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197782528,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197798912,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197807104,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197811200,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197813248,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814272,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814784,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815040,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815168,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815232,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815264,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815280,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815288,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815292,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815294,32,FLEN)
NAN_BOXED(2129805942,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815295,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192448,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192449,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192451,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192455,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192463,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192479,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192511,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192575,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192703,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889192959,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889193471,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889194495,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889196543,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889200639,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889208831,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889225215,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889257983,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889323519,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889454591,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(889716735,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(890241023,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(891289599,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(893386751,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(893386752,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(895483904,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(896532480,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897056768,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897318912,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897449984,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897515520,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897548288,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897564672,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897572864,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897576960,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897579008,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897580032,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897580544,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897580800,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897580928,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897580992,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897581024,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897581040,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897581048,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897581052,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897581054,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(897581055,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2129838559,32,FLEN)
NAN_BOXED(4423107,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912602624,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912602625,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912602627,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912602631,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912602639,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912602655,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912602687,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912602751,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912602879,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912603135,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912603647,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912604671,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912606719,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912610815,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912619007,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912635391,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912668159,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912733695,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1912864767,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1913126911,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1913651199,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1914699775,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1916796927,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1916796928,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1918894080,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1919942656,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920466944,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920729088,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920860160,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920925696,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920958464,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920974848,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920983040,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920987136,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920989184,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920990208,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920990720,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920990976,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920991104,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920991168,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920991200,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920991216,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920991224,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920991228,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920991230,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(1920991231,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2129885353,32,FLEN)
NAN_BOXED(1074173488,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333788672,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333788673,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333788675,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333788679,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333788687,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333788703,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333788735,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333788799,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333788927,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333789183,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333789695,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333790719,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333792767,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333796863,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333805055,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333821439,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333854207,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1333919743,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1334050815,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1334312959,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1334837247,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1335885823,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1337982975,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1337982976,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1340080128,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1341128704,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1341652992,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1341915136,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342046208,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342111744,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342144512,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342160896,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342169088,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342173184,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342175232,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342176256,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342176768,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342177024,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342177152,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342177216,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342177248,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342177264,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342177272,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342177276,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342177278,32,FLEN)
NAN_BOXED(2130084095,32,FLEN)
NAN_BOXED(4355881,32,FLEN)
NAN_BOXED(1342177279,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738197504,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738197505,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738197507,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738197511,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738197519,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738197535,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738197567,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738197631,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738197759,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738198015,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738198527,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738199551,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738201599,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738205695,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738213887,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738230271,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738263039,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738328575,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738459647,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(738721791,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(739246079,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(740294655,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(742391807,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(742391808,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(744488960,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(745537536,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746061824,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746323968,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746455040,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746520576,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746553344,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746569728,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746577920,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746582016,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746584064,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746585088,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746585600,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746585856,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746585984,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746586048,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746586080,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746586096,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746586104,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746586108,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746586110,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(746586111,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130133205,32,FLEN)
NAN_BOXED(4342680,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497472,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497473,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497475,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497479,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497487,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497503,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497535,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497599,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497727,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75497983,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75498495,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75499519,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75501567,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75505663,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75513855,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75530239,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75563007,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75628543,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(75759615,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(76021759,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(76546047,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(77594623,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(79691775,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(79691776,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(81788928,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(82837504,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83361792,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83623936,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83755008,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83820544,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83853312,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83869696,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83877888,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83881984,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83884032,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885056,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885568,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885824,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83885952,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886016,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886048,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886064,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886072,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886076,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886078,32,FLEN)
NAN_BOXED(2130143643,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886079,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038080,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038081,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038083,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038087,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038095,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038111,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038143,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038207,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038335,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038591,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181039103,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181040127,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181042175,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181046271,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181054463,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181070847,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181103615,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181169151,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181300223,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181562367,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2182086655,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2183135231,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232383,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232384,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2187329536,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188378112,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188902400,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189164544,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189295616,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189361152,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189393920,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189410304,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189418496,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189422592,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189424640,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189425664,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426176,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426432,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426560,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426624,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426656,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426672,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426680,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426684,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426686,32,FLEN)
NAN_BOXED(2130177977,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426687,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338665984,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338665985,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338665987,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338665991,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338665999,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338666015,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338666047,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338666111,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338666239,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338666495,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338667007,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338668031,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338670079,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338674175,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338682367,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338698751,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338731519,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338797055,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3338928127,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3339190271,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3339714559,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3340763135,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3342860287,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3342860288,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3344957440,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3346006016,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3346530304,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3346792448,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3346923520,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3346989056,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347021824,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347038208,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347046400,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347050496,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347052544,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347053568,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054080,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054336,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054464,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054528,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054560,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054576,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054584,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054588,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054590,32,FLEN)
NAN_BOXED(2130209329,32,FLEN)
NAN_BOXED(2151806022,32,FLEN)
NAN_BOXED(3347054591,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701376,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701377,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701379,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701383,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701391,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701407,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701439,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701503,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701631,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701887,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281702399,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281703423,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281705471,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281709567,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281717759,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281734143,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281766911,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281832447,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281963519,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2282225663,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2282749951,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2283798527,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2285895679,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2285895680,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2287992832,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289041408,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289565696,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289827840,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2289958912,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290024448,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290057216,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290073600,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290081792,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290085888,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290087936,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290088960,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089472,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089728,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089856,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089920,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089952,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089968,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089976,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089980,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089982,32,FLEN)
NAN_BOXED(2130223754,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2290089983,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900702720,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900702721,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900702723,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900702727,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900702735,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900702751,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900702783,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900702847,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900702975,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900703231,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900703743,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900704767,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900706815,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900710911,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900719103,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900735487,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900768255,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900833791,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3900964863,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3901227007,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3901751295,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3902799871,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3904897023,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3904897024,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3906994176,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3908042752,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3908567040,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3908829184,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3908960256,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909025792,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909058560,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909074944,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909083136,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909087232,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909089280,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909090304,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909090816,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909091072,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909091200,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909091264,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909091296,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909091312,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909091320,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909091324,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909091326,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(3909091327,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2130267932,32,FLEN)
NAN_BOXED(3221450605,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125376,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125377,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125379,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125383,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125391,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125407,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125439,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125503,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125631,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233125887,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233126399,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233127423,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233129471,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233133567,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233141759,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233158143,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233190911,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233256447,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233387519,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1233649663,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1234173951,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1235222527,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1237319679,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1237319680,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1239416832,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1240465408,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1240989696,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241251840,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241382912,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241448448,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241481216,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241497600,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241505792,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241509888,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241511936,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241512960,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513472,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513728,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513856,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513920,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513952,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513968,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513976,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513980,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513982,32,FLEN)
NAN_BOXED(2130292848,32,FLEN)
NAN_BOXED(4300313,32,FLEN)
NAN_BOXED(1241513983,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592512,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592513,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592515,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592519,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592527,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592543,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592575,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592639,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592767,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214593023,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214593535,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214594559,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214596607,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214600703,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214608895,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214625279,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214658047,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214723583,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214854655,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2215116799,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2215641087,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2216689663,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2218786815,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2218786816,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2220883968,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2221932544,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222456832,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222718976,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222850048,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222915584,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222948352,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222964736,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222972928,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222977024,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222979072,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980096,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980608,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980864,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980992,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981056,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981088,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981104,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981112,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981116,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981118,32,FLEN)
NAN_BOXED(2130422174,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981119,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043136,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043137,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043139,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043143,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043151,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043167,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043199,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043263,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043391,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030043647,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030044159,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030045183,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030047231,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030051327,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030059519,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030075903,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030108671,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030174207,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030305279,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2030567423,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2031091711,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2032140287,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2034237439,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2034237440,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2036334592,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2037383168,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2037907456,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038169600,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038300672,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038366208,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038398976,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038415360,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038423552,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038427648,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038429696,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038430720,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431232,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431488,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431616,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431680,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431712,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431728,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431736,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431740,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431742,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2038431743,32,FLEN)
NAN_BOXED(2130476017,32,FLEN)
NAN_BOXED(1073858635,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
