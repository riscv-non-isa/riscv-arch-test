
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_768:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6e00000; valaddr_reg:x3; val_offset:2304*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2304*0 + 3*0*FLEN/8, x4, x1, x2)

inst_769:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6f00000; valaddr_reg:x3; val_offset:2307*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2307*0 + 3*1*FLEN/8, x4, x1, x2)

inst_770:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6f80000; valaddr_reg:x3; val_offset:2310*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2310*0 + 3*2*FLEN/8, x4, x1, x2)

inst_771:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fc0000; valaddr_reg:x3; val_offset:2313*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2313*0 + 3*3*FLEN/8, x4, x1, x2)

inst_772:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fe0000; valaddr_reg:x3; val_offset:2316*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2316*0 + 3*4*FLEN/8, x4, x1, x2)

inst_773:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6ff0000; valaddr_reg:x3; val_offset:2319*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2319*0 + 3*5*FLEN/8, x4, x1, x2)

inst_774:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6ff8000; valaddr_reg:x3; val_offset:2322*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2322*0 + 3*6*FLEN/8, x4, x1, x2)

inst_775:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6ffc000; valaddr_reg:x3; val_offset:2325*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2325*0 + 3*7*FLEN/8, x4, x1, x2)

inst_776:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6ffe000; valaddr_reg:x3; val_offset:2328*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2328*0 + 3*8*FLEN/8, x4, x1, x2)

inst_777:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fff000; valaddr_reg:x3; val_offset:2331*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2331*0 + 3*9*FLEN/8, x4, x1, x2)

inst_778:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fff800; valaddr_reg:x3; val_offset:2334*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2334*0 + 3*10*FLEN/8, x4, x1, x2)

inst_779:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fffc00; valaddr_reg:x3; val_offset:2337*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2337*0 + 3*11*FLEN/8, x4, x1, x2)

inst_780:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fffe00; valaddr_reg:x3; val_offset:2340*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2340*0 + 3*12*FLEN/8, x4, x1, x2)

inst_781:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6ffff00; valaddr_reg:x3; val_offset:2343*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2343*0 + 3*13*FLEN/8, x4, x1, x2)

inst_782:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6ffff80; valaddr_reg:x3; val_offset:2346*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2346*0 + 3*14*FLEN/8, x4, x1, x2)

inst_783:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6ffffc0; valaddr_reg:x3; val_offset:2349*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2349*0 + 3*15*FLEN/8, x4, x1, x2)

inst_784:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6ffffe0; valaddr_reg:x3; val_offset:2352*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2352*0 + 3*16*FLEN/8, x4, x1, x2)

inst_785:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fffff0; valaddr_reg:x3; val_offset:2355*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2355*0 + 3*17*FLEN/8, x4, x1, x2)

inst_786:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fffff8; valaddr_reg:x3; val_offset:2358*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2358*0 + 3*18*FLEN/8, x4, x1, x2)

inst_787:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fffffc; valaddr_reg:x3; val_offset:2361*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2361*0 + 3*19*FLEN/8, x4, x1, x2)

inst_788:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6fffffe; valaddr_reg:x3; val_offset:2364*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2364*0 + 3*20*FLEN/8, x4, x1, x2)

inst_789:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xed and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xf6ffffff; valaddr_reg:x3; val_offset:2367*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2367*0 + 3*21*FLEN/8, x4, x1, x2)

inst_790:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff000001; valaddr_reg:x3; val_offset:2370*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2370*0 + 3*22*FLEN/8, x4, x1, x2)

inst_791:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff000003; valaddr_reg:x3; val_offset:2373*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2373*0 + 3*23*FLEN/8, x4, x1, x2)

inst_792:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff000007; valaddr_reg:x3; val_offset:2376*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2376*0 + 3*24*FLEN/8, x4, x1, x2)

inst_793:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff199999; valaddr_reg:x3; val_offset:2379*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2379*0 + 3*25*FLEN/8, x4, x1, x2)

inst_794:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff249249; valaddr_reg:x3; val_offset:2382*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2382*0 + 3*26*FLEN/8, x4, x1, x2)

inst_795:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff333333; valaddr_reg:x3; val_offset:2385*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2385*0 + 3*27*FLEN/8, x4, x1, x2)

inst_796:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:2388*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2388*0 + 3*28*FLEN/8, x4, x1, x2)

inst_797:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:2391*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2391*0 + 3*29*FLEN/8, x4, x1, x2)

inst_798:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff444444; valaddr_reg:x3; val_offset:2394*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2394*0 + 3*30*FLEN/8, x4, x1, x2)

inst_799:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:2397*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2397*0 + 3*31*FLEN/8, x4, x1, x2)

inst_800:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:2400*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2400*0 + 3*32*FLEN/8, x4, x1, x2)

inst_801:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff666666; valaddr_reg:x3; val_offset:2403*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2403*0 + 3*33*FLEN/8, x4, x1, x2)

inst_802:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:2406*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2406*0 + 3*34*FLEN/8, x4, x1, x2)

inst_803:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:2409*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2409*0 + 3*35*FLEN/8, x4, x1, x2)

inst_804:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:2412*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2412*0 + 3*36*FLEN/8, x4, x1, x2)

inst_805:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x09cd3c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x6dca7b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c89cd3c; op2val:0xc26dca7b;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:2415*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2415*0 + 3*37*FLEN/8, x4, x1, x2)

inst_806:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:2418*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2418*0 + 3*38*FLEN/8, x4, x1, x2)

inst_807:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:2421*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2421*0 + 3*39*FLEN/8, x4, x1, x2)

inst_808:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:2424*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2424*0 + 3*40*FLEN/8, x4, x1, x2)

inst_809:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:2427*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2427*0 + 3*41*FLEN/8, x4, x1, x2)

inst_810:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:2430*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2430*0 + 3*42*FLEN/8, x4, x1, x2)

inst_811:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:2433*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2433*0 + 3*43*FLEN/8, x4, x1, x2)

inst_812:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:2436*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2436*0 + 3*44*FLEN/8, x4, x1, x2)

inst_813:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:2439*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2439*0 + 3*45*FLEN/8, x4, x1, x2)

inst_814:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:2442*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2442*0 + 3*46*FLEN/8, x4, x1, x2)

inst_815:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:2445*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2445*0 + 3*47*FLEN/8, x4, x1, x2)

inst_816:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:2448*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2448*0 + 3*48*FLEN/8, x4, x1, x2)

inst_817:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:2451*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2451*0 + 3*49*FLEN/8, x4, x1, x2)

inst_818:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:2454*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2454*0 + 3*50*FLEN/8, x4, x1, x2)

inst_819:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:2457*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2457*0 + 3*51*FLEN/8, x4, x1, x2)

inst_820:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:2460*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2460*0 + 3*52*FLEN/8, x4, x1, x2)

inst_821:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:2463*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2463*0 + 3*53*FLEN/8, x4, x1, x2)

inst_822:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9000000; valaddr_reg:x3; val_offset:2466*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2466*0 + 3*54*FLEN/8, x4, x1, x2)

inst_823:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9000001; valaddr_reg:x3; val_offset:2469*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2469*0 + 3*55*FLEN/8, x4, x1, x2)

inst_824:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9000003; valaddr_reg:x3; val_offset:2472*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2472*0 + 3*56*FLEN/8, x4, x1, x2)

inst_825:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9000007; valaddr_reg:x3; val_offset:2475*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2475*0 + 3*57*FLEN/8, x4, x1, x2)

inst_826:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf900000f; valaddr_reg:x3; val_offset:2478*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2478*0 + 3*58*FLEN/8, x4, x1, x2)

inst_827:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf900001f; valaddr_reg:x3; val_offset:2481*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2481*0 + 3*59*FLEN/8, x4, x1, x2)

inst_828:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf900003f; valaddr_reg:x3; val_offset:2484*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2484*0 + 3*60*FLEN/8, x4, x1, x2)

inst_829:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf900007f; valaddr_reg:x3; val_offset:2487*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2487*0 + 3*61*FLEN/8, x4, x1, x2)

inst_830:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf90000ff; valaddr_reg:x3; val_offset:2490*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2490*0 + 3*62*FLEN/8, x4, x1, x2)

inst_831:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf90001ff; valaddr_reg:x3; val_offset:2493*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2493*0 + 3*63*FLEN/8, x4, x1, x2)

inst_832:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf90003ff; valaddr_reg:x3; val_offset:2496*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2496*0 + 3*64*FLEN/8, x4, x1, x2)

inst_833:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf90007ff; valaddr_reg:x3; val_offset:2499*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2499*0 + 3*65*FLEN/8, x4, x1, x2)

inst_834:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9000fff; valaddr_reg:x3; val_offset:2502*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2502*0 + 3*66*FLEN/8, x4, x1, x2)

inst_835:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9001fff; valaddr_reg:x3; val_offset:2505*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2505*0 + 3*67*FLEN/8, x4, x1, x2)

inst_836:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9003fff; valaddr_reg:x3; val_offset:2508*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2508*0 + 3*68*FLEN/8, x4, x1, x2)

inst_837:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9007fff; valaddr_reg:x3; val_offset:2511*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2511*0 + 3*69*FLEN/8, x4, x1, x2)

inst_838:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf900ffff; valaddr_reg:x3; val_offset:2514*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2514*0 + 3*70*FLEN/8, x4, x1, x2)

inst_839:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf901ffff; valaddr_reg:x3; val_offset:2517*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2517*0 + 3*71*FLEN/8, x4, x1, x2)

inst_840:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf903ffff; valaddr_reg:x3; val_offset:2520*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2520*0 + 3*72*FLEN/8, x4, x1, x2)

inst_841:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf907ffff; valaddr_reg:x3; val_offset:2523*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2523*0 + 3*73*FLEN/8, x4, x1, x2)

inst_842:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf90fffff; valaddr_reg:x3; val_offset:2526*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2526*0 + 3*74*FLEN/8, x4, x1, x2)

inst_843:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf91fffff; valaddr_reg:x3; val_offset:2529*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2529*0 + 3*75*FLEN/8, x4, x1, x2)

inst_844:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf93fffff; valaddr_reg:x3; val_offset:2532*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2532*0 + 3*76*FLEN/8, x4, x1, x2)

inst_845:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9400000; valaddr_reg:x3; val_offset:2535*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2535*0 + 3*77*FLEN/8, x4, x1, x2)

inst_846:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9600000; valaddr_reg:x3; val_offset:2538*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2538*0 + 3*78*FLEN/8, x4, x1, x2)

inst_847:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9700000; valaddr_reg:x3; val_offset:2541*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2541*0 + 3*79*FLEN/8, x4, x1, x2)

inst_848:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf9780000; valaddr_reg:x3; val_offset:2544*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2544*0 + 3*80*FLEN/8, x4, x1, x2)

inst_849:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97c0000; valaddr_reg:x3; val_offset:2547*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2547*0 + 3*81*FLEN/8, x4, x1, x2)

inst_850:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97e0000; valaddr_reg:x3; val_offset:2550*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2550*0 + 3*82*FLEN/8, x4, x1, x2)

inst_851:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97f0000; valaddr_reg:x3; val_offset:2553*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2553*0 + 3*83*FLEN/8, x4, x1, x2)

inst_852:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97f8000; valaddr_reg:x3; val_offset:2556*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2556*0 + 3*84*FLEN/8, x4, x1, x2)

inst_853:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97fc000; valaddr_reg:x3; val_offset:2559*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2559*0 + 3*85*FLEN/8, x4, x1, x2)

inst_854:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97fe000; valaddr_reg:x3; val_offset:2562*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2562*0 + 3*86*FLEN/8, x4, x1, x2)

inst_855:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97ff000; valaddr_reg:x3; val_offset:2565*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2565*0 + 3*87*FLEN/8, x4, x1, x2)

inst_856:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97ff800; valaddr_reg:x3; val_offset:2568*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2568*0 + 3*88*FLEN/8, x4, x1, x2)

inst_857:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97ffc00; valaddr_reg:x3; val_offset:2571*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2571*0 + 3*89*FLEN/8, x4, x1, x2)

inst_858:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97ffe00; valaddr_reg:x3; val_offset:2574*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2574*0 + 3*90*FLEN/8, x4, x1, x2)

inst_859:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97fff00; valaddr_reg:x3; val_offset:2577*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2577*0 + 3*91*FLEN/8, x4, x1, x2)

inst_860:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97fff80; valaddr_reg:x3; val_offset:2580*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2580*0 + 3*92*FLEN/8, x4, x1, x2)

inst_861:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97fffc0; valaddr_reg:x3; val_offset:2583*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2583*0 + 3*93*FLEN/8, x4, x1, x2)

inst_862:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97fffe0; valaddr_reg:x3; val_offset:2586*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2586*0 + 3*94*FLEN/8, x4, x1, x2)

inst_863:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97ffff0; valaddr_reg:x3; val_offset:2589*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2589*0 + 3*95*FLEN/8, x4, x1, x2)

inst_864:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97ffff8; valaddr_reg:x3; val_offset:2592*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2592*0 + 3*96*FLEN/8, x4, x1, x2)

inst_865:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97ffffc; valaddr_reg:x3; val_offset:2595*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2595*0 + 3*97*FLEN/8, x4, x1, x2)

inst_866:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97ffffe; valaddr_reg:x3; val_offset:2598*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2598*0 + 3*98*FLEN/8, x4, x1, x2)

inst_867:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c904e6f; op2val:0x80000000;
op3val:0xf97fffff; valaddr_reg:x3; val_offset:2601*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2601*0 + 3*99*FLEN/8, x4, x1, x2)

inst_868:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b800000; valaddr_reg:x3; val_offset:2604*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2604*0 + 3*100*FLEN/8, x4, x1, x2)

inst_869:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b800001; valaddr_reg:x3; val_offset:2607*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2607*0 + 3*101*FLEN/8, x4, x1, x2)

inst_870:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b800003; valaddr_reg:x3; val_offset:2610*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2610*0 + 3*102*FLEN/8, x4, x1, x2)

inst_871:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b800007; valaddr_reg:x3; val_offset:2613*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2613*0 + 3*103*FLEN/8, x4, x1, x2)

inst_872:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b80000f; valaddr_reg:x3; val_offset:2616*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2616*0 + 3*104*FLEN/8, x4, x1, x2)

inst_873:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b80001f; valaddr_reg:x3; val_offset:2619*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2619*0 + 3*105*FLEN/8, x4, x1, x2)

inst_874:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b80003f; valaddr_reg:x3; val_offset:2622*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2622*0 + 3*106*FLEN/8, x4, x1, x2)

inst_875:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b80007f; valaddr_reg:x3; val_offset:2625*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2625*0 + 3*107*FLEN/8, x4, x1, x2)

inst_876:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b8000ff; valaddr_reg:x3; val_offset:2628*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2628*0 + 3*108*FLEN/8, x4, x1, x2)

inst_877:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b8001ff; valaddr_reg:x3; val_offset:2631*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2631*0 + 3*109*FLEN/8, x4, x1, x2)

inst_878:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b8003ff; valaddr_reg:x3; val_offset:2634*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2634*0 + 3*110*FLEN/8, x4, x1, x2)

inst_879:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b8007ff; valaddr_reg:x3; val_offset:2637*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2637*0 + 3*111*FLEN/8, x4, x1, x2)

inst_880:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b800fff; valaddr_reg:x3; val_offset:2640*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2640*0 + 3*112*FLEN/8, x4, x1, x2)

inst_881:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b801fff; valaddr_reg:x3; val_offset:2643*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2643*0 + 3*113*FLEN/8, x4, x1, x2)

inst_882:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b803fff; valaddr_reg:x3; val_offset:2646*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2646*0 + 3*114*FLEN/8, x4, x1, x2)

inst_883:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b807fff; valaddr_reg:x3; val_offset:2649*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2649*0 + 3*115*FLEN/8, x4, x1, x2)

inst_884:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b80ffff; valaddr_reg:x3; val_offset:2652*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2652*0 + 3*116*FLEN/8, x4, x1, x2)

inst_885:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b81ffff; valaddr_reg:x3; val_offset:2655*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2655*0 + 3*117*FLEN/8, x4, x1, x2)

inst_886:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b83ffff; valaddr_reg:x3; val_offset:2658*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2658*0 + 3*118*FLEN/8, x4, x1, x2)

inst_887:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b87ffff; valaddr_reg:x3; val_offset:2661*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2661*0 + 3*119*FLEN/8, x4, x1, x2)

inst_888:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b8fffff; valaddr_reg:x3; val_offset:2664*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2664*0 + 3*120*FLEN/8, x4, x1, x2)

inst_889:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7b9fffff; valaddr_reg:x3; val_offset:2667*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2667*0 + 3*121*FLEN/8, x4, x1, x2)

inst_890:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bbfffff; valaddr_reg:x3; val_offset:2670*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2670*0 + 3*122*FLEN/8, x4, x1, x2)

inst_891:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bc00000; valaddr_reg:x3; val_offset:2673*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2673*0 + 3*123*FLEN/8, x4, x1, x2)

inst_892:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7be00000; valaddr_reg:x3; val_offset:2676*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2676*0 + 3*124*FLEN/8, x4, x1, x2)

inst_893:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bf00000; valaddr_reg:x3; val_offset:2679*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2679*0 + 3*125*FLEN/8, x4, x1, x2)

inst_894:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bf80000; valaddr_reg:x3; val_offset:2682*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2682*0 + 3*126*FLEN/8, x4, x1, x2)

inst_895:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfc0000; valaddr_reg:x3; val_offset:2685*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2685*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_896:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfe0000; valaddr_reg:x3; val_offset:2688*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2688*0 + 3*128*FLEN/8, x4, x1, x2)

inst_897:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bff0000; valaddr_reg:x3; val_offset:2691*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2691*0 + 3*129*FLEN/8, x4, x1, x2)

inst_898:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bff8000; valaddr_reg:x3; val_offset:2694*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2694*0 + 3*130*FLEN/8, x4, x1, x2)

inst_899:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffc000; valaddr_reg:x3; val_offset:2697*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2697*0 + 3*131*FLEN/8, x4, x1, x2)

inst_900:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffe000; valaddr_reg:x3; val_offset:2700*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2700*0 + 3*132*FLEN/8, x4, x1, x2)

inst_901:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfff000; valaddr_reg:x3; val_offset:2703*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2703*0 + 3*133*FLEN/8, x4, x1, x2)

inst_902:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfff800; valaddr_reg:x3; val_offset:2706*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2706*0 + 3*134*FLEN/8, x4, x1, x2)

inst_903:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffc00; valaddr_reg:x3; val_offset:2709*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2709*0 + 3*135*FLEN/8, x4, x1, x2)

inst_904:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffe00; valaddr_reg:x3; val_offset:2712*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2712*0 + 3*136*FLEN/8, x4, x1, x2)

inst_905:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffff00; valaddr_reg:x3; val_offset:2715*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2715*0 + 3*137*FLEN/8, x4, x1, x2)

inst_906:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffff80; valaddr_reg:x3; val_offset:2718*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2718*0 + 3*138*FLEN/8, x4, x1, x2)

inst_907:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffffc0; valaddr_reg:x3; val_offset:2721*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2721*0 + 3*139*FLEN/8, x4, x1, x2)

inst_908:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffffe0; valaddr_reg:x3; val_offset:2724*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2724*0 + 3*140*FLEN/8, x4, x1, x2)

inst_909:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffff0; valaddr_reg:x3; val_offset:2727*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2727*0 + 3*141*FLEN/8, x4, x1, x2)

inst_910:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffff8; valaddr_reg:x3; val_offset:2730*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2730*0 + 3*142*FLEN/8, x4, x1, x2)

inst_911:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffffc; valaddr_reg:x3; val_offset:2733*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2733*0 + 3*143*FLEN/8, x4, x1, x2)

inst_912:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bfffffe; valaddr_reg:x3; val_offset:2736*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2736*0 + 3*144*FLEN/8, x4, x1, x2)

inst_913:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7bffffff; valaddr_reg:x3; val_offset:2739*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2739*0 + 3*145*FLEN/8, x4, x1, x2)

inst_914:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f000001; valaddr_reg:x3; val_offset:2742*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2742*0 + 3*146*FLEN/8, x4, x1, x2)

inst_915:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f000003; valaddr_reg:x3; val_offset:2745*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2745*0 + 3*147*FLEN/8, x4, x1, x2)

inst_916:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f000007; valaddr_reg:x3; val_offset:2748*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2748*0 + 3*148*FLEN/8, x4, x1, x2)

inst_917:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f199999; valaddr_reg:x3; val_offset:2751*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2751*0 + 3*149*FLEN/8, x4, x1, x2)

inst_918:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f249249; valaddr_reg:x3; val_offset:2754*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2754*0 + 3*150*FLEN/8, x4, x1, x2)

inst_919:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f333333; valaddr_reg:x3; val_offset:2757*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2757*0 + 3*151*FLEN/8, x4, x1, x2)

inst_920:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:2760*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2760*0 + 3*152*FLEN/8, x4, x1, x2)

inst_921:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:2763*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2763*0 + 3*153*FLEN/8, x4, x1, x2)

inst_922:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f444444; valaddr_reg:x3; val_offset:2766*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2766*0 + 3*154*FLEN/8, x4, x1, x2)

inst_923:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:2769*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2769*0 + 3*155*FLEN/8, x4, x1, x2)

inst_924:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:2772*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2772*0 + 3*156*FLEN/8, x4, x1, x2)

inst_925:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f666666; valaddr_reg:x3; val_offset:2775*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2775*0 + 3*157*FLEN/8, x4, x1, x2)

inst_926:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:2778*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2778*0 + 3*158*FLEN/8, x4, x1, x2)

inst_927:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:2781*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2781*0 + 3*159*FLEN/8, x4, x1, x2)

inst_928:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:2784*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2784*0 + 3*160*FLEN/8, x4, x1, x2)

inst_929:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cc6f3 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x510291 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cc6f3; op2val:0x42510291;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:2787*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2787*0 + 3*161*FLEN/8, x4, x1, x2)

inst_930:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000000; valaddr_reg:x3; val_offset:2790*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2790*0 + 3*162*FLEN/8, x4, x1, x2)

inst_931:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000001; valaddr_reg:x3; val_offset:2793*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2793*0 + 3*163*FLEN/8, x4, x1, x2)

inst_932:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000003; valaddr_reg:x3; val_offset:2796*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2796*0 + 3*164*FLEN/8, x4, x1, x2)

inst_933:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000007; valaddr_reg:x3; val_offset:2799*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2799*0 + 3*165*FLEN/8, x4, x1, x2)

inst_934:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00000f; valaddr_reg:x3; val_offset:2802*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2802*0 + 3*166*FLEN/8, x4, x1, x2)

inst_935:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00001f; valaddr_reg:x3; val_offset:2805*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2805*0 + 3*167*FLEN/8, x4, x1, x2)

inst_936:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00003f; valaddr_reg:x3; val_offset:2808*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2808*0 + 3*168*FLEN/8, x4, x1, x2)

inst_937:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00007f; valaddr_reg:x3; val_offset:2811*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2811*0 + 3*169*FLEN/8, x4, x1, x2)

inst_938:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0000ff; valaddr_reg:x3; val_offset:2814*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2814*0 + 3*170*FLEN/8, x4, x1, x2)

inst_939:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0001ff; valaddr_reg:x3; val_offset:2817*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2817*0 + 3*171*FLEN/8, x4, x1, x2)

inst_940:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0003ff; valaddr_reg:x3; val_offset:2820*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2820*0 + 3*172*FLEN/8, x4, x1, x2)

inst_941:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0007ff; valaddr_reg:x3; val_offset:2823*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2823*0 + 3*173*FLEN/8, x4, x1, x2)

inst_942:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa000fff; valaddr_reg:x3; val_offset:2826*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2826*0 + 3*174*FLEN/8, x4, x1, x2)

inst_943:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa001fff; valaddr_reg:x3; val_offset:2829*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2829*0 + 3*175*FLEN/8, x4, x1, x2)

inst_944:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa003fff; valaddr_reg:x3; val_offset:2832*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2832*0 + 3*176*FLEN/8, x4, x1, x2)

inst_945:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa007fff; valaddr_reg:x3; val_offset:2835*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2835*0 + 3*177*FLEN/8, x4, x1, x2)

inst_946:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa00ffff; valaddr_reg:x3; val_offset:2838*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2838*0 + 3*178*FLEN/8, x4, x1, x2)

inst_947:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa01ffff; valaddr_reg:x3; val_offset:2841*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2841*0 + 3*179*FLEN/8, x4, x1, x2)

inst_948:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa03ffff; valaddr_reg:x3; val_offset:2844*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2844*0 + 3*180*FLEN/8, x4, x1, x2)

inst_949:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa07ffff; valaddr_reg:x3; val_offset:2847*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2847*0 + 3*181*FLEN/8, x4, x1, x2)

inst_950:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa0fffff; valaddr_reg:x3; val_offset:2850*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2850*0 + 3*182*FLEN/8, x4, x1, x2)

inst_951:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa1fffff; valaddr_reg:x3; val_offset:2853*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2853*0 + 3*183*FLEN/8, x4, x1, x2)

inst_952:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa3fffff; valaddr_reg:x3; val_offset:2856*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2856*0 + 3*184*FLEN/8, x4, x1, x2)

inst_953:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa400000; valaddr_reg:x3; val_offset:2859*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2859*0 + 3*185*FLEN/8, x4, x1, x2)

inst_954:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa600000; valaddr_reg:x3; val_offset:2862*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2862*0 + 3*186*FLEN/8, x4, x1, x2)

inst_955:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa700000; valaddr_reg:x3; val_offset:2865*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2865*0 + 3*187*FLEN/8, x4, x1, x2)

inst_956:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa780000; valaddr_reg:x3; val_offset:2868*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2868*0 + 3*188*FLEN/8, x4, x1, x2)

inst_957:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7c0000; valaddr_reg:x3; val_offset:2871*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2871*0 + 3*189*FLEN/8, x4, x1, x2)

inst_958:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7e0000; valaddr_reg:x3; val_offset:2874*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2874*0 + 3*190*FLEN/8, x4, x1, x2)

inst_959:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7f0000; valaddr_reg:x3; val_offset:2877*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2877*0 + 3*191*FLEN/8, x4, x1, x2)

inst_960:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7f8000; valaddr_reg:x3; val_offset:2880*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2880*0 + 3*192*FLEN/8, x4, x1, x2)

inst_961:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fc000; valaddr_reg:x3; val_offset:2883*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2883*0 + 3*193*FLEN/8, x4, x1, x2)

inst_962:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fe000; valaddr_reg:x3; val_offset:2886*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2886*0 + 3*194*FLEN/8, x4, x1, x2)

inst_963:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ff000; valaddr_reg:x3; val_offset:2889*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2889*0 + 3*195*FLEN/8, x4, x1, x2)

inst_964:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ff800; valaddr_reg:x3; val_offset:2892*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2892*0 + 3*196*FLEN/8, x4, x1, x2)

inst_965:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffc00; valaddr_reg:x3; val_offset:2895*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2895*0 + 3*197*FLEN/8, x4, x1, x2)

inst_966:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffe00; valaddr_reg:x3; val_offset:2898*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2898*0 + 3*198*FLEN/8, x4, x1, x2)

inst_967:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fff00; valaddr_reg:x3; val_offset:2901*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2901*0 + 3*199*FLEN/8, x4, x1, x2)

inst_968:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fff80; valaddr_reg:x3; val_offset:2904*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2904*0 + 3*200*FLEN/8, x4, x1, x2)

inst_969:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fffc0; valaddr_reg:x3; val_offset:2907*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2907*0 + 3*201*FLEN/8, x4, x1, x2)

inst_970:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fffe0; valaddr_reg:x3; val_offset:2910*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2910*0 + 3*202*FLEN/8, x4, x1, x2)

inst_971:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffff0; valaddr_reg:x3; val_offset:2913*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2913*0 + 3*203*FLEN/8, x4, x1, x2)

inst_972:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffff8; valaddr_reg:x3; val_offset:2916*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2916*0 + 3*204*FLEN/8, x4, x1, x2)

inst_973:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffffc; valaddr_reg:x3; val_offset:2919*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2919*0 + 3*205*FLEN/8, x4, x1, x2)

inst_974:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7ffffe; valaddr_reg:x3; val_offset:2922*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2922*0 + 3*206*FLEN/8, x4, x1, x2)

inst_975:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xf4 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xfa7fffff; valaddr_reg:x3; val_offset:2925*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2925*0 + 3*207*FLEN/8, x4, x1, x2)

inst_976:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff000001; valaddr_reg:x3; val_offset:2928*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2928*0 + 3*208*FLEN/8, x4, x1, x2)

inst_977:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff000003; valaddr_reg:x3; val_offset:2931*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2931*0 + 3*209*FLEN/8, x4, x1, x2)

inst_978:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff000007; valaddr_reg:x3; val_offset:2934*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2934*0 + 3*210*FLEN/8, x4, x1, x2)

inst_979:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff199999; valaddr_reg:x3; val_offset:2937*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2937*0 + 3*211*FLEN/8, x4, x1, x2)

inst_980:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff249249; valaddr_reg:x3; val_offset:2940*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2940*0 + 3*212*FLEN/8, x4, x1, x2)

inst_981:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff333333; valaddr_reg:x3; val_offset:2943*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2943*0 + 3*213*FLEN/8, x4, x1, x2)

inst_982:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:2946*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2946*0 + 3*214*FLEN/8, x4, x1, x2)

inst_983:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:2949*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2949*0 + 3*215*FLEN/8, x4, x1, x2)

inst_984:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff444444; valaddr_reg:x3; val_offset:2952*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2952*0 + 3*216*FLEN/8, x4, x1, x2)

inst_985:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:2955*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2955*0 + 3*217*FLEN/8, x4, x1, x2)

inst_986:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:2958*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2958*0 + 3*218*FLEN/8, x4, x1, x2)

inst_987:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff666666; valaddr_reg:x3; val_offset:2961*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2961*0 + 3*219*FLEN/8, x4, x1, x2)

inst_988:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:2964*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2964*0 + 3*220*FLEN/8, x4, x1, x2)

inst_989:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:2967*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2967*0 + 3*221*FLEN/8, x4, x1, x2)

inst_990:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:2970*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2970*0 + 3*222*FLEN/8, x4, x1, x2)

inst_991:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x23d18f and fs2 == 1 and fe2 == 0x84 and fm2 == 0x4806b0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca3d18f; op2val:0xc24806b0;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:2973*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2973*0 + 3*223*FLEN/8, x4, x1, x2)

inst_992:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3f800001; valaddr_reg:x3; val_offset:2976*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2976*0 + 3*224*FLEN/8, x4, x1, x2)

inst_993:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3f800003; valaddr_reg:x3; val_offset:2979*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2979*0 + 3*225*FLEN/8, x4, x1, x2)

inst_994:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3f800007; valaddr_reg:x3; val_offset:2982*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2982*0 + 3*226*FLEN/8, x4, x1, x2)

inst_995:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3f999999; valaddr_reg:x3; val_offset:2985*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2985*0 + 3*227*FLEN/8, x4, x1, x2)

inst_996:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:2988*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2988*0 + 3*228*FLEN/8, x4, x1, x2)

inst_997:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:2991*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2991*0 + 3*229*FLEN/8, x4, x1, x2)

inst_998:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:2994*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2994*0 + 3*230*FLEN/8, x4, x1, x2)

inst_999:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:2997*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2997*0 + 3*231*FLEN/8, x4, x1, x2)

inst_1000:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:3000*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3000*0 + 3*232*FLEN/8, x4, x1, x2)

inst_1001:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:3003*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3003*0 + 3*233*FLEN/8, x4, x1, x2)

inst_1002:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:3006*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3006*0 + 3*234*FLEN/8, x4, x1, x2)

inst_1003:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:3009*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3009*0 + 3*235*FLEN/8, x4, x1, x2)

inst_1004:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:3012*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3012*0 + 3*236*FLEN/8, x4, x1, x2)

inst_1005:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:3015*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3015*0 + 3*237*FLEN/8, x4, x1, x2)

inst_1006:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:3018*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3018*0 + 3*238*FLEN/8, x4, x1, x2)

inst_1007:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:3021*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3021*0 + 3*239*FLEN/8, x4, x1, x2)

inst_1008:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800000; valaddr_reg:x3; val_offset:3024*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3024*0 + 3*240*FLEN/8, x4, x1, x2)

inst_1009:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800001; valaddr_reg:x3; val_offset:3027*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3027*0 + 3*241*FLEN/8, x4, x1, x2)

inst_1010:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800003; valaddr_reg:x3; val_offset:3030*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3030*0 + 3*242*FLEN/8, x4, x1, x2)

inst_1011:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800007; valaddr_reg:x3; val_offset:3033*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3033*0 + 3*243*FLEN/8, x4, x1, x2)

inst_1012:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4080000f; valaddr_reg:x3; val_offset:3036*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3036*0 + 3*244*FLEN/8, x4, x1, x2)

inst_1013:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4080001f; valaddr_reg:x3; val_offset:3039*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3039*0 + 3*245*FLEN/8, x4, x1, x2)

inst_1014:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4080003f; valaddr_reg:x3; val_offset:3042*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3042*0 + 3*246*FLEN/8, x4, x1, x2)

inst_1015:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4080007f; valaddr_reg:x3; val_offset:3045*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3045*0 + 3*247*FLEN/8, x4, x1, x2)

inst_1016:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x408000ff; valaddr_reg:x3; val_offset:3048*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3048*0 + 3*248*FLEN/8, x4, x1, x2)

inst_1017:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x408001ff; valaddr_reg:x3; val_offset:3051*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3051*0 + 3*249*FLEN/8, x4, x1, x2)

inst_1018:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x408003ff; valaddr_reg:x3; val_offset:3054*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3054*0 + 3*250*FLEN/8, x4, x1, x2)

inst_1019:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x408007ff; valaddr_reg:x3; val_offset:3057*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3057*0 + 3*251*FLEN/8, x4, x1, x2)

inst_1020:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40800fff; valaddr_reg:x3; val_offset:3060*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3060*0 + 3*252*FLEN/8, x4, x1, x2)

inst_1021:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40801fff; valaddr_reg:x3; val_offset:3063*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3063*0 + 3*253*FLEN/8, x4, x1, x2)

inst_1022:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40803fff; valaddr_reg:x3; val_offset:3066*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3066*0 + 3*254*FLEN/8, x4, x1, x2)

inst_1023:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40807fff; valaddr_reg:x3; val_offset:3069*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3069*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_1024:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4080ffff; valaddr_reg:x3; val_offset:3072*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3072*0 + 3*256*FLEN/8, x4, x1, x2)

inst_1025:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4081ffff; valaddr_reg:x3; val_offset:3075*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3075*0 + 3*257*FLEN/8, x4, x1, x2)

inst_1026:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4083ffff; valaddr_reg:x3; val_offset:3078*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3078*0 + 3*258*FLEN/8, x4, x1, x2)

inst_1027:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x4087ffff; valaddr_reg:x3; val_offset:3081*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3081*0 + 3*259*FLEN/8, x4, x1, x2)

inst_1028:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x408fffff; valaddr_reg:x3; val_offset:3084*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3084*0 + 3*260*FLEN/8, x4, x1, x2)

inst_1029:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x409fffff; valaddr_reg:x3; val_offset:3087*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3087*0 + 3*261*FLEN/8, x4, x1, x2)

inst_1030:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40bfffff; valaddr_reg:x3; val_offset:3090*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3090*0 + 3*262*FLEN/8, x4, x1, x2)

inst_1031:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40c00000; valaddr_reg:x3; val_offset:3093*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3093*0 + 3*263*FLEN/8, x4, x1, x2)

inst_1032:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40e00000; valaddr_reg:x3; val_offset:3096*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3096*0 + 3*264*FLEN/8, x4, x1, x2)

inst_1033:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40f00000; valaddr_reg:x3; val_offset:3099*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3099*0 + 3*265*FLEN/8, x4, x1, x2)

inst_1034:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40f80000; valaddr_reg:x3; val_offset:3102*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3102*0 + 3*266*FLEN/8, x4, x1, x2)

inst_1035:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fc0000; valaddr_reg:x3; val_offset:3105*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3105*0 + 3*267*FLEN/8, x4, x1, x2)

inst_1036:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fe0000; valaddr_reg:x3; val_offset:3108*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3108*0 + 3*268*FLEN/8, x4, x1, x2)

inst_1037:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40ff0000; valaddr_reg:x3; val_offset:3111*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3111*0 + 3*269*FLEN/8, x4, x1, x2)

inst_1038:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40ff8000; valaddr_reg:x3; val_offset:3114*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3114*0 + 3*270*FLEN/8, x4, x1, x2)

inst_1039:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40ffc000; valaddr_reg:x3; val_offset:3117*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3117*0 + 3*271*FLEN/8, x4, x1, x2)

inst_1040:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40ffe000; valaddr_reg:x3; val_offset:3120*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3120*0 + 3*272*FLEN/8, x4, x1, x2)

inst_1041:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fff000; valaddr_reg:x3; val_offset:3123*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3123*0 + 3*273*FLEN/8, x4, x1, x2)

inst_1042:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fff800; valaddr_reg:x3; val_offset:3126*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3126*0 + 3*274*FLEN/8, x4, x1, x2)

inst_1043:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fffc00; valaddr_reg:x3; val_offset:3129*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3129*0 + 3*275*FLEN/8, x4, x1, x2)

inst_1044:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fffe00; valaddr_reg:x3; val_offset:3132*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3132*0 + 3*276*FLEN/8, x4, x1, x2)

inst_1045:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40ffff00; valaddr_reg:x3; val_offset:3135*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3135*0 + 3*277*FLEN/8, x4, x1, x2)

inst_1046:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40ffff80; valaddr_reg:x3; val_offset:3138*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3138*0 + 3*278*FLEN/8, x4, x1, x2)

inst_1047:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40ffffc0; valaddr_reg:x3; val_offset:3141*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3141*0 + 3*279*FLEN/8, x4, x1, x2)

inst_1048:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40ffffe0; valaddr_reg:x3; val_offset:3144*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3144*0 + 3*280*FLEN/8, x4, x1, x2)

inst_1049:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fffff0; valaddr_reg:x3; val_offset:3147*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3147*0 + 3*281*FLEN/8, x4, x1, x2)

inst_1050:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fffff8; valaddr_reg:x3; val_offset:3150*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3150*0 + 3*282*FLEN/8, x4, x1, x2)

inst_1051:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fffffc; valaddr_reg:x3; val_offset:3153*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3153*0 + 3*283*FLEN/8, x4, x1, x2)

inst_1052:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40fffffe; valaddr_reg:x3; val_offset:3156*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3156*0 + 3*284*FLEN/8, x4, x1, x2)

inst_1053:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x461be8 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca56764; op2val:0x2461be8;
op3val:0x40ffffff; valaddr_reg:x3; val_offset:3159*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3159*0 + 3*285*FLEN/8, x4, x1, x2)

inst_1054:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4000000; valaddr_reg:x3; val_offset:3162*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3162*0 + 3*286*FLEN/8, x4, x1, x2)

inst_1055:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4000001; valaddr_reg:x3; val_offset:3165*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3165*0 + 3*287*FLEN/8, x4, x1, x2)

inst_1056:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4000003; valaddr_reg:x3; val_offset:3168*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3168*0 + 3*288*FLEN/8, x4, x1, x2)

inst_1057:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4000007; valaddr_reg:x3; val_offset:3171*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3171*0 + 3*289*FLEN/8, x4, x1, x2)

inst_1058:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf400000f; valaddr_reg:x3; val_offset:3174*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3174*0 + 3*290*FLEN/8, x4, x1, x2)

inst_1059:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf400001f; valaddr_reg:x3; val_offset:3177*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3177*0 + 3*291*FLEN/8, x4, x1, x2)

inst_1060:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf400003f; valaddr_reg:x3; val_offset:3180*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3180*0 + 3*292*FLEN/8, x4, x1, x2)

inst_1061:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf400007f; valaddr_reg:x3; val_offset:3183*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3183*0 + 3*293*FLEN/8, x4, x1, x2)

inst_1062:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf40000ff; valaddr_reg:x3; val_offset:3186*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3186*0 + 3*294*FLEN/8, x4, x1, x2)

inst_1063:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf40001ff; valaddr_reg:x3; val_offset:3189*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3189*0 + 3*295*FLEN/8, x4, x1, x2)

inst_1064:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf40003ff; valaddr_reg:x3; val_offset:3192*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3192*0 + 3*296*FLEN/8, x4, x1, x2)

inst_1065:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf40007ff; valaddr_reg:x3; val_offset:3195*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3195*0 + 3*297*FLEN/8, x4, x1, x2)

inst_1066:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4000fff; valaddr_reg:x3; val_offset:3198*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3198*0 + 3*298*FLEN/8, x4, x1, x2)

inst_1067:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4001fff; valaddr_reg:x3; val_offset:3201*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3201*0 + 3*299*FLEN/8, x4, x1, x2)

inst_1068:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4003fff; valaddr_reg:x3; val_offset:3204*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3204*0 + 3*300*FLEN/8, x4, x1, x2)

inst_1069:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4007fff; valaddr_reg:x3; val_offset:3207*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3207*0 + 3*301*FLEN/8, x4, x1, x2)

inst_1070:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf400ffff; valaddr_reg:x3; val_offset:3210*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3210*0 + 3*302*FLEN/8, x4, x1, x2)

inst_1071:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf401ffff; valaddr_reg:x3; val_offset:3213*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3213*0 + 3*303*FLEN/8, x4, x1, x2)

inst_1072:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf403ffff; valaddr_reg:x3; val_offset:3216*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3216*0 + 3*304*FLEN/8, x4, x1, x2)

inst_1073:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf407ffff; valaddr_reg:x3; val_offset:3219*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3219*0 + 3*305*FLEN/8, x4, x1, x2)

inst_1074:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf40fffff; valaddr_reg:x3; val_offset:3222*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3222*0 + 3*306*FLEN/8, x4, x1, x2)

inst_1075:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf41fffff; valaddr_reg:x3; val_offset:3225*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3225*0 + 3*307*FLEN/8, x4, x1, x2)

inst_1076:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf43fffff; valaddr_reg:x3; val_offset:3228*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3228*0 + 3*308*FLEN/8, x4, x1, x2)

inst_1077:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4400000; valaddr_reg:x3; val_offset:3231*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3231*0 + 3*309*FLEN/8, x4, x1, x2)

inst_1078:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4600000; valaddr_reg:x3; val_offset:3234*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3234*0 + 3*310*FLEN/8, x4, x1, x2)

inst_1079:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4700000; valaddr_reg:x3; val_offset:3237*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3237*0 + 3*311*FLEN/8, x4, x1, x2)

inst_1080:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf4780000; valaddr_reg:x3; val_offset:3240*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3240*0 + 3*312*FLEN/8, x4, x1, x2)

inst_1081:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47c0000; valaddr_reg:x3; val_offset:3243*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3243*0 + 3*313*FLEN/8, x4, x1, x2)

inst_1082:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47e0000; valaddr_reg:x3; val_offset:3246*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3246*0 + 3*314*FLEN/8, x4, x1, x2)

inst_1083:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47f0000; valaddr_reg:x3; val_offset:3249*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3249*0 + 3*315*FLEN/8, x4, x1, x2)

inst_1084:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47f8000; valaddr_reg:x3; val_offset:3252*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3252*0 + 3*316*FLEN/8, x4, x1, x2)

inst_1085:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47fc000; valaddr_reg:x3; val_offset:3255*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3255*0 + 3*317*FLEN/8, x4, x1, x2)

inst_1086:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47fe000; valaddr_reg:x3; val_offset:3258*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3258*0 + 3*318*FLEN/8, x4, x1, x2)

inst_1087:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47ff000; valaddr_reg:x3; val_offset:3261*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3261*0 + 3*319*FLEN/8, x4, x1, x2)

inst_1088:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47ff800; valaddr_reg:x3; val_offset:3264*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3264*0 + 3*320*FLEN/8, x4, x1, x2)

inst_1089:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47ffc00; valaddr_reg:x3; val_offset:3267*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3267*0 + 3*321*FLEN/8, x4, x1, x2)

inst_1090:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47ffe00; valaddr_reg:x3; val_offset:3270*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3270*0 + 3*322*FLEN/8, x4, x1, x2)

inst_1091:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47fff00; valaddr_reg:x3; val_offset:3273*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3273*0 + 3*323*FLEN/8, x4, x1, x2)

inst_1092:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47fff80; valaddr_reg:x3; val_offset:3276*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3276*0 + 3*324*FLEN/8, x4, x1, x2)

inst_1093:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47fffc0; valaddr_reg:x3; val_offset:3279*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3279*0 + 3*325*FLEN/8, x4, x1, x2)

inst_1094:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47fffe0; valaddr_reg:x3; val_offset:3282*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3282*0 + 3*326*FLEN/8, x4, x1, x2)

inst_1095:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47ffff0; valaddr_reg:x3; val_offset:3285*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3285*0 + 3*327*FLEN/8, x4, x1, x2)

inst_1096:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47ffff8; valaddr_reg:x3; val_offset:3288*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3288*0 + 3*328*FLEN/8, x4, x1, x2)

inst_1097:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47ffffc; valaddr_reg:x3; val_offset:3291*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3291*0 + 3*329*FLEN/8, x4, x1, x2)

inst_1098:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47ffffe; valaddr_reg:x3; val_offset:3294*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3294*0 + 3*330*FLEN/8, x4, x1, x2)

inst_1099:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xf47fffff; valaddr_reg:x3; val_offset:3297*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3297*0 + 3*331*FLEN/8, x4, x1, x2)

inst_1100:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff000001; valaddr_reg:x3; val_offset:3300*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3300*0 + 3*332*FLEN/8, x4, x1, x2)

inst_1101:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff000003; valaddr_reg:x3; val_offset:3303*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3303*0 + 3*333*FLEN/8, x4, x1, x2)

inst_1102:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff000007; valaddr_reg:x3; val_offset:3306*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3306*0 + 3*334*FLEN/8, x4, x1, x2)

inst_1103:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff199999; valaddr_reg:x3; val_offset:3309*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3309*0 + 3*335*FLEN/8, x4, x1, x2)

inst_1104:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff249249; valaddr_reg:x3; val_offset:3312*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3312*0 + 3*336*FLEN/8, x4, x1, x2)

inst_1105:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff333333; valaddr_reg:x3; val_offset:3315*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3315*0 + 3*337*FLEN/8, x4, x1, x2)

inst_1106:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:3318*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3318*0 + 3*338*FLEN/8, x4, x1, x2)

inst_1107:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:3321*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3321*0 + 3*339*FLEN/8, x4, x1, x2)

inst_1108:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff444444; valaddr_reg:x3; val_offset:3324*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3324*0 + 3*340*FLEN/8, x4, x1, x2)

inst_1109:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:3327*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3327*0 + 3*341*FLEN/8, x4, x1, x2)

inst_1110:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:3330*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3330*0 + 3*342*FLEN/8, x4, x1, x2)

inst_1111:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff666666; valaddr_reg:x3; val_offset:3333*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3333*0 + 3*343*FLEN/8, x4, x1, x2)

inst_1112:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:3336*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3336*0 + 3*344*FLEN/8, x4, x1, x2)

inst_1113:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:3339*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3339*0 + 3*345*FLEN/8, x4, x1, x2)

inst_1114:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:3342*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3342*0 + 3*346*FLEN/8, x4, x1, x2)

inst_1115:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x28da72 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x420fd9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ca8da72; op2val:0xc2420fd9;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:3345*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3345*0 + 3*347*FLEN/8, x4, x1, x2)

inst_1116:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:3348*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3348*0 + 3*348*FLEN/8, x4, x1, x2)

inst_1117:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:3351*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3351*0 + 3*349*FLEN/8, x4, x1, x2)

inst_1118:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:3354*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3354*0 + 3*350*FLEN/8, x4, x1, x2)

inst_1119:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:3357*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3357*0 + 3*351*FLEN/8, x4, x1, x2)

inst_1120:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:3360*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3360*0 + 3*352*FLEN/8, x4, x1, x2)

inst_1121:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:3363*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3363*0 + 3*353*FLEN/8, x4, x1, x2)

inst_1122:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:3366*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3366*0 + 3*354*FLEN/8, x4, x1, x2)

inst_1123:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:3369*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3369*0 + 3*355*FLEN/8, x4, x1, x2)

inst_1124:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:3372*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3372*0 + 3*356*FLEN/8, x4, x1, x2)

inst_1125:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:3375*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3375*0 + 3*357*FLEN/8, x4, x1, x2)

inst_1126:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:3378*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3378*0 + 3*358*FLEN/8, x4, x1, x2)

inst_1127:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:3381*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3381*0 + 3*359*FLEN/8, x4, x1, x2)

inst_1128:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:3384*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3384*0 + 3*360*FLEN/8, x4, x1, x2)

inst_1129:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:3387*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3387*0 + 3*361*FLEN/8, x4, x1, x2)

inst_1130:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:3390*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3390*0 + 3*362*FLEN/8, x4, x1, x2)

inst_1131:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:3393*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3393*0 + 3*363*FLEN/8, x4, x1, x2)

inst_1132:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5000000; valaddr_reg:x3; val_offset:3396*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3396*0 + 3*364*FLEN/8, x4, x1, x2)

inst_1133:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5000001; valaddr_reg:x3; val_offset:3399*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3399*0 + 3*365*FLEN/8, x4, x1, x2)

inst_1134:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5000003; valaddr_reg:x3; val_offset:3402*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3402*0 + 3*366*FLEN/8, x4, x1, x2)

inst_1135:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5000007; valaddr_reg:x3; val_offset:3405*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3405*0 + 3*367*FLEN/8, x4, x1, x2)

inst_1136:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x500000f; valaddr_reg:x3; val_offset:3408*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3408*0 + 3*368*FLEN/8, x4, x1, x2)

inst_1137:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x500001f; valaddr_reg:x3; val_offset:3411*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3411*0 + 3*369*FLEN/8, x4, x1, x2)

inst_1138:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x500003f; valaddr_reg:x3; val_offset:3414*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3414*0 + 3*370*FLEN/8, x4, x1, x2)

inst_1139:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x500007f; valaddr_reg:x3; val_offset:3417*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3417*0 + 3*371*FLEN/8, x4, x1, x2)

inst_1140:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x50000ff; valaddr_reg:x3; val_offset:3420*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3420*0 + 3*372*FLEN/8, x4, x1, x2)

inst_1141:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x50001ff; valaddr_reg:x3; val_offset:3423*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3423*0 + 3*373*FLEN/8, x4, x1, x2)

inst_1142:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x50003ff; valaddr_reg:x3; val_offset:3426*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3426*0 + 3*374*FLEN/8, x4, x1, x2)

inst_1143:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x50007ff; valaddr_reg:x3; val_offset:3429*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3429*0 + 3*375*FLEN/8, x4, x1, x2)

inst_1144:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5000fff; valaddr_reg:x3; val_offset:3432*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3432*0 + 3*376*FLEN/8, x4, x1, x2)

inst_1145:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5001fff; valaddr_reg:x3; val_offset:3435*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3435*0 + 3*377*FLEN/8, x4, x1, x2)

inst_1146:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5003fff; valaddr_reg:x3; val_offset:3438*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3438*0 + 3*378*FLEN/8, x4, x1, x2)

inst_1147:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5007fff; valaddr_reg:x3; val_offset:3441*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3441*0 + 3*379*FLEN/8, x4, x1, x2)

inst_1148:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x500ffff; valaddr_reg:x3; val_offset:3444*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3444*0 + 3*380*FLEN/8, x4, x1, x2)

inst_1149:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x501ffff; valaddr_reg:x3; val_offset:3447*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3447*0 + 3*381*FLEN/8, x4, x1, x2)

inst_1150:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x503ffff; valaddr_reg:x3; val_offset:3450*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3450*0 + 3*382*FLEN/8, x4, x1, x2)

inst_1151:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x507ffff; valaddr_reg:x3; val_offset:3453*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3453*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_1152:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x50fffff; valaddr_reg:x3; val_offset:3456*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3456*0 + 3*384*FLEN/8, x4, x1, x2)

inst_1153:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x51fffff; valaddr_reg:x3; val_offset:3459*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3459*0 + 3*385*FLEN/8, x4, x1, x2)

inst_1154:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x53fffff; valaddr_reg:x3; val_offset:3462*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3462*0 + 3*386*FLEN/8, x4, x1, x2)

inst_1155:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5400000; valaddr_reg:x3; val_offset:3465*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3465*0 + 3*387*FLEN/8, x4, x1, x2)

inst_1156:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5600000; valaddr_reg:x3; val_offset:3468*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3468*0 + 3*388*FLEN/8, x4, x1, x2)

inst_1157:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5700000; valaddr_reg:x3; val_offset:3471*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3471*0 + 3*389*FLEN/8, x4, x1, x2)

inst_1158:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x5780000; valaddr_reg:x3; val_offset:3474*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3474*0 + 3*390*FLEN/8, x4, x1, x2)

inst_1159:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57c0000; valaddr_reg:x3; val_offset:3477*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3477*0 + 3*391*FLEN/8, x4, x1, x2)

inst_1160:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57e0000; valaddr_reg:x3; val_offset:3480*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3480*0 + 3*392*FLEN/8, x4, x1, x2)

inst_1161:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57f0000; valaddr_reg:x3; val_offset:3483*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3483*0 + 3*393*FLEN/8, x4, x1, x2)

inst_1162:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57f8000; valaddr_reg:x3; val_offset:3486*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3486*0 + 3*394*FLEN/8, x4, x1, x2)

inst_1163:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57fc000; valaddr_reg:x3; val_offset:3489*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3489*0 + 3*395*FLEN/8, x4, x1, x2)

inst_1164:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57fe000; valaddr_reg:x3; val_offset:3492*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3492*0 + 3*396*FLEN/8, x4, x1, x2)

inst_1165:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57ff000; valaddr_reg:x3; val_offset:3495*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3495*0 + 3*397*FLEN/8, x4, x1, x2)

inst_1166:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57ff800; valaddr_reg:x3; val_offset:3498*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3498*0 + 3*398*FLEN/8, x4, x1, x2)

inst_1167:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57ffc00; valaddr_reg:x3; val_offset:3501*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3501*0 + 3*399*FLEN/8, x4, x1, x2)

inst_1168:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57ffe00; valaddr_reg:x3; val_offset:3504*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3504*0 + 3*400*FLEN/8, x4, x1, x2)

inst_1169:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57fff00; valaddr_reg:x3; val_offset:3507*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3507*0 + 3*401*FLEN/8, x4, x1, x2)

inst_1170:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57fff80; valaddr_reg:x3; val_offset:3510*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3510*0 + 3*402*FLEN/8, x4, x1, x2)

inst_1171:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57fffc0; valaddr_reg:x3; val_offset:3513*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3513*0 + 3*403*FLEN/8, x4, x1, x2)

inst_1172:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57fffe0; valaddr_reg:x3; val_offset:3516*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3516*0 + 3*404*FLEN/8, x4, x1, x2)

inst_1173:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57ffff0; valaddr_reg:x3; val_offset:3519*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3519*0 + 3*405*FLEN/8, x4, x1, x2)

inst_1174:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57ffff8; valaddr_reg:x3; val_offset:3522*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3522*0 + 3*406*FLEN/8, x4, x1, x2)

inst_1175:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57ffffc; valaddr_reg:x3; val_offset:3525*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3525*0 + 3*407*FLEN/8, x4, x1, x2)

inst_1176:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57ffffe; valaddr_reg:x3; val_offset:3528*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3528*0 + 3*408*FLEN/8, x4, x1, x2)

inst_1177:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c9cb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cac9cb5; op2val:0x0;
op3val:0x57fffff; valaddr_reg:x3; val_offset:3531*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3531*0 + 3*409*FLEN/8, x4, x1, x2)

inst_1178:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:3534*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3534*0 + 3*410*FLEN/8, x4, x1, x2)

inst_1179:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:3537*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3537*0 + 3*411*FLEN/8, x4, x1, x2)

inst_1180:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:3540*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3540*0 + 3*412*FLEN/8, x4, x1, x2)

inst_1181:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:3543*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3543*0 + 3*413*FLEN/8, x4, x1, x2)

inst_1182:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:3546*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3546*0 + 3*414*FLEN/8, x4, x1, x2)

inst_1183:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:3549*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3549*0 + 3*415*FLEN/8, x4, x1, x2)

inst_1184:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:3552*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3552*0 + 3*416*FLEN/8, x4, x1, x2)

inst_1185:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:3555*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3555*0 + 3*417*FLEN/8, x4, x1, x2)

inst_1186:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:3558*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3558*0 + 3*418*FLEN/8, x4, x1, x2)

inst_1187:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:3561*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3561*0 + 3*419*FLEN/8, x4, x1, x2)

inst_1188:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:3564*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3564*0 + 3*420*FLEN/8, x4, x1, x2)

inst_1189:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:3567*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3567*0 + 3*421*FLEN/8, x4, x1, x2)

inst_1190:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:3570*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3570*0 + 3*422*FLEN/8, x4, x1, x2)

inst_1191:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:3573*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3573*0 + 3*423*FLEN/8, x4, x1, x2)

inst_1192:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:3576*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3576*0 + 3*424*FLEN/8, x4, x1, x2)

inst_1193:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:3579*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3579*0 + 3*425*FLEN/8, x4, x1, x2)

inst_1194:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2800000; valaddr_reg:x3; val_offset:3582*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3582*0 + 3*426*FLEN/8, x4, x1, x2)

inst_1195:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2800001; valaddr_reg:x3; val_offset:3585*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3585*0 + 3*427*FLEN/8, x4, x1, x2)

inst_1196:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2800003; valaddr_reg:x3; val_offset:3588*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3588*0 + 3*428*FLEN/8, x4, x1, x2)

inst_1197:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2800007; valaddr_reg:x3; val_offset:3591*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3591*0 + 3*429*FLEN/8, x4, x1, x2)

inst_1198:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x280000f; valaddr_reg:x3; val_offset:3594*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3594*0 + 3*430*FLEN/8, x4, x1, x2)

inst_1199:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x280001f; valaddr_reg:x3; val_offset:3597*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3597*0 + 3*431*FLEN/8, x4, x1, x2)

inst_1200:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x280003f; valaddr_reg:x3; val_offset:3600*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3600*0 + 3*432*FLEN/8, x4, x1, x2)

inst_1201:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x280007f; valaddr_reg:x3; val_offset:3603*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3603*0 + 3*433*FLEN/8, x4, x1, x2)

inst_1202:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x28000ff; valaddr_reg:x3; val_offset:3606*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3606*0 + 3*434*FLEN/8, x4, x1, x2)

inst_1203:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x28001ff; valaddr_reg:x3; val_offset:3609*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3609*0 + 3*435*FLEN/8, x4, x1, x2)

inst_1204:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x28003ff; valaddr_reg:x3; val_offset:3612*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3612*0 + 3*436*FLEN/8, x4, x1, x2)

inst_1205:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x28007ff; valaddr_reg:x3; val_offset:3615*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3615*0 + 3*437*FLEN/8, x4, x1, x2)

inst_1206:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2800fff; valaddr_reg:x3; val_offset:3618*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3618*0 + 3*438*FLEN/8, x4, x1, x2)

inst_1207:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2801fff; valaddr_reg:x3; val_offset:3621*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3621*0 + 3*439*FLEN/8, x4, x1, x2)

inst_1208:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2803fff; valaddr_reg:x3; val_offset:3624*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3624*0 + 3*440*FLEN/8, x4, x1, x2)

inst_1209:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2807fff; valaddr_reg:x3; val_offset:3627*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3627*0 + 3*441*FLEN/8, x4, x1, x2)

inst_1210:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x280ffff; valaddr_reg:x3; val_offset:3630*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3630*0 + 3*442*FLEN/8, x4, x1, x2)

inst_1211:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x281ffff; valaddr_reg:x3; val_offset:3633*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3633*0 + 3*443*FLEN/8, x4, x1, x2)

inst_1212:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x283ffff; valaddr_reg:x3; val_offset:3636*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3636*0 + 3*444*FLEN/8, x4, x1, x2)

inst_1213:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x287ffff; valaddr_reg:x3; val_offset:3639*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3639*0 + 3*445*FLEN/8, x4, x1, x2)

inst_1214:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x28fffff; valaddr_reg:x3; val_offset:3642*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3642*0 + 3*446*FLEN/8, x4, x1, x2)

inst_1215:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x29fffff; valaddr_reg:x3; val_offset:3645*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3645*0 + 3*447*FLEN/8, x4, x1, x2)

inst_1216:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2bfffff; valaddr_reg:x3; val_offset:3648*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3648*0 + 3*448*FLEN/8, x4, x1, x2)

inst_1217:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2c00000; valaddr_reg:x3; val_offset:3651*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3651*0 + 3*449*FLEN/8, x4, x1, x2)

inst_1218:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2e00000; valaddr_reg:x3; val_offset:3654*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3654*0 + 3*450*FLEN/8, x4, x1, x2)

inst_1219:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2f00000; valaddr_reg:x3; val_offset:3657*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3657*0 + 3*451*FLEN/8, x4, x1, x2)

inst_1220:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2f80000; valaddr_reg:x3; val_offset:3660*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3660*0 + 3*452*FLEN/8, x4, x1, x2)

inst_1221:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fc0000; valaddr_reg:x3; val_offset:3663*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3663*0 + 3*453*FLEN/8, x4, x1, x2)

inst_1222:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fe0000; valaddr_reg:x3; val_offset:3666*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3666*0 + 3*454*FLEN/8, x4, x1, x2)

inst_1223:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2ff0000; valaddr_reg:x3; val_offset:3669*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3669*0 + 3*455*FLEN/8, x4, x1, x2)

inst_1224:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2ff8000; valaddr_reg:x3; val_offset:3672*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3672*0 + 3*456*FLEN/8, x4, x1, x2)

inst_1225:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2ffc000; valaddr_reg:x3; val_offset:3675*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3675*0 + 3*457*FLEN/8, x4, x1, x2)

inst_1226:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2ffe000; valaddr_reg:x3; val_offset:3678*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3678*0 + 3*458*FLEN/8, x4, x1, x2)

inst_1227:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fff000; valaddr_reg:x3; val_offset:3681*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3681*0 + 3*459*FLEN/8, x4, x1, x2)

inst_1228:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fff800; valaddr_reg:x3; val_offset:3684*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3684*0 + 3*460*FLEN/8, x4, x1, x2)

inst_1229:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fffc00; valaddr_reg:x3; val_offset:3687*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3687*0 + 3*461*FLEN/8, x4, x1, x2)

inst_1230:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fffe00; valaddr_reg:x3; val_offset:3690*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3690*0 + 3*462*FLEN/8, x4, x1, x2)

inst_1231:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2ffff00; valaddr_reg:x3; val_offset:3693*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3693*0 + 3*463*FLEN/8, x4, x1, x2)

inst_1232:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2ffff80; valaddr_reg:x3; val_offset:3696*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3696*0 + 3*464*FLEN/8, x4, x1, x2)

inst_1233:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2ffffc0; valaddr_reg:x3; val_offset:3699*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3699*0 + 3*465*FLEN/8, x4, x1, x2)

inst_1234:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2ffffe0; valaddr_reg:x3; val_offset:3702*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3702*0 + 3*466*FLEN/8, x4, x1, x2)

inst_1235:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fffff0; valaddr_reg:x3; val_offset:3705*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3705*0 + 3*467*FLEN/8, x4, x1, x2)

inst_1236:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fffff8; valaddr_reg:x3; val_offset:3708*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3708*0 + 3*468*FLEN/8, x4, x1, x2)

inst_1237:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fffffc; valaddr_reg:x3; val_offset:3711*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3711*0 + 3*469*FLEN/8, x4, x1, x2)

inst_1238:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2fffffe; valaddr_reg:x3; val_offset:3714*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3714*0 + 3*470*FLEN/8, x4, x1, x2)

inst_1239:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x34894c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb4894c; op2val:0x0;
op3val:0x2ffffff; valaddr_reg:x3; val_offset:3717*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3717*0 + 3*471*FLEN/8, x4, x1, x2)

inst_1240:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71000000; valaddr_reg:x3; val_offset:3720*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3720*0 + 3*472*FLEN/8, x4, x1, x2)

inst_1241:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71000001; valaddr_reg:x3; val_offset:3723*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3723*0 + 3*473*FLEN/8, x4, x1, x2)

inst_1242:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71000003; valaddr_reg:x3; val_offset:3726*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3726*0 + 3*474*FLEN/8, x4, x1, x2)

inst_1243:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71000007; valaddr_reg:x3; val_offset:3729*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3729*0 + 3*475*FLEN/8, x4, x1, x2)

inst_1244:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7100000f; valaddr_reg:x3; val_offset:3732*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3732*0 + 3*476*FLEN/8, x4, x1, x2)

inst_1245:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7100001f; valaddr_reg:x3; val_offset:3735*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3735*0 + 3*477*FLEN/8, x4, x1, x2)

inst_1246:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7100003f; valaddr_reg:x3; val_offset:3738*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3738*0 + 3*478*FLEN/8, x4, x1, x2)

inst_1247:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7100007f; valaddr_reg:x3; val_offset:3741*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3741*0 + 3*479*FLEN/8, x4, x1, x2)

inst_1248:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x710000ff; valaddr_reg:x3; val_offset:3744*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3744*0 + 3*480*FLEN/8, x4, x1, x2)

inst_1249:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x710001ff; valaddr_reg:x3; val_offset:3747*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3747*0 + 3*481*FLEN/8, x4, x1, x2)

inst_1250:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x710003ff; valaddr_reg:x3; val_offset:3750*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3750*0 + 3*482*FLEN/8, x4, x1, x2)

inst_1251:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x710007ff; valaddr_reg:x3; val_offset:3753*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3753*0 + 3*483*FLEN/8, x4, x1, x2)

inst_1252:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71000fff; valaddr_reg:x3; val_offset:3756*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3756*0 + 3*484*FLEN/8, x4, x1, x2)

inst_1253:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71001fff; valaddr_reg:x3; val_offset:3759*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3759*0 + 3*485*FLEN/8, x4, x1, x2)

inst_1254:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71003fff; valaddr_reg:x3; val_offset:3762*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3762*0 + 3*486*FLEN/8, x4, x1, x2)

inst_1255:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71007fff; valaddr_reg:x3; val_offset:3765*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3765*0 + 3*487*FLEN/8, x4, x1, x2)

inst_1256:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7100ffff; valaddr_reg:x3; val_offset:3768*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3768*0 + 3*488*FLEN/8, x4, x1, x2)

inst_1257:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7101ffff; valaddr_reg:x3; val_offset:3771*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3771*0 + 3*489*FLEN/8, x4, x1, x2)

inst_1258:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7103ffff; valaddr_reg:x3; val_offset:3774*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3774*0 + 3*490*FLEN/8, x4, x1, x2)

inst_1259:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7107ffff; valaddr_reg:x3; val_offset:3777*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3777*0 + 3*491*FLEN/8, x4, x1, x2)

inst_1260:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x710fffff; valaddr_reg:x3; val_offset:3780*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3780*0 + 3*492*FLEN/8, x4, x1, x2)

inst_1261:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x711fffff; valaddr_reg:x3; val_offset:3783*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3783*0 + 3*493*FLEN/8, x4, x1, x2)

inst_1262:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x713fffff; valaddr_reg:x3; val_offset:3786*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3786*0 + 3*494*FLEN/8, x4, x1, x2)

inst_1263:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71400000; valaddr_reg:x3; val_offset:3789*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3789*0 + 3*495*FLEN/8, x4, x1, x2)

inst_1264:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71600000; valaddr_reg:x3; val_offset:3792*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3792*0 + 3*496*FLEN/8, x4, x1, x2)

inst_1265:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71700000; valaddr_reg:x3; val_offset:3795*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3795*0 + 3*497*FLEN/8, x4, x1, x2)

inst_1266:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x71780000; valaddr_reg:x3; val_offset:3798*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3798*0 + 3*498*FLEN/8, x4, x1, x2)

inst_1267:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717c0000; valaddr_reg:x3; val_offset:3801*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3801*0 + 3*499*FLEN/8, x4, x1, x2)

inst_1268:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717e0000; valaddr_reg:x3; val_offset:3804*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3804*0 + 3*500*FLEN/8, x4, x1, x2)

inst_1269:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717f0000; valaddr_reg:x3; val_offset:3807*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3807*0 + 3*501*FLEN/8, x4, x1, x2)

inst_1270:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717f8000; valaddr_reg:x3; val_offset:3810*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3810*0 + 3*502*FLEN/8, x4, x1, x2)

inst_1271:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717fc000; valaddr_reg:x3; val_offset:3813*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3813*0 + 3*503*FLEN/8, x4, x1, x2)

inst_1272:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717fe000; valaddr_reg:x3; val_offset:3816*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3816*0 + 3*504*FLEN/8, x4, x1, x2)

inst_1273:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717ff000; valaddr_reg:x3; val_offset:3819*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3819*0 + 3*505*FLEN/8, x4, x1, x2)

inst_1274:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717ff800; valaddr_reg:x3; val_offset:3822*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3822*0 + 3*506*FLEN/8, x4, x1, x2)

inst_1275:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717ffc00; valaddr_reg:x3; val_offset:3825*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3825*0 + 3*507*FLEN/8, x4, x1, x2)

inst_1276:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717ffe00; valaddr_reg:x3; val_offset:3828*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3828*0 + 3*508*FLEN/8, x4, x1, x2)

inst_1277:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717fff00; valaddr_reg:x3; val_offset:3831*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3831*0 + 3*509*FLEN/8, x4, x1, x2)

inst_1278:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717fff80; valaddr_reg:x3; val_offset:3834*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3834*0 + 3*510*FLEN/8, x4, x1, x2)

inst_1279:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717fffc0; valaddr_reg:x3; val_offset:3837*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3837*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_1280:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717fffe0; valaddr_reg:x3; val_offset:3840*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3840*0 + 3*512*FLEN/8, x4, x1, x2)

inst_1281:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717ffff0; valaddr_reg:x3; val_offset:3843*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3843*0 + 3*513*FLEN/8, x4, x1, x2)

inst_1282:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717ffff8; valaddr_reg:x3; val_offset:3846*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3846*0 + 3*514*FLEN/8, x4, x1, x2)

inst_1283:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717ffffc; valaddr_reg:x3; val_offset:3849*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3849*0 + 3*515*FLEN/8, x4, x1, x2)

inst_1284:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717ffffe; valaddr_reg:x3; val_offset:3852*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3852*0 + 3*516*FLEN/8, x4, x1, x2)

inst_1285:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xe2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x717fffff; valaddr_reg:x3; val_offset:3855*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3855*0 + 3*517*FLEN/8, x4, x1, x2)

inst_1286:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f000001; valaddr_reg:x3; val_offset:3858*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3858*0 + 3*518*FLEN/8, x4, x1, x2)

inst_1287:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f000003; valaddr_reg:x3; val_offset:3861*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3861*0 + 3*519*FLEN/8, x4, x1, x2)

inst_1288:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f000007; valaddr_reg:x3; val_offset:3864*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3864*0 + 3*520*FLEN/8, x4, x1, x2)

inst_1289:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f199999; valaddr_reg:x3; val_offset:3867*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3867*0 + 3*521*FLEN/8, x4, x1, x2)

inst_1290:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f249249; valaddr_reg:x3; val_offset:3870*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3870*0 + 3*522*FLEN/8, x4, x1, x2)

inst_1291:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f333333; valaddr_reg:x3; val_offset:3873*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3873*0 + 3*523*FLEN/8, x4, x1, x2)

inst_1292:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:3876*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3876*0 + 3*524*FLEN/8, x4, x1, x2)

inst_1293:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:3879*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3879*0 + 3*525*FLEN/8, x4, x1, x2)

inst_1294:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f444444; valaddr_reg:x3; val_offset:3882*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3882*0 + 3*526*FLEN/8, x4, x1, x2)

inst_1295:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:3885*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3885*0 + 3*527*FLEN/8, x4, x1, x2)

inst_1296:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:3888*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3888*0 + 3*528*FLEN/8, x4, x1, x2)

inst_1297:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f666666; valaddr_reg:x3; val_offset:3891*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3891*0 + 3*529*FLEN/8, x4, x1, x2)

inst_1298:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:3894*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3894*0 + 3*530*FLEN/8, x4, x1, x2)

inst_1299:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:3897*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3897*0 + 3*531*FLEN/8, x4, x1, x2)

inst_1300:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:3900*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3900*0 + 3*532*FLEN/8, x4, x1, x2)

inst_1301:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x396362 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x30c0de and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cb96362; op2val:0x4230c0de;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:3903*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3903*0 + 3*533*FLEN/8, x4, x1, x2)

inst_1302:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25800000; valaddr_reg:x3; val_offset:3906*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3906*0 + 3*534*FLEN/8, x4, x1, x2)

inst_1303:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25800001; valaddr_reg:x3; val_offset:3909*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3909*0 + 3*535*FLEN/8, x4, x1, x2)

inst_1304:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25800003; valaddr_reg:x3; val_offset:3912*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3912*0 + 3*536*FLEN/8, x4, x1, x2)

inst_1305:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25800007; valaddr_reg:x3; val_offset:3915*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3915*0 + 3*537*FLEN/8, x4, x1, x2)

inst_1306:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x2580000f; valaddr_reg:x3; val_offset:3918*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3918*0 + 3*538*FLEN/8, x4, x1, x2)

inst_1307:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x2580001f; valaddr_reg:x3; val_offset:3921*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3921*0 + 3*539*FLEN/8, x4, x1, x2)

inst_1308:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x2580003f; valaddr_reg:x3; val_offset:3924*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3924*0 + 3*540*FLEN/8, x4, x1, x2)

inst_1309:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x2580007f; valaddr_reg:x3; val_offset:3927*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3927*0 + 3*541*FLEN/8, x4, x1, x2)

inst_1310:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x258000ff; valaddr_reg:x3; val_offset:3930*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3930*0 + 3*542*FLEN/8, x4, x1, x2)

inst_1311:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x258001ff; valaddr_reg:x3; val_offset:3933*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3933*0 + 3*543*FLEN/8, x4, x1, x2)

inst_1312:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x258003ff; valaddr_reg:x3; val_offset:3936*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3936*0 + 3*544*FLEN/8, x4, x1, x2)

inst_1313:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x258007ff; valaddr_reg:x3; val_offset:3939*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3939*0 + 3*545*FLEN/8, x4, x1, x2)

inst_1314:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25800fff; valaddr_reg:x3; val_offset:3942*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3942*0 + 3*546*FLEN/8, x4, x1, x2)

inst_1315:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25801fff; valaddr_reg:x3; val_offset:3945*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3945*0 + 3*547*FLEN/8, x4, x1, x2)

inst_1316:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25803fff; valaddr_reg:x3; val_offset:3948*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3948*0 + 3*548*FLEN/8, x4, x1, x2)

inst_1317:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25807fff; valaddr_reg:x3; val_offset:3951*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3951*0 + 3*549*FLEN/8, x4, x1, x2)

inst_1318:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x2580ffff; valaddr_reg:x3; val_offset:3954*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3954*0 + 3*550*FLEN/8, x4, x1, x2)

inst_1319:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x2581ffff; valaddr_reg:x3; val_offset:3957*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3957*0 + 3*551*FLEN/8, x4, x1, x2)

inst_1320:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x2583ffff; valaddr_reg:x3; val_offset:3960*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3960*0 + 3*552*FLEN/8, x4, x1, x2)

inst_1321:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x2587ffff; valaddr_reg:x3; val_offset:3963*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3963*0 + 3*553*FLEN/8, x4, x1, x2)

inst_1322:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x258fffff; valaddr_reg:x3; val_offset:3966*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3966*0 + 3*554*FLEN/8, x4, x1, x2)

inst_1323:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x259fffff; valaddr_reg:x3; val_offset:3969*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3969*0 + 3*555*FLEN/8, x4, x1, x2)

inst_1324:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25bfffff; valaddr_reg:x3; val_offset:3972*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3972*0 + 3*556*FLEN/8, x4, x1, x2)

inst_1325:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25c00000; valaddr_reg:x3; val_offset:3975*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3975*0 + 3*557*FLEN/8, x4, x1, x2)

inst_1326:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25e00000; valaddr_reg:x3; val_offset:3978*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3978*0 + 3*558*FLEN/8, x4, x1, x2)

inst_1327:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25f00000; valaddr_reg:x3; val_offset:3981*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3981*0 + 3*559*FLEN/8, x4, x1, x2)

inst_1328:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25f80000; valaddr_reg:x3; val_offset:3984*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3984*0 + 3*560*FLEN/8, x4, x1, x2)

inst_1329:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fc0000; valaddr_reg:x3; val_offset:3987*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3987*0 + 3*561*FLEN/8, x4, x1, x2)

inst_1330:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fe0000; valaddr_reg:x3; val_offset:3990*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3990*0 + 3*562*FLEN/8, x4, x1, x2)

inst_1331:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25ff0000; valaddr_reg:x3; val_offset:3993*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3993*0 + 3*563*FLEN/8, x4, x1, x2)

inst_1332:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25ff8000; valaddr_reg:x3; val_offset:3996*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3996*0 + 3*564*FLEN/8, x4, x1, x2)

inst_1333:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25ffc000; valaddr_reg:x3; val_offset:3999*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3999*0 + 3*565*FLEN/8, x4, x1, x2)

inst_1334:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25ffe000; valaddr_reg:x3; val_offset:4002*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4002*0 + 3*566*FLEN/8, x4, x1, x2)

inst_1335:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fff000; valaddr_reg:x3; val_offset:4005*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4005*0 + 3*567*FLEN/8, x4, x1, x2)

inst_1336:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fff800; valaddr_reg:x3; val_offset:4008*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4008*0 + 3*568*FLEN/8, x4, x1, x2)

inst_1337:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fffc00; valaddr_reg:x3; val_offset:4011*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4011*0 + 3*569*FLEN/8, x4, x1, x2)

inst_1338:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fffe00; valaddr_reg:x3; val_offset:4014*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4014*0 + 3*570*FLEN/8, x4, x1, x2)

inst_1339:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25ffff00; valaddr_reg:x3; val_offset:4017*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4017*0 + 3*571*FLEN/8, x4, x1, x2)

inst_1340:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25ffff80; valaddr_reg:x3; val_offset:4020*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4020*0 + 3*572*FLEN/8, x4, x1, x2)

inst_1341:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25ffffc0; valaddr_reg:x3; val_offset:4023*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4023*0 + 3*573*FLEN/8, x4, x1, x2)

inst_1342:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25ffffe0; valaddr_reg:x3; val_offset:4026*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4026*0 + 3*574*FLEN/8, x4, x1, x2)

inst_1343:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fffff0; valaddr_reg:x3; val_offset:4029*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4029*0 + 3*575*FLEN/8, x4, x1, x2)

inst_1344:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fffff8; valaddr_reg:x3; val_offset:4032*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4032*0 + 3*576*FLEN/8, x4, x1, x2)

inst_1345:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fffffc; valaddr_reg:x3; val_offset:4035*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4035*0 + 3*577*FLEN/8, x4, x1, x2)

inst_1346:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25fffffe; valaddr_reg:x3; val_offset:4038*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4038*0 + 3*578*FLEN/8, x4, x1, x2)

inst_1347:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x4b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x25ffffff; valaddr_reg:x3; val_offset:4041*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4041*0 + 3*579*FLEN/8, x4, x1, x2)

inst_1348:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3f800001; valaddr_reg:x3; val_offset:4044*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4044*0 + 3*580*FLEN/8, x4, x1, x2)

inst_1349:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3f800003; valaddr_reg:x3; val_offset:4047*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4047*0 + 3*581*FLEN/8, x4, x1, x2)

inst_1350:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3f800007; valaddr_reg:x3; val_offset:4050*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4050*0 + 3*582*FLEN/8, x4, x1, x2)

inst_1351:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3f999999; valaddr_reg:x3; val_offset:4053*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4053*0 + 3*583*FLEN/8, x4, x1, x2)

inst_1352:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:4056*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4056*0 + 3*584*FLEN/8, x4, x1, x2)

inst_1353:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:4059*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4059*0 + 3*585*FLEN/8, x4, x1, x2)

inst_1354:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:4062*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4062*0 + 3*586*FLEN/8, x4, x1, x2)

inst_1355:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:4065*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4065*0 + 3*587*FLEN/8, x4, x1, x2)

inst_1356:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:4068*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4068*0 + 3*588*FLEN/8, x4, x1, x2)

inst_1357:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:4071*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4071*0 + 3*589*FLEN/8, x4, x1, x2)

inst_1358:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:4074*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4074*0 + 3*590*FLEN/8, x4, x1, x2)

inst_1359:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:4077*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4077*0 + 3*591*FLEN/8, x4, x1, x2)

inst_1360:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:4080*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4080*0 + 3*592*FLEN/8, x4, x1, x2)

inst_1361:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:4083*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4083*0 + 3*593*FLEN/8, x4, x1, x2)

inst_1362:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:4086*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4086*0 + 3*594*FLEN/8, x4, x1, x2)

inst_1363:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x29f8c5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cc0c8f3; op2val:0x229f8c5;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:4089*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4089*0 + 3*595*FLEN/8, x4, x1, x2)

inst_1364:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x800000; valaddr_reg:x3; val_offset:4092*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4092*0 + 3*596*FLEN/8, x4, x1, x2)

inst_1365:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:4095*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4095*0 + 3*597*FLEN/8, x4, x1, x2)

inst_1366:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:4098*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4098*0 + 3*598*FLEN/8, x4, x1, x2)

inst_1367:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:4101*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4101*0 + 3*599*FLEN/8, x4, x1, x2)

inst_1368:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x80000f; valaddr_reg:x3; val_offset:4104*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4104*0 + 3*600*FLEN/8, x4, x1, x2)

inst_1369:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x80001f; valaddr_reg:x3; val_offset:4107*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4107*0 + 3*601*FLEN/8, x4, x1, x2)

inst_1370:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x80003f; valaddr_reg:x3; val_offset:4110*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4110*0 + 3*602*FLEN/8, x4, x1, x2)

inst_1371:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x80007f; valaddr_reg:x3; val_offset:4113*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4113*0 + 3*603*FLEN/8, x4, x1, x2)

inst_1372:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x8000ff; valaddr_reg:x3; val_offset:4116*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4116*0 + 3*604*FLEN/8, x4, x1, x2)

inst_1373:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x8001ff; valaddr_reg:x3; val_offset:4119*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4119*0 + 3*605*FLEN/8, x4, x1, x2)

inst_1374:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x8003ff; valaddr_reg:x3; val_offset:4122*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4122*0 + 3*606*FLEN/8, x4, x1, x2)

inst_1375:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x8007ff; valaddr_reg:x3; val_offset:4125*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4125*0 + 3*607*FLEN/8, x4, x1, x2)

inst_1376:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x800fff; valaddr_reg:x3; val_offset:4128*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4128*0 + 3*608*FLEN/8, x4, x1, x2)

inst_1377:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x801fff; valaddr_reg:x3; val_offset:4131*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4131*0 + 3*609*FLEN/8, x4, x1, x2)

inst_1378:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x803fff; valaddr_reg:x3; val_offset:4134*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4134*0 + 3*610*FLEN/8, x4, x1, x2)

inst_1379:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x807fff; valaddr_reg:x3; val_offset:4137*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4137*0 + 3*611*FLEN/8, x4, x1, x2)

inst_1380:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x80ffff; valaddr_reg:x3; val_offset:4140*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4140*0 + 3*612*FLEN/8, x4, x1, x2)

inst_1381:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x81ffff; valaddr_reg:x3; val_offset:4143*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4143*0 + 3*613*FLEN/8, x4, x1, x2)

inst_1382:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x83ffff; valaddr_reg:x3; val_offset:4146*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4146*0 + 3*614*FLEN/8, x4, x1, x2)

inst_1383:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x87ffff; valaddr_reg:x3; val_offset:4149*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4149*0 + 3*615*FLEN/8, x4, x1, x2)

inst_1384:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x8fffff; valaddr_reg:x3; val_offset:4152*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4152*0 + 3*616*FLEN/8, x4, x1, x2)

inst_1385:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:4155*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4155*0 + 3*617*FLEN/8, x4, x1, x2)

inst_1386:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0x9fffff; valaddr_reg:x3; val_offset:4158*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4158*0 + 3*618*FLEN/8, x4, x1, x2)

inst_1387:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:4161*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4161*0 + 3*619*FLEN/8, x4, x1, x2)

inst_1388:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:4164*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4164*0 + 3*620*FLEN/8, x4, x1, x2)

inst_1389:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:4167*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4167*0 + 3*621*FLEN/8, x4, x1, x2)

inst_1390:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:4170*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4170*0 + 3*622*FLEN/8, x4, x1, x2)

inst_1391:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xbfffff; valaddr_reg:x3; val_offset:4173*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4173*0 + 3*623*FLEN/8, x4, x1, x2)

inst_1392:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xc00000; valaddr_reg:x3; val_offset:4176*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4176*0 + 3*624*FLEN/8, x4, x1, x2)

inst_1393:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:4179*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4179*0 + 3*625*FLEN/8, x4, x1, x2)

inst_1394:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:4182*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4182*0 + 3*626*FLEN/8, x4, x1, x2)

inst_1395:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:4185*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4185*0 + 3*627*FLEN/8, x4, x1, x2)

inst_1396:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xe00000; valaddr_reg:x3; val_offset:4188*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4188*0 + 3*628*FLEN/8, x4, x1, x2)

inst_1397:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:4191*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4191*0 + 3*629*FLEN/8, x4, x1, x2)

inst_1398:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:4194*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4194*0 + 3*630*FLEN/8, x4, x1, x2)

inst_1399:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xf00000; valaddr_reg:x3; val_offset:4197*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4197*0 + 3*631*FLEN/8, x4, x1, x2)

inst_1400:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xf80000; valaddr_reg:x3; val_offset:4200*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4200*0 + 3*632*FLEN/8, x4, x1, x2)

inst_1401:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfc0000; valaddr_reg:x3; val_offset:4203*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4203*0 + 3*633*FLEN/8, x4, x1, x2)

inst_1402:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfe0000; valaddr_reg:x3; val_offset:4206*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4206*0 + 3*634*FLEN/8, x4, x1, x2)

inst_1403:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xff0000; valaddr_reg:x3; val_offset:4209*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4209*0 + 3*635*FLEN/8, x4, x1, x2)

inst_1404:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xff8000; valaddr_reg:x3; val_offset:4212*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4212*0 + 3*636*FLEN/8, x4, x1, x2)

inst_1405:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xffc000; valaddr_reg:x3; val_offset:4215*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4215*0 + 3*637*FLEN/8, x4, x1, x2)

inst_1406:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xffe000; valaddr_reg:x3; val_offset:4218*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4218*0 + 3*638*FLEN/8, x4, x1, x2)

inst_1407:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfff000; valaddr_reg:x3; val_offset:4221*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4221*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_1408:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfff800; valaddr_reg:x3; val_offset:4224*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4224*0 + 3*640*FLEN/8, x4, x1, x2)

inst_1409:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfffc00; valaddr_reg:x3; val_offset:4227*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4227*0 + 3*641*FLEN/8, x4, x1, x2)

inst_1410:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfffe00; valaddr_reg:x3; val_offset:4230*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4230*0 + 3*642*FLEN/8, x4, x1, x2)

inst_1411:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xffff00; valaddr_reg:x3; val_offset:4233*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4233*0 + 3*643*FLEN/8, x4, x1, x2)

inst_1412:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xffff80; valaddr_reg:x3; val_offset:4236*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4236*0 + 3*644*FLEN/8, x4, x1, x2)

inst_1413:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xffffc0; valaddr_reg:x3; val_offset:4239*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4239*0 + 3*645*FLEN/8, x4, x1, x2)

inst_1414:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xffffe0; valaddr_reg:x3; val_offset:4242*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4242*0 + 3*646*FLEN/8, x4, x1, x2)

inst_1415:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfffff0; valaddr_reg:x3; val_offset:4245*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4245*0 + 3*647*FLEN/8, x4, x1, x2)

inst_1416:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:4248*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4248*0 + 3*648*FLEN/8, x4, x1, x2)

inst_1417:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:4251*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4251*0 + 3*649*FLEN/8, x4, x1, x2)

inst_1418:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:4254*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4254*0 + 3*650*FLEN/8, x4, x1, x2)

inst_1419:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5df48a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cddf48a; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:4257*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4257*0 + 3*651*FLEN/8, x4, x1, x2)

inst_1420:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:4260*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4260*0 + 3*652*FLEN/8, x4, x1, x2)

inst_1421:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:4263*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4263*0 + 3*653*FLEN/8, x4, x1, x2)

inst_1422:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:4266*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4266*0 + 3*654*FLEN/8, x4, x1, x2)

inst_1423:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:4269*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4269*0 + 3*655*FLEN/8, x4, x1, x2)

inst_1424:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:4272*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4272*0 + 3*656*FLEN/8, x4, x1, x2)

inst_1425:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:4275*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4275*0 + 3*657*FLEN/8, x4, x1, x2)

inst_1426:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:4278*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4278*0 + 3*658*FLEN/8, x4, x1, x2)

inst_1427:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:4281*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4281*0 + 3*659*FLEN/8, x4, x1, x2)

inst_1428:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:4284*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4284*0 + 3*660*FLEN/8, x4, x1, x2)

inst_1429:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:4287*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4287*0 + 3*661*FLEN/8, x4, x1, x2)

inst_1430:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:4290*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4290*0 + 3*662*FLEN/8, x4, x1, x2)

inst_1431:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:4293*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4293*0 + 3*663*FLEN/8, x4, x1, x2)

inst_1432:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:4296*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4296*0 + 3*664*FLEN/8, x4, x1, x2)

inst_1433:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:4299*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4299*0 + 3*665*FLEN/8, x4, x1, x2)

inst_1434:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:4302*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4302*0 + 3*666*FLEN/8, x4, x1, x2)

inst_1435:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:4305*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4305*0 + 3*667*FLEN/8, x4, x1, x2)

inst_1436:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84000000; valaddr_reg:x3; val_offset:4308*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4308*0 + 3*668*FLEN/8, x4, x1, x2)

inst_1437:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84000001; valaddr_reg:x3; val_offset:4311*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4311*0 + 3*669*FLEN/8, x4, x1, x2)

inst_1438:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84000003; valaddr_reg:x3; val_offset:4314*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4314*0 + 3*670*FLEN/8, x4, x1, x2)

inst_1439:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84000007; valaddr_reg:x3; val_offset:4317*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4317*0 + 3*671*FLEN/8, x4, x1, x2)

inst_1440:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x8400000f; valaddr_reg:x3; val_offset:4320*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4320*0 + 3*672*FLEN/8, x4, x1, x2)

inst_1441:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x8400001f; valaddr_reg:x3; val_offset:4323*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4323*0 + 3*673*FLEN/8, x4, x1, x2)

inst_1442:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x8400003f; valaddr_reg:x3; val_offset:4326*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4326*0 + 3*674*FLEN/8, x4, x1, x2)

inst_1443:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x8400007f; valaddr_reg:x3; val_offset:4329*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4329*0 + 3*675*FLEN/8, x4, x1, x2)

inst_1444:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x840000ff; valaddr_reg:x3; val_offset:4332*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4332*0 + 3*676*FLEN/8, x4, x1, x2)

inst_1445:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x840001ff; valaddr_reg:x3; val_offset:4335*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4335*0 + 3*677*FLEN/8, x4, x1, x2)

inst_1446:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x840003ff; valaddr_reg:x3; val_offset:4338*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4338*0 + 3*678*FLEN/8, x4, x1, x2)

inst_1447:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x840007ff; valaddr_reg:x3; val_offset:4341*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4341*0 + 3*679*FLEN/8, x4, x1, x2)

inst_1448:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84000fff; valaddr_reg:x3; val_offset:4344*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4344*0 + 3*680*FLEN/8, x4, x1, x2)

inst_1449:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84001fff; valaddr_reg:x3; val_offset:4347*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4347*0 + 3*681*FLEN/8, x4, x1, x2)

inst_1450:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84003fff; valaddr_reg:x3; val_offset:4350*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4350*0 + 3*682*FLEN/8, x4, x1, x2)

inst_1451:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84007fff; valaddr_reg:x3; val_offset:4353*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4353*0 + 3*683*FLEN/8, x4, x1, x2)

inst_1452:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x8400ffff; valaddr_reg:x3; val_offset:4356*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4356*0 + 3*684*FLEN/8, x4, x1, x2)

inst_1453:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x8401ffff; valaddr_reg:x3; val_offset:4359*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4359*0 + 3*685*FLEN/8, x4, x1, x2)

inst_1454:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x8403ffff; valaddr_reg:x3; val_offset:4362*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4362*0 + 3*686*FLEN/8, x4, x1, x2)

inst_1455:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x8407ffff; valaddr_reg:x3; val_offset:4365*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4365*0 + 3*687*FLEN/8, x4, x1, x2)

inst_1456:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x840fffff; valaddr_reg:x3; val_offset:4368*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4368*0 + 3*688*FLEN/8, x4, x1, x2)

inst_1457:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x841fffff; valaddr_reg:x3; val_offset:4371*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4371*0 + 3*689*FLEN/8, x4, x1, x2)

inst_1458:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x843fffff; valaddr_reg:x3; val_offset:4374*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4374*0 + 3*690*FLEN/8, x4, x1, x2)

inst_1459:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84400000; valaddr_reg:x3; val_offset:4377*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4377*0 + 3*691*FLEN/8, x4, x1, x2)

inst_1460:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84600000; valaddr_reg:x3; val_offset:4380*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4380*0 + 3*692*FLEN/8, x4, x1, x2)

inst_1461:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84700000; valaddr_reg:x3; val_offset:4383*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4383*0 + 3*693*FLEN/8, x4, x1, x2)

inst_1462:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x84780000; valaddr_reg:x3; val_offset:4386*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4386*0 + 3*694*FLEN/8, x4, x1, x2)

inst_1463:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847c0000; valaddr_reg:x3; val_offset:4389*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4389*0 + 3*695*FLEN/8, x4, x1, x2)

inst_1464:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847e0000; valaddr_reg:x3; val_offset:4392*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4392*0 + 3*696*FLEN/8, x4, x1, x2)

inst_1465:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847f0000; valaddr_reg:x3; val_offset:4395*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4395*0 + 3*697*FLEN/8, x4, x1, x2)

inst_1466:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847f8000; valaddr_reg:x3; val_offset:4398*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4398*0 + 3*698*FLEN/8, x4, x1, x2)

inst_1467:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847fc000; valaddr_reg:x3; val_offset:4401*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4401*0 + 3*699*FLEN/8, x4, x1, x2)

inst_1468:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847fe000; valaddr_reg:x3; val_offset:4404*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4404*0 + 3*700*FLEN/8, x4, x1, x2)

inst_1469:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847ff000; valaddr_reg:x3; val_offset:4407*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4407*0 + 3*701*FLEN/8, x4, x1, x2)

inst_1470:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847ff800; valaddr_reg:x3; val_offset:4410*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4410*0 + 3*702*FLEN/8, x4, x1, x2)

inst_1471:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847ffc00; valaddr_reg:x3; val_offset:4413*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4413*0 + 3*703*FLEN/8, x4, x1, x2)

inst_1472:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847ffe00; valaddr_reg:x3; val_offset:4416*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4416*0 + 3*704*FLEN/8, x4, x1, x2)

inst_1473:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847fff00; valaddr_reg:x3; val_offset:4419*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4419*0 + 3*705*FLEN/8, x4, x1, x2)

inst_1474:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847fff80; valaddr_reg:x3; val_offset:4422*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4422*0 + 3*706*FLEN/8, x4, x1, x2)

inst_1475:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847fffc0; valaddr_reg:x3; val_offset:4425*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4425*0 + 3*707*FLEN/8, x4, x1, x2)

inst_1476:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847fffe0; valaddr_reg:x3; val_offset:4428*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4428*0 + 3*708*FLEN/8, x4, x1, x2)

inst_1477:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847ffff0; valaddr_reg:x3; val_offset:4431*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4431*0 + 3*709*FLEN/8, x4, x1, x2)

inst_1478:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847ffff8; valaddr_reg:x3; val_offset:4434*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4434*0 + 3*710*FLEN/8, x4, x1, x2)

inst_1479:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847ffffc; valaddr_reg:x3; val_offset:4437*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4437*0 + 3*711*FLEN/8, x4, x1, x2)

inst_1480:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847ffffe; valaddr_reg:x3; val_offset:4440*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4440*0 + 3*712*FLEN/8, x4, x1, x2)

inst_1481:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed6a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cded6a0; op2val:0x80000000;
op3val:0x847fffff; valaddr_reg:x3; val_offset:4443*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4443*0 + 3*713*FLEN/8, x4, x1, x2)

inst_1482:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:4446*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4446*0 + 3*714*FLEN/8, x4, x1, x2)

inst_1483:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:4449*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4449*0 + 3*715*FLEN/8, x4, x1, x2)

inst_1484:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:4452*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4452*0 + 3*716*FLEN/8, x4, x1, x2)

inst_1485:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:4455*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4455*0 + 3*717*FLEN/8, x4, x1, x2)

inst_1486:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:4458*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4458*0 + 3*718*FLEN/8, x4, x1, x2)

inst_1487:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:4461*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4461*0 + 3*719*FLEN/8, x4, x1, x2)

inst_1488:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:4464*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4464*0 + 3*720*FLEN/8, x4, x1, x2)

inst_1489:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:4467*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4467*0 + 3*721*FLEN/8, x4, x1, x2)

inst_1490:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:4470*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4470*0 + 3*722*FLEN/8, x4, x1, x2)

inst_1491:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:4473*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4473*0 + 3*723*FLEN/8, x4, x1, x2)

inst_1492:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:4476*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4476*0 + 3*724*FLEN/8, x4, x1, x2)

inst_1493:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:4479*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4479*0 + 3*725*FLEN/8, x4, x1, x2)

inst_1494:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:4482*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4482*0 + 3*726*FLEN/8, x4, x1, x2)

inst_1495:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:4485*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4485*0 + 3*727*FLEN/8, x4, x1, x2)

inst_1496:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:4488*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4488*0 + 3*728*FLEN/8, x4, x1, x2)

inst_1497:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:4491*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4491*0 + 3*729*FLEN/8, x4, x1, x2)

inst_1498:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e800000; valaddr_reg:x3; val_offset:4494*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4494*0 + 3*730*FLEN/8, x4, x1, x2)

inst_1499:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e800001; valaddr_reg:x3; val_offset:4497*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4497*0 + 3*731*FLEN/8, x4, x1, x2)

inst_1500:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e800003; valaddr_reg:x3; val_offset:4500*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4500*0 + 3*732*FLEN/8, x4, x1, x2)

inst_1501:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e800007; valaddr_reg:x3; val_offset:4503*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4503*0 + 3*733*FLEN/8, x4, x1, x2)

inst_1502:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e80000f; valaddr_reg:x3; val_offset:4506*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4506*0 + 3*734*FLEN/8, x4, x1, x2)

inst_1503:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e80001f; valaddr_reg:x3; val_offset:4509*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4509*0 + 3*735*FLEN/8, x4, x1, x2)

inst_1504:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e80003f; valaddr_reg:x3; val_offset:4512*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4512*0 + 3*736*FLEN/8, x4, x1, x2)

inst_1505:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e80007f; valaddr_reg:x3; val_offset:4515*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4515*0 + 3*737*FLEN/8, x4, x1, x2)

inst_1506:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e8000ff; valaddr_reg:x3; val_offset:4518*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4518*0 + 3*738*FLEN/8, x4, x1, x2)

inst_1507:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e8001ff; valaddr_reg:x3; val_offset:4521*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4521*0 + 3*739*FLEN/8, x4, x1, x2)

inst_1508:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e8003ff; valaddr_reg:x3; val_offset:4524*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4524*0 + 3*740*FLEN/8, x4, x1, x2)

inst_1509:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e8007ff; valaddr_reg:x3; val_offset:4527*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4527*0 + 3*741*FLEN/8, x4, x1, x2)

inst_1510:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e800fff; valaddr_reg:x3; val_offset:4530*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4530*0 + 3*742*FLEN/8, x4, x1, x2)

inst_1511:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e801fff; valaddr_reg:x3; val_offset:4533*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4533*0 + 3*743*FLEN/8, x4, x1, x2)

inst_1512:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e803fff; valaddr_reg:x3; val_offset:4536*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4536*0 + 3*744*FLEN/8, x4, x1, x2)

inst_1513:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e807fff; valaddr_reg:x3; val_offset:4539*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4539*0 + 3*745*FLEN/8, x4, x1, x2)

inst_1514:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e80ffff; valaddr_reg:x3; val_offset:4542*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4542*0 + 3*746*FLEN/8, x4, x1, x2)

inst_1515:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e81ffff; valaddr_reg:x3; val_offset:4545*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4545*0 + 3*747*FLEN/8, x4, x1, x2)

inst_1516:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e83ffff; valaddr_reg:x3; val_offset:4548*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4548*0 + 3*748*FLEN/8, x4, x1, x2)

inst_1517:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e87ffff; valaddr_reg:x3; val_offset:4551*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4551*0 + 3*749*FLEN/8, x4, x1, x2)

inst_1518:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e8fffff; valaddr_reg:x3; val_offset:4554*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4554*0 + 3*750*FLEN/8, x4, x1, x2)

inst_1519:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8e9fffff; valaddr_reg:x3; val_offset:4557*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4557*0 + 3*751*FLEN/8, x4, x1, x2)

inst_1520:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8ebfffff; valaddr_reg:x3; val_offset:4560*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4560*0 + 3*752*FLEN/8, x4, x1, x2)

inst_1521:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8ec00000; valaddr_reg:x3; val_offset:4563*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4563*0 + 3*753*FLEN/8, x4, x1, x2)

inst_1522:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8ee00000; valaddr_reg:x3; val_offset:4566*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4566*0 + 3*754*FLEN/8, x4, x1, x2)

inst_1523:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8ef00000; valaddr_reg:x3; val_offset:4569*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4569*0 + 3*755*FLEN/8, x4, x1, x2)

inst_1524:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8ef80000; valaddr_reg:x3; val_offset:4572*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4572*0 + 3*756*FLEN/8, x4, x1, x2)

inst_1525:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8efc0000; valaddr_reg:x3; val_offset:4575*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4575*0 + 3*757*FLEN/8, x4, x1, x2)

inst_1526:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8efe0000; valaddr_reg:x3; val_offset:4578*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4578*0 + 3*758*FLEN/8, x4, x1, x2)

inst_1527:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8eff0000; valaddr_reg:x3; val_offset:4581*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4581*0 + 3*759*FLEN/8, x4, x1, x2)

inst_1528:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8eff8000; valaddr_reg:x3; val_offset:4584*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4584*0 + 3*760*FLEN/8, x4, x1, x2)

inst_1529:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8effc000; valaddr_reg:x3; val_offset:4587*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4587*0 + 3*761*FLEN/8, x4, x1, x2)

inst_1530:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8effe000; valaddr_reg:x3; val_offset:4590*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4590*0 + 3*762*FLEN/8, x4, x1, x2)

inst_1531:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8efff000; valaddr_reg:x3; val_offset:4593*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4593*0 + 3*763*FLEN/8, x4, x1, x2)

inst_1532:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8efff800; valaddr_reg:x3; val_offset:4596*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4596*0 + 3*764*FLEN/8, x4, x1, x2)

inst_1533:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8efffc00; valaddr_reg:x3; val_offset:4599*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4599*0 + 3*765*FLEN/8, x4, x1, x2)

inst_1534:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8efffe00; valaddr_reg:x3; val_offset:4602*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4602*0 + 3*766*FLEN/8, x4, x1, x2)

inst_1535:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x015d4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d015d4c; op2val:0x80000000;
op3val:0x8effff00; valaddr_reg:x3; val_offset:4605*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 4605*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4141875200,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4142923776,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143448064,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143710208,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143841280,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143906816,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143939584,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143955968,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143964160,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143968256,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143970304,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143971328,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143971840,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143972096,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143972224,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143972288,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143972320,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143972336,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143972344,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143972348,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143972350,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4143972351,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2089405756,32,FLEN)
NAN_BOXED(3261975163,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177526784,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177526785,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177526787,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177526791,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177526799,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177526815,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177526847,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177526911,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177527039,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177527295,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177527807,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177528831,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177530879,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177534975,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177543167,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177559551,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177592319,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177657855,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4177788927,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4178051071,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4178575359,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4179623935,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4181721087,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4181721088,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4183818240,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4184866816,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185391104,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185653248,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185784320,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185849856,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185882624,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185899008,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185907200,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185911296,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185913344,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185914368,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185914880,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185915136,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185915264,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185915328,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185915360,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185915376,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185915384,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185915388,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185915390,32,FLEN)
NAN_BOXED(2089832047,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(4185915391,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986176,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986177,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986179,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986183,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986191,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986207,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986239,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986303,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986431,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071986687,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071987199,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071988223,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071990271,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2071994367,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2072002559,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2072018943,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2072051711,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2072117247,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2072248319,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2072510463,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2073034751,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2074083327,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2076180479,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2076180480,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2078277632,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2079326208,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2079850496,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080112640,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080243712,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080309248,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080342016,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080358400,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080366592,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080370688,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080372736,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080373760,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374272,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374528,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374656,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374720,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374752,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374768,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374776,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374780,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374782,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2080374783,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2090649331,32,FLEN)
NAN_BOXED(1112605329,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304000,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304001,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304003,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304007,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304015,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304031,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304063,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304127,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304255,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194304511,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194305023,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194306047,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194308095,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194312191,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194320383,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194336767,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194369535,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194435071,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194566143,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4194828287,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4195352575,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4196401151,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4198498303,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4198498304,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4200595456,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4201644032,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202168320,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202430464,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202561536,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202627072,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202659840,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202676224,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202684416,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202688512,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202690560,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202691584,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692096,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692352,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692480,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692544,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692576,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692592,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692600,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692604,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692606,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4202692607,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2091110799,32,FLEN)
NAN_BOXED(3259500208,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130432,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130433,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130435,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130439,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130447,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130463,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130495,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130559,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130687,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082130943,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082131455,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082132479,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082134527,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082138623,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082146815,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082163199,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082195967,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082261503,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082392575,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1082654719,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1083179007,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1084227583,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1086324735,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1086324736,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1088421888,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1089470464,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1089994752,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090256896,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090387968,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090453504,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090486272,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090502656,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090510848,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090514944,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090516992,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090518016,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090518528,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090518784,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090518912,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090518976,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090519008,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090519024,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090519032,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090519036,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090519038,32,FLEN)
NAN_BOXED(2091214692,32,FLEN)
NAN_BOXED(38149096,32,FLEN)
NAN_BOXED(1090519039,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093640704,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093640705,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093640707,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093640711,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093640719,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093640735,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093640767,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093640831,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093640959,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093641215,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093641727,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093642751,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093644799,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093648895,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093657087,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093673471,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093706239,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093771775,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4093902847,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4094164991,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4094689279,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4095737855,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4097835007,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4097835008,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4099932160,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4100980736,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4101505024,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4101767168,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4101898240,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4101963776,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4101996544,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102012928,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102021120,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102025216,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102027264,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102028288,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102028800,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102029056,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102029184,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102029248,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102029280,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102029296,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102029304,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102029308,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102029310,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4102029311,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2091440754,32,FLEN)
NAN_BOXED(3259109337,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886080,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886081,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886083,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886087,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886095,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886111,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886143,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886207,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886335,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83886591,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83887103,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83888127,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83890175,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83894271,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83902463,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83918847,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(83951615,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(84017151,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(84148223,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(84410367,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(84934655,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(85983231,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(88080383,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(88080384,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(90177536,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(91226112,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(91750400,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92012544,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92143616,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92209152,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92241920,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92258304,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92266496,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92270592,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92272640,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92273664,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274176,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274432,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274560,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274624,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274656,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274672,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274680,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274684,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274686,32,FLEN)
NAN_BOXED(2091687093,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(92274687,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943040,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943041,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943043,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943047,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943055,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943071,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943103,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943167,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943295,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943551,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41944063,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41945087,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41947135,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41951231,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41959423,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41975807,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42008575,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42074111,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42205183,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42467327,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42991615,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(44040191,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(46137343,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(46137344,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(48234496,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(49283072,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(49807360,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50069504,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50200576,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50266112,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50298880,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50315264,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50323456,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50327552,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50329600,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50330624,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331136,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331392,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331520,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331584,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331616,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331632,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331640,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331644,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331646,32,FLEN)
NAN_BOXED(2092206412,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331647,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825408,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825409,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825411,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825415,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825423,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825439,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825471,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825535,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825663,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895825919,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895826431,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895827455,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895829503,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895833599,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895841791,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895858175,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895890943,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1895956479,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1896087551,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1896349695,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1896873983,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1897922559,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1900019711,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1900019712,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1902116864,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1903165440,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1903689728,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1903951872,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904082944,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904148480,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904181248,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904197632,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904205824,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904209920,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904211968,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904212992,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904213504,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904213760,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904213888,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904213952,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904213984,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904214000,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904214008,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904214012,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904214014,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(1904214015,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2092524386,32,FLEN)
NAN_BOXED(1110491358,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629145600,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629145601,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629145603,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629145607,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629145615,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629145631,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629145663,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629145727,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629145855,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629146111,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629146623,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629147647,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629149695,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629153791,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629161983,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629178367,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629211135,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629276671,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629407743,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(629669887,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(630194175,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(631242751,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(633339903,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(633339904,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(635437056,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(636485632,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637009920,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637272064,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637403136,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637468672,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637501440,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637517824,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637526016,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637530112,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637532160,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637533184,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637533696,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637533952,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637534080,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637534144,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637534176,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637534192,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637534200,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637534204,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637534206,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(637534207,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2093009139,32,FLEN)
NAN_BOXED(36305093,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388608,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388623,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388639,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388671,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388735,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388863,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8389119,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8389631,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8390655,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8392703,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8396799,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8404991,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8421375,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8454143,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8519679,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8650751,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8912895,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(9437183,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10485759,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12582911,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12582912,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14680064,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15728640,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16252928,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16515072,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16646144,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16711680,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16744448,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16760832,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16769024,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16773120,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16775168,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776192,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776704,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16776960,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777088,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777152,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777184,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777200,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2094920842,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777215,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592512,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592513,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592515,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592519,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592527,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592543,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592575,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592639,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592767,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214593023,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214593535,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214594559,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214596607,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214600703,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214608895,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214625279,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214658047,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214723583,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214854655,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2215116799,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2215641087,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2216689663,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2218786815,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2218786816,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2220883968,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2221932544,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222456832,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222718976,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222850048,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222915584,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222948352,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222964736,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222972928,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222977024,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222979072,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980096,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980608,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980864,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980992,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981056,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981088,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981104,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981112,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981116,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981118,32,FLEN)
NAN_BOXED(2094978720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981119,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753280,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753281,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753283,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753287,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753295,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753311,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753343,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753407,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753535,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753791,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390754303,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390755327,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390757375,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390761471,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390769663,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390786047,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390818815,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390884351,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2391015423,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2391277567,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2391801855,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2392850431,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2394947583,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2394947584,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2397044736,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2398093312,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2398617600,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2398879744,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399010816,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399076352,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399109120,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399125504,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399133696,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399137792,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399139840,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399140864,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141376,32,FLEN)
NAN_BOXED(2097241420,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141632,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
