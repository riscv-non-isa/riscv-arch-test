
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_7680:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe580ffff; valaddr_reg:x3; val_offset:23040*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23040*0 + 3*0*FLEN/8, x4, x1, x2)

inst_7681:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe581ffff; valaddr_reg:x3; val_offset:23043*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23043*0 + 3*1*FLEN/8, x4, x1, x2)

inst_7682:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe583ffff; valaddr_reg:x3; val_offset:23046*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23046*0 + 3*2*FLEN/8, x4, x1, x2)

inst_7683:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe587ffff; valaddr_reg:x3; val_offset:23049*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23049*0 + 3*3*FLEN/8, x4, x1, x2)

inst_7684:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe58fffff; valaddr_reg:x3; val_offset:23052*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23052*0 + 3*4*FLEN/8, x4, x1, x2)

inst_7685:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe59fffff; valaddr_reg:x3; val_offset:23055*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23055*0 + 3*5*FLEN/8, x4, x1, x2)

inst_7686:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5bfffff; valaddr_reg:x3; val_offset:23058*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23058*0 + 3*6*FLEN/8, x4, x1, x2)

inst_7687:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5c00000; valaddr_reg:x3; val_offset:23061*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23061*0 + 3*7*FLEN/8, x4, x1, x2)

inst_7688:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5e00000; valaddr_reg:x3; val_offset:23064*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23064*0 + 3*8*FLEN/8, x4, x1, x2)

inst_7689:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5f00000; valaddr_reg:x3; val_offset:23067*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23067*0 + 3*9*FLEN/8, x4, x1, x2)

inst_7690:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5f80000; valaddr_reg:x3; val_offset:23070*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23070*0 + 3*10*FLEN/8, x4, x1, x2)

inst_7691:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fc0000; valaddr_reg:x3; val_offset:23073*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23073*0 + 3*11*FLEN/8, x4, x1, x2)

inst_7692:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fe0000; valaddr_reg:x3; val_offset:23076*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23076*0 + 3*12*FLEN/8, x4, x1, x2)

inst_7693:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5ff0000; valaddr_reg:x3; val_offset:23079*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23079*0 + 3*13*FLEN/8, x4, x1, x2)

inst_7694:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5ff8000; valaddr_reg:x3; val_offset:23082*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23082*0 + 3*14*FLEN/8, x4, x1, x2)

inst_7695:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5ffc000; valaddr_reg:x3; val_offset:23085*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23085*0 + 3*15*FLEN/8, x4, x1, x2)

inst_7696:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5ffe000; valaddr_reg:x3; val_offset:23088*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23088*0 + 3*16*FLEN/8, x4, x1, x2)

inst_7697:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fff000; valaddr_reg:x3; val_offset:23091*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23091*0 + 3*17*FLEN/8, x4, x1, x2)

inst_7698:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fff800; valaddr_reg:x3; val_offset:23094*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23094*0 + 3*18*FLEN/8, x4, x1, x2)

inst_7699:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fffc00; valaddr_reg:x3; val_offset:23097*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23097*0 + 3*19*FLEN/8, x4, x1, x2)

inst_7700:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fffe00; valaddr_reg:x3; val_offset:23100*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23100*0 + 3*20*FLEN/8, x4, x1, x2)

inst_7701:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5ffff00; valaddr_reg:x3; val_offset:23103*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23103*0 + 3*21*FLEN/8, x4, x1, x2)

inst_7702:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5ffff80; valaddr_reg:x3; val_offset:23106*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23106*0 + 3*22*FLEN/8, x4, x1, x2)

inst_7703:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5ffffc0; valaddr_reg:x3; val_offset:23109*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23109*0 + 3*23*FLEN/8, x4, x1, x2)

inst_7704:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5ffffe0; valaddr_reg:x3; val_offset:23112*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23112*0 + 3*24*FLEN/8, x4, x1, x2)

inst_7705:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fffff0; valaddr_reg:x3; val_offset:23115*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23115*0 + 3*25*FLEN/8, x4, x1, x2)

inst_7706:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fffff8; valaddr_reg:x3; val_offset:23118*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23118*0 + 3*26*FLEN/8, x4, x1, x2)

inst_7707:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fffffc; valaddr_reg:x3; val_offset:23121*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23121*0 + 3*27*FLEN/8, x4, x1, x2)

inst_7708:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5fffffe; valaddr_reg:x3; val_offset:23124*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23124*0 + 3*28*FLEN/8, x4, x1, x2)

inst_7709:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xcb and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xe5ffffff; valaddr_reg:x3; val_offset:23127*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23127*0 + 3*29*FLEN/8, x4, x1, x2)

inst_7710:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff000001; valaddr_reg:x3; val_offset:23130*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23130*0 + 3*30*FLEN/8, x4, x1, x2)

inst_7711:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff000003; valaddr_reg:x3; val_offset:23133*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23133*0 + 3*31*FLEN/8, x4, x1, x2)

inst_7712:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff000007; valaddr_reg:x3; val_offset:23136*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23136*0 + 3*32*FLEN/8, x4, x1, x2)

inst_7713:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff199999; valaddr_reg:x3; val_offset:23139*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23139*0 + 3*33*FLEN/8, x4, x1, x2)

inst_7714:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff249249; valaddr_reg:x3; val_offset:23142*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23142*0 + 3*34*FLEN/8, x4, x1, x2)

inst_7715:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff333333; valaddr_reg:x3; val_offset:23145*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23145*0 + 3*35*FLEN/8, x4, x1, x2)

inst_7716:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:23148*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23148*0 + 3*36*FLEN/8, x4, x1, x2)

inst_7717:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:23151*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23151*0 + 3*37*FLEN/8, x4, x1, x2)

inst_7718:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff444444; valaddr_reg:x3; val_offset:23154*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23154*0 + 3*38*FLEN/8, x4, x1, x2)

inst_7719:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:23157*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23157*0 + 3*39*FLEN/8, x4, x1, x2)

inst_7720:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:23160*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23160*0 + 3*40*FLEN/8, x4, x1, x2)

inst_7721:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff666666; valaddr_reg:x3; val_offset:23163*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23163*0 + 3*41*FLEN/8, x4, x1, x2)

inst_7722:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:23166*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23166*0 + 3*42*FLEN/8, x4, x1, x2)

inst_7723:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:23169*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23169*0 + 3*43*FLEN/8, x4, x1, x2)

inst_7724:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:23172*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23172*0 + 3*44*FLEN/8, x4, x1, x2)

inst_7725:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19d51f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5502c8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19d51f; op2val:0xc0d502c8;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:23175*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23175*0 + 3*45*FLEN/8, x4, x1, x2)

inst_7726:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:23178*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23178*0 + 3*46*FLEN/8, x4, x1, x2)

inst_7727:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:23181*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23181*0 + 3*47*FLEN/8, x4, x1, x2)

inst_7728:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:23184*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23184*0 + 3*48*FLEN/8, x4, x1, x2)

inst_7729:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:23187*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23187*0 + 3*49*FLEN/8, x4, x1, x2)

inst_7730:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:23190*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23190*0 + 3*50*FLEN/8, x4, x1, x2)

inst_7731:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:23193*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23193*0 + 3*51*FLEN/8, x4, x1, x2)

inst_7732:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:23196*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23196*0 + 3*52*FLEN/8, x4, x1, x2)

inst_7733:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:23199*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23199*0 + 3*53*FLEN/8, x4, x1, x2)

inst_7734:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:23202*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23202*0 + 3*54*FLEN/8, x4, x1, x2)

inst_7735:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:23205*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23205*0 + 3*55*FLEN/8, x4, x1, x2)

inst_7736:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:23208*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23208*0 + 3*56*FLEN/8, x4, x1, x2)

inst_7737:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:23211*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23211*0 + 3*57*FLEN/8, x4, x1, x2)

inst_7738:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:23214*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23214*0 + 3*58*FLEN/8, x4, x1, x2)

inst_7739:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:23217*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23217*0 + 3*59*FLEN/8, x4, x1, x2)

inst_7740:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:23220*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23220*0 + 3*60*FLEN/8, x4, x1, x2)

inst_7741:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:23223*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23223*0 + 3*61*FLEN/8, x4, x1, x2)

inst_7742:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf800000; valaddr_reg:x3; val_offset:23226*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23226*0 + 3*62*FLEN/8, x4, x1, x2)

inst_7743:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf800001; valaddr_reg:x3; val_offset:23229*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23229*0 + 3*63*FLEN/8, x4, x1, x2)

inst_7744:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf800003; valaddr_reg:x3; val_offset:23232*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23232*0 + 3*64*FLEN/8, x4, x1, x2)

inst_7745:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf800007; valaddr_reg:x3; val_offset:23235*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23235*0 + 3*65*FLEN/8, x4, x1, x2)

inst_7746:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf80000f; valaddr_reg:x3; val_offset:23238*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23238*0 + 3*66*FLEN/8, x4, x1, x2)

inst_7747:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf80001f; valaddr_reg:x3; val_offset:23241*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23241*0 + 3*67*FLEN/8, x4, x1, x2)

inst_7748:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf80003f; valaddr_reg:x3; val_offset:23244*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23244*0 + 3*68*FLEN/8, x4, x1, x2)

inst_7749:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf80007f; valaddr_reg:x3; val_offset:23247*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23247*0 + 3*69*FLEN/8, x4, x1, x2)

inst_7750:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf8000ff; valaddr_reg:x3; val_offset:23250*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23250*0 + 3*70*FLEN/8, x4, x1, x2)

inst_7751:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf8001ff; valaddr_reg:x3; val_offset:23253*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23253*0 + 3*71*FLEN/8, x4, x1, x2)

inst_7752:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf8003ff; valaddr_reg:x3; val_offset:23256*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23256*0 + 3*72*FLEN/8, x4, x1, x2)

inst_7753:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf8007ff; valaddr_reg:x3; val_offset:23259*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23259*0 + 3*73*FLEN/8, x4, x1, x2)

inst_7754:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf800fff; valaddr_reg:x3; val_offset:23262*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23262*0 + 3*74*FLEN/8, x4, x1, x2)

inst_7755:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf801fff; valaddr_reg:x3; val_offset:23265*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23265*0 + 3*75*FLEN/8, x4, x1, x2)

inst_7756:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf803fff; valaddr_reg:x3; val_offset:23268*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23268*0 + 3*76*FLEN/8, x4, x1, x2)

inst_7757:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf807fff; valaddr_reg:x3; val_offset:23271*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23271*0 + 3*77*FLEN/8, x4, x1, x2)

inst_7758:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf80ffff; valaddr_reg:x3; val_offset:23274*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23274*0 + 3*78*FLEN/8, x4, x1, x2)

inst_7759:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf81ffff; valaddr_reg:x3; val_offset:23277*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23277*0 + 3*79*FLEN/8, x4, x1, x2)

inst_7760:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf83ffff; valaddr_reg:x3; val_offset:23280*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23280*0 + 3*80*FLEN/8, x4, x1, x2)

inst_7761:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf87ffff; valaddr_reg:x3; val_offset:23283*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23283*0 + 3*81*FLEN/8, x4, x1, x2)

inst_7762:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf8fffff; valaddr_reg:x3; val_offset:23286*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23286*0 + 3*82*FLEN/8, x4, x1, x2)

inst_7763:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xf9fffff; valaddr_reg:x3; val_offset:23289*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23289*0 + 3*83*FLEN/8, x4, x1, x2)

inst_7764:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfbfffff; valaddr_reg:x3; val_offset:23292*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23292*0 + 3*84*FLEN/8, x4, x1, x2)

inst_7765:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfc00000; valaddr_reg:x3; val_offset:23295*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23295*0 + 3*85*FLEN/8, x4, x1, x2)

inst_7766:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfe00000; valaddr_reg:x3; val_offset:23298*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23298*0 + 3*86*FLEN/8, x4, x1, x2)

inst_7767:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xff00000; valaddr_reg:x3; val_offset:23301*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23301*0 + 3*87*FLEN/8, x4, x1, x2)

inst_7768:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xff80000; valaddr_reg:x3; val_offset:23304*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23304*0 + 3*88*FLEN/8, x4, x1, x2)

inst_7769:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffc0000; valaddr_reg:x3; val_offset:23307*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23307*0 + 3*89*FLEN/8, x4, x1, x2)

inst_7770:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffe0000; valaddr_reg:x3; val_offset:23310*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23310*0 + 3*90*FLEN/8, x4, x1, x2)

inst_7771:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfff0000; valaddr_reg:x3; val_offset:23313*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23313*0 + 3*91*FLEN/8, x4, x1, x2)

inst_7772:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfff8000; valaddr_reg:x3; val_offset:23316*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23316*0 + 3*92*FLEN/8, x4, x1, x2)

inst_7773:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfffc000; valaddr_reg:x3; val_offset:23319*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23319*0 + 3*93*FLEN/8, x4, x1, x2)

inst_7774:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfffe000; valaddr_reg:x3; val_offset:23322*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23322*0 + 3*94*FLEN/8, x4, x1, x2)

inst_7775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffff000; valaddr_reg:x3; val_offset:23325*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23325*0 + 3*95*FLEN/8, x4, x1, x2)

inst_7776:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffff800; valaddr_reg:x3; val_offset:23328*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23328*0 + 3*96*FLEN/8, x4, x1, x2)

inst_7777:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffffc00; valaddr_reg:x3; val_offset:23331*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23331*0 + 3*97*FLEN/8, x4, x1, x2)

inst_7778:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffffe00; valaddr_reg:x3; val_offset:23334*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23334*0 + 3*98*FLEN/8, x4, x1, x2)

inst_7779:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfffff00; valaddr_reg:x3; val_offset:23337*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23337*0 + 3*99*FLEN/8, x4, x1, x2)

inst_7780:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfffff80; valaddr_reg:x3; val_offset:23340*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23340*0 + 3*100*FLEN/8, x4, x1, x2)

inst_7781:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfffffc0; valaddr_reg:x3; val_offset:23343*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23343*0 + 3*101*FLEN/8, x4, x1, x2)

inst_7782:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfffffe0; valaddr_reg:x3; val_offset:23346*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23346*0 + 3*102*FLEN/8, x4, x1, x2)

inst_7783:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffffff0; valaddr_reg:x3; val_offset:23349*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23349*0 + 3*103*FLEN/8, x4, x1, x2)

inst_7784:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffffff8; valaddr_reg:x3; val_offset:23352*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23352*0 + 3*104*FLEN/8, x4, x1, x2)

inst_7785:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffffffc; valaddr_reg:x3; val_offset:23355*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23355*0 + 3*105*FLEN/8, x4, x1, x2)

inst_7786:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xffffffe; valaddr_reg:x3; val_offset:23358*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23358*0 + 3*106*FLEN/8, x4, x1, x2)

inst_7787:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a1452 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a1452; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:23361*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23361*0 + 3*107*FLEN/8, x4, x1, x2)

inst_7788:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef800000; valaddr_reg:x3; val_offset:23364*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23364*0 + 3*108*FLEN/8, x4, x1, x2)

inst_7789:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef800001; valaddr_reg:x3; val_offset:23367*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23367*0 + 3*109*FLEN/8, x4, x1, x2)

inst_7790:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef800003; valaddr_reg:x3; val_offset:23370*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23370*0 + 3*110*FLEN/8, x4, x1, x2)

inst_7791:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef800007; valaddr_reg:x3; val_offset:23373*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23373*0 + 3*111*FLEN/8, x4, x1, x2)

inst_7792:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef80000f; valaddr_reg:x3; val_offset:23376*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23376*0 + 3*112*FLEN/8, x4, x1, x2)

inst_7793:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef80001f; valaddr_reg:x3; val_offset:23379*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23379*0 + 3*113*FLEN/8, x4, x1, x2)

inst_7794:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef80003f; valaddr_reg:x3; val_offset:23382*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23382*0 + 3*114*FLEN/8, x4, x1, x2)

inst_7795:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef80007f; valaddr_reg:x3; val_offset:23385*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23385*0 + 3*115*FLEN/8, x4, x1, x2)

inst_7796:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef8000ff; valaddr_reg:x3; val_offset:23388*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23388*0 + 3*116*FLEN/8, x4, x1, x2)

inst_7797:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef8001ff; valaddr_reg:x3; val_offset:23391*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23391*0 + 3*117*FLEN/8, x4, x1, x2)

inst_7798:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef8003ff; valaddr_reg:x3; val_offset:23394*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23394*0 + 3*118*FLEN/8, x4, x1, x2)

inst_7799:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef8007ff; valaddr_reg:x3; val_offset:23397*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23397*0 + 3*119*FLEN/8, x4, x1, x2)

inst_7800:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef800fff; valaddr_reg:x3; val_offset:23400*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23400*0 + 3*120*FLEN/8, x4, x1, x2)

inst_7801:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef801fff; valaddr_reg:x3; val_offset:23403*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23403*0 + 3*121*FLEN/8, x4, x1, x2)

inst_7802:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef803fff; valaddr_reg:x3; val_offset:23406*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23406*0 + 3*122*FLEN/8, x4, x1, x2)

inst_7803:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef807fff; valaddr_reg:x3; val_offset:23409*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23409*0 + 3*123*FLEN/8, x4, x1, x2)

inst_7804:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef80ffff; valaddr_reg:x3; val_offset:23412*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23412*0 + 3*124*FLEN/8, x4, x1, x2)

inst_7805:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef81ffff; valaddr_reg:x3; val_offset:23415*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23415*0 + 3*125*FLEN/8, x4, x1, x2)

inst_7806:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef83ffff; valaddr_reg:x3; val_offset:23418*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23418*0 + 3*126*FLEN/8, x4, x1, x2)

inst_7807:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef87ffff; valaddr_reg:x3; val_offset:23421*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23421*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_7808:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef8fffff; valaddr_reg:x3; val_offset:23424*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23424*0 + 3*128*FLEN/8, x4, x1, x2)

inst_7809:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xef9fffff; valaddr_reg:x3; val_offset:23427*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23427*0 + 3*129*FLEN/8, x4, x1, x2)

inst_7810:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefbfffff; valaddr_reg:x3; val_offset:23430*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23430*0 + 3*130*FLEN/8, x4, x1, x2)

inst_7811:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefc00000; valaddr_reg:x3; val_offset:23433*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23433*0 + 3*131*FLEN/8, x4, x1, x2)

inst_7812:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefe00000; valaddr_reg:x3; val_offset:23436*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23436*0 + 3*132*FLEN/8, x4, x1, x2)

inst_7813:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeff00000; valaddr_reg:x3; val_offset:23439*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23439*0 + 3*133*FLEN/8, x4, x1, x2)

inst_7814:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeff80000; valaddr_reg:x3; val_offset:23442*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23442*0 + 3*134*FLEN/8, x4, x1, x2)

inst_7815:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffc0000; valaddr_reg:x3; val_offset:23445*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23445*0 + 3*135*FLEN/8, x4, x1, x2)

inst_7816:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffe0000; valaddr_reg:x3; val_offset:23448*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23448*0 + 3*136*FLEN/8, x4, x1, x2)

inst_7817:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefff0000; valaddr_reg:x3; val_offset:23451*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23451*0 + 3*137*FLEN/8, x4, x1, x2)

inst_7818:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefff8000; valaddr_reg:x3; val_offset:23454*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23454*0 + 3*138*FLEN/8, x4, x1, x2)

inst_7819:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefffc000; valaddr_reg:x3; val_offset:23457*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23457*0 + 3*139*FLEN/8, x4, x1, x2)

inst_7820:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefffe000; valaddr_reg:x3; val_offset:23460*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23460*0 + 3*140*FLEN/8, x4, x1, x2)

inst_7821:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffff000; valaddr_reg:x3; val_offset:23463*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23463*0 + 3*141*FLEN/8, x4, x1, x2)

inst_7822:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffff800; valaddr_reg:x3; val_offset:23466*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23466*0 + 3*142*FLEN/8, x4, x1, x2)

inst_7823:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffffc00; valaddr_reg:x3; val_offset:23469*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23469*0 + 3*143*FLEN/8, x4, x1, x2)

inst_7824:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffffe00; valaddr_reg:x3; val_offset:23472*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23472*0 + 3*144*FLEN/8, x4, x1, x2)

inst_7825:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefffff00; valaddr_reg:x3; val_offset:23475*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23475*0 + 3*145*FLEN/8, x4, x1, x2)

inst_7826:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefffff80; valaddr_reg:x3; val_offset:23478*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23478*0 + 3*146*FLEN/8, x4, x1, x2)

inst_7827:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefffffc0; valaddr_reg:x3; val_offset:23481*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23481*0 + 3*147*FLEN/8, x4, x1, x2)

inst_7828:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefffffe0; valaddr_reg:x3; val_offset:23484*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23484*0 + 3*148*FLEN/8, x4, x1, x2)

inst_7829:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffffff0; valaddr_reg:x3; val_offset:23487*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23487*0 + 3*149*FLEN/8, x4, x1, x2)

inst_7830:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffffff8; valaddr_reg:x3; val_offset:23490*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23490*0 + 3*150*FLEN/8, x4, x1, x2)

inst_7831:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffffffc; valaddr_reg:x3; val_offset:23493*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23493*0 + 3*151*FLEN/8, x4, x1, x2)

inst_7832:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xeffffffe; valaddr_reg:x3; val_offset:23496*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23496*0 + 3*152*FLEN/8, x4, x1, x2)

inst_7833:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xefffffff; valaddr_reg:x3; val_offset:23499*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23499*0 + 3*153*FLEN/8, x4, x1, x2)

inst_7834:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff000001; valaddr_reg:x3; val_offset:23502*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23502*0 + 3*154*FLEN/8, x4, x1, x2)

inst_7835:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff000003; valaddr_reg:x3; val_offset:23505*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23505*0 + 3*155*FLEN/8, x4, x1, x2)

inst_7836:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff000007; valaddr_reg:x3; val_offset:23508*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23508*0 + 3*156*FLEN/8, x4, x1, x2)

inst_7837:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff199999; valaddr_reg:x3; val_offset:23511*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23511*0 + 3*157*FLEN/8, x4, x1, x2)

inst_7838:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff249249; valaddr_reg:x3; val_offset:23514*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23514*0 + 3*158*FLEN/8, x4, x1, x2)

inst_7839:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff333333; valaddr_reg:x3; val_offset:23517*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23517*0 + 3*159*FLEN/8, x4, x1, x2)

inst_7840:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:23520*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23520*0 + 3*160*FLEN/8, x4, x1, x2)

inst_7841:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:23523*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23523*0 + 3*161*FLEN/8, x4, x1, x2)

inst_7842:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff444444; valaddr_reg:x3; val_offset:23526*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23526*0 + 3*162*FLEN/8, x4, x1, x2)

inst_7843:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:23529*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23529*0 + 3*163*FLEN/8, x4, x1, x2)

inst_7844:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:23532*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23532*0 + 3*164*FLEN/8, x4, x1, x2)

inst_7845:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff666666; valaddr_reg:x3; val_offset:23535*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23535*0 + 3*165*FLEN/8, x4, x1, x2)

inst_7846:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:23538*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23538*0 + 3*166*FLEN/8, x4, x1, x2)

inst_7847:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:23541*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23541*0 + 3*167*FLEN/8, x4, x1, x2)

inst_7848:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:23544*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23544*0 + 3*168*FLEN/8, x4, x1, x2)

inst_7849:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x208219 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4c26cc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e208219; op2val:0xc0cc26cc;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:23547*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23547*0 + 3*169*FLEN/8, x4, x1, x2)

inst_7850:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2000000; valaddr_reg:x3; val_offset:23550*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23550*0 + 3*170*FLEN/8, x4, x1, x2)

inst_7851:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2000001; valaddr_reg:x3; val_offset:23553*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23553*0 + 3*171*FLEN/8, x4, x1, x2)

inst_7852:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2000003; valaddr_reg:x3; val_offset:23556*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23556*0 + 3*172*FLEN/8, x4, x1, x2)

inst_7853:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2000007; valaddr_reg:x3; val_offset:23559*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23559*0 + 3*173*FLEN/8, x4, x1, x2)

inst_7854:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf200000f; valaddr_reg:x3; val_offset:23562*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23562*0 + 3*174*FLEN/8, x4, x1, x2)

inst_7855:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf200001f; valaddr_reg:x3; val_offset:23565*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23565*0 + 3*175*FLEN/8, x4, x1, x2)

inst_7856:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf200003f; valaddr_reg:x3; val_offset:23568*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23568*0 + 3*176*FLEN/8, x4, x1, x2)

inst_7857:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf200007f; valaddr_reg:x3; val_offset:23571*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23571*0 + 3*177*FLEN/8, x4, x1, x2)

inst_7858:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf20000ff; valaddr_reg:x3; val_offset:23574*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23574*0 + 3*178*FLEN/8, x4, x1, x2)

inst_7859:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf20001ff; valaddr_reg:x3; val_offset:23577*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23577*0 + 3*179*FLEN/8, x4, x1, x2)

inst_7860:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf20003ff; valaddr_reg:x3; val_offset:23580*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23580*0 + 3*180*FLEN/8, x4, x1, x2)

inst_7861:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf20007ff; valaddr_reg:x3; val_offset:23583*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23583*0 + 3*181*FLEN/8, x4, x1, x2)

inst_7862:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2000fff; valaddr_reg:x3; val_offset:23586*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23586*0 + 3*182*FLEN/8, x4, x1, x2)

inst_7863:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2001fff; valaddr_reg:x3; val_offset:23589*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23589*0 + 3*183*FLEN/8, x4, x1, x2)

inst_7864:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2003fff; valaddr_reg:x3; val_offset:23592*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23592*0 + 3*184*FLEN/8, x4, x1, x2)

inst_7865:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2007fff; valaddr_reg:x3; val_offset:23595*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23595*0 + 3*185*FLEN/8, x4, x1, x2)

inst_7866:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf200ffff; valaddr_reg:x3; val_offset:23598*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23598*0 + 3*186*FLEN/8, x4, x1, x2)

inst_7867:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf201ffff; valaddr_reg:x3; val_offset:23601*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23601*0 + 3*187*FLEN/8, x4, x1, x2)

inst_7868:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf203ffff; valaddr_reg:x3; val_offset:23604*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23604*0 + 3*188*FLEN/8, x4, x1, x2)

inst_7869:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf207ffff; valaddr_reg:x3; val_offset:23607*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23607*0 + 3*189*FLEN/8, x4, x1, x2)

inst_7870:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf20fffff; valaddr_reg:x3; val_offset:23610*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23610*0 + 3*190*FLEN/8, x4, x1, x2)

inst_7871:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf21fffff; valaddr_reg:x3; val_offset:23613*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23613*0 + 3*191*FLEN/8, x4, x1, x2)

inst_7872:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf23fffff; valaddr_reg:x3; val_offset:23616*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23616*0 + 3*192*FLEN/8, x4, x1, x2)

inst_7873:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2400000; valaddr_reg:x3; val_offset:23619*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23619*0 + 3*193*FLEN/8, x4, x1, x2)

inst_7874:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2600000; valaddr_reg:x3; val_offset:23622*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23622*0 + 3*194*FLEN/8, x4, x1, x2)

inst_7875:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2700000; valaddr_reg:x3; val_offset:23625*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23625*0 + 3*195*FLEN/8, x4, x1, x2)

inst_7876:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf2780000; valaddr_reg:x3; val_offset:23628*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23628*0 + 3*196*FLEN/8, x4, x1, x2)

inst_7877:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27c0000; valaddr_reg:x3; val_offset:23631*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23631*0 + 3*197*FLEN/8, x4, x1, x2)

inst_7878:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27e0000; valaddr_reg:x3; val_offset:23634*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23634*0 + 3*198*FLEN/8, x4, x1, x2)

inst_7879:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27f0000; valaddr_reg:x3; val_offset:23637*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23637*0 + 3*199*FLEN/8, x4, x1, x2)

inst_7880:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27f8000; valaddr_reg:x3; val_offset:23640*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23640*0 + 3*200*FLEN/8, x4, x1, x2)

inst_7881:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27fc000; valaddr_reg:x3; val_offset:23643*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23643*0 + 3*201*FLEN/8, x4, x1, x2)

inst_7882:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27fe000; valaddr_reg:x3; val_offset:23646*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23646*0 + 3*202*FLEN/8, x4, x1, x2)

inst_7883:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27ff000; valaddr_reg:x3; val_offset:23649*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23649*0 + 3*203*FLEN/8, x4, x1, x2)

inst_7884:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27ff800; valaddr_reg:x3; val_offset:23652*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23652*0 + 3*204*FLEN/8, x4, x1, x2)

inst_7885:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27ffc00; valaddr_reg:x3; val_offset:23655*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23655*0 + 3*205*FLEN/8, x4, x1, x2)

inst_7886:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27ffe00; valaddr_reg:x3; val_offset:23658*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23658*0 + 3*206*FLEN/8, x4, x1, x2)

inst_7887:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27fff00; valaddr_reg:x3; val_offset:23661*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23661*0 + 3*207*FLEN/8, x4, x1, x2)

inst_7888:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27fff80; valaddr_reg:x3; val_offset:23664*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23664*0 + 3*208*FLEN/8, x4, x1, x2)

inst_7889:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27fffc0; valaddr_reg:x3; val_offset:23667*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23667*0 + 3*209*FLEN/8, x4, x1, x2)

inst_7890:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27fffe0; valaddr_reg:x3; val_offset:23670*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23670*0 + 3*210*FLEN/8, x4, x1, x2)

inst_7891:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27ffff0; valaddr_reg:x3; val_offset:23673*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23673*0 + 3*211*FLEN/8, x4, x1, x2)

inst_7892:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27ffff8; valaddr_reg:x3; val_offset:23676*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23676*0 + 3*212*FLEN/8, x4, x1, x2)

inst_7893:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27ffffc; valaddr_reg:x3; val_offset:23679*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23679*0 + 3*213*FLEN/8, x4, x1, x2)

inst_7894:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27ffffe; valaddr_reg:x3; val_offset:23682*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23682*0 + 3*214*FLEN/8, x4, x1, x2)

inst_7895:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xf27fffff; valaddr_reg:x3; val_offset:23685*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23685*0 + 3*215*FLEN/8, x4, x1, x2)

inst_7896:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff000001; valaddr_reg:x3; val_offset:23688*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23688*0 + 3*216*FLEN/8, x4, x1, x2)

inst_7897:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff000003; valaddr_reg:x3; val_offset:23691*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23691*0 + 3*217*FLEN/8, x4, x1, x2)

inst_7898:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff000007; valaddr_reg:x3; val_offset:23694*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23694*0 + 3*218*FLEN/8, x4, x1, x2)

inst_7899:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff199999; valaddr_reg:x3; val_offset:23697*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23697*0 + 3*219*FLEN/8, x4, x1, x2)

inst_7900:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff249249; valaddr_reg:x3; val_offset:23700*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23700*0 + 3*220*FLEN/8, x4, x1, x2)

inst_7901:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff333333; valaddr_reg:x3; val_offset:23703*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23703*0 + 3*221*FLEN/8, x4, x1, x2)

inst_7902:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:23706*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23706*0 + 3*222*FLEN/8, x4, x1, x2)

inst_7903:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:23709*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23709*0 + 3*223*FLEN/8, x4, x1, x2)

inst_7904:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff444444; valaddr_reg:x3; val_offset:23712*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23712*0 + 3*224*FLEN/8, x4, x1, x2)

inst_7905:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:23715*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23715*0 + 3*225*FLEN/8, x4, x1, x2)

inst_7906:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:23718*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23718*0 + 3*226*FLEN/8, x4, x1, x2)

inst_7907:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff666666; valaddr_reg:x3; val_offset:23721*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23721*0 + 3*227*FLEN/8, x4, x1, x2)

inst_7908:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:23724*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23724*0 + 3*228*FLEN/8, x4, x1, x2)

inst_7909:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:23727*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23727*0 + 3*229*FLEN/8, x4, x1, x2)

inst_7910:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:23730*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23730*0 + 3*230*FLEN/8, x4, x1, x2)

inst_7911:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20bb94 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4bddca and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20bb94; op2val:0xc0cbddca;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:23733*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23733*0 + 3*231*FLEN/8, x4, x1, x2)

inst_7912:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:23736*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23736*0 + 3*232*FLEN/8, x4, x1, x2)

inst_7913:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:23739*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23739*0 + 3*233*FLEN/8, x4, x1, x2)

inst_7914:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:23742*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23742*0 + 3*234*FLEN/8, x4, x1, x2)

inst_7915:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:23745*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23745*0 + 3*235*FLEN/8, x4, x1, x2)

inst_7916:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:23748*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23748*0 + 3*236*FLEN/8, x4, x1, x2)

inst_7917:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:23751*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23751*0 + 3*237*FLEN/8, x4, x1, x2)

inst_7918:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:23754*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23754*0 + 3*238*FLEN/8, x4, x1, x2)

inst_7919:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:23757*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23757*0 + 3*239*FLEN/8, x4, x1, x2)

inst_7920:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:23760*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23760*0 + 3*240*FLEN/8, x4, x1, x2)

inst_7921:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:23763*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23763*0 + 3*241*FLEN/8, x4, x1, x2)

inst_7922:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:23766*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23766*0 + 3*242*FLEN/8, x4, x1, x2)

inst_7923:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:23769*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23769*0 + 3*243*FLEN/8, x4, x1, x2)

inst_7924:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:23772*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23772*0 + 3*244*FLEN/8, x4, x1, x2)

inst_7925:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:23775*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23775*0 + 3*245*FLEN/8, x4, x1, x2)

inst_7926:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:23778*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23778*0 + 3*246*FLEN/8, x4, x1, x2)

inst_7927:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:23781*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23781*0 + 3*247*FLEN/8, x4, x1, x2)

inst_7928:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b800000; valaddr_reg:x3; val_offset:23784*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23784*0 + 3*248*FLEN/8, x4, x1, x2)

inst_7929:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b800001; valaddr_reg:x3; val_offset:23787*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23787*0 + 3*249*FLEN/8, x4, x1, x2)

inst_7930:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b800003; valaddr_reg:x3; val_offset:23790*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23790*0 + 3*250*FLEN/8, x4, x1, x2)

inst_7931:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b800007; valaddr_reg:x3; val_offset:23793*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23793*0 + 3*251*FLEN/8, x4, x1, x2)

inst_7932:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b80000f; valaddr_reg:x3; val_offset:23796*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23796*0 + 3*252*FLEN/8, x4, x1, x2)

inst_7933:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b80001f; valaddr_reg:x3; val_offset:23799*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23799*0 + 3*253*FLEN/8, x4, x1, x2)

inst_7934:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b80003f; valaddr_reg:x3; val_offset:23802*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23802*0 + 3*254*FLEN/8, x4, x1, x2)

inst_7935:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b80007f; valaddr_reg:x3; val_offset:23805*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23805*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_7936:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b8000ff; valaddr_reg:x3; val_offset:23808*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23808*0 + 3*256*FLEN/8, x4, x1, x2)

inst_7937:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b8001ff; valaddr_reg:x3; val_offset:23811*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23811*0 + 3*257*FLEN/8, x4, x1, x2)

inst_7938:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b8003ff; valaddr_reg:x3; val_offset:23814*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23814*0 + 3*258*FLEN/8, x4, x1, x2)

inst_7939:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b8007ff; valaddr_reg:x3; val_offset:23817*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23817*0 + 3*259*FLEN/8, x4, x1, x2)

inst_7940:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b800fff; valaddr_reg:x3; val_offset:23820*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23820*0 + 3*260*FLEN/8, x4, x1, x2)

inst_7941:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b801fff; valaddr_reg:x3; val_offset:23823*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23823*0 + 3*261*FLEN/8, x4, x1, x2)

inst_7942:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b803fff; valaddr_reg:x3; val_offset:23826*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23826*0 + 3*262*FLEN/8, x4, x1, x2)

inst_7943:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b807fff; valaddr_reg:x3; val_offset:23829*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23829*0 + 3*263*FLEN/8, x4, x1, x2)

inst_7944:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b80ffff; valaddr_reg:x3; val_offset:23832*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23832*0 + 3*264*FLEN/8, x4, x1, x2)

inst_7945:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b81ffff; valaddr_reg:x3; val_offset:23835*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23835*0 + 3*265*FLEN/8, x4, x1, x2)

inst_7946:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b83ffff; valaddr_reg:x3; val_offset:23838*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23838*0 + 3*266*FLEN/8, x4, x1, x2)

inst_7947:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b87ffff; valaddr_reg:x3; val_offset:23841*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23841*0 + 3*267*FLEN/8, x4, x1, x2)

inst_7948:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b8fffff; valaddr_reg:x3; val_offset:23844*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23844*0 + 3*268*FLEN/8, x4, x1, x2)

inst_7949:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8b9fffff; valaddr_reg:x3; val_offset:23847*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23847*0 + 3*269*FLEN/8, x4, x1, x2)

inst_7950:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bbfffff; valaddr_reg:x3; val_offset:23850*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23850*0 + 3*270*FLEN/8, x4, x1, x2)

inst_7951:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bc00000; valaddr_reg:x3; val_offset:23853*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23853*0 + 3*271*FLEN/8, x4, x1, x2)

inst_7952:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8be00000; valaddr_reg:x3; val_offset:23856*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23856*0 + 3*272*FLEN/8, x4, x1, x2)

inst_7953:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bf00000; valaddr_reg:x3; val_offset:23859*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23859*0 + 3*273*FLEN/8, x4, x1, x2)

inst_7954:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bf80000; valaddr_reg:x3; val_offset:23862*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23862*0 + 3*274*FLEN/8, x4, x1, x2)

inst_7955:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfc0000; valaddr_reg:x3; val_offset:23865*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23865*0 + 3*275*FLEN/8, x4, x1, x2)

inst_7956:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfe0000; valaddr_reg:x3; val_offset:23868*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23868*0 + 3*276*FLEN/8, x4, x1, x2)

inst_7957:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bff0000; valaddr_reg:x3; val_offset:23871*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23871*0 + 3*277*FLEN/8, x4, x1, x2)

inst_7958:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bff8000; valaddr_reg:x3; val_offset:23874*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23874*0 + 3*278*FLEN/8, x4, x1, x2)

inst_7959:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bffc000; valaddr_reg:x3; val_offset:23877*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23877*0 + 3*279*FLEN/8, x4, x1, x2)

inst_7960:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bffe000; valaddr_reg:x3; val_offset:23880*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23880*0 + 3*280*FLEN/8, x4, x1, x2)

inst_7961:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfff000; valaddr_reg:x3; val_offset:23883*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23883*0 + 3*281*FLEN/8, x4, x1, x2)

inst_7962:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfff800; valaddr_reg:x3; val_offset:23886*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23886*0 + 3*282*FLEN/8, x4, x1, x2)

inst_7963:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfffc00; valaddr_reg:x3; val_offset:23889*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23889*0 + 3*283*FLEN/8, x4, x1, x2)

inst_7964:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfffe00; valaddr_reg:x3; val_offset:23892*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23892*0 + 3*284*FLEN/8, x4, x1, x2)

inst_7965:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bffff00; valaddr_reg:x3; val_offset:23895*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23895*0 + 3*285*FLEN/8, x4, x1, x2)

inst_7966:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bffff80; valaddr_reg:x3; val_offset:23898*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23898*0 + 3*286*FLEN/8, x4, x1, x2)

inst_7967:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bffffc0; valaddr_reg:x3; val_offset:23901*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23901*0 + 3*287*FLEN/8, x4, x1, x2)

inst_7968:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bffffe0; valaddr_reg:x3; val_offset:23904*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23904*0 + 3*288*FLEN/8, x4, x1, x2)

inst_7969:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfffff0; valaddr_reg:x3; val_offset:23907*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23907*0 + 3*289*FLEN/8, x4, x1, x2)

inst_7970:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfffff8; valaddr_reg:x3; val_offset:23910*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23910*0 + 3*290*FLEN/8, x4, x1, x2)

inst_7971:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfffffc; valaddr_reg:x3; val_offset:23913*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23913*0 + 3*291*FLEN/8, x4, x1, x2)

inst_7972:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bfffffe; valaddr_reg:x3; val_offset:23916*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23916*0 + 3*292*FLEN/8, x4, x1, x2)

inst_7973:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2224db; op2val:0x80000000;
op3val:0x8bffffff; valaddr_reg:x3; val_offset:23919*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23919*0 + 3*293*FLEN/8, x4, x1, x2)

inst_7974:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76000000; valaddr_reg:x3; val_offset:23922*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23922*0 + 3*294*FLEN/8, x4, x1, x2)

inst_7975:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76000001; valaddr_reg:x3; val_offset:23925*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23925*0 + 3*295*FLEN/8, x4, x1, x2)

inst_7976:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76000003; valaddr_reg:x3; val_offset:23928*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23928*0 + 3*296*FLEN/8, x4, x1, x2)

inst_7977:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76000007; valaddr_reg:x3; val_offset:23931*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23931*0 + 3*297*FLEN/8, x4, x1, x2)

inst_7978:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7600000f; valaddr_reg:x3; val_offset:23934*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23934*0 + 3*298*FLEN/8, x4, x1, x2)

inst_7979:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7600001f; valaddr_reg:x3; val_offset:23937*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23937*0 + 3*299*FLEN/8, x4, x1, x2)

inst_7980:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7600003f; valaddr_reg:x3; val_offset:23940*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23940*0 + 3*300*FLEN/8, x4, x1, x2)

inst_7981:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7600007f; valaddr_reg:x3; val_offset:23943*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23943*0 + 3*301*FLEN/8, x4, x1, x2)

inst_7982:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x760000ff; valaddr_reg:x3; val_offset:23946*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23946*0 + 3*302*FLEN/8, x4, x1, x2)

inst_7983:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x760001ff; valaddr_reg:x3; val_offset:23949*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23949*0 + 3*303*FLEN/8, x4, x1, x2)

inst_7984:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x760003ff; valaddr_reg:x3; val_offset:23952*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23952*0 + 3*304*FLEN/8, x4, x1, x2)

inst_7985:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x760007ff; valaddr_reg:x3; val_offset:23955*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23955*0 + 3*305*FLEN/8, x4, x1, x2)

inst_7986:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76000fff; valaddr_reg:x3; val_offset:23958*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23958*0 + 3*306*FLEN/8, x4, x1, x2)

inst_7987:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76001fff; valaddr_reg:x3; val_offset:23961*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23961*0 + 3*307*FLEN/8, x4, x1, x2)

inst_7988:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76003fff; valaddr_reg:x3; val_offset:23964*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23964*0 + 3*308*FLEN/8, x4, x1, x2)

inst_7989:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76007fff; valaddr_reg:x3; val_offset:23967*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23967*0 + 3*309*FLEN/8, x4, x1, x2)

inst_7990:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7600ffff; valaddr_reg:x3; val_offset:23970*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23970*0 + 3*310*FLEN/8, x4, x1, x2)

inst_7991:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7601ffff; valaddr_reg:x3; val_offset:23973*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23973*0 + 3*311*FLEN/8, x4, x1, x2)

inst_7992:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7603ffff; valaddr_reg:x3; val_offset:23976*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23976*0 + 3*312*FLEN/8, x4, x1, x2)

inst_7993:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7607ffff; valaddr_reg:x3; val_offset:23979*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23979*0 + 3*313*FLEN/8, x4, x1, x2)

inst_7994:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x760fffff; valaddr_reg:x3; val_offset:23982*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23982*0 + 3*314*FLEN/8, x4, x1, x2)

inst_7995:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x761fffff; valaddr_reg:x3; val_offset:23985*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23985*0 + 3*315*FLEN/8, x4, x1, x2)

inst_7996:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x763fffff; valaddr_reg:x3; val_offset:23988*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23988*0 + 3*316*FLEN/8, x4, x1, x2)

inst_7997:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76400000; valaddr_reg:x3; val_offset:23991*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23991*0 + 3*317*FLEN/8, x4, x1, x2)

inst_7998:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76600000; valaddr_reg:x3; val_offset:23994*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23994*0 + 3*318*FLEN/8, x4, x1, x2)

inst_7999:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76700000; valaddr_reg:x3; val_offset:23997*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23997*0 + 3*319*FLEN/8, x4, x1, x2)

inst_8000:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x76780000; valaddr_reg:x3; val_offset:24000*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24000*0 + 3*320*FLEN/8, x4, x1, x2)

inst_8001:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767c0000; valaddr_reg:x3; val_offset:24003*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24003*0 + 3*321*FLEN/8, x4, x1, x2)

inst_8002:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767e0000; valaddr_reg:x3; val_offset:24006*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24006*0 + 3*322*FLEN/8, x4, x1, x2)

inst_8003:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767f0000; valaddr_reg:x3; val_offset:24009*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24009*0 + 3*323*FLEN/8, x4, x1, x2)

inst_8004:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767f8000; valaddr_reg:x3; val_offset:24012*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24012*0 + 3*324*FLEN/8, x4, x1, x2)

inst_8005:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767fc000; valaddr_reg:x3; val_offset:24015*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24015*0 + 3*325*FLEN/8, x4, x1, x2)

inst_8006:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767fe000; valaddr_reg:x3; val_offset:24018*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24018*0 + 3*326*FLEN/8, x4, x1, x2)

inst_8007:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767ff000; valaddr_reg:x3; val_offset:24021*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24021*0 + 3*327*FLEN/8, x4, x1, x2)

inst_8008:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767ff800; valaddr_reg:x3; val_offset:24024*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24024*0 + 3*328*FLEN/8, x4, x1, x2)

inst_8009:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767ffc00; valaddr_reg:x3; val_offset:24027*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24027*0 + 3*329*FLEN/8, x4, x1, x2)

inst_8010:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767ffe00; valaddr_reg:x3; val_offset:24030*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24030*0 + 3*330*FLEN/8, x4, x1, x2)

inst_8011:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767fff00; valaddr_reg:x3; val_offset:24033*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24033*0 + 3*331*FLEN/8, x4, x1, x2)

inst_8012:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767fff80; valaddr_reg:x3; val_offset:24036*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24036*0 + 3*332*FLEN/8, x4, x1, x2)

inst_8013:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767fffc0; valaddr_reg:x3; val_offset:24039*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24039*0 + 3*333*FLEN/8, x4, x1, x2)

inst_8014:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767fffe0; valaddr_reg:x3; val_offset:24042*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24042*0 + 3*334*FLEN/8, x4, x1, x2)

inst_8015:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767ffff0; valaddr_reg:x3; val_offset:24045*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24045*0 + 3*335*FLEN/8, x4, x1, x2)

inst_8016:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767ffff8; valaddr_reg:x3; val_offset:24048*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24048*0 + 3*336*FLEN/8, x4, x1, x2)

inst_8017:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767ffffc; valaddr_reg:x3; val_offset:24051*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24051*0 + 3*337*FLEN/8, x4, x1, x2)

inst_8018:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767ffffe; valaddr_reg:x3; val_offset:24054*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24054*0 + 3*338*FLEN/8, x4, x1, x2)

inst_8019:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xec and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x767fffff; valaddr_reg:x3; val_offset:24057*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24057*0 + 3*339*FLEN/8, x4, x1, x2)

inst_8020:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f000001; valaddr_reg:x3; val_offset:24060*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24060*0 + 3*340*FLEN/8, x4, x1, x2)

inst_8021:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f000003; valaddr_reg:x3; val_offset:24063*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24063*0 + 3*341*FLEN/8, x4, x1, x2)

inst_8022:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f000007; valaddr_reg:x3; val_offset:24066*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24066*0 + 3*342*FLEN/8, x4, x1, x2)

inst_8023:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f199999; valaddr_reg:x3; val_offset:24069*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24069*0 + 3*343*FLEN/8, x4, x1, x2)

inst_8024:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f249249; valaddr_reg:x3; val_offset:24072*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24072*0 + 3*344*FLEN/8, x4, x1, x2)

inst_8025:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f333333; valaddr_reg:x3; val_offset:24075*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24075*0 + 3*345*FLEN/8, x4, x1, x2)

inst_8026:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:24078*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24078*0 + 3*346*FLEN/8, x4, x1, x2)

inst_8027:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:24081*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24081*0 + 3*347*FLEN/8, x4, x1, x2)

inst_8028:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f444444; valaddr_reg:x3; val_offset:24084*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24084*0 + 3*348*FLEN/8, x4, x1, x2)

inst_8029:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:24087*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24087*0 + 3*349*FLEN/8, x4, x1, x2)

inst_8030:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:24090*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24090*0 + 3*350*FLEN/8, x4, x1, x2)

inst_8031:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f666666; valaddr_reg:x3; val_offset:24093*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24093*0 + 3*351*FLEN/8, x4, x1, x2)

inst_8032:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:24096*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24096*0 + 3*352*FLEN/8, x4, x1, x2)

inst_8033:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:24099*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24099*0 + 3*353*FLEN/8, x4, x1, x2)

inst_8034:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:24102*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24102*0 + 3*354*FLEN/8, x4, x1, x2)

inst_8035:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22bb5d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x495ca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22bb5d; op2val:0x40c95ca2;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:24105*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24105*0 + 3*355*FLEN/8, x4, x1, x2)

inst_8036:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:24108*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24108*0 + 3*356*FLEN/8, x4, x1, x2)

inst_8037:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:24111*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24111*0 + 3*357*FLEN/8, x4, x1, x2)

inst_8038:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:24114*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24114*0 + 3*358*FLEN/8, x4, x1, x2)

inst_8039:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:24117*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24117*0 + 3*359*FLEN/8, x4, x1, x2)

inst_8040:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:24120*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24120*0 + 3*360*FLEN/8, x4, x1, x2)

inst_8041:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:24123*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24123*0 + 3*361*FLEN/8, x4, x1, x2)

inst_8042:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:24126*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24126*0 + 3*362*FLEN/8, x4, x1, x2)

inst_8043:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:24129*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24129*0 + 3*363*FLEN/8, x4, x1, x2)

inst_8044:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:24132*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24132*0 + 3*364*FLEN/8, x4, x1, x2)

inst_8045:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:24135*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24135*0 + 3*365*FLEN/8, x4, x1, x2)

inst_8046:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:24138*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24138*0 + 3*366*FLEN/8, x4, x1, x2)

inst_8047:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:24141*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24141*0 + 3*367*FLEN/8, x4, x1, x2)

inst_8048:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:24144*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24144*0 + 3*368*FLEN/8, x4, x1, x2)

inst_8049:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:24147*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24147*0 + 3*369*FLEN/8, x4, x1, x2)

inst_8050:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:24150*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24150*0 + 3*370*FLEN/8, x4, x1, x2)

inst_8051:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:24153*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24153*0 + 3*371*FLEN/8, x4, x1, x2)

inst_8052:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80800000; valaddr_reg:x3; val_offset:24156*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24156*0 + 3*372*FLEN/8, x4, x1, x2)

inst_8053:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:24159*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24159*0 + 3*373*FLEN/8, x4, x1, x2)

inst_8054:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:24162*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24162*0 + 3*374*FLEN/8, x4, x1, x2)

inst_8055:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:24165*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24165*0 + 3*375*FLEN/8, x4, x1, x2)

inst_8056:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x8080000f; valaddr_reg:x3; val_offset:24168*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24168*0 + 3*376*FLEN/8, x4, x1, x2)

inst_8057:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x8080001f; valaddr_reg:x3; val_offset:24171*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24171*0 + 3*377*FLEN/8, x4, x1, x2)

inst_8058:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x8080003f; valaddr_reg:x3; val_offset:24174*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24174*0 + 3*378*FLEN/8, x4, x1, x2)

inst_8059:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x8080007f; valaddr_reg:x3; val_offset:24177*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24177*0 + 3*379*FLEN/8, x4, x1, x2)

inst_8060:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x808000ff; valaddr_reg:x3; val_offset:24180*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24180*0 + 3*380*FLEN/8, x4, x1, x2)

inst_8061:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x808001ff; valaddr_reg:x3; val_offset:24183*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24183*0 + 3*381*FLEN/8, x4, x1, x2)

inst_8062:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x808003ff; valaddr_reg:x3; val_offset:24186*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24186*0 + 3*382*FLEN/8, x4, x1, x2)

inst_8063:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x808007ff; valaddr_reg:x3; val_offset:24189*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24189*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_8064:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80800fff; valaddr_reg:x3; val_offset:24192*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24192*0 + 3*384*FLEN/8, x4, x1, x2)

inst_8065:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80801fff; valaddr_reg:x3; val_offset:24195*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24195*0 + 3*385*FLEN/8, x4, x1, x2)

inst_8066:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80803fff; valaddr_reg:x3; val_offset:24198*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24198*0 + 3*386*FLEN/8, x4, x1, x2)

inst_8067:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80807fff; valaddr_reg:x3; val_offset:24201*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24201*0 + 3*387*FLEN/8, x4, x1, x2)

inst_8068:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x8080ffff; valaddr_reg:x3; val_offset:24204*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24204*0 + 3*388*FLEN/8, x4, x1, x2)

inst_8069:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x8081ffff; valaddr_reg:x3; val_offset:24207*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24207*0 + 3*389*FLEN/8, x4, x1, x2)

inst_8070:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x8083ffff; valaddr_reg:x3; val_offset:24210*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24210*0 + 3*390*FLEN/8, x4, x1, x2)

inst_8071:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x8087ffff; valaddr_reg:x3; val_offset:24213*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24213*0 + 3*391*FLEN/8, x4, x1, x2)

inst_8072:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x808fffff; valaddr_reg:x3; val_offset:24216*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24216*0 + 3*392*FLEN/8, x4, x1, x2)

inst_8073:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x809fffff; valaddr_reg:x3; val_offset:24219*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24219*0 + 3*393*FLEN/8, x4, x1, x2)

inst_8074:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80bfffff; valaddr_reg:x3; val_offset:24222*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24222*0 + 3*394*FLEN/8, x4, x1, x2)

inst_8075:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80c00000; valaddr_reg:x3; val_offset:24225*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24225*0 + 3*395*FLEN/8, x4, x1, x2)

inst_8076:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80e00000; valaddr_reg:x3; val_offset:24228*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24228*0 + 3*396*FLEN/8, x4, x1, x2)

inst_8077:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80f00000; valaddr_reg:x3; val_offset:24231*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24231*0 + 3*397*FLEN/8, x4, x1, x2)

inst_8078:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80f80000; valaddr_reg:x3; val_offset:24234*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24234*0 + 3*398*FLEN/8, x4, x1, x2)

inst_8079:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fc0000; valaddr_reg:x3; val_offset:24237*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24237*0 + 3*399*FLEN/8, x4, x1, x2)

inst_8080:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fe0000; valaddr_reg:x3; val_offset:24240*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24240*0 + 3*400*FLEN/8, x4, x1, x2)

inst_8081:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80ff0000; valaddr_reg:x3; val_offset:24243*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24243*0 + 3*401*FLEN/8, x4, x1, x2)

inst_8082:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80ff8000; valaddr_reg:x3; val_offset:24246*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24246*0 + 3*402*FLEN/8, x4, x1, x2)

inst_8083:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80ffc000; valaddr_reg:x3; val_offset:24249*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24249*0 + 3*403*FLEN/8, x4, x1, x2)

inst_8084:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80ffe000; valaddr_reg:x3; val_offset:24252*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24252*0 + 3*404*FLEN/8, x4, x1, x2)

inst_8085:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fff000; valaddr_reg:x3; val_offset:24255*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24255*0 + 3*405*FLEN/8, x4, x1, x2)

inst_8086:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fff800; valaddr_reg:x3; val_offset:24258*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24258*0 + 3*406*FLEN/8, x4, x1, x2)

inst_8087:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fffc00; valaddr_reg:x3; val_offset:24261*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24261*0 + 3*407*FLEN/8, x4, x1, x2)

inst_8088:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fffe00; valaddr_reg:x3; val_offset:24264*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24264*0 + 3*408*FLEN/8, x4, x1, x2)

inst_8089:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80ffff00; valaddr_reg:x3; val_offset:24267*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24267*0 + 3*409*FLEN/8, x4, x1, x2)

inst_8090:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80ffff80; valaddr_reg:x3; val_offset:24270*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24270*0 + 3*410*FLEN/8, x4, x1, x2)

inst_8091:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80ffffc0; valaddr_reg:x3; val_offset:24273*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24273*0 + 3*411*FLEN/8, x4, x1, x2)

inst_8092:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80ffffe0; valaddr_reg:x3; val_offset:24276*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24276*0 + 3*412*FLEN/8, x4, x1, x2)

inst_8093:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fffff0; valaddr_reg:x3; val_offset:24279*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24279*0 + 3*413*FLEN/8, x4, x1, x2)

inst_8094:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:24282*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24282*0 + 3*414*FLEN/8, x4, x1, x2)

inst_8095:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:24285*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24285*0 + 3*415*FLEN/8, x4, x1, x2)

inst_8096:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:24288*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24288*0 + 3*416*FLEN/8, x4, x1, x2)

inst_8097:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e26a55d; op2val:0x80000000;
op3val:0x80ffffff; valaddr_reg:x3; val_offset:24291*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24291*0 + 3*417*FLEN/8, x4, x1, x2)

inst_8098:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:24294*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24294*0 + 3*418*FLEN/8, x4, x1, x2)

inst_8099:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:24297*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24297*0 + 3*419*FLEN/8, x4, x1, x2)

inst_8100:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:24300*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24300*0 + 3*420*FLEN/8, x4, x1, x2)

inst_8101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:24303*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24303*0 + 3*421*FLEN/8, x4, x1, x2)

inst_8102:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:24306*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24306*0 + 3*422*FLEN/8, x4, x1, x2)

inst_8103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:24309*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24309*0 + 3*423*FLEN/8, x4, x1, x2)

inst_8104:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:24312*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24312*0 + 3*424*FLEN/8, x4, x1, x2)

inst_8105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:24315*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24315*0 + 3*425*FLEN/8, x4, x1, x2)

inst_8106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:24318*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24318*0 + 3*426*FLEN/8, x4, x1, x2)

inst_8107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:24321*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24321*0 + 3*427*FLEN/8, x4, x1, x2)

inst_8108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:24324*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24324*0 + 3*428*FLEN/8, x4, x1, x2)

inst_8109:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:24327*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24327*0 + 3*429*FLEN/8, x4, x1, x2)

inst_8110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:24330*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24330*0 + 3*430*FLEN/8, x4, x1, x2)

inst_8111:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:24333*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24333*0 + 3*431*FLEN/8, x4, x1, x2)

inst_8112:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:24336*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24336*0 + 3*432*FLEN/8, x4, x1, x2)

inst_8113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:24339*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24339*0 + 3*433*FLEN/8, x4, x1, x2)

inst_8114:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2000000; valaddr_reg:x3; val_offset:24342*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24342*0 + 3*434*FLEN/8, x4, x1, x2)

inst_8115:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2000001; valaddr_reg:x3; val_offset:24345*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24345*0 + 3*435*FLEN/8, x4, x1, x2)

inst_8116:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2000003; valaddr_reg:x3; val_offset:24348*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24348*0 + 3*436*FLEN/8, x4, x1, x2)

inst_8117:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2000007; valaddr_reg:x3; val_offset:24351*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24351*0 + 3*437*FLEN/8, x4, x1, x2)

inst_8118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x200000f; valaddr_reg:x3; val_offset:24354*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24354*0 + 3*438*FLEN/8, x4, x1, x2)

inst_8119:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x200001f; valaddr_reg:x3; val_offset:24357*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24357*0 + 3*439*FLEN/8, x4, x1, x2)

inst_8120:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x200003f; valaddr_reg:x3; val_offset:24360*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24360*0 + 3*440*FLEN/8, x4, x1, x2)

inst_8121:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x200007f; valaddr_reg:x3; val_offset:24363*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24363*0 + 3*441*FLEN/8, x4, x1, x2)

inst_8122:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x20000ff; valaddr_reg:x3; val_offset:24366*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24366*0 + 3*442*FLEN/8, x4, x1, x2)

inst_8123:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x20001ff; valaddr_reg:x3; val_offset:24369*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24369*0 + 3*443*FLEN/8, x4, x1, x2)

inst_8124:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x20003ff; valaddr_reg:x3; val_offset:24372*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24372*0 + 3*444*FLEN/8, x4, x1, x2)

inst_8125:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x20007ff; valaddr_reg:x3; val_offset:24375*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24375*0 + 3*445*FLEN/8, x4, x1, x2)

inst_8126:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2000fff; valaddr_reg:x3; val_offset:24378*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24378*0 + 3*446*FLEN/8, x4, x1, x2)

inst_8127:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2001fff; valaddr_reg:x3; val_offset:24381*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24381*0 + 3*447*FLEN/8, x4, x1, x2)

inst_8128:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2003fff; valaddr_reg:x3; val_offset:24384*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24384*0 + 3*448*FLEN/8, x4, x1, x2)

inst_8129:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2007fff; valaddr_reg:x3; val_offset:24387*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24387*0 + 3*449*FLEN/8, x4, x1, x2)

inst_8130:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x200ffff; valaddr_reg:x3; val_offset:24390*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24390*0 + 3*450*FLEN/8, x4, x1, x2)

inst_8131:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x201ffff; valaddr_reg:x3; val_offset:24393*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24393*0 + 3*451*FLEN/8, x4, x1, x2)

inst_8132:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x203ffff; valaddr_reg:x3; val_offset:24396*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24396*0 + 3*452*FLEN/8, x4, x1, x2)

inst_8133:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x207ffff; valaddr_reg:x3; val_offset:24399*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24399*0 + 3*453*FLEN/8, x4, x1, x2)

inst_8134:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x20fffff; valaddr_reg:x3; val_offset:24402*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24402*0 + 3*454*FLEN/8, x4, x1, x2)

inst_8135:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x21fffff; valaddr_reg:x3; val_offset:24405*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24405*0 + 3*455*FLEN/8, x4, x1, x2)

inst_8136:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x23fffff; valaddr_reg:x3; val_offset:24408*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24408*0 + 3*456*FLEN/8, x4, x1, x2)

inst_8137:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2400000; valaddr_reg:x3; val_offset:24411*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24411*0 + 3*457*FLEN/8, x4, x1, x2)

inst_8138:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2600000; valaddr_reg:x3; val_offset:24414*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24414*0 + 3*458*FLEN/8, x4, x1, x2)

inst_8139:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2700000; valaddr_reg:x3; val_offset:24417*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24417*0 + 3*459*FLEN/8, x4, x1, x2)

inst_8140:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x2780000; valaddr_reg:x3; val_offset:24420*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24420*0 + 3*460*FLEN/8, x4, x1, x2)

inst_8141:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27c0000; valaddr_reg:x3; val_offset:24423*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24423*0 + 3*461*FLEN/8, x4, x1, x2)

inst_8142:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27e0000; valaddr_reg:x3; val_offset:24426*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24426*0 + 3*462*FLEN/8, x4, x1, x2)

inst_8143:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27f0000; valaddr_reg:x3; val_offset:24429*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24429*0 + 3*463*FLEN/8, x4, x1, x2)

inst_8144:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27f8000; valaddr_reg:x3; val_offset:24432*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24432*0 + 3*464*FLEN/8, x4, x1, x2)

inst_8145:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27fc000; valaddr_reg:x3; val_offset:24435*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24435*0 + 3*465*FLEN/8, x4, x1, x2)

inst_8146:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27fe000; valaddr_reg:x3; val_offset:24438*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24438*0 + 3*466*FLEN/8, x4, x1, x2)

inst_8147:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27ff000; valaddr_reg:x3; val_offset:24441*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24441*0 + 3*467*FLEN/8, x4, x1, x2)

inst_8148:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27ff800; valaddr_reg:x3; val_offset:24444*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24444*0 + 3*468*FLEN/8, x4, x1, x2)

inst_8149:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27ffc00; valaddr_reg:x3; val_offset:24447*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24447*0 + 3*469*FLEN/8, x4, x1, x2)

inst_8150:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27ffe00; valaddr_reg:x3; val_offset:24450*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24450*0 + 3*470*FLEN/8, x4, x1, x2)

inst_8151:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27fff00; valaddr_reg:x3; val_offset:24453*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24453*0 + 3*471*FLEN/8, x4, x1, x2)

inst_8152:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27fff80; valaddr_reg:x3; val_offset:24456*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24456*0 + 3*472*FLEN/8, x4, x1, x2)

inst_8153:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27fffc0; valaddr_reg:x3; val_offset:24459*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24459*0 + 3*473*FLEN/8, x4, x1, x2)

inst_8154:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27fffe0; valaddr_reg:x3; val_offset:24462*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24462*0 + 3*474*FLEN/8, x4, x1, x2)

inst_8155:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27ffff0; valaddr_reg:x3; val_offset:24465*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24465*0 + 3*475*FLEN/8, x4, x1, x2)

inst_8156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27ffff8; valaddr_reg:x3; val_offset:24468*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24468*0 + 3*476*FLEN/8, x4, x1, x2)

inst_8157:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27ffffc; valaddr_reg:x3; val_offset:24471*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24471*0 + 3*477*FLEN/8, x4, x1, x2)

inst_8158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27ffffe; valaddr_reg:x3; val_offset:24474*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24474*0 + 3*478*FLEN/8, x4, x1, x2)

inst_8159:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27ec25 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x04 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e27ec25; op2val:0x0;
op3val:0x27fffff; valaddr_reg:x3; val_offset:24477*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24477*0 + 3*479*FLEN/8, x4, x1, x2)

inst_8160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb000000; valaddr_reg:x3; val_offset:24480*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24480*0 + 3*480*FLEN/8, x4, x1, x2)

inst_8161:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb000001; valaddr_reg:x3; val_offset:24483*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24483*0 + 3*481*FLEN/8, x4, x1, x2)

inst_8162:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb000003; valaddr_reg:x3; val_offset:24486*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24486*0 + 3*482*FLEN/8, x4, x1, x2)

inst_8163:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb000007; valaddr_reg:x3; val_offset:24489*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24489*0 + 3*483*FLEN/8, x4, x1, x2)

inst_8164:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb00000f; valaddr_reg:x3; val_offset:24492*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24492*0 + 3*484*FLEN/8, x4, x1, x2)

inst_8165:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb00001f; valaddr_reg:x3; val_offset:24495*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24495*0 + 3*485*FLEN/8, x4, x1, x2)

inst_8166:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb00003f; valaddr_reg:x3; val_offset:24498*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24498*0 + 3*486*FLEN/8, x4, x1, x2)

inst_8167:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb00007f; valaddr_reg:x3; val_offset:24501*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24501*0 + 3*487*FLEN/8, x4, x1, x2)

inst_8168:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb0000ff; valaddr_reg:x3; val_offset:24504*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24504*0 + 3*488*FLEN/8, x4, x1, x2)

inst_8169:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb0001ff; valaddr_reg:x3; val_offset:24507*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24507*0 + 3*489*FLEN/8, x4, x1, x2)

inst_8170:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb0003ff; valaddr_reg:x3; val_offset:24510*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24510*0 + 3*490*FLEN/8, x4, x1, x2)

inst_8171:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb0007ff; valaddr_reg:x3; val_offset:24513*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24513*0 + 3*491*FLEN/8, x4, x1, x2)

inst_8172:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb000fff; valaddr_reg:x3; val_offset:24516*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24516*0 + 3*492*FLEN/8, x4, x1, x2)

inst_8173:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb001fff; valaddr_reg:x3; val_offset:24519*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24519*0 + 3*493*FLEN/8, x4, x1, x2)

inst_8174:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb003fff; valaddr_reg:x3; val_offset:24522*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24522*0 + 3*494*FLEN/8, x4, x1, x2)

inst_8175:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb007fff; valaddr_reg:x3; val_offset:24525*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24525*0 + 3*495*FLEN/8, x4, x1, x2)

inst_8176:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb00ffff; valaddr_reg:x3; val_offset:24528*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24528*0 + 3*496*FLEN/8, x4, x1, x2)

inst_8177:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb01ffff; valaddr_reg:x3; val_offset:24531*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24531*0 + 3*497*FLEN/8, x4, x1, x2)

inst_8178:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb03ffff; valaddr_reg:x3; val_offset:24534*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24534*0 + 3*498*FLEN/8, x4, x1, x2)

inst_8179:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb07ffff; valaddr_reg:x3; val_offset:24537*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24537*0 + 3*499*FLEN/8, x4, x1, x2)

inst_8180:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb0fffff; valaddr_reg:x3; val_offset:24540*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24540*0 + 3*500*FLEN/8, x4, x1, x2)

inst_8181:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb1fffff; valaddr_reg:x3; val_offset:24543*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24543*0 + 3*501*FLEN/8, x4, x1, x2)

inst_8182:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb3fffff; valaddr_reg:x3; val_offset:24546*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24546*0 + 3*502*FLEN/8, x4, x1, x2)

inst_8183:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb400000; valaddr_reg:x3; val_offset:24549*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24549*0 + 3*503*FLEN/8, x4, x1, x2)

inst_8184:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb600000; valaddr_reg:x3; val_offset:24552*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24552*0 + 3*504*FLEN/8, x4, x1, x2)

inst_8185:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb700000; valaddr_reg:x3; val_offset:24555*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24555*0 + 3*505*FLEN/8, x4, x1, x2)

inst_8186:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb780000; valaddr_reg:x3; val_offset:24558*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24558*0 + 3*506*FLEN/8, x4, x1, x2)

inst_8187:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7c0000; valaddr_reg:x3; val_offset:24561*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24561*0 + 3*507*FLEN/8, x4, x1, x2)

inst_8188:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7e0000; valaddr_reg:x3; val_offset:24564*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24564*0 + 3*508*FLEN/8, x4, x1, x2)

inst_8189:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7f0000; valaddr_reg:x3; val_offset:24567*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24567*0 + 3*509*FLEN/8, x4, x1, x2)

inst_8190:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7f8000; valaddr_reg:x3; val_offset:24570*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24570*0 + 3*510*FLEN/8, x4, x1, x2)

inst_8191:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7fc000; valaddr_reg:x3; val_offset:24573*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24573*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_8192:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7fe000; valaddr_reg:x3; val_offset:24576*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24576*0 + 3*512*FLEN/8, x4, x1, x2)

inst_8193:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7ff000; valaddr_reg:x3; val_offset:24579*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24579*0 + 3*513*FLEN/8, x4, x1, x2)

inst_8194:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7ff800; valaddr_reg:x3; val_offset:24582*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24582*0 + 3*514*FLEN/8, x4, x1, x2)

inst_8195:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7ffc00; valaddr_reg:x3; val_offset:24585*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24585*0 + 3*515*FLEN/8, x4, x1, x2)

inst_8196:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7ffe00; valaddr_reg:x3; val_offset:24588*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24588*0 + 3*516*FLEN/8, x4, x1, x2)

inst_8197:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7fff00; valaddr_reg:x3; val_offset:24591*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24591*0 + 3*517*FLEN/8, x4, x1, x2)

inst_8198:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7fff80; valaddr_reg:x3; val_offset:24594*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24594*0 + 3*518*FLEN/8, x4, x1, x2)

inst_8199:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7fffc0; valaddr_reg:x3; val_offset:24597*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24597*0 + 3*519*FLEN/8, x4, x1, x2)

inst_8200:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7fffe0; valaddr_reg:x3; val_offset:24600*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24600*0 + 3*520*FLEN/8, x4, x1, x2)

inst_8201:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7ffff0; valaddr_reg:x3; val_offset:24603*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24603*0 + 3*521*FLEN/8, x4, x1, x2)

inst_8202:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7ffff8; valaddr_reg:x3; val_offset:24606*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24606*0 + 3*522*FLEN/8, x4, x1, x2)

inst_8203:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7ffffc; valaddr_reg:x3; val_offset:24609*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24609*0 + 3*523*FLEN/8, x4, x1, x2)

inst_8204:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7ffffe; valaddr_reg:x3; val_offset:24612*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24612*0 + 3*524*FLEN/8, x4, x1, x2)

inst_8205:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xf6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xfb7fffff; valaddr_reg:x3; val_offset:24615*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24615*0 + 3*525*FLEN/8, x4, x1, x2)

inst_8206:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff000001; valaddr_reg:x3; val_offset:24618*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24618*0 + 3*526*FLEN/8, x4, x1, x2)

inst_8207:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff000003; valaddr_reg:x3; val_offset:24621*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24621*0 + 3*527*FLEN/8, x4, x1, x2)

inst_8208:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff000007; valaddr_reg:x3; val_offset:24624*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24624*0 + 3*528*FLEN/8, x4, x1, x2)

inst_8209:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff199999; valaddr_reg:x3; val_offset:24627*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24627*0 + 3*529*FLEN/8, x4, x1, x2)

inst_8210:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff249249; valaddr_reg:x3; val_offset:24630*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24630*0 + 3*530*FLEN/8, x4, x1, x2)

inst_8211:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff333333; valaddr_reg:x3; val_offset:24633*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24633*0 + 3*531*FLEN/8, x4, x1, x2)

inst_8212:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:24636*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24636*0 + 3*532*FLEN/8, x4, x1, x2)

inst_8213:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:24639*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24639*0 + 3*533*FLEN/8, x4, x1, x2)

inst_8214:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff444444; valaddr_reg:x3; val_offset:24642*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24642*0 + 3*534*FLEN/8, x4, x1, x2)

inst_8215:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:24645*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24645*0 + 3*535*FLEN/8, x4, x1, x2)

inst_8216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:24648*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24648*0 + 3*536*FLEN/8, x4, x1, x2)

inst_8217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff666666; valaddr_reg:x3; val_offset:24651*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24651*0 + 3*537*FLEN/8, x4, x1, x2)

inst_8218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:24654*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24654*0 + 3*538*FLEN/8, x4, x1, x2)

inst_8219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:24657*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24657*0 + 3*539*FLEN/8, x4, x1, x2)

inst_8220:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:24660*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24660*0 + 3*540*FLEN/8, x4, x1, x2)

inst_8221:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x281f8d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42e795 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e281f8d; op2val:0xc0c2e795;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:24663*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24663*0 + 3*541*FLEN/8, x4, x1, x2)

inst_8222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7000000; valaddr_reg:x3; val_offset:24666*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24666*0 + 3*542*FLEN/8, x4, x1, x2)

inst_8223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7000001; valaddr_reg:x3; val_offset:24669*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24669*0 + 3*543*FLEN/8, x4, x1, x2)

inst_8224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7000003; valaddr_reg:x3; val_offset:24672*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24672*0 + 3*544*FLEN/8, x4, x1, x2)

inst_8225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7000007; valaddr_reg:x3; val_offset:24675*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24675*0 + 3*545*FLEN/8, x4, x1, x2)

inst_8226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa700000f; valaddr_reg:x3; val_offset:24678*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24678*0 + 3*546*FLEN/8, x4, x1, x2)

inst_8227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa700001f; valaddr_reg:x3; val_offset:24681*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24681*0 + 3*547*FLEN/8, x4, x1, x2)

inst_8228:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa700003f; valaddr_reg:x3; val_offset:24684*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24684*0 + 3*548*FLEN/8, x4, x1, x2)

inst_8229:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa700007f; valaddr_reg:x3; val_offset:24687*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24687*0 + 3*549*FLEN/8, x4, x1, x2)

inst_8230:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa70000ff; valaddr_reg:x3; val_offset:24690*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24690*0 + 3*550*FLEN/8, x4, x1, x2)

inst_8231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa70001ff; valaddr_reg:x3; val_offset:24693*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24693*0 + 3*551*FLEN/8, x4, x1, x2)

inst_8232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa70003ff; valaddr_reg:x3; val_offset:24696*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24696*0 + 3*552*FLEN/8, x4, x1, x2)

inst_8233:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa70007ff; valaddr_reg:x3; val_offset:24699*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24699*0 + 3*553*FLEN/8, x4, x1, x2)

inst_8234:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7000fff; valaddr_reg:x3; val_offset:24702*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24702*0 + 3*554*FLEN/8, x4, x1, x2)

inst_8235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7001fff; valaddr_reg:x3; val_offset:24705*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24705*0 + 3*555*FLEN/8, x4, x1, x2)

inst_8236:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7003fff; valaddr_reg:x3; val_offset:24708*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24708*0 + 3*556*FLEN/8, x4, x1, x2)

inst_8237:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7007fff; valaddr_reg:x3; val_offset:24711*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24711*0 + 3*557*FLEN/8, x4, x1, x2)

inst_8238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa700ffff; valaddr_reg:x3; val_offset:24714*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24714*0 + 3*558*FLEN/8, x4, x1, x2)

inst_8239:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa701ffff; valaddr_reg:x3; val_offset:24717*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24717*0 + 3*559*FLEN/8, x4, x1, x2)

inst_8240:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa703ffff; valaddr_reg:x3; val_offset:24720*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24720*0 + 3*560*FLEN/8, x4, x1, x2)

inst_8241:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa707ffff; valaddr_reg:x3; val_offset:24723*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24723*0 + 3*561*FLEN/8, x4, x1, x2)

inst_8242:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa70fffff; valaddr_reg:x3; val_offset:24726*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24726*0 + 3*562*FLEN/8, x4, x1, x2)

inst_8243:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa71fffff; valaddr_reg:x3; val_offset:24729*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24729*0 + 3*563*FLEN/8, x4, x1, x2)

inst_8244:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa73fffff; valaddr_reg:x3; val_offset:24732*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24732*0 + 3*564*FLEN/8, x4, x1, x2)

inst_8245:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7400000; valaddr_reg:x3; val_offset:24735*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24735*0 + 3*565*FLEN/8, x4, x1, x2)

inst_8246:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7600000; valaddr_reg:x3; val_offset:24738*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24738*0 + 3*566*FLEN/8, x4, x1, x2)

inst_8247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7700000; valaddr_reg:x3; val_offset:24741*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24741*0 + 3*567*FLEN/8, x4, x1, x2)

inst_8248:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa7780000; valaddr_reg:x3; val_offset:24744*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24744*0 + 3*568*FLEN/8, x4, x1, x2)

inst_8249:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77c0000; valaddr_reg:x3; val_offset:24747*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24747*0 + 3*569*FLEN/8, x4, x1, x2)

inst_8250:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77e0000; valaddr_reg:x3; val_offset:24750*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24750*0 + 3*570*FLEN/8, x4, x1, x2)

inst_8251:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77f0000; valaddr_reg:x3; val_offset:24753*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24753*0 + 3*571*FLEN/8, x4, x1, x2)

inst_8252:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77f8000; valaddr_reg:x3; val_offset:24756*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24756*0 + 3*572*FLEN/8, x4, x1, x2)

inst_8253:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77fc000; valaddr_reg:x3; val_offset:24759*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24759*0 + 3*573*FLEN/8, x4, x1, x2)

inst_8254:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77fe000; valaddr_reg:x3; val_offset:24762*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24762*0 + 3*574*FLEN/8, x4, x1, x2)

inst_8255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77ff000; valaddr_reg:x3; val_offset:24765*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24765*0 + 3*575*FLEN/8, x4, x1, x2)

inst_8256:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77ff800; valaddr_reg:x3; val_offset:24768*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24768*0 + 3*576*FLEN/8, x4, x1, x2)

inst_8257:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77ffc00; valaddr_reg:x3; val_offset:24771*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24771*0 + 3*577*FLEN/8, x4, x1, x2)

inst_8258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77ffe00; valaddr_reg:x3; val_offset:24774*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24774*0 + 3*578*FLEN/8, x4, x1, x2)

inst_8259:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77fff00; valaddr_reg:x3; val_offset:24777*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24777*0 + 3*579*FLEN/8, x4, x1, x2)

inst_8260:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77fff80; valaddr_reg:x3; val_offset:24780*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24780*0 + 3*580*FLEN/8, x4, x1, x2)

inst_8261:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77fffc0; valaddr_reg:x3; val_offset:24783*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24783*0 + 3*581*FLEN/8, x4, x1, x2)

inst_8262:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77fffe0; valaddr_reg:x3; val_offset:24786*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24786*0 + 3*582*FLEN/8, x4, x1, x2)

inst_8263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77ffff0; valaddr_reg:x3; val_offset:24789*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24789*0 + 3*583*FLEN/8, x4, x1, x2)

inst_8264:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77ffff8; valaddr_reg:x3; val_offset:24792*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24792*0 + 3*584*FLEN/8, x4, x1, x2)

inst_8265:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77ffffc; valaddr_reg:x3; val_offset:24795*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24795*0 + 3*585*FLEN/8, x4, x1, x2)

inst_8266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77ffffe; valaddr_reg:x3; val_offset:24798*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24798*0 + 3*586*FLEN/8, x4, x1, x2)

inst_8267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x4e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xa77fffff; valaddr_reg:x3; val_offset:24801*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24801*0 + 3*587*FLEN/8, x4, x1, x2)

inst_8268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbf800001; valaddr_reg:x3; val_offset:24804*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24804*0 + 3*588*FLEN/8, x4, x1, x2)

inst_8269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbf800003; valaddr_reg:x3; val_offset:24807*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24807*0 + 3*589*FLEN/8, x4, x1, x2)

inst_8270:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbf800007; valaddr_reg:x3; val_offset:24810*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24810*0 + 3*590*FLEN/8, x4, x1, x2)

inst_8271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbf999999; valaddr_reg:x3; val_offset:24813*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24813*0 + 3*591*FLEN/8, x4, x1, x2)

inst_8272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:24816*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24816*0 + 3*592*FLEN/8, x4, x1, x2)

inst_8273:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:24819*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24819*0 + 3*593*FLEN/8, x4, x1, x2)

inst_8274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:24822*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24822*0 + 3*594*FLEN/8, x4, x1, x2)

inst_8275:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:24825*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24825*0 + 3*595*FLEN/8, x4, x1, x2)

inst_8276:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:24828*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24828*0 + 3*596*FLEN/8, x4, x1, x2)

inst_8277:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:24831*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24831*0 + 3*597*FLEN/8, x4, x1, x2)

inst_8278:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:24834*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24834*0 + 3*598*FLEN/8, x4, x1, x2)

inst_8279:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:24837*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24837*0 + 3*599*FLEN/8, x4, x1, x2)

inst_8280:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:24840*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24840*0 + 3*600*FLEN/8, x4, x1, x2)

inst_8281:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:24843*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24843*0 + 3*601*FLEN/8, x4, x1, x2)

inst_8282:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:24846*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24846*0 + 3*602*FLEN/8, x4, x1, x2)

inst_8283:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x401d1a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2a90d0; op2val:0x80c01d1a;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:24849*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24849*0 + 3*603*FLEN/8, x4, x1, x2)

inst_8284:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3f800001; valaddr_reg:x3; val_offset:24852*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24852*0 + 3*604*FLEN/8, x4, x1, x2)

inst_8285:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3f800003; valaddr_reg:x3; val_offset:24855*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24855*0 + 3*605*FLEN/8, x4, x1, x2)

inst_8286:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3f800007; valaddr_reg:x3; val_offset:24858*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24858*0 + 3*606*FLEN/8, x4, x1, x2)

inst_8287:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3f999999; valaddr_reg:x3; val_offset:24861*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24861*0 + 3*607*FLEN/8, x4, x1, x2)

inst_8288:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:24864*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24864*0 + 3*608*FLEN/8, x4, x1, x2)

inst_8289:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:24867*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24867*0 + 3*609*FLEN/8, x4, x1, x2)

inst_8290:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:24870*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24870*0 + 3*610*FLEN/8, x4, x1, x2)

inst_8291:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:24873*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24873*0 + 3*611*FLEN/8, x4, x1, x2)

inst_8292:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:24876*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24876*0 + 3*612*FLEN/8, x4, x1, x2)

inst_8293:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:24879*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24879*0 + 3*613*FLEN/8, x4, x1, x2)

inst_8294:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:24882*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24882*0 + 3*614*FLEN/8, x4, x1, x2)

inst_8295:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:24885*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24885*0 + 3*615*FLEN/8, x4, x1, x2)

inst_8296:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:24888*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24888*0 + 3*616*FLEN/8, x4, x1, x2)

inst_8297:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:24891*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24891*0 + 3*617*FLEN/8, x4, x1, x2)

inst_8298:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:24894*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24894*0 + 3*618*FLEN/8, x4, x1, x2)

inst_8299:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:24897*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24897*0 + 3*619*FLEN/8, x4, x1, x2)

inst_8300:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42800000; valaddr_reg:x3; val_offset:24900*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24900*0 + 3*620*FLEN/8, x4, x1, x2)

inst_8301:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42800001; valaddr_reg:x3; val_offset:24903*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24903*0 + 3*621*FLEN/8, x4, x1, x2)

inst_8302:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42800003; valaddr_reg:x3; val_offset:24906*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24906*0 + 3*622*FLEN/8, x4, x1, x2)

inst_8303:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42800007; valaddr_reg:x3; val_offset:24909*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24909*0 + 3*623*FLEN/8, x4, x1, x2)

inst_8304:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x4280000f; valaddr_reg:x3; val_offset:24912*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24912*0 + 3*624*FLEN/8, x4, x1, x2)

inst_8305:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x4280001f; valaddr_reg:x3; val_offset:24915*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24915*0 + 3*625*FLEN/8, x4, x1, x2)

inst_8306:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x4280003f; valaddr_reg:x3; val_offset:24918*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24918*0 + 3*626*FLEN/8, x4, x1, x2)

inst_8307:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x4280007f; valaddr_reg:x3; val_offset:24921*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24921*0 + 3*627*FLEN/8, x4, x1, x2)

inst_8308:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x428000ff; valaddr_reg:x3; val_offset:24924*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24924*0 + 3*628*FLEN/8, x4, x1, x2)

inst_8309:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x428001ff; valaddr_reg:x3; val_offset:24927*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24927*0 + 3*629*FLEN/8, x4, x1, x2)

inst_8310:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x428003ff; valaddr_reg:x3; val_offset:24930*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24930*0 + 3*630*FLEN/8, x4, x1, x2)

inst_8311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x428007ff; valaddr_reg:x3; val_offset:24933*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24933*0 + 3*631*FLEN/8, x4, x1, x2)

inst_8312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42800fff; valaddr_reg:x3; val_offset:24936*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24936*0 + 3*632*FLEN/8, x4, x1, x2)

inst_8313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42801fff; valaddr_reg:x3; val_offset:24939*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24939*0 + 3*633*FLEN/8, x4, x1, x2)

inst_8314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42803fff; valaddr_reg:x3; val_offset:24942*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24942*0 + 3*634*FLEN/8, x4, x1, x2)

inst_8315:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42807fff; valaddr_reg:x3; val_offset:24945*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24945*0 + 3*635*FLEN/8, x4, x1, x2)

inst_8316:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x4280ffff; valaddr_reg:x3; val_offset:24948*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24948*0 + 3*636*FLEN/8, x4, x1, x2)

inst_8317:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x4281ffff; valaddr_reg:x3; val_offset:24951*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24951*0 + 3*637*FLEN/8, x4, x1, x2)

inst_8318:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x4283ffff; valaddr_reg:x3; val_offset:24954*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24954*0 + 3*638*FLEN/8, x4, x1, x2)

inst_8319:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x4287ffff; valaddr_reg:x3; val_offset:24957*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24957*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_8320:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x428fffff; valaddr_reg:x3; val_offset:24960*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24960*0 + 3*640*FLEN/8, x4, x1, x2)

inst_8321:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x429fffff; valaddr_reg:x3; val_offset:24963*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24963*0 + 3*641*FLEN/8, x4, x1, x2)

inst_8322:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42bfffff; valaddr_reg:x3; val_offset:24966*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24966*0 + 3*642*FLEN/8, x4, x1, x2)

inst_8323:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42c00000; valaddr_reg:x3; val_offset:24969*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24969*0 + 3*643*FLEN/8, x4, x1, x2)

inst_8324:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42e00000; valaddr_reg:x3; val_offset:24972*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24972*0 + 3*644*FLEN/8, x4, x1, x2)

inst_8325:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42f00000; valaddr_reg:x3; val_offset:24975*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24975*0 + 3*645*FLEN/8, x4, x1, x2)

inst_8326:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42f80000; valaddr_reg:x3; val_offset:24978*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24978*0 + 3*646*FLEN/8, x4, x1, x2)

inst_8327:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fc0000; valaddr_reg:x3; val_offset:24981*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24981*0 + 3*647*FLEN/8, x4, x1, x2)

inst_8328:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fe0000; valaddr_reg:x3; val_offset:24984*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24984*0 + 3*648*FLEN/8, x4, x1, x2)

inst_8329:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42ff0000; valaddr_reg:x3; val_offset:24987*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24987*0 + 3*649*FLEN/8, x4, x1, x2)

inst_8330:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42ff8000; valaddr_reg:x3; val_offset:24990*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24990*0 + 3*650*FLEN/8, x4, x1, x2)

inst_8331:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42ffc000; valaddr_reg:x3; val_offset:24993*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24993*0 + 3*651*FLEN/8, x4, x1, x2)

inst_8332:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42ffe000; valaddr_reg:x3; val_offset:24996*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24996*0 + 3*652*FLEN/8, x4, x1, x2)

inst_8333:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fff000; valaddr_reg:x3; val_offset:24999*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 24999*0 + 3*653*FLEN/8, x4, x1, x2)

inst_8334:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fff800; valaddr_reg:x3; val_offset:25002*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25002*0 + 3*654*FLEN/8, x4, x1, x2)

inst_8335:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fffc00; valaddr_reg:x3; val_offset:25005*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25005*0 + 3*655*FLEN/8, x4, x1, x2)

inst_8336:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fffe00; valaddr_reg:x3; val_offset:25008*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25008*0 + 3*656*FLEN/8, x4, x1, x2)

inst_8337:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42ffff00; valaddr_reg:x3; val_offset:25011*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25011*0 + 3*657*FLEN/8, x4, x1, x2)

inst_8338:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42ffff80; valaddr_reg:x3; val_offset:25014*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25014*0 + 3*658*FLEN/8, x4, x1, x2)

inst_8339:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42ffffc0; valaddr_reg:x3; val_offset:25017*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25017*0 + 3*659*FLEN/8, x4, x1, x2)

inst_8340:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42ffffe0; valaddr_reg:x3; val_offset:25020*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25020*0 + 3*660*FLEN/8, x4, x1, x2)

inst_8341:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fffff0; valaddr_reg:x3; val_offset:25023*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25023*0 + 3*661*FLEN/8, x4, x1, x2)

inst_8342:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fffff8; valaddr_reg:x3; val_offset:25026*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25026*0 + 3*662*FLEN/8, x4, x1, x2)

inst_8343:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fffffc; valaddr_reg:x3; val_offset:25029*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25029*0 + 3*663*FLEN/8, x4, x1, x2)

inst_8344:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42fffffe; valaddr_reg:x3; val_offset:25032*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25032*0 + 3*664*FLEN/8, x4, x1, x2)

inst_8345:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fba4a and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2ae8b7; op2val:0xbfba4a;
op3val:0x42ffffff; valaddr_reg:x3; val_offset:25035*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25035*0 + 3*665*FLEN/8, x4, x1, x2)

inst_8346:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee800000; valaddr_reg:x3; val_offset:25038*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25038*0 + 3*666*FLEN/8, x4, x1, x2)

inst_8347:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee800001; valaddr_reg:x3; val_offset:25041*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25041*0 + 3*667*FLEN/8, x4, x1, x2)

inst_8348:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee800003; valaddr_reg:x3; val_offset:25044*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25044*0 + 3*668*FLEN/8, x4, x1, x2)

inst_8349:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee800007; valaddr_reg:x3; val_offset:25047*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25047*0 + 3*669*FLEN/8, x4, x1, x2)

inst_8350:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee80000f; valaddr_reg:x3; val_offset:25050*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25050*0 + 3*670*FLEN/8, x4, x1, x2)

inst_8351:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee80001f; valaddr_reg:x3; val_offset:25053*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25053*0 + 3*671*FLEN/8, x4, x1, x2)

inst_8352:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee80003f; valaddr_reg:x3; val_offset:25056*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25056*0 + 3*672*FLEN/8, x4, x1, x2)

inst_8353:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee80007f; valaddr_reg:x3; val_offset:25059*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25059*0 + 3*673*FLEN/8, x4, x1, x2)

inst_8354:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee8000ff; valaddr_reg:x3; val_offset:25062*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25062*0 + 3*674*FLEN/8, x4, x1, x2)

inst_8355:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee8001ff; valaddr_reg:x3; val_offset:25065*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25065*0 + 3*675*FLEN/8, x4, x1, x2)

inst_8356:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee8003ff; valaddr_reg:x3; val_offset:25068*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25068*0 + 3*676*FLEN/8, x4, x1, x2)

inst_8357:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee8007ff; valaddr_reg:x3; val_offset:25071*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25071*0 + 3*677*FLEN/8, x4, x1, x2)

inst_8358:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee800fff; valaddr_reg:x3; val_offset:25074*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25074*0 + 3*678*FLEN/8, x4, x1, x2)

inst_8359:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee801fff; valaddr_reg:x3; val_offset:25077*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25077*0 + 3*679*FLEN/8, x4, x1, x2)

inst_8360:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee803fff; valaddr_reg:x3; val_offset:25080*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25080*0 + 3*680*FLEN/8, x4, x1, x2)

inst_8361:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee807fff; valaddr_reg:x3; val_offset:25083*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25083*0 + 3*681*FLEN/8, x4, x1, x2)

inst_8362:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee80ffff; valaddr_reg:x3; val_offset:25086*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25086*0 + 3*682*FLEN/8, x4, x1, x2)

inst_8363:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee81ffff; valaddr_reg:x3; val_offset:25089*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25089*0 + 3*683*FLEN/8, x4, x1, x2)

inst_8364:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee83ffff; valaddr_reg:x3; val_offset:25092*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25092*0 + 3*684*FLEN/8, x4, x1, x2)

inst_8365:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee87ffff; valaddr_reg:x3; val_offset:25095*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25095*0 + 3*685*FLEN/8, x4, x1, x2)

inst_8366:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee8fffff; valaddr_reg:x3; val_offset:25098*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25098*0 + 3*686*FLEN/8, x4, x1, x2)

inst_8367:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xee9fffff; valaddr_reg:x3; val_offset:25101*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25101*0 + 3*687*FLEN/8, x4, x1, x2)

inst_8368:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeebfffff; valaddr_reg:x3; val_offset:25104*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25104*0 + 3*688*FLEN/8, x4, x1, x2)

inst_8369:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeec00000; valaddr_reg:x3; val_offset:25107*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25107*0 + 3*689*FLEN/8, x4, x1, x2)

inst_8370:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeee00000; valaddr_reg:x3; val_offset:25110*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25110*0 + 3*690*FLEN/8, x4, x1, x2)

inst_8371:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeef00000; valaddr_reg:x3; val_offset:25113*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25113*0 + 3*691*FLEN/8, x4, x1, x2)

inst_8372:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeef80000; valaddr_reg:x3; val_offset:25116*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25116*0 + 3*692*FLEN/8, x4, x1, x2)

inst_8373:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefc0000; valaddr_reg:x3; val_offset:25119*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25119*0 + 3*693*FLEN/8, x4, x1, x2)

inst_8374:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefe0000; valaddr_reg:x3; val_offset:25122*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25122*0 + 3*694*FLEN/8, x4, x1, x2)

inst_8375:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeeff0000; valaddr_reg:x3; val_offset:25125*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25125*0 + 3*695*FLEN/8, x4, x1, x2)

inst_8376:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeeff8000; valaddr_reg:x3; val_offset:25128*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25128*0 + 3*696*FLEN/8, x4, x1, x2)

inst_8377:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeeffc000; valaddr_reg:x3; val_offset:25131*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25131*0 + 3*697*FLEN/8, x4, x1, x2)

inst_8378:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeeffe000; valaddr_reg:x3; val_offset:25134*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25134*0 + 3*698*FLEN/8, x4, x1, x2)

inst_8379:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefff000; valaddr_reg:x3; val_offset:25137*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25137*0 + 3*699*FLEN/8, x4, x1, x2)

inst_8380:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefff800; valaddr_reg:x3; val_offset:25140*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25140*0 + 3*700*FLEN/8, x4, x1, x2)

inst_8381:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefffc00; valaddr_reg:x3; val_offset:25143*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25143*0 + 3*701*FLEN/8, x4, x1, x2)

inst_8382:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefffe00; valaddr_reg:x3; val_offset:25146*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25146*0 + 3*702*FLEN/8, x4, x1, x2)

inst_8383:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeeffff00; valaddr_reg:x3; val_offset:25149*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25149*0 + 3*703*FLEN/8, x4, x1, x2)

inst_8384:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeeffff80; valaddr_reg:x3; val_offset:25152*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25152*0 + 3*704*FLEN/8, x4, x1, x2)

inst_8385:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeeffffc0; valaddr_reg:x3; val_offset:25155*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25155*0 + 3*705*FLEN/8, x4, x1, x2)

inst_8386:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeeffffe0; valaddr_reg:x3; val_offset:25158*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25158*0 + 3*706*FLEN/8, x4, x1, x2)

inst_8387:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefffff0; valaddr_reg:x3; val_offset:25161*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25161*0 + 3*707*FLEN/8, x4, x1, x2)

inst_8388:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefffff8; valaddr_reg:x3; val_offset:25164*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25164*0 + 3*708*FLEN/8, x4, x1, x2)

inst_8389:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefffffc; valaddr_reg:x3; val_offset:25167*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25167*0 + 3*709*FLEN/8, x4, x1, x2)

inst_8390:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeefffffe; valaddr_reg:x3; val_offset:25170*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25170*0 + 3*710*FLEN/8, x4, x1, x2)

inst_8391:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xeeffffff; valaddr_reg:x3; val_offset:25173*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25173*0 + 3*711*FLEN/8, x4, x1, x2)

inst_8392:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff000001; valaddr_reg:x3; val_offset:25176*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25176*0 + 3*712*FLEN/8, x4, x1, x2)

inst_8393:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff000003; valaddr_reg:x3; val_offset:25179*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25179*0 + 3*713*FLEN/8, x4, x1, x2)

inst_8394:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff000007; valaddr_reg:x3; val_offset:25182*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25182*0 + 3*714*FLEN/8, x4, x1, x2)

inst_8395:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff199999; valaddr_reg:x3; val_offset:25185*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25185*0 + 3*715*FLEN/8, x4, x1, x2)

inst_8396:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff249249; valaddr_reg:x3; val_offset:25188*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25188*0 + 3*716*FLEN/8, x4, x1, x2)

inst_8397:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff333333; valaddr_reg:x3; val_offset:25191*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25191*0 + 3*717*FLEN/8, x4, x1, x2)

inst_8398:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:25194*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25194*0 + 3*718*FLEN/8, x4, x1, x2)

inst_8399:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:25197*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25197*0 + 3*719*FLEN/8, x4, x1, x2)

inst_8400:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff444444; valaddr_reg:x3; val_offset:25200*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25200*0 + 3*720*FLEN/8, x4, x1, x2)

inst_8401:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:25203*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25203*0 + 3*721*FLEN/8, x4, x1, x2)

inst_8402:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:25206*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25206*0 + 3*722*FLEN/8, x4, x1, x2)

inst_8403:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff666666; valaddr_reg:x3; val_offset:25209*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25209*0 + 3*723*FLEN/8, x4, x1, x2)

inst_8404:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:25212*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25212*0 + 3*724*FLEN/8, x4, x1, x2)

inst_8405:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:25215*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25215*0 + 3*725*FLEN/8, x4, x1, x2)

inst_8406:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:25218*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25218*0 + 3*726*FLEN/8, x4, x1, x2)

inst_8407:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bea1b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e9b3c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2bea1b; op2val:0xc0be9b3c;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:25221*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25221*0 + 3*727*FLEN/8, x4, x1, x2)

inst_8408:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:25224*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25224*0 + 3*728*FLEN/8, x4, x1, x2)

inst_8409:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:25227*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25227*0 + 3*729*FLEN/8, x4, x1, x2)

inst_8410:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:25230*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25230*0 + 3*730*FLEN/8, x4, x1, x2)

inst_8411:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:25233*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25233*0 + 3*731*FLEN/8, x4, x1, x2)

inst_8412:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:25236*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25236*0 + 3*732*FLEN/8, x4, x1, x2)

inst_8413:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:25239*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25239*0 + 3*733*FLEN/8, x4, x1, x2)

inst_8414:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:25242*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25242*0 + 3*734*FLEN/8, x4, x1, x2)

inst_8415:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:25245*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25245*0 + 3*735*FLEN/8, x4, x1, x2)

inst_8416:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:25248*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25248*0 + 3*736*FLEN/8, x4, x1, x2)

inst_8417:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:25251*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25251*0 + 3*737*FLEN/8, x4, x1, x2)

inst_8418:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:25254*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25254*0 + 3*738*FLEN/8, x4, x1, x2)

inst_8419:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:25257*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25257*0 + 3*739*FLEN/8, x4, x1, x2)

inst_8420:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:25260*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25260*0 + 3*740*FLEN/8, x4, x1, x2)

inst_8421:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:25263*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25263*0 + 3*741*FLEN/8, x4, x1, x2)

inst_8422:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:25266*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25266*0 + 3*742*FLEN/8, x4, x1, x2)

inst_8423:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:25269*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25269*0 + 3*743*FLEN/8, x4, x1, x2)

inst_8424:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4000000; valaddr_reg:x3; val_offset:25272*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25272*0 + 3*744*FLEN/8, x4, x1, x2)

inst_8425:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4000001; valaddr_reg:x3; val_offset:25275*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25275*0 + 3*745*FLEN/8, x4, x1, x2)

inst_8426:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4000003; valaddr_reg:x3; val_offset:25278*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25278*0 + 3*746*FLEN/8, x4, x1, x2)

inst_8427:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4000007; valaddr_reg:x3; val_offset:25281*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25281*0 + 3*747*FLEN/8, x4, x1, x2)

inst_8428:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x400000f; valaddr_reg:x3; val_offset:25284*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25284*0 + 3*748*FLEN/8, x4, x1, x2)

inst_8429:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x400001f; valaddr_reg:x3; val_offset:25287*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25287*0 + 3*749*FLEN/8, x4, x1, x2)

inst_8430:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x400003f; valaddr_reg:x3; val_offset:25290*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25290*0 + 3*750*FLEN/8, x4, x1, x2)

inst_8431:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x400007f; valaddr_reg:x3; val_offset:25293*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25293*0 + 3*751*FLEN/8, x4, x1, x2)

inst_8432:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x40000ff; valaddr_reg:x3; val_offset:25296*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25296*0 + 3*752*FLEN/8, x4, x1, x2)

inst_8433:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x40001ff; valaddr_reg:x3; val_offset:25299*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25299*0 + 3*753*FLEN/8, x4, x1, x2)

inst_8434:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x40003ff; valaddr_reg:x3; val_offset:25302*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25302*0 + 3*754*FLEN/8, x4, x1, x2)

inst_8435:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x40007ff; valaddr_reg:x3; val_offset:25305*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25305*0 + 3*755*FLEN/8, x4, x1, x2)

inst_8436:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4000fff; valaddr_reg:x3; val_offset:25308*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25308*0 + 3*756*FLEN/8, x4, x1, x2)

inst_8437:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4001fff; valaddr_reg:x3; val_offset:25311*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25311*0 + 3*757*FLEN/8, x4, x1, x2)

inst_8438:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4003fff; valaddr_reg:x3; val_offset:25314*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25314*0 + 3*758*FLEN/8, x4, x1, x2)

inst_8439:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4007fff; valaddr_reg:x3; val_offset:25317*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25317*0 + 3*759*FLEN/8, x4, x1, x2)

inst_8440:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x400ffff; valaddr_reg:x3; val_offset:25320*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25320*0 + 3*760*FLEN/8, x4, x1, x2)

inst_8441:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x401ffff; valaddr_reg:x3; val_offset:25323*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25323*0 + 3*761*FLEN/8, x4, x1, x2)

inst_8442:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x403ffff; valaddr_reg:x3; val_offset:25326*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25326*0 + 3*762*FLEN/8, x4, x1, x2)

inst_8443:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x407ffff; valaddr_reg:x3; val_offset:25329*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25329*0 + 3*763*FLEN/8, x4, x1, x2)

inst_8444:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x40fffff; valaddr_reg:x3; val_offset:25332*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25332*0 + 3*764*FLEN/8, x4, x1, x2)

inst_8445:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x41fffff; valaddr_reg:x3; val_offset:25335*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25335*0 + 3*765*FLEN/8, x4, x1, x2)

inst_8446:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x43fffff; valaddr_reg:x3; val_offset:25338*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25338*0 + 3*766*FLEN/8, x4, x1, x2)

inst_8447:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2c5ee2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x08 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2c5ee2; op2val:0x0;
op3val:0x4400000; valaddr_reg:x3; val_offset:25341*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 25341*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3850436607,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3850502143,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3850633215,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3850895359,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3851419647,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3852468223,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3854565375,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3854565376,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3856662528,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3857711104,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858235392,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858497536,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858628608,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858694144,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858726912,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858743296,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858751488,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858755584,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858757632,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858758656,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759168,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759424,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759552,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759616,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759648,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759664,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759672,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759676,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759678,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(3858759679,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2115622175,32,FLEN)
NAN_BOXED(3235185352,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046848,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046849,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046851,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046855,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046863,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046879,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046911,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046975,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260047103,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260047359,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260047871,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260048895,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260050943,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260055039,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260063231,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260079615,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260112383,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260177919,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260308991,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260571135,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(261095423,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(262143999,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(264241151,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(264241152,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(266338304,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(267386880,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(267911168,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268173312,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268304384,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268369920,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268402688,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268419072,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268427264,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268431360,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268433408,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268434432,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268434944,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435200,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435328,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435392,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435424,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435440,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435448,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435452,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435454,32,FLEN)
NAN_BOXED(2115638354,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(268435455,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143232,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143233,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143235,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143239,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143247,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143263,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143295,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143359,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143487,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018143743,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018144255,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018145279,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018147327,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018151423,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018159615,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018175999,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018208767,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018274303,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018405375,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4018667519,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4019191807,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4020240383,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4022337535,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4022337536,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4024434688,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4025483264,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026007552,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026269696,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026400768,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026466304,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026499072,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026515456,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026523648,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026527744,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026529792,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026530816,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531328,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531584,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531712,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531776,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531808,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531824,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531832,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531836,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531838,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4026531839,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2116059673,32,FLEN)
NAN_BOXED(3234604748,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086272,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086273,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086275,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086279,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086287,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086303,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086335,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086399,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086527,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060086783,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060087295,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060088319,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060090367,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060094463,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060102655,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060119039,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060151807,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060217343,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060348415,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4060610559,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4061134847,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4062183423,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4064280575,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4064280576,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4066377728,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4067426304,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4067950592,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068212736,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068343808,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068409344,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068442112,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068458496,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068466688,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068470784,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068472832,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068473856,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474368,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474624,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474752,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474816,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474848,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474864,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474872,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474876,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474878,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4068474879,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2116074388,32,FLEN)
NAN_BOXED(3234586058,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421632,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421633,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421635,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421639,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421647,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421663,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421695,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421759,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421887,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340422143,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340422655,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340423679,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340425727,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340429823,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340438015,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340454399,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340487167,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340552703,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340683775,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340945919,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2341470207,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2342518783,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2344615935,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2344615936,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2346713088,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2347761664,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348285952,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348548096,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348679168,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348744704,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348777472,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348793856,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348802048,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348806144,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348808192,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348809216,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348809728,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348809984,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810112,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810176,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810208,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810224,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810232,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810236,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810238,32,FLEN)
NAN_BOXED(2116166875,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810239,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711488,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711489,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711491,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711495,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711503,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711519,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711551,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711615,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711743,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979711999,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979712511,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979713535,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979715583,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979719679,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979727871,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979744255,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979777023,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979842559,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1979973631,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1980235775,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1980760063,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1981808639,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1983905791,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1983905792,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1986002944,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1987051520,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1987575808,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1987837952,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1987969024,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988034560,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988067328,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988083712,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988091904,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988096000,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988098048,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988099072,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988099584,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988099840,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988099968,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988100032,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988100064,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988100080,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988100088,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988100092,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988100094,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(1988100095,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2116205405,32,FLEN)
NAN_BOXED(1086938274,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2116461917,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554432,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554433,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554435,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554439,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554447,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554463,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554495,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554559,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554687,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33554943,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33555455,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33556479,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33558527,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33562623,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33570815,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33587199,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33619967,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33685503,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(33816575,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(34078719,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(34603007,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(35651583,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(37748735,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(37748736,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(39845888,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(40894464,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41418752,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41680896,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41811968,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41877504,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41910272,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41926656,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41934848,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41938944,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41940992,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942016,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942528,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942784,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942912,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41942976,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943008,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943024,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943032,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943036,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943038,32,FLEN)
NAN_BOXED(2116545573,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943039,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081216,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081217,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081219,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081223,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081231,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081247,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081279,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081343,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081471,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211081727,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211082239,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211083263,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211085311,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211089407,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211097599,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211113983,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211146751,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211212287,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211343359,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4211605503,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4212129791,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4213178367,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4215275519,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4215275520,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4217372672,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4218421248,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4218945536,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219207680,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219338752,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219404288,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219437056,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219453440,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219461632,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219465728,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219467776,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219468800,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469312,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469568,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469696,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469760,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469792,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469808,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469816,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469820,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469822,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4219469823,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2116558733,32,FLEN)
NAN_BOXED(3233998741,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795072,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795073,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795075,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795079,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795087,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795103,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795135,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795199,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795327,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801795583,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801796095,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801797119,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801799167,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801803263,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801811455,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801827839,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801860607,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2801926143,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2802057215,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2802319359,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2802843647,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2803892223,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2805989375,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2805989376,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2808086528,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2809135104,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2809659392,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2809921536,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810052608,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810118144,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810150912,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810167296,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810175488,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810179584,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810181632,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810182656,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183168,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183424,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183552,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183616,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183648,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183664,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183672,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183676,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183678,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(2810183679,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2116718800,32,FLEN)
NAN_BOXED(2160074010,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115684864,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115684865,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115684867,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115684871,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115684879,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115684895,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115684927,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115684991,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115685119,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115685375,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115685887,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115686911,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115688959,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115693055,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115701247,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115717631,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115750399,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115815935,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1115947007,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1116209151,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1116733439,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1117782015,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1119879167,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1119879168,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1121976320,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1123024896,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1123549184,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1123811328,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1123942400,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124007936,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124040704,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124057088,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124065280,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124069376,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124071424,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124072448,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124072960,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124073216,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124073344,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124073408,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124073440,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124073456,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124073464,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124073468,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124073470,32,FLEN)
NAN_BOXED(2116741303,32,FLEN)
NAN_BOXED(12565066,32,FLEN)
NAN_BOXED(1124073471,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366016,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366017,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366019,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366023,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366031,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366047,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366079,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366143,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366271,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001366527,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001367039,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001368063,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001370111,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001374207,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001382399,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001398783,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001431551,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001497087,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001628159,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4001890303,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4002414591,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4003463167,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4005560319,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4005560320,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4007657472,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4008706048,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009230336,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009492480,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009623552,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009689088,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009721856,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009738240,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009746432,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009750528,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009752576,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009753600,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754112,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754368,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754496,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754560,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754592,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754608,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754616,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754620,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754622,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4009754623,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2116807195,32,FLEN)
NAN_BOXED(3233717052,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108864,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108865,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108867,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108871,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108879,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108895,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108927,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67108991,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109119,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109375,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67109887,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67110911,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67112959,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67117055,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67125247,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67141631,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67174399,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67239935,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67371007,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(67633151,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(68157439,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(69206015,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(71303167,32,FLEN)
NAN_BOXED(2116837090,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(71303168,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
