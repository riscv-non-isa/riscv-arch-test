
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_31488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:94464*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94464*0 + 3*0*FLEN/8, x4, x1, x2)

inst_31489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:94467*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94467*0 + 3*1*FLEN/8, x4, x1, x2)

inst_31490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:94470*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94470*0 + 3*2*FLEN/8, x4, x1, x2)

inst_31491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:94473*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94473*0 + 3*3*FLEN/8, x4, x1, x2)

inst_31492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:94476*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94476*0 + 3*4*FLEN/8, x4, x1, x2)

inst_31493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:94479*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94479*0 + 3*5*FLEN/8, x4, x1, x2)

inst_31494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:94482*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94482*0 + 3*6*FLEN/8, x4, x1, x2)

inst_31495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe000000; valaddr_reg:x3; val_offset:94485*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94485*0 + 3*7*FLEN/8, x4, x1, x2)

inst_31496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe000001; valaddr_reg:x3; val_offset:94488*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94488*0 + 3*8*FLEN/8, x4, x1, x2)

inst_31497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe000003; valaddr_reg:x3; val_offset:94491*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94491*0 + 3*9*FLEN/8, x4, x1, x2)

inst_31498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe000007; valaddr_reg:x3; val_offset:94494*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94494*0 + 3*10*FLEN/8, x4, x1, x2)

inst_31499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe00000f; valaddr_reg:x3; val_offset:94497*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94497*0 + 3*11*FLEN/8, x4, x1, x2)

inst_31500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe00001f; valaddr_reg:x3; val_offset:94500*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94500*0 + 3*12*FLEN/8, x4, x1, x2)

inst_31501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe00003f; valaddr_reg:x3; val_offset:94503*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94503*0 + 3*13*FLEN/8, x4, x1, x2)

inst_31502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe00007f; valaddr_reg:x3; val_offset:94506*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94506*0 + 3*14*FLEN/8, x4, x1, x2)

inst_31503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe0000ff; valaddr_reg:x3; val_offset:94509*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94509*0 + 3*15*FLEN/8, x4, x1, x2)

inst_31504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe0001ff; valaddr_reg:x3; val_offset:94512*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94512*0 + 3*16*FLEN/8, x4, x1, x2)

inst_31505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe0003ff; valaddr_reg:x3; val_offset:94515*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94515*0 + 3*17*FLEN/8, x4, x1, x2)

inst_31506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe0007ff; valaddr_reg:x3; val_offset:94518*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94518*0 + 3*18*FLEN/8, x4, x1, x2)

inst_31507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe000fff; valaddr_reg:x3; val_offset:94521*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94521*0 + 3*19*FLEN/8, x4, x1, x2)

inst_31508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe001fff; valaddr_reg:x3; val_offset:94524*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94524*0 + 3*20*FLEN/8, x4, x1, x2)

inst_31509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe003fff; valaddr_reg:x3; val_offset:94527*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94527*0 + 3*21*FLEN/8, x4, x1, x2)

inst_31510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe007fff; valaddr_reg:x3; val_offset:94530*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94530*0 + 3*22*FLEN/8, x4, x1, x2)

inst_31511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe00ffff; valaddr_reg:x3; val_offset:94533*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94533*0 + 3*23*FLEN/8, x4, x1, x2)

inst_31512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe01ffff; valaddr_reg:x3; val_offset:94536*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94536*0 + 3*24*FLEN/8, x4, x1, x2)

inst_31513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe03ffff; valaddr_reg:x3; val_offset:94539*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94539*0 + 3*25*FLEN/8, x4, x1, x2)

inst_31514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe07ffff; valaddr_reg:x3; val_offset:94542*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94542*0 + 3*26*FLEN/8, x4, x1, x2)

inst_31515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe0fffff; valaddr_reg:x3; val_offset:94545*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94545*0 + 3*27*FLEN/8, x4, x1, x2)

inst_31516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe1fffff; valaddr_reg:x3; val_offset:94548*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94548*0 + 3*28*FLEN/8, x4, x1, x2)

inst_31517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe3fffff; valaddr_reg:x3; val_offset:94551*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94551*0 + 3*29*FLEN/8, x4, x1, x2)

inst_31518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe400000; valaddr_reg:x3; val_offset:94554*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94554*0 + 3*30*FLEN/8, x4, x1, x2)

inst_31519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe600000; valaddr_reg:x3; val_offset:94557*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94557*0 + 3*31*FLEN/8, x4, x1, x2)

inst_31520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe700000; valaddr_reg:x3; val_offset:94560*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94560*0 + 3*32*FLEN/8, x4, x1, x2)

inst_31521:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe780000; valaddr_reg:x3; val_offset:94563*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94563*0 + 3*33*FLEN/8, x4, x1, x2)

inst_31522:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7c0000; valaddr_reg:x3; val_offset:94566*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94566*0 + 3*34*FLEN/8, x4, x1, x2)

inst_31523:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7e0000; valaddr_reg:x3; val_offset:94569*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94569*0 + 3*35*FLEN/8, x4, x1, x2)

inst_31524:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7f0000; valaddr_reg:x3; val_offset:94572*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94572*0 + 3*36*FLEN/8, x4, x1, x2)

inst_31525:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7f8000; valaddr_reg:x3; val_offset:94575*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94575*0 + 3*37*FLEN/8, x4, x1, x2)

inst_31526:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7fc000; valaddr_reg:x3; val_offset:94578*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94578*0 + 3*38*FLEN/8, x4, x1, x2)

inst_31527:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7fe000; valaddr_reg:x3; val_offset:94581*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94581*0 + 3*39*FLEN/8, x4, x1, x2)

inst_31528:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7ff000; valaddr_reg:x3; val_offset:94584*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94584*0 + 3*40*FLEN/8, x4, x1, x2)

inst_31529:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7ff800; valaddr_reg:x3; val_offset:94587*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94587*0 + 3*41*FLEN/8, x4, x1, x2)

inst_31530:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7ffc00; valaddr_reg:x3; val_offset:94590*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94590*0 + 3*42*FLEN/8, x4, x1, x2)

inst_31531:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7ffe00; valaddr_reg:x3; val_offset:94593*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94593*0 + 3*43*FLEN/8, x4, x1, x2)

inst_31532:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7fff00; valaddr_reg:x3; val_offset:94596*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94596*0 + 3*44*FLEN/8, x4, x1, x2)

inst_31533:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7fff80; valaddr_reg:x3; val_offset:94599*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94599*0 + 3*45*FLEN/8, x4, x1, x2)

inst_31534:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7fffc0; valaddr_reg:x3; val_offset:94602*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94602*0 + 3*46*FLEN/8, x4, x1, x2)

inst_31535:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7fffe0; valaddr_reg:x3; val_offset:94605*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94605*0 + 3*47*FLEN/8, x4, x1, x2)

inst_31536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7ffff0; valaddr_reg:x3; val_offset:94608*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94608*0 + 3*48*FLEN/8, x4, x1, x2)

inst_31537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7ffff8; valaddr_reg:x3; val_offset:94611*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94611*0 + 3*49*FLEN/8, x4, x1, x2)

inst_31538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7ffffc; valaddr_reg:x3; val_offset:94614*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94614*0 + 3*50*FLEN/8, x4, x1, x2)

inst_31539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7ffffe; valaddr_reg:x3; val_offset:94617*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94617*0 + 3*51*FLEN/8, x4, x1, x2)

inst_31540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cee66 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1cee66; op2val:0x0;
op3val:0xe7fffff; valaddr_reg:x3; val_offset:94620*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94620*0 + 3*52*FLEN/8, x4, x1, x2)

inst_31541:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:94623*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94623*0 + 3*53*FLEN/8, x4, x1, x2)

inst_31542:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:94626*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94626*0 + 3*54*FLEN/8, x4, x1, x2)

inst_31543:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:94629*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94629*0 + 3*55*FLEN/8, x4, x1, x2)

inst_31544:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:94632*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94632*0 + 3*56*FLEN/8, x4, x1, x2)

inst_31545:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:94635*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94635*0 + 3*57*FLEN/8, x4, x1, x2)

inst_31546:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:94638*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94638*0 + 3*58*FLEN/8, x4, x1, x2)

inst_31547:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:94641*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94641*0 + 3*59*FLEN/8, x4, x1, x2)

inst_31548:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:94644*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94644*0 + 3*60*FLEN/8, x4, x1, x2)

inst_31549:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:94647*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94647*0 + 3*61*FLEN/8, x4, x1, x2)

inst_31550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:94650*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94650*0 + 3*62*FLEN/8, x4, x1, x2)

inst_31551:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:94653*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94653*0 + 3*63*FLEN/8, x4, x1, x2)

inst_31552:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:94656*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94656*0 + 3*64*FLEN/8, x4, x1, x2)

inst_31553:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:94659*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94659*0 + 3*65*FLEN/8, x4, x1, x2)

inst_31554:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:94662*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94662*0 + 3*66*FLEN/8, x4, x1, x2)

inst_31555:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:94665*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94665*0 + 3*67*FLEN/8, x4, x1, x2)

inst_31556:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:94668*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94668*0 + 3*68*FLEN/8, x4, x1, x2)

inst_31557:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83000000; valaddr_reg:x3; val_offset:94671*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94671*0 + 3*69*FLEN/8, x4, x1, x2)

inst_31558:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83000001; valaddr_reg:x3; val_offset:94674*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94674*0 + 3*70*FLEN/8, x4, x1, x2)

inst_31559:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83000003; valaddr_reg:x3; val_offset:94677*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94677*0 + 3*71*FLEN/8, x4, x1, x2)

inst_31560:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83000007; valaddr_reg:x3; val_offset:94680*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94680*0 + 3*72*FLEN/8, x4, x1, x2)

inst_31561:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x8300000f; valaddr_reg:x3; val_offset:94683*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94683*0 + 3*73*FLEN/8, x4, x1, x2)

inst_31562:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x8300001f; valaddr_reg:x3; val_offset:94686*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94686*0 + 3*74*FLEN/8, x4, x1, x2)

inst_31563:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x8300003f; valaddr_reg:x3; val_offset:94689*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94689*0 + 3*75*FLEN/8, x4, x1, x2)

inst_31564:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x8300007f; valaddr_reg:x3; val_offset:94692*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94692*0 + 3*76*FLEN/8, x4, x1, x2)

inst_31565:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x830000ff; valaddr_reg:x3; val_offset:94695*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94695*0 + 3*77*FLEN/8, x4, x1, x2)

inst_31566:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x830001ff; valaddr_reg:x3; val_offset:94698*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94698*0 + 3*78*FLEN/8, x4, x1, x2)

inst_31567:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x830003ff; valaddr_reg:x3; val_offset:94701*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94701*0 + 3*79*FLEN/8, x4, x1, x2)

inst_31568:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x830007ff; valaddr_reg:x3; val_offset:94704*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94704*0 + 3*80*FLEN/8, x4, x1, x2)

inst_31569:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83000fff; valaddr_reg:x3; val_offset:94707*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94707*0 + 3*81*FLEN/8, x4, x1, x2)

inst_31570:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83001fff; valaddr_reg:x3; val_offset:94710*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94710*0 + 3*82*FLEN/8, x4, x1, x2)

inst_31571:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83003fff; valaddr_reg:x3; val_offset:94713*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94713*0 + 3*83*FLEN/8, x4, x1, x2)

inst_31572:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83007fff; valaddr_reg:x3; val_offset:94716*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94716*0 + 3*84*FLEN/8, x4, x1, x2)

inst_31573:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x8300ffff; valaddr_reg:x3; val_offset:94719*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94719*0 + 3*85*FLEN/8, x4, x1, x2)

inst_31574:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x8301ffff; valaddr_reg:x3; val_offset:94722*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94722*0 + 3*86*FLEN/8, x4, x1, x2)

inst_31575:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x8303ffff; valaddr_reg:x3; val_offset:94725*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94725*0 + 3*87*FLEN/8, x4, x1, x2)

inst_31576:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x8307ffff; valaddr_reg:x3; val_offset:94728*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94728*0 + 3*88*FLEN/8, x4, x1, x2)

inst_31577:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x830fffff; valaddr_reg:x3; val_offset:94731*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94731*0 + 3*89*FLEN/8, x4, x1, x2)

inst_31578:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x831fffff; valaddr_reg:x3; val_offset:94734*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94734*0 + 3*90*FLEN/8, x4, x1, x2)

inst_31579:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x833fffff; valaddr_reg:x3; val_offset:94737*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94737*0 + 3*91*FLEN/8, x4, x1, x2)

inst_31580:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83400000; valaddr_reg:x3; val_offset:94740*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94740*0 + 3*92*FLEN/8, x4, x1, x2)

inst_31581:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83600000; valaddr_reg:x3; val_offset:94743*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94743*0 + 3*93*FLEN/8, x4, x1, x2)

inst_31582:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83700000; valaddr_reg:x3; val_offset:94746*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94746*0 + 3*94*FLEN/8, x4, x1, x2)

inst_31583:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x83780000; valaddr_reg:x3; val_offset:94749*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94749*0 + 3*95*FLEN/8, x4, x1, x2)

inst_31584:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837c0000; valaddr_reg:x3; val_offset:94752*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94752*0 + 3*96*FLEN/8, x4, x1, x2)

inst_31585:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837e0000; valaddr_reg:x3; val_offset:94755*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94755*0 + 3*97*FLEN/8, x4, x1, x2)

inst_31586:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837f0000; valaddr_reg:x3; val_offset:94758*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94758*0 + 3*98*FLEN/8, x4, x1, x2)

inst_31587:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837f8000; valaddr_reg:x3; val_offset:94761*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94761*0 + 3*99*FLEN/8, x4, x1, x2)

inst_31588:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837fc000; valaddr_reg:x3; val_offset:94764*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94764*0 + 3*100*FLEN/8, x4, x1, x2)

inst_31589:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837fe000; valaddr_reg:x3; val_offset:94767*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94767*0 + 3*101*FLEN/8, x4, x1, x2)

inst_31590:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837ff000; valaddr_reg:x3; val_offset:94770*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94770*0 + 3*102*FLEN/8, x4, x1, x2)

inst_31591:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837ff800; valaddr_reg:x3; val_offset:94773*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94773*0 + 3*103*FLEN/8, x4, x1, x2)

inst_31592:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837ffc00; valaddr_reg:x3; val_offset:94776*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94776*0 + 3*104*FLEN/8, x4, x1, x2)

inst_31593:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837ffe00; valaddr_reg:x3; val_offset:94779*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94779*0 + 3*105*FLEN/8, x4, x1, x2)

inst_31594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837fff00; valaddr_reg:x3; val_offset:94782*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94782*0 + 3*106*FLEN/8, x4, x1, x2)

inst_31595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837fff80; valaddr_reg:x3; val_offset:94785*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94785*0 + 3*107*FLEN/8, x4, x1, x2)

inst_31596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837fffc0; valaddr_reg:x3; val_offset:94788*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94788*0 + 3*108*FLEN/8, x4, x1, x2)

inst_31597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837fffe0; valaddr_reg:x3; val_offset:94791*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94791*0 + 3*109*FLEN/8, x4, x1, x2)

inst_31598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837ffff0; valaddr_reg:x3; val_offset:94794*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94794*0 + 3*110*FLEN/8, x4, x1, x2)

inst_31599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837ffff8; valaddr_reg:x3; val_offset:94797*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94797*0 + 3*111*FLEN/8, x4, x1, x2)

inst_31600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837ffffc; valaddr_reg:x3; val_offset:94800*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94800*0 + 3*112*FLEN/8, x4, x1, x2)

inst_31601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837ffffe; valaddr_reg:x3; val_offset:94803*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94803*0 + 3*113*FLEN/8, x4, x1, x2)

inst_31602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dc006; op2val:0x80000000;
op3val:0x837fffff; valaddr_reg:x3; val_offset:94806*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94806*0 + 3*114*FLEN/8, x4, x1, x2)

inst_31603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb800000; valaddr_reg:x3; val_offset:94809*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94809*0 + 3*115*FLEN/8, x4, x1, x2)

inst_31604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb800001; valaddr_reg:x3; val_offset:94812*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94812*0 + 3*116*FLEN/8, x4, x1, x2)

inst_31605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb800003; valaddr_reg:x3; val_offset:94815*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94815*0 + 3*117*FLEN/8, x4, x1, x2)

inst_31606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb800007; valaddr_reg:x3; val_offset:94818*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94818*0 + 3*118*FLEN/8, x4, x1, x2)

inst_31607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb80000f; valaddr_reg:x3; val_offset:94821*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94821*0 + 3*119*FLEN/8, x4, x1, x2)

inst_31608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb80001f; valaddr_reg:x3; val_offset:94824*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94824*0 + 3*120*FLEN/8, x4, x1, x2)

inst_31609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb80003f; valaddr_reg:x3; val_offset:94827*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94827*0 + 3*121*FLEN/8, x4, x1, x2)

inst_31610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb80007f; valaddr_reg:x3; val_offset:94830*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94830*0 + 3*122*FLEN/8, x4, x1, x2)

inst_31611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb8000ff; valaddr_reg:x3; val_offset:94833*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94833*0 + 3*123*FLEN/8, x4, x1, x2)

inst_31612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb8001ff; valaddr_reg:x3; val_offset:94836*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94836*0 + 3*124*FLEN/8, x4, x1, x2)

inst_31613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb8003ff; valaddr_reg:x3; val_offset:94839*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94839*0 + 3*125*FLEN/8, x4, x1, x2)

inst_31614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb8007ff; valaddr_reg:x3; val_offset:94842*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94842*0 + 3*126*FLEN/8, x4, x1, x2)

inst_31615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb800fff; valaddr_reg:x3; val_offset:94845*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94845*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_31616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb801fff; valaddr_reg:x3; val_offset:94848*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94848*0 + 3*128*FLEN/8, x4, x1, x2)

inst_31617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb803fff; valaddr_reg:x3; val_offset:94851*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94851*0 + 3*129*FLEN/8, x4, x1, x2)

inst_31618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb807fff; valaddr_reg:x3; val_offset:94854*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94854*0 + 3*130*FLEN/8, x4, x1, x2)

inst_31619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb80ffff; valaddr_reg:x3; val_offset:94857*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94857*0 + 3*131*FLEN/8, x4, x1, x2)

inst_31620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb81ffff; valaddr_reg:x3; val_offset:94860*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94860*0 + 3*132*FLEN/8, x4, x1, x2)

inst_31621:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb83ffff; valaddr_reg:x3; val_offset:94863*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94863*0 + 3*133*FLEN/8, x4, x1, x2)

inst_31622:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb87ffff; valaddr_reg:x3; val_offset:94866*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94866*0 + 3*134*FLEN/8, x4, x1, x2)

inst_31623:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb8fffff; valaddr_reg:x3; val_offset:94869*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94869*0 + 3*135*FLEN/8, x4, x1, x2)

inst_31624:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbb9fffff; valaddr_reg:x3; val_offset:94872*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94872*0 + 3*136*FLEN/8, x4, x1, x2)

inst_31625:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbbfffff; valaddr_reg:x3; val_offset:94875*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94875*0 + 3*137*FLEN/8, x4, x1, x2)

inst_31626:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbc00000; valaddr_reg:x3; val_offset:94878*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94878*0 + 3*138*FLEN/8, x4, x1, x2)

inst_31627:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbe00000; valaddr_reg:x3; val_offset:94881*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94881*0 + 3*139*FLEN/8, x4, x1, x2)

inst_31628:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbf00000; valaddr_reg:x3; val_offset:94884*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94884*0 + 3*140*FLEN/8, x4, x1, x2)

inst_31629:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbf80000; valaddr_reg:x3; val_offset:94887*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94887*0 + 3*141*FLEN/8, x4, x1, x2)

inst_31630:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfc0000; valaddr_reg:x3; val_offset:94890*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94890*0 + 3*142*FLEN/8, x4, x1, x2)

inst_31631:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfe0000; valaddr_reg:x3; val_offset:94893*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94893*0 + 3*143*FLEN/8, x4, x1, x2)

inst_31632:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbff0000; valaddr_reg:x3; val_offset:94896*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94896*0 + 3*144*FLEN/8, x4, x1, x2)

inst_31633:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbff8000; valaddr_reg:x3; val_offset:94899*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94899*0 + 3*145*FLEN/8, x4, x1, x2)

inst_31634:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbffc000; valaddr_reg:x3; val_offset:94902*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94902*0 + 3*146*FLEN/8, x4, x1, x2)

inst_31635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbffe000; valaddr_reg:x3; val_offset:94905*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94905*0 + 3*147*FLEN/8, x4, x1, x2)

inst_31636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfff000; valaddr_reg:x3; val_offset:94908*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94908*0 + 3*148*FLEN/8, x4, x1, x2)

inst_31637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfff800; valaddr_reg:x3; val_offset:94911*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94911*0 + 3*149*FLEN/8, x4, x1, x2)

inst_31638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfffc00; valaddr_reg:x3; val_offset:94914*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94914*0 + 3*150*FLEN/8, x4, x1, x2)

inst_31639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfffe00; valaddr_reg:x3; val_offset:94917*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94917*0 + 3*151*FLEN/8, x4, x1, x2)

inst_31640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbffff00; valaddr_reg:x3; val_offset:94920*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94920*0 + 3*152*FLEN/8, x4, x1, x2)

inst_31641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbffff80; valaddr_reg:x3; val_offset:94923*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94923*0 + 3*153*FLEN/8, x4, x1, x2)

inst_31642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbffffc0; valaddr_reg:x3; val_offset:94926*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94926*0 + 3*154*FLEN/8, x4, x1, x2)

inst_31643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbffffe0; valaddr_reg:x3; val_offset:94929*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94929*0 + 3*155*FLEN/8, x4, x1, x2)

inst_31644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfffff0; valaddr_reg:x3; val_offset:94932*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94932*0 + 3*156*FLEN/8, x4, x1, x2)

inst_31645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfffff8; valaddr_reg:x3; val_offset:94935*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94935*0 + 3*157*FLEN/8, x4, x1, x2)

inst_31646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfffffc; valaddr_reg:x3; val_offset:94938*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94938*0 + 3*158*FLEN/8, x4, x1, x2)

inst_31647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbfffffe; valaddr_reg:x3; val_offset:94941*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94941*0 + 3*159*FLEN/8, x4, x1, x2)

inst_31648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x77 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbbffffff; valaddr_reg:x3; val_offset:94944*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94944*0 + 3*160*FLEN/8, x4, x1, x2)

inst_31649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbf800001; valaddr_reg:x3; val_offset:94947*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94947*0 + 3*161*FLEN/8, x4, x1, x2)

inst_31650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbf800003; valaddr_reg:x3; val_offset:94950*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94950*0 + 3*162*FLEN/8, x4, x1, x2)

inst_31651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbf800007; valaddr_reg:x3; val_offset:94953*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94953*0 + 3*163*FLEN/8, x4, x1, x2)

inst_31652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbf999999; valaddr_reg:x3; val_offset:94956*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94956*0 + 3*164*FLEN/8, x4, x1, x2)

inst_31653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:94959*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94959*0 + 3*165*FLEN/8, x4, x1, x2)

inst_31654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:94962*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94962*0 + 3*166*FLEN/8, x4, x1, x2)

inst_31655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:94965*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94965*0 + 3*167*FLEN/8, x4, x1, x2)

inst_31656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:94968*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94968*0 + 3*168*FLEN/8, x4, x1, x2)

inst_31657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:94971*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94971*0 + 3*169*FLEN/8, x4, x1, x2)

inst_31658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:94974*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94974*0 + 3*170*FLEN/8, x4, x1, x2)

inst_31659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:94977*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94977*0 + 3*171*FLEN/8, x4, x1, x2)

inst_31660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:94980*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94980*0 + 3*172*FLEN/8, x4, x1, x2)

inst_31661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:94983*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94983*0 + 3*173*FLEN/8, x4, x1, x2)

inst_31662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:94986*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94986*0 + 3*174*FLEN/8, x4, x1, x2)

inst_31663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:94989*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94989*0 + 3*175*FLEN/8, x4, x1, x2)

inst_31664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x33cfbb and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e1c9c; op2val:0x8033cfbb;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:94992*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94992*0 + 3*176*FLEN/8, x4, x1, x2)

inst_31665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:94995*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94995*0 + 3*177*FLEN/8, x4, x1, x2)

inst_31666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:94998*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 94998*0 + 3*178*FLEN/8, x4, x1, x2)

inst_31667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:95001*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95001*0 + 3*179*FLEN/8, x4, x1, x2)

inst_31668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:95004*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95004*0 + 3*180*FLEN/8, x4, x1, x2)

inst_31669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:95007*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95007*0 + 3*181*FLEN/8, x4, x1, x2)

inst_31670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:95010*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95010*0 + 3*182*FLEN/8, x4, x1, x2)

inst_31671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:95013*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95013*0 + 3*183*FLEN/8, x4, x1, x2)

inst_31672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:95016*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95016*0 + 3*184*FLEN/8, x4, x1, x2)

inst_31673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:95019*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95019*0 + 3*185*FLEN/8, x4, x1, x2)

inst_31674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:95022*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95022*0 + 3*186*FLEN/8, x4, x1, x2)

inst_31675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:95025*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95025*0 + 3*187*FLEN/8, x4, x1, x2)

inst_31676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:95028*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95028*0 + 3*188*FLEN/8, x4, x1, x2)

inst_31677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:95031*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95031*0 + 3*189*FLEN/8, x4, x1, x2)

inst_31678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:95034*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95034*0 + 3*190*FLEN/8, x4, x1, x2)

inst_31679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:95037*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95037*0 + 3*191*FLEN/8, x4, x1, x2)

inst_31680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:95040*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95040*0 + 3*192*FLEN/8, x4, x1, x2)

inst_31681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb800000; valaddr_reg:x3; val_offset:95043*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95043*0 + 3*193*FLEN/8, x4, x1, x2)

inst_31682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb800001; valaddr_reg:x3; val_offset:95046*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95046*0 + 3*194*FLEN/8, x4, x1, x2)

inst_31683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb800003; valaddr_reg:x3; val_offset:95049*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95049*0 + 3*195*FLEN/8, x4, x1, x2)

inst_31684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb800007; valaddr_reg:x3; val_offset:95052*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95052*0 + 3*196*FLEN/8, x4, x1, x2)

inst_31685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb80000f; valaddr_reg:x3; val_offset:95055*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95055*0 + 3*197*FLEN/8, x4, x1, x2)

inst_31686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb80001f; valaddr_reg:x3; val_offset:95058*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95058*0 + 3*198*FLEN/8, x4, x1, x2)

inst_31687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb80003f; valaddr_reg:x3; val_offset:95061*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95061*0 + 3*199*FLEN/8, x4, x1, x2)

inst_31688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb80007f; valaddr_reg:x3; val_offset:95064*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95064*0 + 3*200*FLEN/8, x4, x1, x2)

inst_31689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb8000ff; valaddr_reg:x3; val_offset:95067*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95067*0 + 3*201*FLEN/8, x4, x1, x2)

inst_31690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb8001ff; valaddr_reg:x3; val_offset:95070*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95070*0 + 3*202*FLEN/8, x4, x1, x2)

inst_31691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb8003ff; valaddr_reg:x3; val_offset:95073*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95073*0 + 3*203*FLEN/8, x4, x1, x2)

inst_31692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb8007ff; valaddr_reg:x3; val_offset:95076*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95076*0 + 3*204*FLEN/8, x4, x1, x2)

inst_31693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb800fff; valaddr_reg:x3; val_offset:95079*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95079*0 + 3*205*FLEN/8, x4, x1, x2)

inst_31694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb801fff; valaddr_reg:x3; val_offset:95082*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95082*0 + 3*206*FLEN/8, x4, x1, x2)

inst_31695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb803fff; valaddr_reg:x3; val_offset:95085*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95085*0 + 3*207*FLEN/8, x4, x1, x2)

inst_31696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb807fff; valaddr_reg:x3; val_offset:95088*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95088*0 + 3*208*FLEN/8, x4, x1, x2)

inst_31697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb80ffff; valaddr_reg:x3; val_offset:95091*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95091*0 + 3*209*FLEN/8, x4, x1, x2)

inst_31698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb81ffff; valaddr_reg:x3; val_offset:95094*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95094*0 + 3*210*FLEN/8, x4, x1, x2)

inst_31699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb83ffff; valaddr_reg:x3; val_offset:95097*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95097*0 + 3*211*FLEN/8, x4, x1, x2)

inst_31700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb87ffff; valaddr_reg:x3; val_offset:95100*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95100*0 + 3*212*FLEN/8, x4, x1, x2)

inst_31701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb8fffff; valaddr_reg:x3; val_offset:95103*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95103*0 + 3*213*FLEN/8, x4, x1, x2)

inst_31702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xb9fffff; valaddr_reg:x3; val_offset:95106*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95106*0 + 3*214*FLEN/8, x4, x1, x2)

inst_31703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbbfffff; valaddr_reg:x3; val_offset:95109*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95109*0 + 3*215*FLEN/8, x4, x1, x2)

inst_31704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbc00000; valaddr_reg:x3; val_offset:95112*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95112*0 + 3*216*FLEN/8, x4, x1, x2)

inst_31705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbe00000; valaddr_reg:x3; val_offset:95115*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95115*0 + 3*217*FLEN/8, x4, x1, x2)

inst_31706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbf00000; valaddr_reg:x3; val_offset:95118*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95118*0 + 3*218*FLEN/8, x4, x1, x2)

inst_31707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbf80000; valaddr_reg:x3; val_offset:95121*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95121*0 + 3*219*FLEN/8, x4, x1, x2)

inst_31708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfc0000; valaddr_reg:x3; val_offset:95124*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95124*0 + 3*220*FLEN/8, x4, x1, x2)

inst_31709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfe0000; valaddr_reg:x3; val_offset:95127*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95127*0 + 3*221*FLEN/8, x4, x1, x2)

inst_31710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbff0000; valaddr_reg:x3; val_offset:95130*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95130*0 + 3*222*FLEN/8, x4, x1, x2)

inst_31711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbff8000; valaddr_reg:x3; val_offset:95133*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95133*0 + 3*223*FLEN/8, x4, x1, x2)

inst_31712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbffc000; valaddr_reg:x3; val_offset:95136*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95136*0 + 3*224*FLEN/8, x4, x1, x2)

inst_31713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbffe000; valaddr_reg:x3; val_offset:95139*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95139*0 + 3*225*FLEN/8, x4, x1, x2)

inst_31714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfff000; valaddr_reg:x3; val_offset:95142*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95142*0 + 3*226*FLEN/8, x4, x1, x2)

inst_31715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfff800; valaddr_reg:x3; val_offset:95145*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95145*0 + 3*227*FLEN/8, x4, x1, x2)

inst_31716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfffc00; valaddr_reg:x3; val_offset:95148*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95148*0 + 3*228*FLEN/8, x4, x1, x2)

inst_31717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfffe00; valaddr_reg:x3; val_offset:95151*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95151*0 + 3*229*FLEN/8, x4, x1, x2)

inst_31718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbffff00; valaddr_reg:x3; val_offset:95154*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95154*0 + 3*230*FLEN/8, x4, x1, x2)

inst_31719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbffff80; valaddr_reg:x3; val_offset:95157*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95157*0 + 3*231*FLEN/8, x4, x1, x2)

inst_31720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbffffc0; valaddr_reg:x3; val_offset:95160*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95160*0 + 3*232*FLEN/8, x4, x1, x2)

inst_31721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbffffe0; valaddr_reg:x3; val_offset:95163*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95163*0 + 3*233*FLEN/8, x4, x1, x2)

inst_31722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfffff0; valaddr_reg:x3; val_offset:95166*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95166*0 + 3*234*FLEN/8, x4, x1, x2)

inst_31723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfffff8; valaddr_reg:x3; val_offset:95169*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95169*0 + 3*235*FLEN/8, x4, x1, x2)

inst_31724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfffffc; valaddr_reg:x3; val_offset:95172*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95172*0 + 3*236*FLEN/8, x4, x1, x2)

inst_31725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbfffffe; valaddr_reg:x3; val_offset:95175*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95175*0 + 3*237*FLEN/8, x4, x1, x2)

inst_31726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e2022 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x17 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e2022; op2val:0x0;
op3val:0xbffffff; valaddr_reg:x3; val_offset:95178*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95178*0 + 3*238*FLEN/8, x4, x1, x2)

inst_31727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:95181*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95181*0 + 3*239*FLEN/8, x4, x1, x2)

inst_31728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:95184*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95184*0 + 3*240*FLEN/8, x4, x1, x2)

inst_31729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:95187*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95187*0 + 3*241*FLEN/8, x4, x1, x2)

inst_31730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:95190*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95190*0 + 3*242*FLEN/8, x4, x1, x2)

inst_31731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:95193*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95193*0 + 3*243*FLEN/8, x4, x1, x2)

inst_31732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:95196*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95196*0 + 3*244*FLEN/8, x4, x1, x2)

inst_31733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:95199*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95199*0 + 3*245*FLEN/8, x4, x1, x2)

inst_31734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:95202*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95202*0 + 3*246*FLEN/8, x4, x1, x2)

inst_31735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:95205*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95205*0 + 3*247*FLEN/8, x4, x1, x2)

inst_31736:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:95208*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95208*0 + 3*248*FLEN/8, x4, x1, x2)

inst_31737:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:95211*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95211*0 + 3*249*FLEN/8, x4, x1, x2)

inst_31738:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:95214*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95214*0 + 3*250*FLEN/8, x4, x1, x2)

inst_31739:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:95217*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95217*0 + 3*251*FLEN/8, x4, x1, x2)

inst_31740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:95220*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95220*0 + 3*252*FLEN/8, x4, x1, x2)

inst_31741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:95223*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95223*0 + 3*253*FLEN/8, x4, x1, x2)

inst_31742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:95226*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95226*0 + 3*254*FLEN/8, x4, x1, x2)

inst_31743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89000000; valaddr_reg:x3; val_offset:95229*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95229*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_31744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89000001; valaddr_reg:x3; val_offset:95232*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95232*0 + 3*256*FLEN/8, x4, x1, x2)

inst_31745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89000003; valaddr_reg:x3; val_offset:95235*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95235*0 + 3*257*FLEN/8, x4, x1, x2)

inst_31746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89000007; valaddr_reg:x3; val_offset:95238*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95238*0 + 3*258*FLEN/8, x4, x1, x2)

inst_31747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x8900000f; valaddr_reg:x3; val_offset:95241*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95241*0 + 3*259*FLEN/8, x4, x1, x2)

inst_31748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x8900001f; valaddr_reg:x3; val_offset:95244*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95244*0 + 3*260*FLEN/8, x4, x1, x2)

inst_31749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x8900003f; valaddr_reg:x3; val_offset:95247*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95247*0 + 3*261*FLEN/8, x4, x1, x2)

inst_31750:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x8900007f; valaddr_reg:x3; val_offset:95250*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95250*0 + 3*262*FLEN/8, x4, x1, x2)

inst_31751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x890000ff; valaddr_reg:x3; val_offset:95253*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95253*0 + 3*263*FLEN/8, x4, x1, x2)

inst_31752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x890001ff; valaddr_reg:x3; val_offset:95256*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95256*0 + 3*264*FLEN/8, x4, x1, x2)

inst_31753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x890003ff; valaddr_reg:x3; val_offset:95259*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95259*0 + 3*265*FLEN/8, x4, x1, x2)

inst_31754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x890007ff; valaddr_reg:x3; val_offset:95262*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95262*0 + 3*266*FLEN/8, x4, x1, x2)

inst_31755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89000fff; valaddr_reg:x3; val_offset:95265*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95265*0 + 3*267*FLEN/8, x4, x1, x2)

inst_31756:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89001fff; valaddr_reg:x3; val_offset:95268*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95268*0 + 3*268*FLEN/8, x4, x1, x2)

inst_31757:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89003fff; valaddr_reg:x3; val_offset:95271*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95271*0 + 3*269*FLEN/8, x4, x1, x2)

inst_31758:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89007fff; valaddr_reg:x3; val_offset:95274*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95274*0 + 3*270*FLEN/8, x4, x1, x2)

inst_31759:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x8900ffff; valaddr_reg:x3; val_offset:95277*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95277*0 + 3*271*FLEN/8, x4, x1, x2)

inst_31760:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x8901ffff; valaddr_reg:x3; val_offset:95280*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95280*0 + 3*272*FLEN/8, x4, x1, x2)

inst_31761:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x8903ffff; valaddr_reg:x3; val_offset:95283*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95283*0 + 3*273*FLEN/8, x4, x1, x2)

inst_31762:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x8907ffff; valaddr_reg:x3; val_offset:95286*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95286*0 + 3*274*FLEN/8, x4, x1, x2)

inst_31763:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x890fffff; valaddr_reg:x3; val_offset:95289*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95289*0 + 3*275*FLEN/8, x4, x1, x2)

inst_31764:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x891fffff; valaddr_reg:x3; val_offset:95292*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95292*0 + 3*276*FLEN/8, x4, x1, x2)

inst_31765:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x893fffff; valaddr_reg:x3; val_offset:95295*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95295*0 + 3*277*FLEN/8, x4, x1, x2)

inst_31766:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89400000; valaddr_reg:x3; val_offset:95298*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95298*0 + 3*278*FLEN/8, x4, x1, x2)

inst_31767:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89600000; valaddr_reg:x3; val_offset:95301*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95301*0 + 3*279*FLEN/8, x4, x1, x2)

inst_31768:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89700000; valaddr_reg:x3; val_offset:95304*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95304*0 + 3*280*FLEN/8, x4, x1, x2)

inst_31769:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x89780000; valaddr_reg:x3; val_offset:95307*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95307*0 + 3*281*FLEN/8, x4, x1, x2)

inst_31770:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897c0000; valaddr_reg:x3; val_offset:95310*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95310*0 + 3*282*FLEN/8, x4, x1, x2)

inst_31771:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897e0000; valaddr_reg:x3; val_offset:95313*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95313*0 + 3*283*FLEN/8, x4, x1, x2)

inst_31772:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897f0000; valaddr_reg:x3; val_offset:95316*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95316*0 + 3*284*FLEN/8, x4, x1, x2)

inst_31773:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897f8000; valaddr_reg:x3; val_offset:95319*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95319*0 + 3*285*FLEN/8, x4, x1, x2)

inst_31774:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897fc000; valaddr_reg:x3; val_offset:95322*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95322*0 + 3*286*FLEN/8, x4, x1, x2)

inst_31775:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897fe000; valaddr_reg:x3; val_offset:95325*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95325*0 + 3*287*FLEN/8, x4, x1, x2)

inst_31776:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897ff000; valaddr_reg:x3; val_offset:95328*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95328*0 + 3*288*FLEN/8, x4, x1, x2)

inst_31777:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897ff800; valaddr_reg:x3; val_offset:95331*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95331*0 + 3*289*FLEN/8, x4, x1, x2)

inst_31778:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897ffc00; valaddr_reg:x3; val_offset:95334*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95334*0 + 3*290*FLEN/8, x4, x1, x2)

inst_31779:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897ffe00; valaddr_reg:x3; val_offset:95337*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95337*0 + 3*291*FLEN/8, x4, x1, x2)

inst_31780:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897fff00; valaddr_reg:x3; val_offset:95340*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95340*0 + 3*292*FLEN/8, x4, x1, x2)

inst_31781:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897fff80; valaddr_reg:x3; val_offset:95343*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95343*0 + 3*293*FLEN/8, x4, x1, x2)

inst_31782:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897fffc0; valaddr_reg:x3; val_offset:95346*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95346*0 + 3*294*FLEN/8, x4, x1, x2)

inst_31783:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897fffe0; valaddr_reg:x3; val_offset:95349*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95349*0 + 3*295*FLEN/8, x4, x1, x2)

inst_31784:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897ffff0; valaddr_reg:x3; val_offset:95352*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95352*0 + 3*296*FLEN/8, x4, x1, x2)

inst_31785:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897ffff8; valaddr_reg:x3; val_offset:95355*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95355*0 + 3*297*FLEN/8, x4, x1, x2)

inst_31786:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897ffffc; valaddr_reg:x3; val_offset:95358*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95358*0 + 3*298*FLEN/8, x4, x1, x2)

inst_31787:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897ffffe; valaddr_reg:x3; val_offset:95361*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95361*0 + 3*299*FLEN/8, x4, x1, x2)

inst_31788:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1efcc5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x12 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1efcc5; op2val:0x80000000;
op3val:0x897fffff; valaddr_reg:x3; val_offset:95364*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95364*0 + 3*300*FLEN/8, x4, x1, x2)

inst_31789:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:95367*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95367*0 + 3*301*FLEN/8, x4, x1, x2)

inst_31790:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:95370*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95370*0 + 3*302*FLEN/8, x4, x1, x2)

inst_31791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:95373*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95373*0 + 3*303*FLEN/8, x4, x1, x2)

inst_31792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:95376*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95376*0 + 3*304*FLEN/8, x4, x1, x2)

inst_31793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:95379*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95379*0 + 3*305*FLEN/8, x4, x1, x2)

inst_31794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:95382*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95382*0 + 3*306*FLEN/8, x4, x1, x2)

inst_31795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:95385*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95385*0 + 3*307*FLEN/8, x4, x1, x2)

inst_31796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:95388*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95388*0 + 3*308*FLEN/8, x4, x1, x2)

inst_31797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:95391*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95391*0 + 3*309*FLEN/8, x4, x1, x2)

inst_31798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:95394*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95394*0 + 3*310*FLEN/8, x4, x1, x2)

inst_31799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:95397*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95397*0 + 3*311*FLEN/8, x4, x1, x2)

inst_31800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:95400*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95400*0 + 3*312*FLEN/8, x4, x1, x2)

inst_31801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:95403*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95403*0 + 3*313*FLEN/8, x4, x1, x2)

inst_31802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:95406*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95406*0 + 3*314*FLEN/8, x4, x1, x2)

inst_31803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:95409*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95409*0 + 3*315*FLEN/8, x4, x1, x2)

inst_31804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:95412*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95412*0 + 3*316*FLEN/8, x4, x1, x2)

inst_31805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c000000; valaddr_reg:x3; val_offset:95415*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95415*0 + 3*317*FLEN/8, x4, x1, x2)

inst_31806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c000001; valaddr_reg:x3; val_offset:95418*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95418*0 + 3*318*FLEN/8, x4, x1, x2)

inst_31807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c000003; valaddr_reg:x3; val_offset:95421*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95421*0 + 3*319*FLEN/8, x4, x1, x2)

inst_31808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c000007; valaddr_reg:x3; val_offset:95424*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95424*0 + 3*320*FLEN/8, x4, x1, x2)

inst_31809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c00000f; valaddr_reg:x3; val_offset:95427*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95427*0 + 3*321*FLEN/8, x4, x1, x2)

inst_31810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c00001f; valaddr_reg:x3; val_offset:95430*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95430*0 + 3*322*FLEN/8, x4, x1, x2)

inst_31811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c00003f; valaddr_reg:x3; val_offset:95433*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95433*0 + 3*323*FLEN/8, x4, x1, x2)

inst_31812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c00007f; valaddr_reg:x3; val_offset:95436*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95436*0 + 3*324*FLEN/8, x4, x1, x2)

inst_31813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c0000ff; valaddr_reg:x3; val_offset:95439*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95439*0 + 3*325*FLEN/8, x4, x1, x2)

inst_31814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c0001ff; valaddr_reg:x3; val_offset:95442*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95442*0 + 3*326*FLEN/8, x4, x1, x2)

inst_31815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c0003ff; valaddr_reg:x3; val_offset:95445*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95445*0 + 3*327*FLEN/8, x4, x1, x2)

inst_31816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c0007ff; valaddr_reg:x3; val_offset:95448*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95448*0 + 3*328*FLEN/8, x4, x1, x2)

inst_31817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c000fff; valaddr_reg:x3; val_offset:95451*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95451*0 + 3*329*FLEN/8, x4, x1, x2)

inst_31818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c001fff; valaddr_reg:x3; val_offset:95454*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95454*0 + 3*330*FLEN/8, x4, x1, x2)

inst_31819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c003fff; valaddr_reg:x3; val_offset:95457*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95457*0 + 3*331*FLEN/8, x4, x1, x2)

inst_31820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c007fff; valaddr_reg:x3; val_offset:95460*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95460*0 + 3*332*FLEN/8, x4, x1, x2)

inst_31821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c00ffff; valaddr_reg:x3; val_offset:95463*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95463*0 + 3*333*FLEN/8, x4, x1, x2)

inst_31822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c01ffff; valaddr_reg:x3; val_offset:95466*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95466*0 + 3*334*FLEN/8, x4, x1, x2)

inst_31823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c03ffff; valaddr_reg:x3; val_offset:95469*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95469*0 + 3*335*FLEN/8, x4, x1, x2)

inst_31824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c07ffff; valaddr_reg:x3; val_offset:95472*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95472*0 + 3*336*FLEN/8, x4, x1, x2)

inst_31825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c0fffff; valaddr_reg:x3; val_offset:95475*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95475*0 + 3*337*FLEN/8, x4, x1, x2)

inst_31826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c1fffff; valaddr_reg:x3; val_offset:95478*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95478*0 + 3*338*FLEN/8, x4, x1, x2)

inst_31827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c3fffff; valaddr_reg:x3; val_offset:95481*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95481*0 + 3*339*FLEN/8, x4, x1, x2)

inst_31828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c400000; valaddr_reg:x3; val_offset:95484*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95484*0 + 3*340*FLEN/8, x4, x1, x2)

inst_31829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c600000; valaddr_reg:x3; val_offset:95487*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95487*0 + 3*341*FLEN/8, x4, x1, x2)

inst_31830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c700000; valaddr_reg:x3; val_offset:95490*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95490*0 + 3*342*FLEN/8, x4, x1, x2)

inst_31831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c780000; valaddr_reg:x3; val_offset:95493*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95493*0 + 3*343*FLEN/8, x4, x1, x2)

inst_31832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7c0000; valaddr_reg:x3; val_offset:95496*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95496*0 + 3*344*FLEN/8, x4, x1, x2)

inst_31833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7e0000; valaddr_reg:x3; val_offset:95499*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95499*0 + 3*345*FLEN/8, x4, x1, x2)

inst_31834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7f0000; valaddr_reg:x3; val_offset:95502*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95502*0 + 3*346*FLEN/8, x4, x1, x2)

inst_31835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7f8000; valaddr_reg:x3; val_offset:95505*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95505*0 + 3*347*FLEN/8, x4, x1, x2)

inst_31836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7fc000; valaddr_reg:x3; val_offset:95508*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95508*0 + 3*348*FLEN/8, x4, x1, x2)

inst_31837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7fe000; valaddr_reg:x3; val_offset:95511*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95511*0 + 3*349*FLEN/8, x4, x1, x2)

inst_31838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7ff000; valaddr_reg:x3; val_offset:95514*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95514*0 + 3*350*FLEN/8, x4, x1, x2)

inst_31839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7ff800; valaddr_reg:x3; val_offset:95517*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95517*0 + 3*351*FLEN/8, x4, x1, x2)

inst_31840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7ffc00; valaddr_reg:x3; val_offset:95520*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95520*0 + 3*352*FLEN/8, x4, x1, x2)

inst_31841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7ffe00; valaddr_reg:x3; val_offset:95523*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95523*0 + 3*353*FLEN/8, x4, x1, x2)

inst_31842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7fff00; valaddr_reg:x3; val_offset:95526*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95526*0 + 3*354*FLEN/8, x4, x1, x2)

inst_31843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7fff80; valaddr_reg:x3; val_offset:95529*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95529*0 + 3*355*FLEN/8, x4, x1, x2)

inst_31844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7fffc0; valaddr_reg:x3; val_offset:95532*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95532*0 + 3*356*FLEN/8, x4, x1, x2)

inst_31845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7fffe0; valaddr_reg:x3; val_offset:95535*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95535*0 + 3*357*FLEN/8, x4, x1, x2)

inst_31846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7ffff0; valaddr_reg:x3; val_offset:95538*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95538*0 + 3*358*FLEN/8, x4, x1, x2)

inst_31847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7ffff8; valaddr_reg:x3; val_offset:95541*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95541*0 + 3*359*FLEN/8, x4, x1, x2)

inst_31848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7ffffc; valaddr_reg:x3; val_offset:95544*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95544*0 + 3*360*FLEN/8, x4, x1, x2)

inst_31849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7ffffe; valaddr_reg:x3; val_offset:95547*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95547*0 + 3*361*FLEN/8, x4, x1, x2)

inst_31850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x18 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1fab30; op2val:0x80000000;
op3val:0x8c7fffff; valaddr_reg:x3; val_offset:95550*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95550*0 + 3*362*FLEN/8, x4, x1, x2)

inst_31851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3f800001; valaddr_reg:x3; val_offset:95553*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95553*0 + 3*363*FLEN/8, x4, x1, x2)

inst_31852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3f800003; valaddr_reg:x3; val_offset:95556*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95556*0 + 3*364*FLEN/8, x4, x1, x2)

inst_31853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3f800007; valaddr_reg:x3; val_offset:95559*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95559*0 + 3*365*FLEN/8, x4, x1, x2)

inst_31854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3f999999; valaddr_reg:x3; val_offset:95562*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95562*0 + 3*366*FLEN/8, x4, x1, x2)

inst_31855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:95565*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95565*0 + 3*367*FLEN/8, x4, x1, x2)

inst_31856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:95568*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95568*0 + 3*368*FLEN/8, x4, x1, x2)

inst_31857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:95571*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95571*0 + 3*369*FLEN/8, x4, x1, x2)

inst_31858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:95574*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95574*0 + 3*370*FLEN/8, x4, x1, x2)

inst_31859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:95577*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95577*0 + 3*371*FLEN/8, x4, x1, x2)

inst_31860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:95580*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95580*0 + 3*372*FLEN/8, x4, x1, x2)

inst_31861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:95583*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95583*0 + 3*373*FLEN/8, x4, x1, x2)

inst_31862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:95586*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95586*0 + 3*374*FLEN/8, x4, x1, x2)

inst_31863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:95589*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95589*0 + 3*375*FLEN/8, x4, x1, x2)

inst_31864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:95592*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95592*0 + 3*376*FLEN/8, x4, x1, x2)

inst_31865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:95595*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95595*0 + 3*377*FLEN/8, x4, x1, x2)

inst_31866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:95598*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95598*0 + 3*378*FLEN/8, x4, x1, x2)

inst_31867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47000000; valaddr_reg:x3; val_offset:95601*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95601*0 + 3*379*FLEN/8, x4, x1, x2)

inst_31868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47000001; valaddr_reg:x3; val_offset:95604*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95604*0 + 3*380*FLEN/8, x4, x1, x2)

inst_31869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47000003; valaddr_reg:x3; val_offset:95607*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95607*0 + 3*381*FLEN/8, x4, x1, x2)

inst_31870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47000007; valaddr_reg:x3; val_offset:95610*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95610*0 + 3*382*FLEN/8, x4, x1, x2)

inst_31871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x4700000f; valaddr_reg:x3; val_offset:95613*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95613*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_31872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x4700001f; valaddr_reg:x3; val_offset:95616*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95616*0 + 3*384*FLEN/8, x4, x1, x2)

inst_31873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x4700003f; valaddr_reg:x3; val_offset:95619*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95619*0 + 3*385*FLEN/8, x4, x1, x2)

inst_31874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x4700007f; valaddr_reg:x3; val_offset:95622*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95622*0 + 3*386*FLEN/8, x4, x1, x2)

inst_31875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x470000ff; valaddr_reg:x3; val_offset:95625*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95625*0 + 3*387*FLEN/8, x4, x1, x2)

inst_31876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x470001ff; valaddr_reg:x3; val_offset:95628*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95628*0 + 3*388*FLEN/8, x4, x1, x2)

inst_31877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x470003ff; valaddr_reg:x3; val_offset:95631*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95631*0 + 3*389*FLEN/8, x4, x1, x2)

inst_31878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x470007ff; valaddr_reg:x3; val_offset:95634*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95634*0 + 3*390*FLEN/8, x4, x1, x2)

inst_31879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47000fff; valaddr_reg:x3; val_offset:95637*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95637*0 + 3*391*FLEN/8, x4, x1, x2)

inst_31880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47001fff; valaddr_reg:x3; val_offset:95640*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95640*0 + 3*392*FLEN/8, x4, x1, x2)

inst_31881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47003fff; valaddr_reg:x3; val_offset:95643*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95643*0 + 3*393*FLEN/8, x4, x1, x2)

inst_31882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47007fff; valaddr_reg:x3; val_offset:95646*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95646*0 + 3*394*FLEN/8, x4, x1, x2)

inst_31883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x4700ffff; valaddr_reg:x3; val_offset:95649*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95649*0 + 3*395*FLEN/8, x4, x1, x2)

inst_31884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x4701ffff; valaddr_reg:x3; val_offset:95652*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95652*0 + 3*396*FLEN/8, x4, x1, x2)

inst_31885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x4703ffff; valaddr_reg:x3; val_offset:95655*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95655*0 + 3*397*FLEN/8, x4, x1, x2)

inst_31886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x4707ffff; valaddr_reg:x3; val_offset:95658*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95658*0 + 3*398*FLEN/8, x4, x1, x2)

inst_31887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x470fffff; valaddr_reg:x3; val_offset:95661*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95661*0 + 3*399*FLEN/8, x4, x1, x2)

inst_31888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x471fffff; valaddr_reg:x3; val_offset:95664*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95664*0 + 3*400*FLEN/8, x4, x1, x2)

inst_31889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x473fffff; valaddr_reg:x3; val_offset:95667*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95667*0 + 3*401*FLEN/8, x4, x1, x2)

inst_31890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47400000; valaddr_reg:x3; val_offset:95670*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95670*0 + 3*402*FLEN/8, x4, x1, x2)

inst_31891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47600000; valaddr_reg:x3; val_offset:95673*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95673*0 + 3*403*FLEN/8, x4, x1, x2)

inst_31892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47700000; valaddr_reg:x3; val_offset:95676*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95676*0 + 3*404*FLEN/8, x4, x1, x2)

inst_31893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x47780000; valaddr_reg:x3; val_offset:95679*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95679*0 + 3*405*FLEN/8, x4, x1, x2)

inst_31894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477c0000; valaddr_reg:x3; val_offset:95682*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95682*0 + 3*406*FLEN/8, x4, x1, x2)

inst_31895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477e0000; valaddr_reg:x3; val_offset:95685*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95685*0 + 3*407*FLEN/8, x4, x1, x2)

inst_31896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477f0000; valaddr_reg:x3; val_offset:95688*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95688*0 + 3*408*FLEN/8, x4, x1, x2)

inst_31897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477f8000; valaddr_reg:x3; val_offset:95691*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95691*0 + 3*409*FLEN/8, x4, x1, x2)

inst_31898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477fc000; valaddr_reg:x3; val_offset:95694*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95694*0 + 3*410*FLEN/8, x4, x1, x2)

inst_31899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477fe000; valaddr_reg:x3; val_offset:95697*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95697*0 + 3*411*FLEN/8, x4, x1, x2)

inst_31900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477ff000; valaddr_reg:x3; val_offset:95700*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95700*0 + 3*412*FLEN/8, x4, x1, x2)

inst_31901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477ff800; valaddr_reg:x3; val_offset:95703*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95703*0 + 3*413*FLEN/8, x4, x1, x2)

inst_31902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477ffc00; valaddr_reg:x3; val_offset:95706*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95706*0 + 3*414*FLEN/8, x4, x1, x2)

inst_31903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477ffe00; valaddr_reg:x3; val_offset:95709*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95709*0 + 3*415*FLEN/8, x4, x1, x2)

inst_31904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477fff00; valaddr_reg:x3; val_offset:95712*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95712*0 + 3*416*FLEN/8, x4, x1, x2)

inst_31905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477fff80; valaddr_reg:x3; val_offset:95715*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95715*0 + 3*417*FLEN/8, x4, x1, x2)

inst_31906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477fffc0; valaddr_reg:x3; val_offset:95718*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95718*0 + 3*418*FLEN/8, x4, x1, x2)

inst_31907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477fffe0; valaddr_reg:x3; val_offset:95721*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95721*0 + 3*419*FLEN/8, x4, x1, x2)

inst_31908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477ffff0; valaddr_reg:x3; val_offset:95724*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95724*0 + 3*420*FLEN/8, x4, x1, x2)

inst_31909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477ffff8; valaddr_reg:x3; val_offset:95727*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95727*0 + 3*421*FLEN/8, x4, x1, x2)

inst_31910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477ffffc; valaddr_reg:x3; val_offset:95730*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95730*0 + 3*422*FLEN/8, x4, x1, x2)

inst_31911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477ffffe; valaddr_reg:x3; val_offset:95733*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95733*0 + 3*423*FLEN/8, x4, x1, x2)

inst_31912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x332ff7 and fs3 == 0 and fe3 == 0x8e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f200a1a; op2val:0x332ff7;
op3val:0x477fffff; valaddr_reg:x3; val_offset:95736*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95736*0 + 3*424*FLEN/8, x4, x1, x2)

inst_31913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:95739*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95739*0 + 3*425*FLEN/8, x4, x1, x2)

inst_31914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:95742*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95742*0 + 3*426*FLEN/8, x4, x1, x2)

inst_31915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:95745*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95745*0 + 3*427*FLEN/8, x4, x1, x2)

inst_31916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:95748*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95748*0 + 3*428*FLEN/8, x4, x1, x2)

inst_31917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:95751*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95751*0 + 3*429*FLEN/8, x4, x1, x2)

inst_31918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:95754*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95754*0 + 3*430*FLEN/8, x4, x1, x2)

inst_31919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:95757*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95757*0 + 3*431*FLEN/8, x4, x1, x2)

inst_31920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:95760*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95760*0 + 3*432*FLEN/8, x4, x1, x2)

inst_31921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:95763*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95763*0 + 3*433*FLEN/8, x4, x1, x2)

inst_31922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:95766*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95766*0 + 3*434*FLEN/8, x4, x1, x2)

inst_31923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:95769*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95769*0 + 3*435*FLEN/8, x4, x1, x2)

inst_31924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:95772*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95772*0 + 3*436*FLEN/8, x4, x1, x2)

inst_31925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:95775*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95775*0 + 3*437*FLEN/8, x4, x1, x2)

inst_31926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:95778*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95778*0 + 3*438*FLEN/8, x4, x1, x2)

inst_31927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:95781*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95781*0 + 3*439*FLEN/8, x4, x1, x2)

inst_31928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:95784*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95784*0 + 3*440*FLEN/8, x4, x1, x2)

inst_31929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82800000; valaddr_reg:x3; val_offset:95787*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95787*0 + 3*441*FLEN/8, x4, x1, x2)

inst_31930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82800001; valaddr_reg:x3; val_offset:95790*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95790*0 + 3*442*FLEN/8, x4, x1, x2)

inst_31931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82800003; valaddr_reg:x3; val_offset:95793*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95793*0 + 3*443*FLEN/8, x4, x1, x2)

inst_31932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82800007; valaddr_reg:x3; val_offset:95796*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95796*0 + 3*444*FLEN/8, x4, x1, x2)

inst_31933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x8280000f; valaddr_reg:x3; val_offset:95799*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95799*0 + 3*445*FLEN/8, x4, x1, x2)

inst_31934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x8280001f; valaddr_reg:x3; val_offset:95802*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95802*0 + 3*446*FLEN/8, x4, x1, x2)

inst_31935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x8280003f; valaddr_reg:x3; val_offset:95805*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95805*0 + 3*447*FLEN/8, x4, x1, x2)

inst_31936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x8280007f; valaddr_reg:x3; val_offset:95808*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95808*0 + 3*448*FLEN/8, x4, x1, x2)

inst_31937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x828000ff; valaddr_reg:x3; val_offset:95811*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95811*0 + 3*449*FLEN/8, x4, x1, x2)

inst_31938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x828001ff; valaddr_reg:x3; val_offset:95814*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95814*0 + 3*450*FLEN/8, x4, x1, x2)

inst_31939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x828003ff; valaddr_reg:x3; val_offset:95817*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95817*0 + 3*451*FLEN/8, x4, x1, x2)

inst_31940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x828007ff; valaddr_reg:x3; val_offset:95820*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95820*0 + 3*452*FLEN/8, x4, x1, x2)

inst_31941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82800fff; valaddr_reg:x3; val_offset:95823*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95823*0 + 3*453*FLEN/8, x4, x1, x2)

inst_31942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82801fff; valaddr_reg:x3; val_offset:95826*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95826*0 + 3*454*FLEN/8, x4, x1, x2)

inst_31943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82803fff; valaddr_reg:x3; val_offset:95829*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95829*0 + 3*455*FLEN/8, x4, x1, x2)

inst_31944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82807fff; valaddr_reg:x3; val_offset:95832*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95832*0 + 3*456*FLEN/8, x4, x1, x2)

inst_31945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x8280ffff; valaddr_reg:x3; val_offset:95835*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95835*0 + 3*457*FLEN/8, x4, x1, x2)

inst_31946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x8281ffff; valaddr_reg:x3; val_offset:95838*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95838*0 + 3*458*FLEN/8, x4, x1, x2)

inst_31947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x8283ffff; valaddr_reg:x3; val_offset:95841*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95841*0 + 3*459*FLEN/8, x4, x1, x2)

inst_31948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x8287ffff; valaddr_reg:x3; val_offset:95844*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95844*0 + 3*460*FLEN/8, x4, x1, x2)

inst_31949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x828fffff; valaddr_reg:x3; val_offset:95847*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95847*0 + 3*461*FLEN/8, x4, x1, x2)

inst_31950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x829fffff; valaddr_reg:x3; val_offset:95850*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95850*0 + 3*462*FLEN/8, x4, x1, x2)

inst_31951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82bfffff; valaddr_reg:x3; val_offset:95853*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95853*0 + 3*463*FLEN/8, x4, x1, x2)

inst_31952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82c00000; valaddr_reg:x3; val_offset:95856*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95856*0 + 3*464*FLEN/8, x4, x1, x2)

inst_31953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82e00000; valaddr_reg:x3; val_offset:95859*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95859*0 + 3*465*FLEN/8, x4, x1, x2)

inst_31954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82f00000; valaddr_reg:x3; val_offset:95862*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95862*0 + 3*466*FLEN/8, x4, x1, x2)

inst_31955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82f80000; valaddr_reg:x3; val_offset:95865*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95865*0 + 3*467*FLEN/8, x4, x1, x2)

inst_31956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fc0000; valaddr_reg:x3; val_offset:95868*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95868*0 + 3*468*FLEN/8, x4, x1, x2)

inst_31957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fe0000; valaddr_reg:x3; val_offset:95871*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95871*0 + 3*469*FLEN/8, x4, x1, x2)

inst_31958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82ff0000; valaddr_reg:x3; val_offset:95874*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95874*0 + 3*470*FLEN/8, x4, x1, x2)

inst_31959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82ff8000; valaddr_reg:x3; val_offset:95877*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95877*0 + 3*471*FLEN/8, x4, x1, x2)

inst_31960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82ffc000; valaddr_reg:x3; val_offset:95880*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95880*0 + 3*472*FLEN/8, x4, x1, x2)

inst_31961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82ffe000; valaddr_reg:x3; val_offset:95883*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95883*0 + 3*473*FLEN/8, x4, x1, x2)

inst_31962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fff000; valaddr_reg:x3; val_offset:95886*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95886*0 + 3*474*FLEN/8, x4, x1, x2)

inst_31963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fff800; valaddr_reg:x3; val_offset:95889*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95889*0 + 3*475*FLEN/8, x4, x1, x2)

inst_31964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fffc00; valaddr_reg:x3; val_offset:95892*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95892*0 + 3*476*FLEN/8, x4, x1, x2)

inst_31965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fffe00; valaddr_reg:x3; val_offset:95895*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95895*0 + 3*477*FLEN/8, x4, x1, x2)

inst_31966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82ffff00; valaddr_reg:x3; val_offset:95898*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95898*0 + 3*478*FLEN/8, x4, x1, x2)

inst_31967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82ffff80; valaddr_reg:x3; val_offset:95901*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95901*0 + 3*479*FLEN/8, x4, x1, x2)

inst_31968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82ffffc0; valaddr_reg:x3; val_offset:95904*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95904*0 + 3*480*FLEN/8, x4, x1, x2)

inst_31969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82ffffe0; valaddr_reg:x3; val_offset:95907*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95907*0 + 3*481*FLEN/8, x4, x1, x2)

inst_31970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fffff0; valaddr_reg:x3; val_offset:95910*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95910*0 + 3*482*FLEN/8, x4, x1, x2)

inst_31971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fffff8; valaddr_reg:x3; val_offset:95913*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95913*0 + 3*483*FLEN/8, x4, x1, x2)

inst_31972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fffffc; valaddr_reg:x3; val_offset:95916*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95916*0 + 3*484*FLEN/8, x4, x1, x2)

inst_31973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82fffffe; valaddr_reg:x3; val_offset:95919*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95919*0 + 3*485*FLEN/8, x4, x1, x2)

inst_31974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x203ed5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f203ed5; op2val:0x80000000;
op3val:0x82ffffff; valaddr_reg:x3; val_offset:95922*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95922*0 + 3*486*FLEN/8, x4, x1, x2)

inst_31975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:95925*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95925*0 + 3*487*FLEN/8, x4, x1, x2)

inst_31976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:95928*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95928*0 + 3*488*FLEN/8, x4, x1, x2)

inst_31977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:95931*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95931*0 + 3*489*FLEN/8, x4, x1, x2)

inst_31978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:95934*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95934*0 + 3*490*FLEN/8, x4, x1, x2)

inst_31979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:95937*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95937*0 + 3*491*FLEN/8, x4, x1, x2)

inst_31980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:95940*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95940*0 + 3*492*FLEN/8, x4, x1, x2)

inst_31981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:95943*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95943*0 + 3*493*FLEN/8, x4, x1, x2)

inst_31982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:95946*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95946*0 + 3*494*FLEN/8, x4, x1, x2)

inst_31983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:95949*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95949*0 + 3*495*FLEN/8, x4, x1, x2)

inst_31984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:95952*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95952*0 + 3*496*FLEN/8, x4, x1, x2)

inst_31985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:95955*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95955*0 + 3*497*FLEN/8, x4, x1, x2)

inst_31986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:95958*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95958*0 + 3*498*FLEN/8, x4, x1, x2)

inst_31987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:95961*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95961*0 + 3*499*FLEN/8, x4, x1, x2)

inst_31988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:95964*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95964*0 + 3*500*FLEN/8, x4, x1, x2)

inst_31989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:95967*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95967*0 + 3*501*FLEN/8, x4, x1, x2)

inst_31990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:95970*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95970*0 + 3*502*FLEN/8, x4, x1, x2)

inst_31991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82000000; valaddr_reg:x3; val_offset:95973*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95973*0 + 3*503*FLEN/8, x4, x1, x2)

inst_31992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82000001; valaddr_reg:x3; val_offset:95976*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95976*0 + 3*504*FLEN/8, x4, x1, x2)

inst_31993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82000003; valaddr_reg:x3; val_offset:95979*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95979*0 + 3*505*FLEN/8, x4, x1, x2)

inst_31994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82000007; valaddr_reg:x3; val_offset:95982*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95982*0 + 3*506*FLEN/8, x4, x1, x2)

inst_31995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x8200000f; valaddr_reg:x3; val_offset:95985*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95985*0 + 3*507*FLEN/8, x4, x1, x2)

inst_31996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x8200001f; valaddr_reg:x3; val_offset:95988*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95988*0 + 3*508*FLEN/8, x4, x1, x2)

inst_31997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x8200003f; valaddr_reg:x3; val_offset:95991*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95991*0 + 3*509*FLEN/8, x4, x1, x2)

inst_31998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x8200007f; valaddr_reg:x3; val_offset:95994*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95994*0 + 3*510*FLEN/8, x4, x1, x2)

inst_31999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x820000ff; valaddr_reg:x3; val_offset:95997*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 95997*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_32000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x820001ff; valaddr_reg:x3; val_offset:96000*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96000*0 + 3*512*FLEN/8, x4, x1, x2)

inst_32001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x820003ff; valaddr_reg:x3; val_offset:96003*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96003*0 + 3*513*FLEN/8, x4, x1, x2)

inst_32002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x820007ff; valaddr_reg:x3; val_offset:96006*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96006*0 + 3*514*FLEN/8, x4, x1, x2)

inst_32003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82000fff; valaddr_reg:x3; val_offset:96009*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96009*0 + 3*515*FLEN/8, x4, x1, x2)

inst_32004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82001fff; valaddr_reg:x3; val_offset:96012*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96012*0 + 3*516*FLEN/8, x4, x1, x2)

inst_32005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82003fff; valaddr_reg:x3; val_offset:96015*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96015*0 + 3*517*FLEN/8, x4, x1, x2)

inst_32006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82007fff; valaddr_reg:x3; val_offset:96018*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96018*0 + 3*518*FLEN/8, x4, x1, x2)

inst_32007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x8200ffff; valaddr_reg:x3; val_offset:96021*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96021*0 + 3*519*FLEN/8, x4, x1, x2)

inst_32008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x8201ffff; valaddr_reg:x3; val_offset:96024*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96024*0 + 3*520*FLEN/8, x4, x1, x2)

inst_32009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x8203ffff; valaddr_reg:x3; val_offset:96027*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96027*0 + 3*521*FLEN/8, x4, x1, x2)

inst_32010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x8207ffff; valaddr_reg:x3; val_offset:96030*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96030*0 + 3*522*FLEN/8, x4, x1, x2)

inst_32011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x820fffff; valaddr_reg:x3; val_offset:96033*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96033*0 + 3*523*FLEN/8, x4, x1, x2)

inst_32012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x821fffff; valaddr_reg:x3; val_offset:96036*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96036*0 + 3*524*FLEN/8, x4, x1, x2)

inst_32013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x823fffff; valaddr_reg:x3; val_offset:96039*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96039*0 + 3*525*FLEN/8, x4, x1, x2)

inst_32014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82400000; valaddr_reg:x3; val_offset:96042*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96042*0 + 3*526*FLEN/8, x4, x1, x2)

inst_32015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82600000; valaddr_reg:x3; val_offset:96045*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96045*0 + 3*527*FLEN/8, x4, x1, x2)

inst_32016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82700000; valaddr_reg:x3; val_offset:96048*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96048*0 + 3*528*FLEN/8, x4, x1, x2)

inst_32017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x82780000; valaddr_reg:x3; val_offset:96051*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96051*0 + 3*529*FLEN/8, x4, x1, x2)

inst_32018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827c0000; valaddr_reg:x3; val_offset:96054*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96054*0 + 3*530*FLEN/8, x4, x1, x2)

inst_32019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827e0000; valaddr_reg:x3; val_offset:96057*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96057*0 + 3*531*FLEN/8, x4, x1, x2)

inst_32020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827f0000; valaddr_reg:x3; val_offset:96060*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96060*0 + 3*532*FLEN/8, x4, x1, x2)

inst_32021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827f8000; valaddr_reg:x3; val_offset:96063*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96063*0 + 3*533*FLEN/8, x4, x1, x2)

inst_32022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827fc000; valaddr_reg:x3; val_offset:96066*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96066*0 + 3*534*FLEN/8, x4, x1, x2)

inst_32023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827fe000; valaddr_reg:x3; val_offset:96069*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96069*0 + 3*535*FLEN/8, x4, x1, x2)

inst_32024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827ff000; valaddr_reg:x3; val_offset:96072*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96072*0 + 3*536*FLEN/8, x4, x1, x2)

inst_32025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827ff800; valaddr_reg:x3; val_offset:96075*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96075*0 + 3*537*FLEN/8, x4, x1, x2)

inst_32026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827ffc00; valaddr_reg:x3; val_offset:96078*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96078*0 + 3*538*FLEN/8, x4, x1, x2)

inst_32027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827ffe00; valaddr_reg:x3; val_offset:96081*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96081*0 + 3*539*FLEN/8, x4, x1, x2)

inst_32028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827fff00; valaddr_reg:x3; val_offset:96084*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96084*0 + 3*540*FLEN/8, x4, x1, x2)

inst_32029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827fff80; valaddr_reg:x3; val_offset:96087*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96087*0 + 3*541*FLEN/8, x4, x1, x2)

inst_32030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827fffc0; valaddr_reg:x3; val_offset:96090*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96090*0 + 3*542*FLEN/8, x4, x1, x2)

inst_32031:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827fffe0; valaddr_reg:x3; val_offset:96093*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96093*0 + 3*543*FLEN/8, x4, x1, x2)

inst_32032:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827ffff0; valaddr_reg:x3; val_offset:96096*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96096*0 + 3*544*FLEN/8, x4, x1, x2)

inst_32033:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827ffff8; valaddr_reg:x3; val_offset:96099*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96099*0 + 3*545*FLEN/8, x4, x1, x2)

inst_32034:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827ffffc; valaddr_reg:x3; val_offset:96102*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96102*0 + 3*546*FLEN/8, x4, x1, x2)

inst_32035:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827ffffe; valaddr_reg:x3; val_offset:96105*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96105*0 + 3*547*FLEN/8, x4, x1, x2)

inst_32036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x208c03 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f208c03; op2val:0x80000000;
op3val:0x827fffff; valaddr_reg:x3; val_offset:96108*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96108*0 + 3*548*FLEN/8, x4, x1, x2)

inst_32037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8000000; valaddr_reg:x3; val_offset:96111*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96111*0 + 3*549*FLEN/8, x4, x1, x2)

inst_32038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8000001; valaddr_reg:x3; val_offset:96114*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96114*0 + 3*550*FLEN/8, x4, x1, x2)

inst_32039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8000003; valaddr_reg:x3; val_offset:96117*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96117*0 + 3*551*FLEN/8, x4, x1, x2)

inst_32040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8000007; valaddr_reg:x3; val_offset:96120*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96120*0 + 3*552*FLEN/8, x4, x1, x2)

inst_32041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa800000f; valaddr_reg:x3; val_offset:96123*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96123*0 + 3*553*FLEN/8, x4, x1, x2)

inst_32042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa800001f; valaddr_reg:x3; val_offset:96126*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96126*0 + 3*554*FLEN/8, x4, x1, x2)

inst_32043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa800003f; valaddr_reg:x3; val_offset:96129*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96129*0 + 3*555*FLEN/8, x4, x1, x2)

inst_32044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa800007f; valaddr_reg:x3; val_offset:96132*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96132*0 + 3*556*FLEN/8, x4, x1, x2)

inst_32045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa80000ff; valaddr_reg:x3; val_offset:96135*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96135*0 + 3*557*FLEN/8, x4, x1, x2)

inst_32046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa80001ff; valaddr_reg:x3; val_offset:96138*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96138*0 + 3*558*FLEN/8, x4, x1, x2)

inst_32047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa80003ff; valaddr_reg:x3; val_offset:96141*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96141*0 + 3*559*FLEN/8, x4, x1, x2)

inst_32048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa80007ff; valaddr_reg:x3; val_offset:96144*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96144*0 + 3*560*FLEN/8, x4, x1, x2)

inst_32049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8000fff; valaddr_reg:x3; val_offset:96147*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96147*0 + 3*561*FLEN/8, x4, x1, x2)

inst_32050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8001fff; valaddr_reg:x3; val_offset:96150*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96150*0 + 3*562*FLEN/8, x4, x1, x2)

inst_32051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8003fff; valaddr_reg:x3; val_offset:96153*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96153*0 + 3*563*FLEN/8, x4, x1, x2)

inst_32052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8007fff; valaddr_reg:x3; val_offset:96156*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96156*0 + 3*564*FLEN/8, x4, x1, x2)

inst_32053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa800ffff; valaddr_reg:x3; val_offset:96159*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96159*0 + 3*565*FLEN/8, x4, x1, x2)

inst_32054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa801ffff; valaddr_reg:x3; val_offset:96162*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96162*0 + 3*566*FLEN/8, x4, x1, x2)

inst_32055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa803ffff; valaddr_reg:x3; val_offset:96165*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96165*0 + 3*567*FLEN/8, x4, x1, x2)

inst_32056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa807ffff; valaddr_reg:x3; val_offset:96168*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96168*0 + 3*568*FLEN/8, x4, x1, x2)

inst_32057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa80fffff; valaddr_reg:x3; val_offset:96171*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96171*0 + 3*569*FLEN/8, x4, x1, x2)

inst_32058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa81fffff; valaddr_reg:x3; val_offset:96174*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96174*0 + 3*570*FLEN/8, x4, x1, x2)

inst_32059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa83fffff; valaddr_reg:x3; val_offset:96177*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96177*0 + 3*571*FLEN/8, x4, x1, x2)

inst_32060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8400000; valaddr_reg:x3; val_offset:96180*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96180*0 + 3*572*FLEN/8, x4, x1, x2)

inst_32061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8600000; valaddr_reg:x3; val_offset:96183*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96183*0 + 3*573*FLEN/8, x4, x1, x2)

inst_32062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8700000; valaddr_reg:x3; val_offset:96186*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96186*0 + 3*574*FLEN/8, x4, x1, x2)

inst_32063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa8780000; valaddr_reg:x3; val_offset:96189*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96189*0 + 3*575*FLEN/8, x4, x1, x2)

inst_32064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87c0000; valaddr_reg:x3; val_offset:96192*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96192*0 + 3*576*FLEN/8, x4, x1, x2)

inst_32065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87e0000; valaddr_reg:x3; val_offset:96195*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96195*0 + 3*577*FLEN/8, x4, x1, x2)

inst_32066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87f0000; valaddr_reg:x3; val_offset:96198*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96198*0 + 3*578*FLEN/8, x4, x1, x2)

inst_32067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87f8000; valaddr_reg:x3; val_offset:96201*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96201*0 + 3*579*FLEN/8, x4, x1, x2)

inst_32068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87fc000; valaddr_reg:x3; val_offset:96204*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96204*0 + 3*580*FLEN/8, x4, x1, x2)

inst_32069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87fe000; valaddr_reg:x3; val_offset:96207*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96207*0 + 3*581*FLEN/8, x4, x1, x2)

inst_32070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87ff000; valaddr_reg:x3; val_offset:96210*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96210*0 + 3*582*FLEN/8, x4, x1, x2)

inst_32071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87ff800; valaddr_reg:x3; val_offset:96213*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96213*0 + 3*583*FLEN/8, x4, x1, x2)

inst_32072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87ffc00; valaddr_reg:x3; val_offset:96216*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96216*0 + 3*584*FLEN/8, x4, x1, x2)

inst_32073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87ffe00; valaddr_reg:x3; val_offset:96219*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96219*0 + 3*585*FLEN/8, x4, x1, x2)

inst_32074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87fff00; valaddr_reg:x3; val_offset:96222*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96222*0 + 3*586*FLEN/8, x4, x1, x2)

inst_32075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87fff80; valaddr_reg:x3; val_offset:96225*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96225*0 + 3*587*FLEN/8, x4, x1, x2)

inst_32076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87fffc0; valaddr_reg:x3; val_offset:96228*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96228*0 + 3*588*FLEN/8, x4, x1, x2)

inst_32077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87fffe0; valaddr_reg:x3; val_offset:96231*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96231*0 + 3*589*FLEN/8, x4, x1, x2)

inst_32078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87ffff0; valaddr_reg:x3; val_offset:96234*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96234*0 + 3*590*FLEN/8, x4, x1, x2)

inst_32079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87ffff8; valaddr_reg:x3; val_offset:96237*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96237*0 + 3*591*FLEN/8, x4, x1, x2)

inst_32080:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87ffffc; valaddr_reg:x3; val_offset:96240*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96240*0 + 3*592*FLEN/8, x4, x1, x2)

inst_32081:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87ffffe; valaddr_reg:x3; val_offset:96243*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96243*0 + 3*593*FLEN/8, x4, x1, x2)

inst_32082:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x50 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xa87fffff; valaddr_reg:x3; val_offset:96246*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96246*0 + 3*594*FLEN/8, x4, x1, x2)

inst_32083:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbf800001; valaddr_reg:x3; val_offset:96249*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96249*0 + 3*595*FLEN/8, x4, x1, x2)

inst_32084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbf800003; valaddr_reg:x3; val_offset:96252*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96252*0 + 3*596*FLEN/8, x4, x1, x2)

inst_32085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbf800007; valaddr_reg:x3; val_offset:96255*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96255*0 + 3*597*FLEN/8, x4, x1, x2)

inst_32086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbf999999; valaddr_reg:x3; val_offset:96258*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96258*0 + 3*598*FLEN/8, x4, x1, x2)

inst_32087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:96261*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96261*0 + 3*599*FLEN/8, x4, x1, x2)

inst_32088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:96264*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96264*0 + 3*600*FLEN/8, x4, x1, x2)

inst_32089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:96267*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96267*0 + 3*601*FLEN/8, x4, x1, x2)

inst_32090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:96270*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96270*0 + 3*602*FLEN/8, x4, x1, x2)

inst_32091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:96273*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96273*0 + 3*603*FLEN/8, x4, x1, x2)

inst_32092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:96276*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96276*0 + 3*604*FLEN/8, x4, x1, x2)

inst_32093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:96279*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96279*0 + 3*605*FLEN/8, x4, x1, x2)

inst_32094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:96282*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96282*0 + 3*606*FLEN/8, x4, x1, x2)

inst_32095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:96285*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96285*0 + 3*607*FLEN/8, x4, x1, x2)

inst_32096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:96288*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96288*0 + 3*608*FLEN/8, x4, x1, x2)

inst_32097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:96291*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96291*0 + 3*609*FLEN/8, x4, x1, x2)

inst_32098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x32fe7b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20a569; op2val:0x8032fe7b;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:96294*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96294*0 + 3*610*FLEN/8, x4, x1, x2)

inst_32099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3f800001; valaddr_reg:x3; val_offset:96297*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96297*0 + 3*611*FLEN/8, x4, x1, x2)

inst_32100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3f800003; valaddr_reg:x3; val_offset:96300*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96300*0 + 3*612*FLEN/8, x4, x1, x2)

inst_32101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3f800007; valaddr_reg:x3; val_offset:96303*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96303*0 + 3*613*FLEN/8, x4, x1, x2)

inst_32102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3f999999; valaddr_reg:x3; val_offset:96306*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96306*0 + 3*614*FLEN/8, x4, x1, x2)

inst_32103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:96309*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96309*0 + 3*615*FLEN/8, x4, x1, x2)

inst_32104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:96312*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96312*0 + 3*616*FLEN/8, x4, x1, x2)

inst_32105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:96315*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96315*0 + 3*617*FLEN/8, x4, x1, x2)

inst_32106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:96318*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96318*0 + 3*618*FLEN/8, x4, x1, x2)

inst_32107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:96321*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96321*0 + 3*619*FLEN/8, x4, x1, x2)

inst_32108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:96324*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96324*0 + 3*620*FLEN/8, x4, x1, x2)

inst_32109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:96327*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96327*0 + 3*621*FLEN/8, x4, x1, x2)

inst_32110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:96330*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96330*0 + 3*622*FLEN/8, x4, x1, x2)

inst_32111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:96333*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96333*0 + 3*623*FLEN/8, x4, x1, x2)

inst_32112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:96336*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96336*0 + 3*624*FLEN/8, x4, x1, x2)

inst_32113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:96339*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96339*0 + 3*625*FLEN/8, x4, x1, x2)

inst_32114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:96342*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96342*0 + 3*626*FLEN/8, x4, x1, x2)

inst_32115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d800000; valaddr_reg:x3; val_offset:96345*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96345*0 + 3*627*FLEN/8, x4, x1, x2)

inst_32116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d800001; valaddr_reg:x3; val_offset:96348*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96348*0 + 3*628*FLEN/8, x4, x1, x2)

inst_32117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d800003; valaddr_reg:x3; val_offset:96351*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96351*0 + 3*629*FLEN/8, x4, x1, x2)

inst_32118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d800007; valaddr_reg:x3; val_offset:96354*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96354*0 + 3*630*FLEN/8, x4, x1, x2)

inst_32119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d80000f; valaddr_reg:x3; val_offset:96357*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96357*0 + 3*631*FLEN/8, x4, x1, x2)

inst_32120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d80001f; valaddr_reg:x3; val_offset:96360*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96360*0 + 3*632*FLEN/8, x4, x1, x2)

inst_32121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d80003f; valaddr_reg:x3; val_offset:96363*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96363*0 + 3*633*FLEN/8, x4, x1, x2)

inst_32122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d80007f; valaddr_reg:x3; val_offset:96366*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96366*0 + 3*634*FLEN/8, x4, x1, x2)

inst_32123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d8000ff; valaddr_reg:x3; val_offset:96369*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96369*0 + 3*635*FLEN/8, x4, x1, x2)

inst_32124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d8001ff; valaddr_reg:x3; val_offset:96372*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96372*0 + 3*636*FLEN/8, x4, x1, x2)

inst_32125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d8003ff; valaddr_reg:x3; val_offset:96375*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96375*0 + 3*637*FLEN/8, x4, x1, x2)

inst_32126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d8007ff; valaddr_reg:x3; val_offset:96378*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96378*0 + 3*638*FLEN/8, x4, x1, x2)

inst_32127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d800fff; valaddr_reg:x3; val_offset:96381*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96381*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_32128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d801fff; valaddr_reg:x3; val_offset:96384*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96384*0 + 3*640*FLEN/8, x4, x1, x2)

inst_32129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d803fff; valaddr_reg:x3; val_offset:96387*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96387*0 + 3*641*FLEN/8, x4, x1, x2)

inst_32130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d807fff; valaddr_reg:x3; val_offset:96390*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96390*0 + 3*642*FLEN/8, x4, x1, x2)

inst_32131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d80ffff; valaddr_reg:x3; val_offset:96393*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96393*0 + 3*643*FLEN/8, x4, x1, x2)

inst_32132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d81ffff; valaddr_reg:x3; val_offset:96396*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96396*0 + 3*644*FLEN/8, x4, x1, x2)

inst_32133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d83ffff; valaddr_reg:x3; val_offset:96399*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96399*0 + 3*645*FLEN/8, x4, x1, x2)

inst_32134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d87ffff; valaddr_reg:x3; val_offset:96402*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96402*0 + 3*646*FLEN/8, x4, x1, x2)

inst_32135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d8fffff; valaddr_reg:x3; val_offset:96405*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96405*0 + 3*647*FLEN/8, x4, x1, x2)

inst_32136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4d9fffff; valaddr_reg:x3; val_offset:96408*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96408*0 + 3*648*FLEN/8, x4, x1, x2)

inst_32137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dbfffff; valaddr_reg:x3; val_offset:96411*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96411*0 + 3*649*FLEN/8, x4, x1, x2)

inst_32138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dc00000; valaddr_reg:x3; val_offset:96414*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96414*0 + 3*650*FLEN/8, x4, x1, x2)

inst_32139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4de00000; valaddr_reg:x3; val_offset:96417*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96417*0 + 3*651*FLEN/8, x4, x1, x2)

inst_32140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4df00000; valaddr_reg:x3; val_offset:96420*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96420*0 + 3*652*FLEN/8, x4, x1, x2)

inst_32141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4df80000; valaddr_reg:x3; val_offset:96423*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96423*0 + 3*653*FLEN/8, x4, x1, x2)

inst_32142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfc0000; valaddr_reg:x3; val_offset:96426*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96426*0 + 3*654*FLEN/8, x4, x1, x2)

inst_32143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfe0000; valaddr_reg:x3; val_offset:96429*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96429*0 + 3*655*FLEN/8, x4, x1, x2)

inst_32144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dff0000; valaddr_reg:x3; val_offset:96432*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96432*0 + 3*656*FLEN/8, x4, x1, x2)

inst_32145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dff8000; valaddr_reg:x3; val_offset:96435*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96435*0 + 3*657*FLEN/8, x4, x1, x2)

inst_32146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dffc000; valaddr_reg:x3; val_offset:96438*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96438*0 + 3*658*FLEN/8, x4, x1, x2)

inst_32147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dffe000; valaddr_reg:x3; val_offset:96441*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96441*0 + 3*659*FLEN/8, x4, x1, x2)

inst_32148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfff000; valaddr_reg:x3; val_offset:96444*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96444*0 + 3*660*FLEN/8, x4, x1, x2)

inst_32149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfff800; valaddr_reg:x3; val_offset:96447*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96447*0 + 3*661*FLEN/8, x4, x1, x2)

inst_32150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfffc00; valaddr_reg:x3; val_offset:96450*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96450*0 + 3*662*FLEN/8, x4, x1, x2)

inst_32151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfffe00; valaddr_reg:x3; val_offset:96453*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96453*0 + 3*663*FLEN/8, x4, x1, x2)

inst_32152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dffff00; valaddr_reg:x3; val_offset:96456*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96456*0 + 3*664*FLEN/8, x4, x1, x2)

inst_32153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dffff80; valaddr_reg:x3; val_offset:96459*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96459*0 + 3*665*FLEN/8, x4, x1, x2)

inst_32154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dffffc0; valaddr_reg:x3; val_offset:96462*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96462*0 + 3*666*FLEN/8, x4, x1, x2)

inst_32155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dffffe0; valaddr_reg:x3; val_offset:96465*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96465*0 + 3*667*FLEN/8, x4, x1, x2)

inst_32156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfffff0; valaddr_reg:x3; val_offset:96468*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96468*0 + 3*668*FLEN/8, x4, x1, x2)

inst_32157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfffff8; valaddr_reg:x3; val_offset:96471*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96471*0 + 3*669*FLEN/8, x4, x1, x2)

inst_32158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfffffc; valaddr_reg:x3; val_offset:96474*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96474*0 + 3*670*FLEN/8, x4, x1, x2)

inst_32159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dfffffe; valaddr_reg:x3; val_offset:96477*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96477*0 + 3*671*FLEN/8, x4, x1, x2)

inst_32160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x32e2cd and fs3 == 0 and fe3 == 0x9b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f20fcca; op2val:0x32e2cd;
op3val:0x4dffffff; valaddr_reg:x3; val_offset:96480*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96480*0 + 3*672*FLEN/8, x4, x1, x2)

inst_32161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80000000; valaddr_reg:x3; val_offset:96483*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96483*0 + 3*673*FLEN/8, x4, x1, x2)

inst_32162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:96486*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96486*0 + 3*674*FLEN/8, x4, x1, x2)

inst_32163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:96489*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96489*0 + 3*675*FLEN/8, x4, x1, x2)

inst_32164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:96492*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96492*0 + 3*676*FLEN/8, x4, x1, x2)

inst_32165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x8000000f; valaddr_reg:x3; val_offset:96495*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96495*0 + 3*677*FLEN/8, x4, x1, x2)

inst_32166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x8000001f; valaddr_reg:x3; val_offset:96498*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96498*0 + 3*678*FLEN/8, x4, x1, x2)

inst_32167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x8000003f; valaddr_reg:x3; val_offset:96501*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96501*0 + 3*679*FLEN/8, x4, x1, x2)

inst_32168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x8000007f; valaddr_reg:x3; val_offset:96504*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96504*0 + 3*680*FLEN/8, x4, x1, x2)

inst_32169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x800000ff; valaddr_reg:x3; val_offset:96507*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96507*0 + 3*681*FLEN/8, x4, x1, x2)

inst_32170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x800001ff; valaddr_reg:x3; val_offset:96510*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96510*0 + 3*682*FLEN/8, x4, x1, x2)

inst_32171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x800003ff; valaddr_reg:x3; val_offset:96513*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96513*0 + 3*683*FLEN/8, x4, x1, x2)

inst_32172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x800007ff; valaddr_reg:x3; val_offset:96516*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96516*0 + 3*684*FLEN/8, x4, x1, x2)

inst_32173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80000fff; valaddr_reg:x3; val_offset:96519*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96519*0 + 3*685*FLEN/8, x4, x1, x2)

inst_32174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80001fff; valaddr_reg:x3; val_offset:96522*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96522*0 + 3*686*FLEN/8, x4, x1, x2)

inst_32175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80003fff; valaddr_reg:x3; val_offset:96525*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96525*0 + 3*687*FLEN/8, x4, x1, x2)

inst_32176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80007fff; valaddr_reg:x3; val_offset:96528*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96528*0 + 3*688*FLEN/8, x4, x1, x2)

inst_32177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x8000ffff; valaddr_reg:x3; val_offset:96531*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96531*0 + 3*689*FLEN/8, x4, x1, x2)

inst_32178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x8001ffff; valaddr_reg:x3; val_offset:96534*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96534*0 + 3*690*FLEN/8, x4, x1, x2)

inst_32179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x8003ffff; valaddr_reg:x3; val_offset:96537*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96537*0 + 3*691*FLEN/8, x4, x1, x2)

inst_32180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x8007ffff; valaddr_reg:x3; val_offset:96540*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96540*0 + 3*692*FLEN/8, x4, x1, x2)

inst_32181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x800fffff; valaddr_reg:x3; val_offset:96543*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96543*0 + 3*693*FLEN/8, x4, x1, x2)

inst_32182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:96546*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96546*0 + 3*694*FLEN/8, x4, x1, x2)

inst_32183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x801fffff; valaddr_reg:x3; val_offset:96549*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96549*0 + 3*695*FLEN/8, x4, x1, x2)

inst_32184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:96552*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96552*0 + 3*696*FLEN/8, x4, x1, x2)

inst_32185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:96555*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96555*0 + 3*697*FLEN/8, x4, x1, x2)

inst_32186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:96558*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96558*0 + 3*698*FLEN/8, x4, x1, x2)

inst_32187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:96561*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96561*0 + 3*699*FLEN/8, x4, x1, x2)

inst_32188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x803fffff; valaddr_reg:x3; val_offset:96564*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96564*0 + 3*700*FLEN/8, x4, x1, x2)

inst_32189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80400000; valaddr_reg:x3; val_offset:96567*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96567*0 + 3*701*FLEN/8, x4, x1, x2)

inst_32190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:96570*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96570*0 + 3*702*FLEN/8, x4, x1, x2)

inst_32191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:96573*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96573*0 + 3*703*FLEN/8, x4, x1, x2)

inst_32192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:96576*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96576*0 + 3*704*FLEN/8, x4, x1, x2)

inst_32193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80600000; valaddr_reg:x3; val_offset:96579*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96579*0 + 3*705*FLEN/8, x4, x1, x2)

inst_32194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:96582*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96582*0 + 3*706*FLEN/8, x4, x1, x2)

inst_32195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:96585*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96585*0 + 3*707*FLEN/8, x4, x1, x2)

inst_32196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80700000; valaddr_reg:x3; val_offset:96588*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96588*0 + 3*708*FLEN/8, x4, x1, x2)

inst_32197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x80780000; valaddr_reg:x3; val_offset:96591*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96591*0 + 3*709*FLEN/8, x4, x1, x2)

inst_32198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807c0000; valaddr_reg:x3; val_offset:96594*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96594*0 + 3*710*FLEN/8, x4, x1, x2)

inst_32199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807e0000; valaddr_reg:x3; val_offset:96597*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96597*0 + 3*711*FLEN/8, x4, x1, x2)

inst_32200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807f0000; valaddr_reg:x3; val_offset:96600*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96600*0 + 3*712*FLEN/8, x4, x1, x2)

inst_32201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807f8000; valaddr_reg:x3; val_offset:96603*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96603*0 + 3*713*FLEN/8, x4, x1, x2)

inst_32202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807fc000; valaddr_reg:x3; val_offset:96606*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96606*0 + 3*714*FLEN/8, x4, x1, x2)

inst_32203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807fe000; valaddr_reg:x3; val_offset:96609*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96609*0 + 3*715*FLEN/8, x4, x1, x2)

inst_32204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807ff000; valaddr_reg:x3; val_offset:96612*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96612*0 + 3*716*FLEN/8, x4, x1, x2)

inst_32205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807ff800; valaddr_reg:x3; val_offset:96615*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96615*0 + 3*717*FLEN/8, x4, x1, x2)

inst_32206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807ffc00; valaddr_reg:x3; val_offset:96618*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96618*0 + 3*718*FLEN/8, x4, x1, x2)

inst_32207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807ffe00; valaddr_reg:x3; val_offset:96621*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96621*0 + 3*719*FLEN/8, x4, x1, x2)

inst_32208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807fff00; valaddr_reg:x3; val_offset:96624*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96624*0 + 3*720*FLEN/8, x4, x1, x2)

inst_32209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807fff80; valaddr_reg:x3; val_offset:96627*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96627*0 + 3*721*FLEN/8, x4, x1, x2)

inst_32210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807fffc0; valaddr_reg:x3; val_offset:96630*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96630*0 + 3*722*FLEN/8, x4, x1, x2)

inst_32211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807fffe0; valaddr_reg:x3; val_offset:96633*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96633*0 + 3*723*FLEN/8, x4, x1, x2)

inst_32212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807ffff0; valaddr_reg:x3; val_offset:96636*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96636*0 + 3*724*FLEN/8, x4, x1, x2)

inst_32213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:96639*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96639*0 + 3*725*FLEN/8, x4, x1, x2)

inst_32214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:96642*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96642*0 + 3*726*FLEN/8, x4, x1, x2)

inst_32215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:96645*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96645*0 + 3*727*FLEN/8, x4, x1, x2)

inst_32216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x219327 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f219327; op2val:0x80000000;
op3val:0x807fffff; valaddr_reg:x3; val_offset:96648*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96648*0 + 3*728*FLEN/8, x4, x1, x2)

inst_32217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b000000; valaddr_reg:x3; val_offset:96651*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96651*0 + 3*729*FLEN/8, x4, x1, x2)

inst_32218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b000001; valaddr_reg:x3; val_offset:96654*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96654*0 + 3*730*FLEN/8, x4, x1, x2)

inst_32219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b000003; valaddr_reg:x3; val_offset:96657*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96657*0 + 3*731*FLEN/8, x4, x1, x2)

inst_32220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b000007; valaddr_reg:x3; val_offset:96660*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96660*0 + 3*732*FLEN/8, x4, x1, x2)

inst_32221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b00000f; valaddr_reg:x3; val_offset:96663*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96663*0 + 3*733*FLEN/8, x4, x1, x2)

inst_32222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b00001f; valaddr_reg:x3; val_offset:96666*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96666*0 + 3*734*FLEN/8, x4, x1, x2)

inst_32223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b00003f; valaddr_reg:x3; val_offset:96669*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96669*0 + 3*735*FLEN/8, x4, x1, x2)

inst_32224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b00007f; valaddr_reg:x3; val_offset:96672*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96672*0 + 3*736*FLEN/8, x4, x1, x2)

inst_32225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b0000ff; valaddr_reg:x3; val_offset:96675*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96675*0 + 3*737*FLEN/8, x4, x1, x2)

inst_32226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b0001ff; valaddr_reg:x3; val_offset:96678*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96678*0 + 3*738*FLEN/8, x4, x1, x2)

inst_32227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b0003ff; valaddr_reg:x3; val_offset:96681*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96681*0 + 3*739*FLEN/8, x4, x1, x2)

inst_32228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b0007ff; valaddr_reg:x3; val_offset:96684*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96684*0 + 3*740*FLEN/8, x4, x1, x2)

inst_32229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b000fff; valaddr_reg:x3; val_offset:96687*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96687*0 + 3*741*FLEN/8, x4, x1, x2)

inst_32230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b001fff; valaddr_reg:x3; val_offset:96690*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96690*0 + 3*742*FLEN/8, x4, x1, x2)

inst_32231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b003fff; valaddr_reg:x3; val_offset:96693*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96693*0 + 3*743*FLEN/8, x4, x1, x2)

inst_32232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b007fff; valaddr_reg:x3; val_offset:96696*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96696*0 + 3*744*FLEN/8, x4, x1, x2)

inst_32233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b00ffff; valaddr_reg:x3; val_offset:96699*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96699*0 + 3*745*FLEN/8, x4, x1, x2)

inst_32234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b01ffff; valaddr_reg:x3; val_offset:96702*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96702*0 + 3*746*FLEN/8, x4, x1, x2)

inst_32235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b03ffff; valaddr_reg:x3; val_offset:96705*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96705*0 + 3*747*FLEN/8, x4, x1, x2)

inst_32236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b07ffff; valaddr_reg:x3; val_offset:96708*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96708*0 + 3*748*FLEN/8, x4, x1, x2)

inst_32237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b0fffff; valaddr_reg:x3; val_offset:96711*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96711*0 + 3*749*FLEN/8, x4, x1, x2)

inst_32238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b1fffff; valaddr_reg:x3; val_offset:96714*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96714*0 + 3*750*FLEN/8, x4, x1, x2)

inst_32239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b3fffff; valaddr_reg:x3; val_offset:96717*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96717*0 + 3*751*FLEN/8, x4, x1, x2)

inst_32240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b400000; valaddr_reg:x3; val_offset:96720*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96720*0 + 3*752*FLEN/8, x4, x1, x2)

inst_32241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b600000; valaddr_reg:x3; val_offset:96723*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96723*0 + 3*753*FLEN/8, x4, x1, x2)

inst_32242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b700000; valaddr_reg:x3; val_offset:96726*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96726*0 + 3*754*FLEN/8, x4, x1, x2)

inst_32243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b780000; valaddr_reg:x3; val_offset:96729*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96729*0 + 3*755*FLEN/8, x4, x1, x2)

inst_32244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7c0000; valaddr_reg:x3; val_offset:96732*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96732*0 + 3*756*FLEN/8, x4, x1, x2)

inst_32245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7e0000; valaddr_reg:x3; val_offset:96735*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96735*0 + 3*757*FLEN/8, x4, x1, x2)

inst_32246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7f0000; valaddr_reg:x3; val_offset:96738*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96738*0 + 3*758*FLEN/8, x4, x1, x2)

inst_32247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7f8000; valaddr_reg:x3; val_offset:96741*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96741*0 + 3*759*FLEN/8, x4, x1, x2)

inst_32248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7fc000; valaddr_reg:x3; val_offset:96744*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96744*0 + 3*760*FLEN/8, x4, x1, x2)

inst_32249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7fe000; valaddr_reg:x3; val_offset:96747*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96747*0 + 3*761*FLEN/8, x4, x1, x2)

inst_32250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7ff000; valaddr_reg:x3; val_offset:96750*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96750*0 + 3*762*FLEN/8, x4, x1, x2)

inst_32251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7ff800; valaddr_reg:x3; val_offset:96753*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96753*0 + 3*763*FLEN/8, x4, x1, x2)

inst_32252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7ffc00; valaddr_reg:x3; val_offset:96756*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96756*0 + 3*764*FLEN/8, x4, x1, x2)

inst_32253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7ffe00; valaddr_reg:x3; val_offset:96759*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96759*0 + 3*765*FLEN/8, x4, x1, x2)

inst_32254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7fff00; valaddr_reg:x3; val_offset:96762*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96762*0 + 3*766*FLEN/8, x4, x1, x2)

inst_32255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21b896 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4a9ed8 and fs3 == 0 and fe3 == 0xd6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f21b896; op2val:0x3fca9ed8;
op3val:0x6b7fff80; valaddr_reg:x3; val_offset:96765*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96765*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881024,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881025,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881027,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881031,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881039,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881055,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881087,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881151,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881279,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881535,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234882047,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234883071,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234885119,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234889215,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234897407,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234913791,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234946559,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(235012095,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(235143167,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(235405311,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(235929599,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(236978175,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(239075327,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(239075328,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(241172480,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(242221056,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(242745344,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243007488,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243138560,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243204096,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243236864,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243253248,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243261440,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243265536,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243267584,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243268608,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269120,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269376,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269504,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269568,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269600,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269616,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269624,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269628,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269630,32,FLEN)
NAN_BOXED(2132602470,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269631,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815296,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815297,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815299,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815303,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815311,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815327,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815359,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815423,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815551,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815807,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197816319,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197817343,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197819391,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197823487,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197831679,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197848063,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197880831,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197946367,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198077439,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198339583,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198863871,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2199912447,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009599,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009600,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2204106752,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205155328,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205679616,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205941760,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206072832,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206138368,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206171136,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206187520,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206195712,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206199808,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206201856,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206202880,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203392,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203648,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203776,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203840,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203872,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203888,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203896,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203900,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203902,32,FLEN)
NAN_BOXED(2132656134,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203903,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728000,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728001,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728003,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728007,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728015,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728031,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728063,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728127,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728255,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145728511,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145729023,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145730047,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145732095,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145736191,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145744383,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145760767,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145793535,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145859071,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3145990143,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3146252287,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3146776575,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3147825151,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3149922303,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3149922304,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3152019456,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3153068032,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3153592320,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3153854464,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3153985536,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154051072,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154083840,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154100224,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154108416,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154112512,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154114560,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154115584,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116096,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116352,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116480,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116544,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116576,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116592,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116600,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116604,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116606,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3154116607,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132679836,32,FLEN)
NAN_BOXED(2150879163,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937984,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937985,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937987,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937991,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192937999,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938015,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938047,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938111,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938239,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192938495,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192939007,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192940031,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192942079,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192946175,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192954367,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(192970751,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193003519,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193069055,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193200127,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193462271,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(193986559,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(195035135,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(197132287,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(197132288,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(199229440,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(200278016,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(200802304,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201064448,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201195520,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201261056,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201293824,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201310208,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201318400,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201322496,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201324544,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201325568,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326080,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326336,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326464,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326528,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326560,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326576,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326584,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326588,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326590,32,FLEN)
NAN_BOXED(2132680738,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326591,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478592,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478593,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478595,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478599,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478607,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478623,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478655,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478719,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298478847,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298479103,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298479615,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298480639,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298482687,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298486783,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298494975,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298511359,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298544127,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298609663,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2298740735,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2299002879,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2299527167,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2300575743,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2302672895,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2302672896,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2304770048,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2305818624,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306342912,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306605056,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306736128,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306801664,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306834432,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306850816,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306859008,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306863104,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306865152,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306866176,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306866688,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306866944,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867072,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867136,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867168,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867184,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867192,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867196,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867198,32,FLEN)
NAN_BOXED(2132737221,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867199,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810240,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810241,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810243,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810247,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810255,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810271,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810303,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810367,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810495,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810751,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348811263,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348812287,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348814335,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348818431,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348826623,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348843007,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348875775,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348941311,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349072383,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349334527,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2349858815,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2350907391,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2353004543,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2353004544,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2355101696,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356150272,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356674560,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2356936704,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357067776,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357133312,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357166080,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357182464,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357190656,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357194752,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357196800,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357197824,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198336,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198592,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198720,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198784,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198816,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198832,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198840,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198844,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198846,32,FLEN)
NAN_BOXED(2132781872,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2357198847,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182336,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182337,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182339,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182343,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182351,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182367,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182399,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182463,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182591,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191182847,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191183359,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191184383,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191186431,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191190527,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191198719,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191215103,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191247871,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191313407,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191444479,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1191706623,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1192230911,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1193279487,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1195376639,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1195376640,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1197473792,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1198522368,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199046656,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199308800,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199439872,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199505408,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199538176,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199554560,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199562752,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199566848,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199568896,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199569920,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570432,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570688,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570816,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570880,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570912,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570928,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570936,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570940,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570942,32,FLEN)
NAN_BOXED(2132806170,32,FLEN)
NAN_BOXED(3354615,32,FLEN)
NAN_BOXED(1199570943,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426688,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426689,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426691,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426695,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426703,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426719,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426751,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426815,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426943,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427199,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427711,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189428735,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189430783,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189434879,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189443071,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189459455,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189492223,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189557759,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189688831,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189950975,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2190475263,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2191523839,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620991,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620992,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2195718144,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2196766720,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197291008,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197553152,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197684224,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197749760,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197782528,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197798912,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197807104,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197811200,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197813248,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814272,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814784,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815040,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815168,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815232,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815264,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815280,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815288,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815292,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815294,32,FLEN)
NAN_BOXED(2132819669,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815295,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038080,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038081,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038083,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038087,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038095,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038111,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038143,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038207,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038335,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038591,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181039103,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181040127,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181042175,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181046271,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181054463,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181070847,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181103615,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181169151,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181300223,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181562367,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2182086655,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2183135231,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232383,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232384,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2187329536,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188378112,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188902400,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189164544,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189295616,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189361152,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189393920,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189410304,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189418496,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189422592,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189424640,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189425664,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426176,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426432,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426560,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426624,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426656,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426672,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426680,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426684,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426686,32,FLEN)
NAN_BOXED(2132839427,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426687,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572288,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572289,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572291,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572295,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572303,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572319,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572351,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572415,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572543,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818572799,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818573311,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818574335,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818576383,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818580479,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818588671,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818605055,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818637823,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818703359,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2818834431,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2819096575,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2819620863,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2820669439,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2822766591,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2822766592,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2824863744,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2825912320,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826436608,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826698752,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826829824,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826895360,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826928128,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826944512,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826952704,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826956800,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826958848,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826959872,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960384,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960640,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960768,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960832,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960864,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960880,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960888,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960892,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960894,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(2826960895,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132845929,32,FLEN)
NAN_BOXED(2150825595,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234240,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234241,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234243,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234247,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234255,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234271,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234303,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234367,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234495,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300234751,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300235263,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300236287,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300238335,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300242431,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300250623,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300267007,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300299775,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300365311,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300496383,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1300758527,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1301282815,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1302331391,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1304428543,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1304428544,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1306525696,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1307574272,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308098560,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308360704,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308491776,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308557312,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308590080,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308606464,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308614656,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308618752,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308620800,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308621824,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622336,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622592,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622720,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622784,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622816,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622832,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622840,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622844,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622846,32,FLEN)
NAN_BOXED(2132868298,32,FLEN)
NAN_BOXED(3334861,32,FLEN)
NAN_BOXED(1308622847,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483663,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483679,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483711,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483775,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483903,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484159,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147484671,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147485695,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147487743,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147491839,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147500031,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147516415,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147549183,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147614719,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147745791,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148007935,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2148532223,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149580799,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677951,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151677952,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153775104,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154823680,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155347968,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155610112,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155741184,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155806720,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155839488,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155855872,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155864064,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155868160,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155870208,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871232,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155871744,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872000,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872128,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872192,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872224,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872240,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132906791,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872255,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162112,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162113,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162115,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162119,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162127,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162143,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162175,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162239,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162367,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795162623,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795163135,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795164159,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795166207,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795170303,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795178495,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795194879,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795227647,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795293183,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795424255,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1795686399,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1796210687,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1797259263,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1799356415,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1799356416,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1801453568,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1802502144,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803026432,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803288576,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803419648,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803485184,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803517952,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803534336,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803542528,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803546624,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803548672,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803549696,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803550208,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803550464,32,FLEN)
NAN_BOXED(2132916374,32,FLEN)
NAN_BOXED(1070243544,32,FLEN)
NAN_BOXED(1803550592,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
