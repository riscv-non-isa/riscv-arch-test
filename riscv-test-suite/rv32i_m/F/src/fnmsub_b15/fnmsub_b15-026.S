
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_19200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f07ffff; valaddr_reg:x3; val_offset:57600*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57600*0 + 3*0*FLEN/8, x4, x1, x2)

inst_19201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f0fffff; valaddr_reg:x3; val_offset:57603*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57603*0 + 3*1*FLEN/8, x4, x1, x2)

inst_19202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f1fffff; valaddr_reg:x3; val_offset:57606*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57606*0 + 3*2*FLEN/8, x4, x1, x2)

inst_19203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f3fffff; valaddr_reg:x3; val_offset:57609*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57609*0 + 3*3*FLEN/8, x4, x1, x2)

inst_19204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f400000; valaddr_reg:x3; val_offset:57612*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57612*0 + 3*4*FLEN/8, x4, x1, x2)

inst_19205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f600000; valaddr_reg:x3; val_offset:57615*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57615*0 + 3*5*FLEN/8, x4, x1, x2)

inst_19206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f700000; valaddr_reg:x3; val_offset:57618*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57618*0 + 3*6*FLEN/8, x4, x1, x2)

inst_19207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f780000; valaddr_reg:x3; val_offset:57621*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57621*0 + 3*7*FLEN/8, x4, x1, x2)

inst_19208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7c0000; valaddr_reg:x3; val_offset:57624*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57624*0 + 3*8*FLEN/8, x4, x1, x2)

inst_19209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7e0000; valaddr_reg:x3; val_offset:57627*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57627*0 + 3*9*FLEN/8, x4, x1, x2)

inst_19210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7f0000; valaddr_reg:x3; val_offset:57630*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57630*0 + 3*10*FLEN/8, x4, x1, x2)

inst_19211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7f8000; valaddr_reg:x3; val_offset:57633*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57633*0 + 3*11*FLEN/8, x4, x1, x2)

inst_19212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7fc000; valaddr_reg:x3; val_offset:57636*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57636*0 + 3*12*FLEN/8, x4, x1, x2)

inst_19213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7fe000; valaddr_reg:x3; val_offset:57639*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57639*0 + 3*13*FLEN/8, x4, x1, x2)

inst_19214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7ff000; valaddr_reg:x3; val_offset:57642*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57642*0 + 3*14*FLEN/8, x4, x1, x2)

inst_19215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7ff800; valaddr_reg:x3; val_offset:57645*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57645*0 + 3*15*FLEN/8, x4, x1, x2)

inst_19216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7ffc00; valaddr_reg:x3; val_offset:57648*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57648*0 + 3*16*FLEN/8, x4, x1, x2)

inst_19217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7ffe00; valaddr_reg:x3; val_offset:57651*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57651*0 + 3*17*FLEN/8, x4, x1, x2)

inst_19218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7fff00; valaddr_reg:x3; val_offset:57654*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57654*0 + 3*18*FLEN/8, x4, x1, x2)

inst_19219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7fff80; valaddr_reg:x3; val_offset:57657*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57657*0 + 3*19*FLEN/8, x4, x1, x2)

inst_19220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7fffc0; valaddr_reg:x3; val_offset:57660*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57660*0 + 3*20*FLEN/8, x4, x1, x2)

inst_19221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7fffe0; valaddr_reg:x3; val_offset:57663*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57663*0 + 3*21*FLEN/8, x4, x1, x2)

inst_19222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7ffff0; valaddr_reg:x3; val_offset:57666*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57666*0 + 3*22*FLEN/8, x4, x1, x2)

inst_19223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7ffff8; valaddr_reg:x3; val_offset:57669*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57669*0 + 3*23*FLEN/8, x4, x1, x2)

inst_19224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7ffffc; valaddr_reg:x3; val_offset:57672*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57672*0 + 3*24*FLEN/8, x4, x1, x2)

inst_19225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7ffffe; valaddr_reg:x3; val_offset:57675*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57675*0 + 3*25*FLEN/8, x4, x1, x2)

inst_19226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41cf2f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec1cf2f; op2val:0x80000000;
op3val:0x8f7fffff; valaddr_reg:x3; val_offset:57678*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57678*0 + 3*26*FLEN/8, x4, x1, x2)

inst_19227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23000000; valaddr_reg:x3; val_offset:57681*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57681*0 + 3*27*FLEN/8, x4, x1, x2)

inst_19228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23000001; valaddr_reg:x3; val_offset:57684*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57684*0 + 3*28*FLEN/8, x4, x1, x2)

inst_19229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23000003; valaddr_reg:x3; val_offset:57687*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57687*0 + 3*29*FLEN/8, x4, x1, x2)

inst_19230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23000007; valaddr_reg:x3; val_offset:57690*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57690*0 + 3*30*FLEN/8, x4, x1, x2)

inst_19231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x2300000f; valaddr_reg:x3; val_offset:57693*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57693*0 + 3*31*FLEN/8, x4, x1, x2)

inst_19232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x2300001f; valaddr_reg:x3; val_offset:57696*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57696*0 + 3*32*FLEN/8, x4, x1, x2)

inst_19233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x2300003f; valaddr_reg:x3; val_offset:57699*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57699*0 + 3*33*FLEN/8, x4, x1, x2)

inst_19234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x2300007f; valaddr_reg:x3; val_offset:57702*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57702*0 + 3*34*FLEN/8, x4, x1, x2)

inst_19235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x230000ff; valaddr_reg:x3; val_offset:57705*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57705*0 + 3*35*FLEN/8, x4, x1, x2)

inst_19236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x230001ff; valaddr_reg:x3; val_offset:57708*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57708*0 + 3*36*FLEN/8, x4, x1, x2)

inst_19237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x230003ff; valaddr_reg:x3; val_offset:57711*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57711*0 + 3*37*FLEN/8, x4, x1, x2)

inst_19238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x230007ff; valaddr_reg:x3; val_offset:57714*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57714*0 + 3*38*FLEN/8, x4, x1, x2)

inst_19239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23000fff; valaddr_reg:x3; val_offset:57717*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57717*0 + 3*39*FLEN/8, x4, x1, x2)

inst_19240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23001fff; valaddr_reg:x3; val_offset:57720*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57720*0 + 3*40*FLEN/8, x4, x1, x2)

inst_19241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23003fff; valaddr_reg:x3; val_offset:57723*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57723*0 + 3*41*FLEN/8, x4, x1, x2)

inst_19242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23007fff; valaddr_reg:x3; val_offset:57726*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57726*0 + 3*42*FLEN/8, x4, x1, x2)

inst_19243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x2300ffff; valaddr_reg:x3; val_offset:57729*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57729*0 + 3*43*FLEN/8, x4, x1, x2)

inst_19244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x2301ffff; valaddr_reg:x3; val_offset:57732*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57732*0 + 3*44*FLEN/8, x4, x1, x2)

inst_19245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x2303ffff; valaddr_reg:x3; val_offset:57735*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57735*0 + 3*45*FLEN/8, x4, x1, x2)

inst_19246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x2307ffff; valaddr_reg:x3; val_offset:57738*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57738*0 + 3*46*FLEN/8, x4, x1, x2)

inst_19247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x230fffff; valaddr_reg:x3; val_offset:57741*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57741*0 + 3*47*FLEN/8, x4, x1, x2)

inst_19248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x231fffff; valaddr_reg:x3; val_offset:57744*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57744*0 + 3*48*FLEN/8, x4, x1, x2)

inst_19249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x233fffff; valaddr_reg:x3; val_offset:57747*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57747*0 + 3*49*FLEN/8, x4, x1, x2)

inst_19250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23400000; valaddr_reg:x3; val_offset:57750*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57750*0 + 3*50*FLEN/8, x4, x1, x2)

inst_19251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23600000; valaddr_reg:x3; val_offset:57753*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57753*0 + 3*51*FLEN/8, x4, x1, x2)

inst_19252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23700000; valaddr_reg:x3; val_offset:57756*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57756*0 + 3*52*FLEN/8, x4, x1, x2)

inst_19253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x23780000; valaddr_reg:x3; val_offset:57759*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57759*0 + 3*53*FLEN/8, x4, x1, x2)

inst_19254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237c0000; valaddr_reg:x3; val_offset:57762*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57762*0 + 3*54*FLEN/8, x4, x1, x2)

inst_19255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237e0000; valaddr_reg:x3; val_offset:57765*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57765*0 + 3*55*FLEN/8, x4, x1, x2)

inst_19256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237f0000; valaddr_reg:x3; val_offset:57768*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57768*0 + 3*56*FLEN/8, x4, x1, x2)

inst_19257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237f8000; valaddr_reg:x3; val_offset:57771*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57771*0 + 3*57*FLEN/8, x4, x1, x2)

inst_19258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237fc000; valaddr_reg:x3; val_offset:57774*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57774*0 + 3*58*FLEN/8, x4, x1, x2)

inst_19259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237fe000; valaddr_reg:x3; val_offset:57777*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57777*0 + 3*59*FLEN/8, x4, x1, x2)

inst_19260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237ff000; valaddr_reg:x3; val_offset:57780*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57780*0 + 3*60*FLEN/8, x4, x1, x2)

inst_19261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237ff800; valaddr_reg:x3; val_offset:57783*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57783*0 + 3*61*FLEN/8, x4, x1, x2)

inst_19262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237ffc00; valaddr_reg:x3; val_offset:57786*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57786*0 + 3*62*FLEN/8, x4, x1, x2)

inst_19263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237ffe00; valaddr_reg:x3; val_offset:57789*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57789*0 + 3*63*FLEN/8, x4, x1, x2)

inst_19264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237fff00; valaddr_reg:x3; val_offset:57792*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57792*0 + 3*64*FLEN/8, x4, x1, x2)

inst_19265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237fff80; valaddr_reg:x3; val_offset:57795*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57795*0 + 3*65*FLEN/8, x4, x1, x2)

inst_19266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237fffc0; valaddr_reg:x3; val_offset:57798*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57798*0 + 3*66*FLEN/8, x4, x1, x2)

inst_19267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237fffe0; valaddr_reg:x3; val_offset:57801*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57801*0 + 3*67*FLEN/8, x4, x1, x2)

inst_19268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237ffff0; valaddr_reg:x3; val_offset:57804*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57804*0 + 3*68*FLEN/8, x4, x1, x2)

inst_19269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237ffff8; valaddr_reg:x3; val_offset:57807*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57807*0 + 3*69*FLEN/8, x4, x1, x2)

inst_19270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237ffffc; valaddr_reg:x3; val_offset:57810*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57810*0 + 3*70*FLEN/8, x4, x1, x2)

inst_19271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237ffffe; valaddr_reg:x3; val_offset:57813*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57813*0 + 3*71*FLEN/8, x4, x1, x2)

inst_19272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x237fffff; valaddr_reg:x3; val_offset:57816*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57816*0 + 3*72*FLEN/8, x4, x1, x2)

inst_19273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3f800001; valaddr_reg:x3; val_offset:57819*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57819*0 + 3*73*FLEN/8, x4, x1, x2)

inst_19274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3f800003; valaddr_reg:x3; val_offset:57822*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57822*0 + 3*74*FLEN/8, x4, x1, x2)

inst_19275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3f800007; valaddr_reg:x3; val_offset:57825*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57825*0 + 3*75*FLEN/8, x4, x1, x2)

inst_19276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3f999999; valaddr_reg:x3; val_offset:57828*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57828*0 + 3*76*FLEN/8, x4, x1, x2)

inst_19277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:57831*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57831*0 + 3*77*FLEN/8, x4, x1, x2)

inst_19278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:57834*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57834*0 + 3*78*FLEN/8, x4, x1, x2)

inst_19279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:57837*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57837*0 + 3*79*FLEN/8, x4, x1, x2)

inst_19280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:57840*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57840*0 + 3*80*FLEN/8, x4, x1, x2)

inst_19281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:57843*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57843*0 + 3*81*FLEN/8, x4, x1, x2)

inst_19282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:57846*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57846*0 + 3*82*FLEN/8, x4, x1, x2)

inst_19283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:57849*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57849*0 + 3*83*FLEN/8, x4, x1, x2)

inst_19284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:57852*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57852*0 + 3*84*FLEN/8, x4, x1, x2)

inst_19285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:57855*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57855*0 + 3*85*FLEN/8, x4, x1, x2)

inst_19286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:57858*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57858*0 + 3*86*FLEN/8, x4, x1, x2)

inst_19287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:57861*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57861*0 + 3*87*FLEN/8, x4, x1, x2)

inst_19288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x546b0d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec214d7; op2val:0x546b0d;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:57864*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57864*0 + 3*88*FLEN/8, x4, x1, x2)

inst_19289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c800000; valaddr_reg:x3; val_offset:57867*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57867*0 + 3*89*FLEN/8, x4, x1, x2)

inst_19290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c800001; valaddr_reg:x3; val_offset:57870*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57870*0 + 3*90*FLEN/8, x4, x1, x2)

inst_19291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c800003; valaddr_reg:x3; val_offset:57873*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57873*0 + 3*91*FLEN/8, x4, x1, x2)

inst_19292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c800007; valaddr_reg:x3; val_offset:57876*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57876*0 + 3*92*FLEN/8, x4, x1, x2)

inst_19293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c80000f; valaddr_reg:x3; val_offset:57879*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57879*0 + 3*93*FLEN/8, x4, x1, x2)

inst_19294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c80001f; valaddr_reg:x3; val_offset:57882*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57882*0 + 3*94*FLEN/8, x4, x1, x2)

inst_19295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c80003f; valaddr_reg:x3; val_offset:57885*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57885*0 + 3*95*FLEN/8, x4, x1, x2)

inst_19296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c80007f; valaddr_reg:x3; val_offset:57888*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57888*0 + 3*96*FLEN/8, x4, x1, x2)

inst_19297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c8000ff; valaddr_reg:x3; val_offset:57891*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57891*0 + 3*97*FLEN/8, x4, x1, x2)

inst_19298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c8001ff; valaddr_reg:x3; val_offset:57894*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57894*0 + 3*98*FLEN/8, x4, x1, x2)

inst_19299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c8003ff; valaddr_reg:x3; val_offset:57897*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57897*0 + 3*99*FLEN/8, x4, x1, x2)

inst_19300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c8007ff; valaddr_reg:x3; val_offset:57900*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57900*0 + 3*100*FLEN/8, x4, x1, x2)

inst_19301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c800fff; valaddr_reg:x3; val_offset:57903*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57903*0 + 3*101*FLEN/8, x4, x1, x2)

inst_19302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c801fff; valaddr_reg:x3; val_offset:57906*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57906*0 + 3*102*FLEN/8, x4, x1, x2)

inst_19303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c803fff; valaddr_reg:x3; val_offset:57909*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57909*0 + 3*103*FLEN/8, x4, x1, x2)

inst_19304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c807fff; valaddr_reg:x3; val_offset:57912*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57912*0 + 3*104*FLEN/8, x4, x1, x2)

inst_19305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c80ffff; valaddr_reg:x3; val_offset:57915*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57915*0 + 3*105*FLEN/8, x4, x1, x2)

inst_19306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c81ffff; valaddr_reg:x3; val_offset:57918*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57918*0 + 3*106*FLEN/8, x4, x1, x2)

inst_19307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c83ffff; valaddr_reg:x3; val_offset:57921*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57921*0 + 3*107*FLEN/8, x4, x1, x2)

inst_19308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c87ffff; valaddr_reg:x3; val_offset:57924*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57924*0 + 3*108*FLEN/8, x4, x1, x2)

inst_19309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c8fffff; valaddr_reg:x3; val_offset:57927*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57927*0 + 3*109*FLEN/8, x4, x1, x2)

inst_19310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7c9fffff; valaddr_reg:x3; val_offset:57930*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57930*0 + 3*110*FLEN/8, x4, x1, x2)

inst_19311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cbfffff; valaddr_reg:x3; val_offset:57933*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57933*0 + 3*111*FLEN/8, x4, x1, x2)

inst_19312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cc00000; valaddr_reg:x3; val_offset:57936*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57936*0 + 3*112*FLEN/8, x4, x1, x2)

inst_19313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7ce00000; valaddr_reg:x3; val_offset:57939*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57939*0 + 3*113*FLEN/8, x4, x1, x2)

inst_19314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cf00000; valaddr_reg:x3; val_offset:57942*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57942*0 + 3*114*FLEN/8, x4, x1, x2)

inst_19315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cf80000; valaddr_reg:x3; val_offset:57945*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57945*0 + 3*115*FLEN/8, x4, x1, x2)

inst_19316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfc0000; valaddr_reg:x3; val_offset:57948*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57948*0 + 3*116*FLEN/8, x4, x1, x2)

inst_19317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfe0000; valaddr_reg:x3; val_offset:57951*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57951*0 + 3*117*FLEN/8, x4, x1, x2)

inst_19318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cff0000; valaddr_reg:x3; val_offset:57954*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57954*0 + 3*118*FLEN/8, x4, x1, x2)

inst_19319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cff8000; valaddr_reg:x3; val_offset:57957*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57957*0 + 3*119*FLEN/8, x4, x1, x2)

inst_19320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cffc000; valaddr_reg:x3; val_offset:57960*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57960*0 + 3*120*FLEN/8, x4, x1, x2)

inst_19321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cffe000; valaddr_reg:x3; val_offset:57963*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57963*0 + 3*121*FLEN/8, x4, x1, x2)

inst_19322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfff000; valaddr_reg:x3; val_offset:57966*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57966*0 + 3*122*FLEN/8, x4, x1, x2)

inst_19323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfff800; valaddr_reg:x3; val_offset:57969*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57969*0 + 3*123*FLEN/8, x4, x1, x2)

inst_19324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfffc00; valaddr_reg:x3; val_offset:57972*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57972*0 + 3*124*FLEN/8, x4, x1, x2)

inst_19325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfffe00; valaddr_reg:x3; val_offset:57975*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57975*0 + 3*125*FLEN/8, x4, x1, x2)

inst_19326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cffff00; valaddr_reg:x3; val_offset:57978*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57978*0 + 3*126*FLEN/8, x4, x1, x2)

inst_19327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cffff80; valaddr_reg:x3; val_offset:57981*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57981*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_19328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cffffc0; valaddr_reg:x3; val_offset:57984*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57984*0 + 3*128*FLEN/8, x4, x1, x2)

inst_19329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cffffe0; valaddr_reg:x3; val_offset:57987*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57987*0 + 3*129*FLEN/8, x4, x1, x2)

inst_19330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfffff0; valaddr_reg:x3; val_offset:57990*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57990*0 + 3*130*FLEN/8, x4, x1, x2)

inst_19331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfffff8; valaddr_reg:x3; val_offset:57993*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57993*0 + 3*131*FLEN/8, x4, x1, x2)

inst_19332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfffffc; valaddr_reg:x3; val_offset:57996*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57996*0 + 3*132*FLEN/8, x4, x1, x2)

inst_19333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cfffffe; valaddr_reg:x3; val_offset:57999*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 57999*0 + 3*133*FLEN/8, x4, x1, x2)

inst_19334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7cffffff; valaddr_reg:x3; val_offset:58002*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58002*0 + 3*134*FLEN/8, x4, x1, x2)

inst_19335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f000001; valaddr_reg:x3; val_offset:58005*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58005*0 + 3*135*FLEN/8, x4, x1, x2)

inst_19336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f000003; valaddr_reg:x3; val_offset:58008*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58008*0 + 3*136*FLEN/8, x4, x1, x2)

inst_19337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f000007; valaddr_reg:x3; val_offset:58011*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58011*0 + 3*137*FLEN/8, x4, x1, x2)

inst_19338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f199999; valaddr_reg:x3; val_offset:58014*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58014*0 + 3*138*FLEN/8, x4, x1, x2)

inst_19339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f249249; valaddr_reg:x3; val_offset:58017*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58017*0 + 3*139*FLEN/8, x4, x1, x2)

inst_19340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f333333; valaddr_reg:x3; val_offset:58020*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58020*0 + 3*140*FLEN/8, x4, x1, x2)

inst_19341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:58023*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58023*0 + 3*141*FLEN/8, x4, x1, x2)

inst_19342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:58026*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58026*0 + 3*142*FLEN/8, x4, x1, x2)

inst_19343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f444444; valaddr_reg:x3; val_offset:58029*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58029*0 + 3*143*FLEN/8, x4, x1, x2)

inst_19344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:58032*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58032*0 + 3*144*FLEN/8, x4, x1, x2)

inst_19345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:58035*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58035*0 + 3*145*FLEN/8, x4, x1, x2)

inst_19346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f666666; valaddr_reg:x3; val_offset:58038*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58038*0 + 3*146*FLEN/8, x4, x1, x2)

inst_19347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:58041*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58041*0 + 3*147*FLEN/8, x4, x1, x2)

inst_19348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:58044*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58044*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:58047*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58047*0 + 3*149*FLEN/8, x4, x1, x2)

inst_19350:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42494a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28a887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2494a; op2val:0x4028a887;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:58050*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58050*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19351:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e800000; valaddr_reg:x3; val_offset:58053*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58053*0 + 3*151*FLEN/8, x4, x1, x2)

inst_19352:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e800001; valaddr_reg:x3; val_offset:58056*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58056*0 + 3*152*FLEN/8, x4, x1, x2)

inst_19353:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e800003; valaddr_reg:x3; val_offset:58059*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58059*0 + 3*153*FLEN/8, x4, x1, x2)

inst_19354:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e800007; valaddr_reg:x3; val_offset:58062*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58062*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e80000f; valaddr_reg:x3; val_offset:58065*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58065*0 + 3*155*FLEN/8, x4, x1, x2)

inst_19356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e80001f; valaddr_reg:x3; val_offset:58068*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58068*0 + 3*156*FLEN/8, x4, x1, x2)

inst_19357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e80003f; valaddr_reg:x3; val_offset:58071*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58071*0 + 3*157*FLEN/8, x4, x1, x2)

inst_19358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e80007f; valaddr_reg:x3; val_offset:58074*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58074*0 + 3*158*FLEN/8, x4, x1, x2)

inst_19359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e8000ff; valaddr_reg:x3; val_offset:58077*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58077*0 + 3*159*FLEN/8, x4, x1, x2)

inst_19360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e8001ff; valaddr_reg:x3; val_offset:58080*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58080*0 + 3*160*FLEN/8, x4, x1, x2)

inst_19361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e8003ff; valaddr_reg:x3; val_offset:58083*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58083*0 + 3*161*FLEN/8, x4, x1, x2)

inst_19362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e8007ff; valaddr_reg:x3; val_offset:58086*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58086*0 + 3*162*FLEN/8, x4, x1, x2)

inst_19363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e800fff; valaddr_reg:x3; val_offset:58089*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58089*0 + 3*163*FLEN/8, x4, x1, x2)

inst_19364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e801fff; valaddr_reg:x3; val_offset:58092*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58092*0 + 3*164*FLEN/8, x4, x1, x2)

inst_19365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e803fff; valaddr_reg:x3; val_offset:58095*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58095*0 + 3*165*FLEN/8, x4, x1, x2)

inst_19366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e807fff; valaddr_reg:x3; val_offset:58098*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58098*0 + 3*166*FLEN/8, x4, x1, x2)

inst_19367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e80ffff; valaddr_reg:x3; val_offset:58101*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58101*0 + 3*167*FLEN/8, x4, x1, x2)

inst_19368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e81ffff; valaddr_reg:x3; val_offset:58104*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58104*0 + 3*168*FLEN/8, x4, x1, x2)

inst_19369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e83ffff; valaddr_reg:x3; val_offset:58107*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58107*0 + 3*169*FLEN/8, x4, x1, x2)

inst_19370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e87ffff; valaddr_reg:x3; val_offset:58110*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58110*0 + 3*170*FLEN/8, x4, x1, x2)

inst_19371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e8fffff; valaddr_reg:x3; val_offset:58113*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58113*0 + 3*171*FLEN/8, x4, x1, x2)

inst_19372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2e9fffff; valaddr_reg:x3; val_offset:58116*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58116*0 + 3*172*FLEN/8, x4, x1, x2)

inst_19373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2ebfffff; valaddr_reg:x3; val_offset:58119*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58119*0 + 3*173*FLEN/8, x4, x1, x2)

inst_19374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2ec00000; valaddr_reg:x3; val_offset:58122*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58122*0 + 3*174*FLEN/8, x4, x1, x2)

inst_19375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2ee00000; valaddr_reg:x3; val_offset:58125*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58125*0 + 3*175*FLEN/8, x4, x1, x2)

inst_19376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2ef00000; valaddr_reg:x3; val_offset:58128*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58128*0 + 3*176*FLEN/8, x4, x1, x2)

inst_19377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2ef80000; valaddr_reg:x3; val_offset:58131*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58131*0 + 3*177*FLEN/8, x4, x1, x2)

inst_19378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efc0000; valaddr_reg:x3; val_offset:58134*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58134*0 + 3*178*FLEN/8, x4, x1, x2)

inst_19379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efe0000; valaddr_reg:x3; val_offset:58137*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58137*0 + 3*179*FLEN/8, x4, x1, x2)

inst_19380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2eff0000; valaddr_reg:x3; val_offset:58140*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58140*0 + 3*180*FLEN/8, x4, x1, x2)

inst_19381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2eff8000; valaddr_reg:x3; val_offset:58143*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58143*0 + 3*181*FLEN/8, x4, x1, x2)

inst_19382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2effc000; valaddr_reg:x3; val_offset:58146*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58146*0 + 3*182*FLEN/8, x4, x1, x2)

inst_19383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2effe000; valaddr_reg:x3; val_offset:58149*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58149*0 + 3*183*FLEN/8, x4, x1, x2)

inst_19384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efff000; valaddr_reg:x3; val_offset:58152*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58152*0 + 3*184*FLEN/8, x4, x1, x2)

inst_19385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efff800; valaddr_reg:x3; val_offset:58155*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58155*0 + 3*185*FLEN/8, x4, x1, x2)

inst_19386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efffc00; valaddr_reg:x3; val_offset:58158*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58158*0 + 3*186*FLEN/8, x4, x1, x2)

inst_19387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efffe00; valaddr_reg:x3; val_offset:58161*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58161*0 + 3*187*FLEN/8, x4, x1, x2)

inst_19388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2effff00; valaddr_reg:x3; val_offset:58164*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58164*0 + 3*188*FLEN/8, x4, x1, x2)

inst_19389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2effff80; valaddr_reg:x3; val_offset:58167*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58167*0 + 3*189*FLEN/8, x4, x1, x2)

inst_19390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2effffc0; valaddr_reg:x3; val_offset:58170*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58170*0 + 3*190*FLEN/8, x4, x1, x2)

inst_19391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2effffe0; valaddr_reg:x3; val_offset:58173*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58173*0 + 3*191*FLEN/8, x4, x1, x2)

inst_19392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efffff0; valaddr_reg:x3; val_offset:58176*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58176*0 + 3*192*FLEN/8, x4, x1, x2)

inst_19393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efffff8; valaddr_reg:x3; val_offset:58179*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58179*0 + 3*193*FLEN/8, x4, x1, x2)

inst_19394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efffffc; valaddr_reg:x3; val_offset:58182*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58182*0 + 3*194*FLEN/8, x4, x1, x2)

inst_19395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2efffffe; valaddr_reg:x3; val_offset:58185*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58185*0 + 3*195*FLEN/8, x4, x1, x2)

inst_19396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x5d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x2effffff; valaddr_reg:x3; val_offset:58188*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58188*0 + 3*196*FLEN/8, x4, x1, x2)

inst_19397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3f800001; valaddr_reg:x3; val_offset:58191*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58191*0 + 3*197*FLEN/8, x4, x1, x2)

inst_19398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3f800003; valaddr_reg:x3; val_offset:58194*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58194*0 + 3*198*FLEN/8, x4, x1, x2)

inst_19399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3f800007; valaddr_reg:x3; val_offset:58197*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58197*0 + 3*199*FLEN/8, x4, x1, x2)

inst_19400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3f999999; valaddr_reg:x3; val_offset:58200*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58200*0 + 3*200*FLEN/8, x4, x1, x2)

inst_19401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:58203*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58203*0 + 3*201*FLEN/8, x4, x1, x2)

inst_19402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:58206*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58206*0 + 3*202*FLEN/8, x4, x1, x2)

inst_19403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:58209*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58209*0 + 3*203*FLEN/8, x4, x1, x2)

inst_19404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:58212*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58212*0 + 3*204*FLEN/8, x4, x1, x2)

inst_19405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:58215*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58215*0 + 3*205*FLEN/8, x4, x1, x2)

inst_19406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:58218*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58218*0 + 3*206*FLEN/8, x4, x1, x2)

inst_19407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:58221*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58221*0 + 3*207*FLEN/8, x4, x1, x2)

inst_19408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:58224*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58224*0 + 3*208*FLEN/8, x4, x1, x2)

inst_19409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:58227*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58227*0 + 3*209*FLEN/8, x4, x1, x2)

inst_19410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:58230*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58230*0 + 3*210*FLEN/8, x4, x1, x2)

inst_19411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:58233*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58233*0 + 3*211*FLEN/8, x4, x1, x2)

inst_19412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x542695 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2b2c3; op2val:0x542695;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:58236*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58236*0 + 3*212*FLEN/8, x4, x1, x2)

inst_19413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:58239*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58239*0 + 3*213*FLEN/8, x4, x1, x2)

inst_19414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:58242*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58242*0 + 3*214*FLEN/8, x4, x1, x2)

inst_19415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:58245*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58245*0 + 3*215*FLEN/8, x4, x1, x2)

inst_19416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:58248*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58248*0 + 3*216*FLEN/8, x4, x1, x2)

inst_19417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:58251*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58251*0 + 3*217*FLEN/8, x4, x1, x2)

inst_19418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:58254*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58254*0 + 3*218*FLEN/8, x4, x1, x2)

inst_19419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:58257*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58257*0 + 3*219*FLEN/8, x4, x1, x2)

inst_19420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:58260*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58260*0 + 3*220*FLEN/8, x4, x1, x2)

inst_19421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:58263*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58263*0 + 3*221*FLEN/8, x4, x1, x2)

inst_19422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:58266*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58266*0 + 3*222*FLEN/8, x4, x1, x2)

inst_19423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:58269*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58269*0 + 3*223*FLEN/8, x4, x1, x2)

inst_19424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:58272*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58272*0 + 3*224*FLEN/8, x4, x1, x2)

inst_19425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:58275*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58275*0 + 3*225*FLEN/8, x4, x1, x2)

inst_19426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:58278*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58278*0 + 3*226*FLEN/8, x4, x1, x2)

inst_19427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:58281*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58281*0 + 3*227*FLEN/8, x4, x1, x2)

inst_19428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:58284*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58284*0 + 3*228*FLEN/8, x4, x1, x2)

inst_19429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83000000; valaddr_reg:x3; val_offset:58287*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58287*0 + 3*229*FLEN/8, x4, x1, x2)

inst_19430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83000001; valaddr_reg:x3; val_offset:58290*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58290*0 + 3*230*FLEN/8, x4, x1, x2)

inst_19431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83000003; valaddr_reg:x3; val_offset:58293*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58293*0 + 3*231*FLEN/8, x4, x1, x2)

inst_19432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83000007; valaddr_reg:x3; val_offset:58296*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58296*0 + 3*232*FLEN/8, x4, x1, x2)

inst_19433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x8300000f; valaddr_reg:x3; val_offset:58299*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58299*0 + 3*233*FLEN/8, x4, x1, x2)

inst_19434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x8300001f; valaddr_reg:x3; val_offset:58302*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58302*0 + 3*234*FLEN/8, x4, x1, x2)

inst_19435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x8300003f; valaddr_reg:x3; val_offset:58305*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58305*0 + 3*235*FLEN/8, x4, x1, x2)

inst_19436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x8300007f; valaddr_reg:x3; val_offset:58308*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58308*0 + 3*236*FLEN/8, x4, x1, x2)

inst_19437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x830000ff; valaddr_reg:x3; val_offset:58311*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58311*0 + 3*237*FLEN/8, x4, x1, x2)

inst_19438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x830001ff; valaddr_reg:x3; val_offset:58314*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58314*0 + 3*238*FLEN/8, x4, x1, x2)

inst_19439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x830003ff; valaddr_reg:x3; val_offset:58317*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58317*0 + 3*239*FLEN/8, x4, x1, x2)

inst_19440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x830007ff; valaddr_reg:x3; val_offset:58320*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58320*0 + 3*240*FLEN/8, x4, x1, x2)

inst_19441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83000fff; valaddr_reg:x3; val_offset:58323*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58323*0 + 3*241*FLEN/8, x4, x1, x2)

inst_19442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83001fff; valaddr_reg:x3; val_offset:58326*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58326*0 + 3*242*FLEN/8, x4, x1, x2)

inst_19443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83003fff; valaddr_reg:x3; val_offset:58329*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58329*0 + 3*243*FLEN/8, x4, x1, x2)

inst_19444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83007fff; valaddr_reg:x3; val_offset:58332*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58332*0 + 3*244*FLEN/8, x4, x1, x2)

inst_19445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x8300ffff; valaddr_reg:x3; val_offset:58335*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58335*0 + 3*245*FLEN/8, x4, x1, x2)

inst_19446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x8301ffff; valaddr_reg:x3; val_offset:58338*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58338*0 + 3*246*FLEN/8, x4, x1, x2)

inst_19447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x8303ffff; valaddr_reg:x3; val_offset:58341*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58341*0 + 3*247*FLEN/8, x4, x1, x2)

inst_19448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x8307ffff; valaddr_reg:x3; val_offset:58344*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58344*0 + 3*248*FLEN/8, x4, x1, x2)

inst_19449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x830fffff; valaddr_reg:x3; val_offset:58347*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58347*0 + 3*249*FLEN/8, x4, x1, x2)

inst_19450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x831fffff; valaddr_reg:x3; val_offset:58350*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58350*0 + 3*250*FLEN/8, x4, x1, x2)

inst_19451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x833fffff; valaddr_reg:x3; val_offset:58353*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58353*0 + 3*251*FLEN/8, x4, x1, x2)

inst_19452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83400000; valaddr_reg:x3; val_offset:58356*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58356*0 + 3*252*FLEN/8, x4, x1, x2)

inst_19453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83600000; valaddr_reg:x3; val_offset:58359*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58359*0 + 3*253*FLEN/8, x4, x1, x2)

inst_19454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83700000; valaddr_reg:x3; val_offset:58362*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58362*0 + 3*254*FLEN/8, x4, x1, x2)

inst_19455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x83780000; valaddr_reg:x3; val_offset:58365*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58365*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_19456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837c0000; valaddr_reg:x3; val_offset:58368*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58368*0 + 3*256*FLEN/8, x4, x1, x2)

inst_19457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837e0000; valaddr_reg:x3; val_offset:58371*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58371*0 + 3*257*FLEN/8, x4, x1, x2)

inst_19458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837f0000; valaddr_reg:x3; val_offset:58374*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58374*0 + 3*258*FLEN/8, x4, x1, x2)

inst_19459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837f8000; valaddr_reg:x3; val_offset:58377*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58377*0 + 3*259*FLEN/8, x4, x1, x2)

inst_19460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837fc000; valaddr_reg:x3; val_offset:58380*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58380*0 + 3*260*FLEN/8, x4, x1, x2)

inst_19461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837fe000; valaddr_reg:x3; val_offset:58383*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58383*0 + 3*261*FLEN/8, x4, x1, x2)

inst_19462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837ff000; valaddr_reg:x3; val_offset:58386*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58386*0 + 3*262*FLEN/8, x4, x1, x2)

inst_19463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837ff800; valaddr_reg:x3; val_offset:58389*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58389*0 + 3*263*FLEN/8, x4, x1, x2)

inst_19464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837ffc00; valaddr_reg:x3; val_offset:58392*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58392*0 + 3*264*FLEN/8, x4, x1, x2)

inst_19465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837ffe00; valaddr_reg:x3; val_offset:58395*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58395*0 + 3*265*FLEN/8, x4, x1, x2)

inst_19466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837fff00; valaddr_reg:x3; val_offset:58398*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58398*0 + 3*266*FLEN/8, x4, x1, x2)

inst_19467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837fff80; valaddr_reg:x3; val_offset:58401*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58401*0 + 3*267*FLEN/8, x4, x1, x2)

inst_19468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837fffc0; valaddr_reg:x3; val_offset:58404*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58404*0 + 3*268*FLEN/8, x4, x1, x2)

inst_19469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837fffe0; valaddr_reg:x3; val_offset:58407*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58407*0 + 3*269*FLEN/8, x4, x1, x2)

inst_19470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837ffff0; valaddr_reg:x3; val_offset:58410*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58410*0 + 3*270*FLEN/8, x4, x1, x2)

inst_19471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837ffff8; valaddr_reg:x3; val_offset:58413*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58413*0 + 3*271*FLEN/8, x4, x1, x2)

inst_19472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837ffffc; valaddr_reg:x3; val_offset:58416*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58416*0 + 3*272*FLEN/8, x4, x1, x2)

inst_19473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837ffffe; valaddr_reg:x3; val_offset:58419*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58419*0 + 3*273*FLEN/8, x4, x1, x2)

inst_19474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec2c803; op2val:0x80000000;
op3val:0x837fffff; valaddr_reg:x3; val_offset:58422*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58422*0 + 3*274*FLEN/8, x4, x1, x2)

inst_19475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:58425*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58425*0 + 3*275*FLEN/8, x4, x1, x2)

inst_19476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:58428*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58428*0 + 3*276*FLEN/8, x4, x1, x2)

inst_19477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:58431*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58431*0 + 3*277*FLEN/8, x4, x1, x2)

inst_19478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:58434*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58434*0 + 3*278*FLEN/8, x4, x1, x2)

inst_19479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:58437*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58437*0 + 3*279*FLEN/8, x4, x1, x2)

inst_19480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:58440*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58440*0 + 3*280*FLEN/8, x4, x1, x2)

inst_19481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:58443*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58443*0 + 3*281*FLEN/8, x4, x1, x2)

inst_19482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:58446*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58446*0 + 3*282*FLEN/8, x4, x1, x2)

inst_19483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:58449*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58449*0 + 3*283*FLEN/8, x4, x1, x2)

inst_19484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:58452*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58452*0 + 3*284*FLEN/8, x4, x1, x2)

inst_19485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:58455*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58455*0 + 3*285*FLEN/8, x4, x1, x2)

inst_19486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:58458*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58458*0 + 3*286*FLEN/8, x4, x1, x2)

inst_19487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:58461*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58461*0 + 3*287*FLEN/8, x4, x1, x2)

inst_19488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:58464*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58464*0 + 3*288*FLEN/8, x4, x1, x2)

inst_19489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:58467*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58467*0 + 3*289*FLEN/8, x4, x1, x2)

inst_19490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:58470*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58470*0 + 3*290*FLEN/8, x4, x1, x2)

inst_19491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85000000; valaddr_reg:x3; val_offset:58473*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58473*0 + 3*291*FLEN/8, x4, x1, x2)

inst_19492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85000001; valaddr_reg:x3; val_offset:58476*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58476*0 + 3*292*FLEN/8, x4, x1, x2)

inst_19493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85000003; valaddr_reg:x3; val_offset:58479*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58479*0 + 3*293*FLEN/8, x4, x1, x2)

inst_19494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85000007; valaddr_reg:x3; val_offset:58482*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58482*0 + 3*294*FLEN/8, x4, x1, x2)

inst_19495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x8500000f; valaddr_reg:x3; val_offset:58485*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58485*0 + 3*295*FLEN/8, x4, x1, x2)

inst_19496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x8500001f; valaddr_reg:x3; val_offset:58488*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58488*0 + 3*296*FLEN/8, x4, x1, x2)

inst_19497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x8500003f; valaddr_reg:x3; val_offset:58491*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58491*0 + 3*297*FLEN/8, x4, x1, x2)

inst_19498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x8500007f; valaddr_reg:x3; val_offset:58494*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58494*0 + 3*298*FLEN/8, x4, x1, x2)

inst_19499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x850000ff; valaddr_reg:x3; val_offset:58497*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58497*0 + 3*299*FLEN/8, x4, x1, x2)

inst_19500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x850001ff; valaddr_reg:x3; val_offset:58500*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58500*0 + 3*300*FLEN/8, x4, x1, x2)

inst_19501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x850003ff; valaddr_reg:x3; val_offset:58503*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58503*0 + 3*301*FLEN/8, x4, x1, x2)

inst_19502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x850007ff; valaddr_reg:x3; val_offset:58506*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58506*0 + 3*302*FLEN/8, x4, x1, x2)

inst_19503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85000fff; valaddr_reg:x3; val_offset:58509*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58509*0 + 3*303*FLEN/8, x4, x1, x2)

inst_19504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85001fff; valaddr_reg:x3; val_offset:58512*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58512*0 + 3*304*FLEN/8, x4, x1, x2)

inst_19505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85003fff; valaddr_reg:x3; val_offset:58515*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58515*0 + 3*305*FLEN/8, x4, x1, x2)

inst_19506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85007fff; valaddr_reg:x3; val_offset:58518*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58518*0 + 3*306*FLEN/8, x4, x1, x2)

inst_19507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x8500ffff; valaddr_reg:x3; val_offset:58521*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58521*0 + 3*307*FLEN/8, x4, x1, x2)

inst_19508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x8501ffff; valaddr_reg:x3; val_offset:58524*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58524*0 + 3*308*FLEN/8, x4, x1, x2)

inst_19509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x8503ffff; valaddr_reg:x3; val_offset:58527*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58527*0 + 3*309*FLEN/8, x4, x1, x2)

inst_19510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x8507ffff; valaddr_reg:x3; val_offset:58530*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58530*0 + 3*310*FLEN/8, x4, x1, x2)

inst_19511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x850fffff; valaddr_reg:x3; val_offset:58533*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58533*0 + 3*311*FLEN/8, x4, x1, x2)

inst_19512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x851fffff; valaddr_reg:x3; val_offset:58536*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58536*0 + 3*312*FLEN/8, x4, x1, x2)

inst_19513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x853fffff; valaddr_reg:x3; val_offset:58539*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58539*0 + 3*313*FLEN/8, x4, x1, x2)

inst_19514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85400000; valaddr_reg:x3; val_offset:58542*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58542*0 + 3*314*FLEN/8, x4, x1, x2)

inst_19515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85600000; valaddr_reg:x3; val_offset:58545*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58545*0 + 3*315*FLEN/8, x4, x1, x2)

inst_19516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85700000; valaddr_reg:x3; val_offset:58548*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58548*0 + 3*316*FLEN/8, x4, x1, x2)

inst_19517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x85780000; valaddr_reg:x3; val_offset:58551*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58551*0 + 3*317*FLEN/8, x4, x1, x2)

inst_19518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857c0000; valaddr_reg:x3; val_offset:58554*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58554*0 + 3*318*FLEN/8, x4, x1, x2)

inst_19519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857e0000; valaddr_reg:x3; val_offset:58557*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58557*0 + 3*319*FLEN/8, x4, x1, x2)

inst_19520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857f0000; valaddr_reg:x3; val_offset:58560*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58560*0 + 3*320*FLEN/8, x4, x1, x2)

inst_19521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857f8000; valaddr_reg:x3; val_offset:58563*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58563*0 + 3*321*FLEN/8, x4, x1, x2)

inst_19522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857fc000; valaddr_reg:x3; val_offset:58566*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58566*0 + 3*322*FLEN/8, x4, x1, x2)

inst_19523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857fe000; valaddr_reg:x3; val_offset:58569*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58569*0 + 3*323*FLEN/8, x4, x1, x2)

inst_19524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857ff000; valaddr_reg:x3; val_offset:58572*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58572*0 + 3*324*FLEN/8, x4, x1, x2)

inst_19525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857ff800; valaddr_reg:x3; val_offset:58575*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58575*0 + 3*325*FLEN/8, x4, x1, x2)

inst_19526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857ffc00; valaddr_reg:x3; val_offset:58578*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58578*0 + 3*326*FLEN/8, x4, x1, x2)

inst_19527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857ffe00; valaddr_reg:x3; val_offset:58581*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58581*0 + 3*327*FLEN/8, x4, x1, x2)

inst_19528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857fff00; valaddr_reg:x3; val_offset:58584*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58584*0 + 3*328*FLEN/8, x4, x1, x2)

inst_19529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857fff80; valaddr_reg:x3; val_offset:58587*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58587*0 + 3*329*FLEN/8, x4, x1, x2)

inst_19530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857fffc0; valaddr_reg:x3; val_offset:58590*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58590*0 + 3*330*FLEN/8, x4, x1, x2)

inst_19531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857fffe0; valaddr_reg:x3; val_offset:58593*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58593*0 + 3*331*FLEN/8, x4, x1, x2)

inst_19532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857ffff0; valaddr_reg:x3; val_offset:58596*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58596*0 + 3*332*FLEN/8, x4, x1, x2)

inst_19533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857ffff8; valaddr_reg:x3; val_offset:58599*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58599*0 + 3*333*FLEN/8, x4, x1, x2)

inst_19534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857ffffc; valaddr_reg:x3; val_offset:58602*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58602*0 + 3*334*FLEN/8, x4, x1, x2)

inst_19535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857ffffe; valaddr_reg:x3; val_offset:58605*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58605*0 + 3*335*FLEN/8, x4, x1, x2)

inst_19536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44595d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4595d; op2val:0x80000000;
op3val:0x857fffff; valaddr_reg:x3; val_offset:58608*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58608*0 + 3*336*FLEN/8, x4, x1, x2)

inst_19537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:58611*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58611*0 + 3*337*FLEN/8, x4, x1, x2)

inst_19538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:58614*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58614*0 + 3*338*FLEN/8, x4, x1, x2)

inst_19539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:58617*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58617*0 + 3*339*FLEN/8, x4, x1, x2)

inst_19540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:58620*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58620*0 + 3*340*FLEN/8, x4, x1, x2)

inst_19541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:58623*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58623*0 + 3*341*FLEN/8, x4, x1, x2)

inst_19542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:58626*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58626*0 + 3*342*FLEN/8, x4, x1, x2)

inst_19543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:58629*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58629*0 + 3*343*FLEN/8, x4, x1, x2)

inst_19544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:58632*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58632*0 + 3*344*FLEN/8, x4, x1, x2)

inst_19545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:58635*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58635*0 + 3*345*FLEN/8, x4, x1, x2)

inst_19546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:58638*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58638*0 + 3*346*FLEN/8, x4, x1, x2)

inst_19547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:58641*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58641*0 + 3*347*FLEN/8, x4, x1, x2)

inst_19548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:58644*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58644*0 + 3*348*FLEN/8, x4, x1, x2)

inst_19549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:58647*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58647*0 + 3*349*FLEN/8, x4, x1, x2)

inst_19550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:58650*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58650*0 + 3*350*FLEN/8, x4, x1, x2)

inst_19551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:58653*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58653*0 + 3*351*FLEN/8, x4, x1, x2)

inst_19552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:58656*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58656*0 + 3*352*FLEN/8, x4, x1, x2)

inst_19553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8800000; valaddr_reg:x3; val_offset:58659*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58659*0 + 3*353*FLEN/8, x4, x1, x2)

inst_19554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8800001; valaddr_reg:x3; val_offset:58662*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58662*0 + 3*354*FLEN/8, x4, x1, x2)

inst_19555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8800003; valaddr_reg:x3; val_offset:58665*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58665*0 + 3*355*FLEN/8, x4, x1, x2)

inst_19556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8800007; valaddr_reg:x3; val_offset:58668*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58668*0 + 3*356*FLEN/8, x4, x1, x2)

inst_19557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x880000f; valaddr_reg:x3; val_offset:58671*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58671*0 + 3*357*FLEN/8, x4, x1, x2)

inst_19558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x880001f; valaddr_reg:x3; val_offset:58674*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58674*0 + 3*358*FLEN/8, x4, x1, x2)

inst_19559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x880003f; valaddr_reg:x3; val_offset:58677*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58677*0 + 3*359*FLEN/8, x4, x1, x2)

inst_19560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x880007f; valaddr_reg:x3; val_offset:58680*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58680*0 + 3*360*FLEN/8, x4, x1, x2)

inst_19561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x88000ff; valaddr_reg:x3; val_offset:58683*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58683*0 + 3*361*FLEN/8, x4, x1, x2)

inst_19562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x88001ff; valaddr_reg:x3; val_offset:58686*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58686*0 + 3*362*FLEN/8, x4, x1, x2)

inst_19563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x88003ff; valaddr_reg:x3; val_offset:58689*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58689*0 + 3*363*FLEN/8, x4, x1, x2)

inst_19564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x88007ff; valaddr_reg:x3; val_offset:58692*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58692*0 + 3*364*FLEN/8, x4, x1, x2)

inst_19565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8800fff; valaddr_reg:x3; val_offset:58695*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58695*0 + 3*365*FLEN/8, x4, x1, x2)

inst_19566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8801fff; valaddr_reg:x3; val_offset:58698*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58698*0 + 3*366*FLEN/8, x4, x1, x2)

inst_19567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8803fff; valaddr_reg:x3; val_offset:58701*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58701*0 + 3*367*FLEN/8, x4, x1, x2)

inst_19568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8807fff; valaddr_reg:x3; val_offset:58704*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58704*0 + 3*368*FLEN/8, x4, x1, x2)

inst_19569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x880ffff; valaddr_reg:x3; val_offset:58707*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58707*0 + 3*369*FLEN/8, x4, x1, x2)

inst_19570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x881ffff; valaddr_reg:x3; val_offset:58710*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58710*0 + 3*370*FLEN/8, x4, x1, x2)

inst_19571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x883ffff; valaddr_reg:x3; val_offset:58713*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58713*0 + 3*371*FLEN/8, x4, x1, x2)

inst_19572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x887ffff; valaddr_reg:x3; val_offset:58716*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58716*0 + 3*372*FLEN/8, x4, x1, x2)

inst_19573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x88fffff; valaddr_reg:x3; val_offset:58719*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58719*0 + 3*373*FLEN/8, x4, x1, x2)

inst_19574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x89fffff; valaddr_reg:x3; val_offset:58722*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58722*0 + 3*374*FLEN/8, x4, x1, x2)

inst_19575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8bfffff; valaddr_reg:x3; val_offset:58725*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58725*0 + 3*375*FLEN/8, x4, x1, x2)

inst_19576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8c00000; valaddr_reg:x3; val_offset:58728*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58728*0 + 3*376*FLEN/8, x4, x1, x2)

inst_19577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8e00000; valaddr_reg:x3; val_offset:58731*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58731*0 + 3*377*FLEN/8, x4, x1, x2)

inst_19578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8f00000; valaddr_reg:x3; val_offset:58734*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58734*0 + 3*378*FLEN/8, x4, x1, x2)

inst_19579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8f80000; valaddr_reg:x3; val_offset:58737*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58737*0 + 3*379*FLEN/8, x4, x1, x2)

inst_19580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fc0000; valaddr_reg:x3; val_offset:58740*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58740*0 + 3*380*FLEN/8, x4, x1, x2)

inst_19581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fe0000; valaddr_reg:x3; val_offset:58743*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58743*0 + 3*381*FLEN/8, x4, x1, x2)

inst_19582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8ff0000; valaddr_reg:x3; val_offset:58746*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58746*0 + 3*382*FLEN/8, x4, x1, x2)

inst_19583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8ff8000; valaddr_reg:x3; val_offset:58749*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58749*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_19584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8ffc000; valaddr_reg:x3; val_offset:58752*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58752*0 + 3*384*FLEN/8, x4, x1, x2)

inst_19585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8ffe000; valaddr_reg:x3; val_offset:58755*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58755*0 + 3*385*FLEN/8, x4, x1, x2)

inst_19586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fff000; valaddr_reg:x3; val_offset:58758*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58758*0 + 3*386*FLEN/8, x4, x1, x2)

inst_19587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fff800; valaddr_reg:x3; val_offset:58761*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58761*0 + 3*387*FLEN/8, x4, x1, x2)

inst_19588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fffc00; valaddr_reg:x3; val_offset:58764*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58764*0 + 3*388*FLEN/8, x4, x1, x2)

inst_19589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fffe00; valaddr_reg:x3; val_offset:58767*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58767*0 + 3*389*FLEN/8, x4, x1, x2)

inst_19590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8ffff00; valaddr_reg:x3; val_offset:58770*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58770*0 + 3*390*FLEN/8, x4, x1, x2)

inst_19591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8ffff80; valaddr_reg:x3; val_offset:58773*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58773*0 + 3*391*FLEN/8, x4, x1, x2)

inst_19592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8ffffc0; valaddr_reg:x3; val_offset:58776*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58776*0 + 3*392*FLEN/8, x4, x1, x2)

inst_19593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8ffffe0; valaddr_reg:x3; val_offset:58779*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58779*0 + 3*393*FLEN/8, x4, x1, x2)

inst_19594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fffff0; valaddr_reg:x3; val_offset:58782*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58782*0 + 3*394*FLEN/8, x4, x1, x2)

inst_19595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fffff8; valaddr_reg:x3; val_offset:58785*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58785*0 + 3*395*FLEN/8, x4, x1, x2)

inst_19596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fffffc; valaddr_reg:x3; val_offset:58788*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58788*0 + 3*396*FLEN/8, x4, x1, x2)

inst_19597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8fffffe; valaddr_reg:x3; val_offset:58791*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58791*0 + 3*397*FLEN/8, x4, x1, x2)

inst_19598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45ff56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5ff56; op2val:0x0;
op3val:0x8ffffff; valaddr_reg:x3; val_offset:58794*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58794*0 + 3*398*FLEN/8, x4, x1, x2)

inst_19599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9000000; valaddr_reg:x3; val_offset:58797*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58797*0 + 3*399*FLEN/8, x4, x1, x2)

inst_19600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9000001; valaddr_reg:x3; val_offset:58800*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58800*0 + 3*400*FLEN/8, x4, x1, x2)

inst_19601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9000003; valaddr_reg:x3; val_offset:58803*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58803*0 + 3*401*FLEN/8, x4, x1, x2)

inst_19602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9000007; valaddr_reg:x3; val_offset:58806*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58806*0 + 3*402*FLEN/8, x4, x1, x2)

inst_19603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa900000f; valaddr_reg:x3; val_offset:58809*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58809*0 + 3*403*FLEN/8, x4, x1, x2)

inst_19604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa900001f; valaddr_reg:x3; val_offset:58812*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58812*0 + 3*404*FLEN/8, x4, x1, x2)

inst_19605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa900003f; valaddr_reg:x3; val_offset:58815*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58815*0 + 3*405*FLEN/8, x4, x1, x2)

inst_19606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa900007f; valaddr_reg:x3; val_offset:58818*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58818*0 + 3*406*FLEN/8, x4, x1, x2)

inst_19607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa90000ff; valaddr_reg:x3; val_offset:58821*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58821*0 + 3*407*FLEN/8, x4, x1, x2)

inst_19608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa90001ff; valaddr_reg:x3; val_offset:58824*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58824*0 + 3*408*FLEN/8, x4, x1, x2)

inst_19609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa90003ff; valaddr_reg:x3; val_offset:58827*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58827*0 + 3*409*FLEN/8, x4, x1, x2)

inst_19610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa90007ff; valaddr_reg:x3; val_offset:58830*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58830*0 + 3*410*FLEN/8, x4, x1, x2)

inst_19611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9000fff; valaddr_reg:x3; val_offset:58833*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58833*0 + 3*411*FLEN/8, x4, x1, x2)

inst_19612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9001fff; valaddr_reg:x3; val_offset:58836*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58836*0 + 3*412*FLEN/8, x4, x1, x2)

inst_19613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9003fff; valaddr_reg:x3; val_offset:58839*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58839*0 + 3*413*FLEN/8, x4, x1, x2)

inst_19614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9007fff; valaddr_reg:x3; val_offset:58842*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58842*0 + 3*414*FLEN/8, x4, x1, x2)

inst_19615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa900ffff; valaddr_reg:x3; val_offset:58845*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58845*0 + 3*415*FLEN/8, x4, x1, x2)

inst_19616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa901ffff; valaddr_reg:x3; val_offset:58848*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58848*0 + 3*416*FLEN/8, x4, x1, x2)

inst_19617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa903ffff; valaddr_reg:x3; val_offset:58851*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58851*0 + 3*417*FLEN/8, x4, x1, x2)

inst_19618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa907ffff; valaddr_reg:x3; val_offset:58854*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58854*0 + 3*418*FLEN/8, x4, x1, x2)

inst_19619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa90fffff; valaddr_reg:x3; val_offset:58857*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58857*0 + 3*419*FLEN/8, x4, x1, x2)

inst_19620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa91fffff; valaddr_reg:x3; val_offset:58860*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58860*0 + 3*420*FLEN/8, x4, x1, x2)

inst_19621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa93fffff; valaddr_reg:x3; val_offset:58863*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58863*0 + 3*421*FLEN/8, x4, x1, x2)

inst_19622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9400000; valaddr_reg:x3; val_offset:58866*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58866*0 + 3*422*FLEN/8, x4, x1, x2)

inst_19623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9600000; valaddr_reg:x3; val_offset:58869*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58869*0 + 3*423*FLEN/8, x4, x1, x2)

inst_19624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9700000; valaddr_reg:x3; val_offset:58872*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58872*0 + 3*424*FLEN/8, x4, x1, x2)

inst_19625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa9780000; valaddr_reg:x3; val_offset:58875*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58875*0 + 3*425*FLEN/8, x4, x1, x2)

inst_19626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97c0000; valaddr_reg:x3; val_offset:58878*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58878*0 + 3*426*FLEN/8, x4, x1, x2)

inst_19627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97e0000; valaddr_reg:x3; val_offset:58881*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58881*0 + 3*427*FLEN/8, x4, x1, x2)

inst_19628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97f0000; valaddr_reg:x3; val_offset:58884*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58884*0 + 3*428*FLEN/8, x4, x1, x2)

inst_19629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97f8000; valaddr_reg:x3; val_offset:58887*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58887*0 + 3*429*FLEN/8, x4, x1, x2)

inst_19630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97fc000; valaddr_reg:x3; val_offset:58890*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58890*0 + 3*430*FLEN/8, x4, x1, x2)

inst_19631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97fe000; valaddr_reg:x3; val_offset:58893*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58893*0 + 3*431*FLEN/8, x4, x1, x2)

inst_19632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97ff000; valaddr_reg:x3; val_offset:58896*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58896*0 + 3*432*FLEN/8, x4, x1, x2)

inst_19633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97ff800; valaddr_reg:x3; val_offset:58899*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58899*0 + 3*433*FLEN/8, x4, x1, x2)

inst_19634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97ffc00; valaddr_reg:x3; val_offset:58902*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58902*0 + 3*434*FLEN/8, x4, x1, x2)

inst_19635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97ffe00; valaddr_reg:x3; val_offset:58905*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58905*0 + 3*435*FLEN/8, x4, x1, x2)

inst_19636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97fff00; valaddr_reg:x3; val_offset:58908*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58908*0 + 3*436*FLEN/8, x4, x1, x2)

inst_19637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97fff80; valaddr_reg:x3; val_offset:58911*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58911*0 + 3*437*FLEN/8, x4, x1, x2)

inst_19638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97fffc0; valaddr_reg:x3; val_offset:58914*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58914*0 + 3*438*FLEN/8, x4, x1, x2)

inst_19639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97fffe0; valaddr_reg:x3; val_offset:58917*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58917*0 + 3*439*FLEN/8, x4, x1, x2)

inst_19640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97ffff0; valaddr_reg:x3; val_offset:58920*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58920*0 + 3*440*FLEN/8, x4, x1, x2)

inst_19641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97ffff8; valaddr_reg:x3; val_offset:58923*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58923*0 + 3*441*FLEN/8, x4, x1, x2)

inst_19642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97ffffc; valaddr_reg:x3; val_offset:58926*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58926*0 + 3*442*FLEN/8, x4, x1, x2)

inst_19643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97ffffe; valaddr_reg:x3; val_offset:58929*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58929*0 + 3*443*FLEN/8, x4, x1, x2)

inst_19644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x52 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xa97fffff; valaddr_reg:x3; val_offset:58932*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58932*0 + 3*444*FLEN/8, x4, x1, x2)

inst_19645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbf800001; valaddr_reg:x3; val_offset:58935*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58935*0 + 3*445*FLEN/8, x4, x1, x2)

inst_19646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbf800003; valaddr_reg:x3; val_offset:58938*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58938*0 + 3*446*FLEN/8, x4, x1, x2)

inst_19647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbf800007; valaddr_reg:x3; val_offset:58941*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58941*0 + 3*447*FLEN/8, x4, x1, x2)

inst_19648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbf999999; valaddr_reg:x3; val_offset:58944*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58944*0 + 3*448*FLEN/8, x4, x1, x2)

inst_19649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:58947*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58947*0 + 3*449*FLEN/8, x4, x1, x2)

inst_19650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:58950*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58950*0 + 3*450*FLEN/8, x4, x1, x2)

inst_19651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:58953*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58953*0 + 3*451*FLEN/8, x4, x1, x2)

inst_19652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:58956*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58956*0 + 3*452*FLEN/8, x4, x1, x2)

inst_19653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:58959*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58959*0 + 3*453*FLEN/8, x4, x1, x2)

inst_19654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:58962*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58962*0 + 3*454*FLEN/8, x4, x1, x2)

inst_19655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:58965*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58965*0 + 3*455*FLEN/8, x4, x1, x2)

inst_19656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:58968*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58968*0 + 3*456*FLEN/8, x4, x1, x2)

inst_19657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:58971*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58971*0 + 3*457*FLEN/8, x4, x1, x2)

inst_19658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:58974*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58974*0 + 3*458*FLEN/8, x4, x1, x2)

inst_19659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:58977*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58977*0 + 3*459*FLEN/8, x4, x1, x2)

inst_19660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5234fe and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec74d3f; op2val:0x805234fe;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:58980*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58980*0 + 3*460*FLEN/8, x4, x1, x2)

inst_19661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b800000; valaddr_reg:x3; val_offset:58983*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58983*0 + 3*461*FLEN/8, x4, x1, x2)

inst_19662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b800001; valaddr_reg:x3; val_offset:58986*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58986*0 + 3*462*FLEN/8, x4, x1, x2)

inst_19663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b800003; valaddr_reg:x3; val_offset:58989*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58989*0 + 3*463*FLEN/8, x4, x1, x2)

inst_19664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b800007; valaddr_reg:x3; val_offset:58992*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58992*0 + 3*464*FLEN/8, x4, x1, x2)

inst_19665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b80000f; valaddr_reg:x3; val_offset:58995*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58995*0 + 3*465*FLEN/8, x4, x1, x2)

inst_19666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b80001f; valaddr_reg:x3; val_offset:58998*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 58998*0 + 3*466*FLEN/8, x4, x1, x2)

inst_19667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b80003f; valaddr_reg:x3; val_offset:59001*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59001*0 + 3*467*FLEN/8, x4, x1, x2)

inst_19668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b80007f; valaddr_reg:x3; val_offset:59004*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59004*0 + 3*468*FLEN/8, x4, x1, x2)

inst_19669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b8000ff; valaddr_reg:x3; val_offset:59007*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59007*0 + 3*469*FLEN/8, x4, x1, x2)

inst_19670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b8001ff; valaddr_reg:x3; val_offset:59010*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59010*0 + 3*470*FLEN/8, x4, x1, x2)

inst_19671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b8003ff; valaddr_reg:x3; val_offset:59013*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59013*0 + 3*471*FLEN/8, x4, x1, x2)

inst_19672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b8007ff; valaddr_reg:x3; val_offset:59016*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59016*0 + 3*472*FLEN/8, x4, x1, x2)

inst_19673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b800fff; valaddr_reg:x3; val_offset:59019*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59019*0 + 3*473*FLEN/8, x4, x1, x2)

inst_19674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b801fff; valaddr_reg:x3; val_offset:59022*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59022*0 + 3*474*FLEN/8, x4, x1, x2)

inst_19675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b803fff; valaddr_reg:x3; val_offset:59025*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59025*0 + 3*475*FLEN/8, x4, x1, x2)

inst_19676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b807fff; valaddr_reg:x3; val_offset:59028*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59028*0 + 3*476*FLEN/8, x4, x1, x2)

inst_19677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b80ffff; valaddr_reg:x3; val_offset:59031*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59031*0 + 3*477*FLEN/8, x4, x1, x2)

inst_19678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b81ffff; valaddr_reg:x3; val_offset:59034*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59034*0 + 3*478*FLEN/8, x4, x1, x2)

inst_19679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b83ffff; valaddr_reg:x3; val_offset:59037*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59037*0 + 3*479*FLEN/8, x4, x1, x2)

inst_19680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b87ffff; valaddr_reg:x3; val_offset:59040*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59040*0 + 3*480*FLEN/8, x4, x1, x2)

inst_19681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b8fffff; valaddr_reg:x3; val_offset:59043*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59043*0 + 3*481*FLEN/8, x4, x1, x2)

inst_19682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2b9fffff; valaddr_reg:x3; val_offset:59046*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59046*0 + 3*482*FLEN/8, x4, x1, x2)

inst_19683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bbfffff; valaddr_reg:x3; val_offset:59049*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59049*0 + 3*483*FLEN/8, x4, x1, x2)

inst_19684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bc00000; valaddr_reg:x3; val_offset:59052*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59052*0 + 3*484*FLEN/8, x4, x1, x2)

inst_19685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2be00000; valaddr_reg:x3; val_offset:59055*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59055*0 + 3*485*FLEN/8, x4, x1, x2)

inst_19686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bf00000; valaddr_reg:x3; val_offset:59058*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59058*0 + 3*486*FLEN/8, x4, x1, x2)

inst_19687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bf80000; valaddr_reg:x3; val_offset:59061*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59061*0 + 3*487*FLEN/8, x4, x1, x2)

inst_19688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfc0000; valaddr_reg:x3; val_offset:59064*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59064*0 + 3*488*FLEN/8, x4, x1, x2)

inst_19689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfe0000; valaddr_reg:x3; val_offset:59067*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59067*0 + 3*489*FLEN/8, x4, x1, x2)

inst_19690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bff0000; valaddr_reg:x3; val_offset:59070*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59070*0 + 3*490*FLEN/8, x4, x1, x2)

inst_19691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bff8000; valaddr_reg:x3; val_offset:59073*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59073*0 + 3*491*FLEN/8, x4, x1, x2)

inst_19692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bffc000; valaddr_reg:x3; val_offset:59076*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59076*0 + 3*492*FLEN/8, x4, x1, x2)

inst_19693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bffe000; valaddr_reg:x3; val_offset:59079*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59079*0 + 3*493*FLEN/8, x4, x1, x2)

inst_19694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfff000; valaddr_reg:x3; val_offset:59082*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59082*0 + 3*494*FLEN/8, x4, x1, x2)

inst_19695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfff800; valaddr_reg:x3; val_offset:59085*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59085*0 + 3*495*FLEN/8, x4, x1, x2)

inst_19696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfffc00; valaddr_reg:x3; val_offset:59088*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59088*0 + 3*496*FLEN/8, x4, x1, x2)

inst_19697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfffe00; valaddr_reg:x3; val_offset:59091*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59091*0 + 3*497*FLEN/8, x4, x1, x2)

inst_19698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bffff00; valaddr_reg:x3; val_offset:59094*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59094*0 + 3*498*FLEN/8, x4, x1, x2)

inst_19699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bffff80; valaddr_reg:x3; val_offset:59097*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59097*0 + 3*499*FLEN/8, x4, x1, x2)

inst_19700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bffffc0; valaddr_reg:x3; val_offset:59100*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59100*0 + 3*500*FLEN/8, x4, x1, x2)

inst_19701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bffffe0; valaddr_reg:x3; val_offset:59103*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59103*0 + 3*501*FLEN/8, x4, x1, x2)

inst_19702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfffff0; valaddr_reg:x3; val_offset:59106*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59106*0 + 3*502*FLEN/8, x4, x1, x2)

inst_19703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfffff8; valaddr_reg:x3; val_offset:59109*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59109*0 + 3*503*FLEN/8, x4, x1, x2)

inst_19704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfffffc; valaddr_reg:x3; val_offset:59112*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59112*0 + 3*504*FLEN/8, x4, x1, x2)

inst_19705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bfffffe; valaddr_reg:x3; val_offset:59115*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59115*0 + 3*505*FLEN/8, x4, x1, x2)

inst_19706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x57 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x2bffffff; valaddr_reg:x3; val_offset:59118*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59118*0 + 3*506*FLEN/8, x4, x1, x2)

inst_19707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3f800001; valaddr_reg:x3; val_offset:59121*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59121*0 + 3*507*FLEN/8, x4, x1, x2)

inst_19708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3f800003; valaddr_reg:x3; val_offset:59124*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59124*0 + 3*508*FLEN/8, x4, x1, x2)

inst_19709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3f800007; valaddr_reg:x3; val_offset:59127*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59127*0 + 3*509*FLEN/8, x4, x1, x2)

inst_19710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3f999999; valaddr_reg:x3; val_offset:59130*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59130*0 + 3*510*FLEN/8, x4, x1, x2)

inst_19711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:59133*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59133*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_19712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:59136*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59136*0 + 3*512*FLEN/8, x4, x1, x2)

inst_19713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:59139*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59139*0 + 3*513*FLEN/8, x4, x1, x2)

inst_19714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:59142*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59142*0 + 3*514*FLEN/8, x4, x1, x2)

inst_19715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:59145*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59145*0 + 3*515*FLEN/8, x4, x1, x2)

inst_19716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:59148*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59148*0 + 3*516*FLEN/8, x4, x1, x2)

inst_19717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:59151*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59151*0 + 3*517*FLEN/8, x4, x1, x2)

inst_19718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:59154*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59154*0 + 3*518*FLEN/8, x4, x1, x2)

inst_19719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:59157*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59157*0 + 3*519*FLEN/8, x4, x1, x2)

inst_19720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:59160*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59160*0 + 3*520*FLEN/8, x4, x1, x2)

inst_19721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:59163*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59163*0 + 3*521*FLEN/8, x4, x1, x2)

inst_19722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x520a2e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec7b540; op2val:0x520a2e;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:59166*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59166*0 + 3*522*FLEN/8, x4, x1, x2)

inst_19723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31800000; valaddr_reg:x3; val_offset:59169*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59169*0 + 3*523*FLEN/8, x4, x1, x2)

inst_19724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31800001; valaddr_reg:x3; val_offset:59172*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59172*0 + 3*524*FLEN/8, x4, x1, x2)

inst_19725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31800003; valaddr_reg:x3; val_offset:59175*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59175*0 + 3*525*FLEN/8, x4, x1, x2)

inst_19726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31800007; valaddr_reg:x3; val_offset:59178*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59178*0 + 3*526*FLEN/8, x4, x1, x2)

inst_19727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3180000f; valaddr_reg:x3; val_offset:59181*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59181*0 + 3*527*FLEN/8, x4, x1, x2)

inst_19728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3180001f; valaddr_reg:x3; val_offset:59184*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59184*0 + 3*528*FLEN/8, x4, x1, x2)

inst_19729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3180003f; valaddr_reg:x3; val_offset:59187*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59187*0 + 3*529*FLEN/8, x4, x1, x2)

inst_19730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3180007f; valaddr_reg:x3; val_offset:59190*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59190*0 + 3*530*FLEN/8, x4, x1, x2)

inst_19731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x318000ff; valaddr_reg:x3; val_offset:59193*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59193*0 + 3*531*FLEN/8, x4, x1, x2)

inst_19732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x318001ff; valaddr_reg:x3; val_offset:59196*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59196*0 + 3*532*FLEN/8, x4, x1, x2)

inst_19733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x318003ff; valaddr_reg:x3; val_offset:59199*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59199*0 + 3*533*FLEN/8, x4, x1, x2)

inst_19734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x318007ff; valaddr_reg:x3; val_offset:59202*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59202*0 + 3*534*FLEN/8, x4, x1, x2)

inst_19735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31800fff; valaddr_reg:x3; val_offset:59205*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59205*0 + 3*535*FLEN/8, x4, x1, x2)

inst_19736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31801fff; valaddr_reg:x3; val_offset:59208*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59208*0 + 3*536*FLEN/8, x4, x1, x2)

inst_19737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31803fff; valaddr_reg:x3; val_offset:59211*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59211*0 + 3*537*FLEN/8, x4, x1, x2)

inst_19738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31807fff; valaddr_reg:x3; val_offset:59214*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59214*0 + 3*538*FLEN/8, x4, x1, x2)

inst_19739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3180ffff; valaddr_reg:x3; val_offset:59217*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59217*0 + 3*539*FLEN/8, x4, x1, x2)

inst_19740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3181ffff; valaddr_reg:x3; val_offset:59220*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59220*0 + 3*540*FLEN/8, x4, x1, x2)

inst_19741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3183ffff; valaddr_reg:x3; val_offset:59223*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59223*0 + 3*541*FLEN/8, x4, x1, x2)

inst_19742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3187ffff; valaddr_reg:x3; val_offset:59226*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59226*0 + 3*542*FLEN/8, x4, x1, x2)

inst_19743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x318fffff; valaddr_reg:x3; val_offset:59229*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59229*0 + 3*543*FLEN/8, x4, x1, x2)

inst_19744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x319fffff; valaddr_reg:x3; val_offset:59232*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59232*0 + 3*544*FLEN/8, x4, x1, x2)

inst_19745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31bfffff; valaddr_reg:x3; val_offset:59235*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59235*0 + 3*545*FLEN/8, x4, x1, x2)

inst_19746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31c00000; valaddr_reg:x3; val_offset:59238*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59238*0 + 3*546*FLEN/8, x4, x1, x2)

inst_19747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31e00000; valaddr_reg:x3; val_offset:59241*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59241*0 + 3*547*FLEN/8, x4, x1, x2)

inst_19748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31f00000; valaddr_reg:x3; val_offset:59244*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59244*0 + 3*548*FLEN/8, x4, x1, x2)

inst_19749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31f80000; valaddr_reg:x3; val_offset:59247*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59247*0 + 3*549*FLEN/8, x4, x1, x2)

inst_19750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fc0000; valaddr_reg:x3; val_offset:59250*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59250*0 + 3*550*FLEN/8, x4, x1, x2)

inst_19751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fe0000; valaddr_reg:x3; val_offset:59253*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59253*0 + 3*551*FLEN/8, x4, x1, x2)

inst_19752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31ff0000; valaddr_reg:x3; val_offset:59256*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59256*0 + 3*552*FLEN/8, x4, x1, x2)

inst_19753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31ff8000; valaddr_reg:x3; val_offset:59259*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59259*0 + 3*553*FLEN/8, x4, x1, x2)

inst_19754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31ffc000; valaddr_reg:x3; val_offset:59262*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59262*0 + 3*554*FLEN/8, x4, x1, x2)

inst_19755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31ffe000; valaddr_reg:x3; val_offset:59265*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59265*0 + 3*555*FLEN/8, x4, x1, x2)

inst_19756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fff000; valaddr_reg:x3; val_offset:59268*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59268*0 + 3*556*FLEN/8, x4, x1, x2)

inst_19757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fff800; valaddr_reg:x3; val_offset:59271*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59271*0 + 3*557*FLEN/8, x4, x1, x2)

inst_19758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fffc00; valaddr_reg:x3; val_offset:59274*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59274*0 + 3*558*FLEN/8, x4, x1, x2)

inst_19759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fffe00; valaddr_reg:x3; val_offset:59277*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59277*0 + 3*559*FLEN/8, x4, x1, x2)

inst_19760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31ffff00; valaddr_reg:x3; val_offset:59280*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59280*0 + 3*560*FLEN/8, x4, x1, x2)

inst_19761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31ffff80; valaddr_reg:x3; val_offset:59283*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59283*0 + 3*561*FLEN/8, x4, x1, x2)

inst_19762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31ffffc0; valaddr_reg:x3; val_offset:59286*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59286*0 + 3*562*FLEN/8, x4, x1, x2)

inst_19763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31ffffe0; valaddr_reg:x3; val_offset:59289*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59289*0 + 3*563*FLEN/8, x4, x1, x2)

inst_19764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fffff0; valaddr_reg:x3; val_offset:59292*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59292*0 + 3*564*FLEN/8, x4, x1, x2)

inst_19765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fffff8; valaddr_reg:x3; val_offset:59295*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59295*0 + 3*565*FLEN/8, x4, x1, x2)

inst_19766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fffffc; valaddr_reg:x3; val_offset:59298*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59298*0 + 3*566*FLEN/8, x4, x1, x2)

inst_19767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31fffffe; valaddr_reg:x3; val_offset:59301*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59301*0 + 3*567*FLEN/8, x4, x1, x2)

inst_19768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x63 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x31ffffff; valaddr_reg:x3; val_offset:59304*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59304*0 + 3*568*FLEN/8, x4, x1, x2)

inst_19769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3f800001; valaddr_reg:x3; val_offset:59307*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59307*0 + 3*569*FLEN/8, x4, x1, x2)

inst_19770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3f800003; valaddr_reg:x3; val_offset:59310*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59310*0 + 3*570*FLEN/8, x4, x1, x2)

inst_19771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3f800007; valaddr_reg:x3; val_offset:59313*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59313*0 + 3*571*FLEN/8, x4, x1, x2)

inst_19772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3f999999; valaddr_reg:x3; val_offset:59316*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59316*0 + 3*572*FLEN/8, x4, x1, x2)

inst_19773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:59319*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59319*0 + 3*573*FLEN/8, x4, x1, x2)

inst_19774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:59322*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59322*0 + 3*574*FLEN/8, x4, x1, x2)

inst_19775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:59325*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59325*0 + 3*575*FLEN/8, x4, x1, x2)

inst_19776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:59328*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59328*0 + 3*576*FLEN/8, x4, x1, x2)

inst_19777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:59331*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59331*0 + 3*577*FLEN/8, x4, x1, x2)

inst_19778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:59334*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59334*0 + 3*578*FLEN/8, x4, x1, x2)

inst_19779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:59337*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59337*0 + 3*579*FLEN/8, x4, x1, x2)

inst_19780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:59340*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59340*0 + 3*580*FLEN/8, x4, x1, x2)

inst_19781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:59343*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59343*0 + 3*581*FLEN/8, x4, x1, x2)

inst_19782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:59346*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59346*0 + 3*582*FLEN/8, x4, x1, x2)

inst_19783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:59349*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59349*0 + 3*583*FLEN/8, x4, x1, x2)

inst_19784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x51dfb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec81ce5; op2val:0x51dfb0;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:59352*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59352*0 + 3*584*FLEN/8, x4, x1, x2)

inst_19785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3000000; valaddr_reg:x3; val_offset:59355*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59355*0 + 3*585*FLEN/8, x4, x1, x2)

inst_19786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3000001; valaddr_reg:x3; val_offset:59358*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59358*0 + 3*586*FLEN/8, x4, x1, x2)

inst_19787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3000003; valaddr_reg:x3; val_offset:59361*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59361*0 + 3*587*FLEN/8, x4, x1, x2)

inst_19788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3000007; valaddr_reg:x3; val_offset:59364*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59364*0 + 3*588*FLEN/8, x4, x1, x2)

inst_19789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb300000f; valaddr_reg:x3; val_offset:59367*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59367*0 + 3*589*FLEN/8, x4, x1, x2)

inst_19790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb300001f; valaddr_reg:x3; val_offset:59370*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59370*0 + 3*590*FLEN/8, x4, x1, x2)

inst_19791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb300003f; valaddr_reg:x3; val_offset:59373*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59373*0 + 3*591*FLEN/8, x4, x1, x2)

inst_19792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb300007f; valaddr_reg:x3; val_offset:59376*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59376*0 + 3*592*FLEN/8, x4, x1, x2)

inst_19793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb30000ff; valaddr_reg:x3; val_offset:59379*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59379*0 + 3*593*FLEN/8, x4, x1, x2)

inst_19794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb30001ff; valaddr_reg:x3; val_offset:59382*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59382*0 + 3*594*FLEN/8, x4, x1, x2)

inst_19795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb30003ff; valaddr_reg:x3; val_offset:59385*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59385*0 + 3*595*FLEN/8, x4, x1, x2)

inst_19796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb30007ff; valaddr_reg:x3; val_offset:59388*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59388*0 + 3*596*FLEN/8, x4, x1, x2)

inst_19797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3000fff; valaddr_reg:x3; val_offset:59391*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59391*0 + 3*597*FLEN/8, x4, x1, x2)

inst_19798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3001fff; valaddr_reg:x3; val_offset:59394*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59394*0 + 3*598*FLEN/8, x4, x1, x2)

inst_19799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3003fff; valaddr_reg:x3; val_offset:59397*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59397*0 + 3*599*FLEN/8, x4, x1, x2)

inst_19800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3007fff; valaddr_reg:x3; val_offset:59400*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59400*0 + 3*600*FLEN/8, x4, x1, x2)

inst_19801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb300ffff; valaddr_reg:x3; val_offset:59403*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59403*0 + 3*601*FLEN/8, x4, x1, x2)

inst_19802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb301ffff; valaddr_reg:x3; val_offset:59406*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59406*0 + 3*602*FLEN/8, x4, x1, x2)

inst_19803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb303ffff; valaddr_reg:x3; val_offset:59409*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59409*0 + 3*603*FLEN/8, x4, x1, x2)

inst_19804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb307ffff; valaddr_reg:x3; val_offset:59412*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59412*0 + 3*604*FLEN/8, x4, x1, x2)

inst_19805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb30fffff; valaddr_reg:x3; val_offset:59415*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59415*0 + 3*605*FLEN/8, x4, x1, x2)

inst_19806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb31fffff; valaddr_reg:x3; val_offset:59418*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59418*0 + 3*606*FLEN/8, x4, x1, x2)

inst_19807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb33fffff; valaddr_reg:x3; val_offset:59421*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59421*0 + 3*607*FLEN/8, x4, x1, x2)

inst_19808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3400000; valaddr_reg:x3; val_offset:59424*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59424*0 + 3*608*FLEN/8, x4, x1, x2)

inst_19809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3600000; valaddr_reg:x3; val_offset:59427*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59427*0 + 3*609*FLEN/8, x4, x1, x2)

inst_19810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3700000; valaddr_reg:x3; val_offset:59430*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59430*0 + 3*610*FLEN/8, x4, x1, x2)

inst_19811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb3780000; valaddr_reg:x3; val_offset:59433*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59433*0 + 3*611*FLEN/8, x4, x1, x2)

inst_19812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37c0000; valaddr_reg:x3; val_offset:59436*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59436*0 + 3*612*FLEN/8, x4, x1, x2)

inst_19813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37e0000; valaddr_reg:x3; val_offset:59439*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59439*0 + 3*613*FLEN/8, x4, x1, x2)

inst_19814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37f0000; valaddr_reg:x3; val_offset:59442*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59442*0 + 3*614*FLEN/8, x4, x1, x2)

inst_19815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37f8000; valaddr_reg:x3; val_offset:59445*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59445*0 + 3*615*FLEN/8, x4, x1, x2)

inst_19816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37fc000; valaddr_reg:x3; val_offset:59448*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59448*0 + 3*616*FLEN/8, x4, x1, x2)

inst_19817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37fe000; valaddr_reg:x3; val_offset:59451*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59451*0 + 3*617*FLEN/8, x4, x1, x2)

inst_19818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37ff000; valaddr_reg:x3; val_offset:59454*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59454*0 + 3*618*FLEN/8, x4, x1, x2)

inst_19819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37ff800; valaddr_reg:x3; val_offset:59457*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59457*0 + 3*619*FLEN/8, x4, x1, x2)

inst_19820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37ffc00; valaddr_reg:x3; val_offset:59460*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59460*0 + 3*620*FLEN/8, x4, x1, x2)

inst_19821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37ffe00; valaddr_reg:x3; val_offset:59463*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59463*0 + 3*621*FLEN/8, x4, x1, x2)

inst_19822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37fff00; valaddr_reg:x3; val_offset:59466*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59466*0 + 3*622*FLEN/8, x4, x1, x2)

inst_19823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37fff80; valaddr_reg:x3; val_offset:59469*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59469*0 + 3*623*FLEN/8, x4, x1, x2)

inst_19824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37fffc0; valaddr_reg:x3; val_offset:59472*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59472*0 + 3*624*FLEN/8, x4, x1, x2)

inst_19825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37fffe0; valaddr_reg:x3; val_offset:59475*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59475*0 + 3*625*FLEN/8, x4, x1, x2)

inst_19826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37ffff0; valaddr_reg:x3; val_offset:59478*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59478*0 + 3*626*FLEN/8, x4, x1, x2)

inst_19827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37ffff8; valaddr_reg:x3; val_offset:59481*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59481*0 + 3*627*FLEN/8, x4, x1, x2)

inst_19828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37ffffc; valaddr_reg:x3; val_offset:59484*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59484*0 + 3*628*FLEN/8, x4, x1, x2)

inst_19829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37ffffe; valaddr_reg:x3; val_offset:59487*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59487*0 + 3*629*FLEN/8, x4, x1, x2)

inst_19830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x66 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xb37fffff; valaddr_reg:x3; val_offset:59490*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59490*0 + 3*630*FLEN/8, x4, x1, x2)

inst_19831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbf800001; valaddr_reg:x3; val_offset:59493*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59493*0 + 3*631*FLEN/8, x4, x1, x2)

inst_19832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbf800003; valaddr_reg:x3; val_offset:59496*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59496*0 + 3*632*FLEN/8, x4, x1, x2)

inst_19833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbf800007; valaddr_reg:x3; val_offset:59499*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59499*0 + 3*633*FLEN/8, x4, x1, x2)

inst_19834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbf999999; valaddr_reg:x3; val_offset:59502*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59502*0 + 3*634*FLEN/8, x4, x1, x2)

inst_19835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:59505*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59505*0 + 3*635*FLEN/8, x4, x1, x2)

inst_19836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:59508*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59508*0 + 3*636*FLEN/8, x4, x1, x2)

inst_19837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:59511*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59511*0 + 3*637*FLEN/8, x4, x1, x2)

inst_19838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:59514*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59514*0 + 3*638*FLEN/8, x4, x1, x2)

inst_19839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:59517*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59517*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_19840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:59520*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59520*0 + 3*640*FLEN/8, x4, x1, x2)

inst_19841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:59523*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59523*0 + 3*641*FLEN/8, x4, x1, x2)

inst_19842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:59526*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59526*0 + 3*642*FLEN/8, x4, x1, x2)

inst_19843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:59529*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59529*0 + 3*643*FLEN/8, x4, x1, x2)

inst_19844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:59532*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59532*0 + 3*644*FLEN/8, x4, x1, x2)

inst_19845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:59535*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59535*0 + 3*645*FLEN/8, x4, x1, x2)

inst_19846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x514680 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec99612; op2val:0x80514680;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:59538*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59538*0 + 3*646*FLEN/8, x4, x1, x2)

inst_19847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:59541*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59541*0 + 3*647*FLEN/8, x4, x1, x2)

inst_19848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:59544*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59544*0 + 3*648*FLEN/8, x4, x1, x2)

inst_19849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:59547*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59547*0 + 3*649*FLEN/8, x4, x1, x2)

inst_19850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:59550*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59550*0 + 3*650*FLEN/8, x4, x1, x2)

inst_19851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:59553*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59553*0 + 3*651*FLEN/8, x4, x1, x2)

inst_19852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:59556*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59556*0 + 3*652*FLEN/8, x4, x1, x2)

inst_19853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:59559*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59559*0 + 3*653*FLEN/8, x4, x1, x2)

inst_19854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:59562*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59562*0 + 3*654*FLEN/8, x4, x1, x2)

inst_19855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:59565*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59565*0 + 3*655*FLEN/8, x4, x1, x2)

inst_19856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:59568*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59568*0 + 3*656*FLEN/8, x4, x1, x2)

inst_19857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:59571*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59571*0 + 3*657*FLEN/8, x4, x1, x2)

inst_19858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:59574*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59574*0 + 3*658*FLEN/8, x4, x1, x2)

inst_19859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:59577*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59577*0 + 3*659*FLEN/8, x4, x1, x2)

inst_19860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:59580*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59580*0 + 3*660*FLEN/8, x4, x1, x2)

inst_19861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:59583*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59583*0 + 3*661*FLEN/8, x4, x1, x2)

inst_19862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:59586*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59586*0 + 3*662*FLEN/8, x4, x1, x2)

inst_19863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10800000; valaddr_reg:x3; val_offset:59589*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59589*0 + 3*663*FLEN/8, x4, x1, x2)

inst_19864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10800001; valaddr_reg:x3; val_offset:59592*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59592*0 + 3*664*FLEN/8, x4, x1, x2)

inst_19865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10800003; valaddr_reg:x3; val_offset:59595*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59595*0 + 3*665*FLEN/8, x4, x1, x2)

inst_19866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10800007; valaddr_reg:x3; val_offset:59598*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59598*0 + 3*666*FLEN/8, x4, x1, x2)

inst_19867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x1080000f; valaddr_reg:x3; val_offset:59601*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59601*0 + 3*667*FLEN/8, x4, x1, x2)

inst_19868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x1080001f; valaddr_reg:x3; val_offset:59604*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59604*0 + 3*668*FLEN/8, x4, x1, x2)

inst_19869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x1080003f; valaddr_reg:x3; val_offset:59607*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59607*0 + 3*669*FLEN/8, x4, x1, x2)

inst_19870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x1080007f; valaddr_reg:x3; val_offset:59610*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59610*0 + 3*670*FLEN/8, x4, x1, x2)

inst_19871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x108000ff; valaddr_reg:x3; val_offset:59613*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59613*0 + 3*671*FLEN/8, x4, x1, x2)

inst_19872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x108001ff; valaddr_reg:x3; val_offset:59616*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59616*0 + 3*672*FLEN/8, x4, x1, x2)

inst_19873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x108003ff; valaddr_reg:x3; val_offset:59619*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59619*0 + 3*673*FLEN/8, x4, x1, x2)

inst_19874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x108007ff; valaddr_reg:x3; val_offset:59622*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59622*0 + 3*674*FLEN/8, x4, x1, x2)

inst_19875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10800fff; valaddr_reg:x3; val_offset:59625*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59625*0 + 3*675*FLEN/8, x4, x1, x2)

inst_19876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10801fff; valaddr_reg:x3; val_offset:59628*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59628*0 + 3*676*FLEN/8, x4, x1, x2)

inst_19877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10803fff; valaddr_reg:x3; val_offset:59631*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59631*0 + 3*677*FLEN/8, x4, x1, x2)

inst_19878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10807fff; valaddr_reg:x3; val_offset:59634*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59634*0 + 3*678*FLEN/8, x4, x1, x2)

inst_19879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x1080ffff; valaddr_reg:x3; val_offset:59637*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59637*0 + 3*679*FLEN/8, x4, x1, x2)

inst_19880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x1081ffff; valaddr_reg:x3; val_offset:59640*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59640*0 + 3*680*FLEN/8, x4, x1, x2)

inst_19881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x1083ffff; valaddr_reg:x3; val_offset:59643*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59643*0 + 3*681*FLEN/8, x4, x1, x2)

inst_19882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x1087ffff; valaddr_reg:x3; val_offset:59646*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59646*0 + 3*682*FLEN/8, x4, x1, x2)

inst_19883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x108fffff; valaddr_reg:x3; val_offset:59649*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59649*0 + 3*683*FLEN/8, x4, x1, x2)

inst_19884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x109fffff; valaddr_reg:x3; val_offset:59652*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59652*0 + 3*684*FLEN/8, x4, x1, x2)

inst_19885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10bfffff; valaddr_reg:x3; val_offset:59655*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59655*0 + 3*685*FLEN/8, x4, x1, x2)

inst_19886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10c00000; valaddr_reg:x3; val_offset:59658*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59658*0 + 3*686*FLEN/8, x4, x1, x2)

inst_19887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10e00000; valaddr_reg:x3; val_offset:59661*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59661*0 + 3*687*FLEN/8, x4, x1, x2)

inst_19888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10f00000; valaddr_reg:x3; val_offset:59664*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59664*0 + 3*688*FLEN/8, x4, x1, x2)

inst_19889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10f80000; valaddr_reg:x3; val_offset:59667*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59667*0 + 3*689*FLEN/8, x4, x1, x2)

inst_19890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fc0000; valaddr_reg:x3; val_offset:59670*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59670*0 + 3*690*FLEN/8, x4, x1, x2)

inst_19891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fe0000; valaddr_reg:x3; val_offset:59673*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59673*0 + 3*691*FLEN/8, x4, x1, x2)

inst_19892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10ff0000; valaddr_reg:x3; val_offset:59676*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59676*0 + 3*692*FLEN/8, x4, x1, x2)

inst_19893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10ff8000; valaddr_reg:x3; val_offset:59679*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59679*0 + 3*693*FLEN/8, x4, x1, x2)

inst_19894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10ffc000; valaddr_reg:x3; val_offset:59682*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59682*0 + 3*694*FLEN/8, x4, x1, x2)

inst_19895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10ffe000; valaddr_reg:x3; val_offset:59685*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59685*0 + 3*695*FLEN/8, x4, x1, x2)

inst_19896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fff000; valaddr_reg:x3; val_offset:59688*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59688*0 + 3*696*FLEN/8, x4, x1, x2)

inst_19897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fff800; valaddr_reg:x3; val_offset:59691*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59691*0 + 3*697*FLEN/8, x4, x1, x2)

inst_19898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fffc00; valaddr_reg:x3; val_offset:59694*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59694*0 + 3*698*FLEN/8, x4, x1, x2)

inst_19899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fffe00; valaddr_reg:x3; val_offset:59697*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59697*0 + 3*699*FLEN/8, x4, x1, x2)

inst_19900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10ffff00; valaddr_reg:x3; val_offset:59700*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59700*0 + 3*700*FLEN/8, x4, x1, x2)

inst_19901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10ffff80; valaddr_reg:x3; val_offset:59703*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59703*0 + 3*701*FLEN/8, x4, x1, x2)

inst_19902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10ffffc0; valaddr_reg:x3; val_offset:59706*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59706*0 + 3*702*FLEN/8, x4, x1, x2)

inst_19903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10ffffe0; valaddr_reg:x3; val_offset:59709*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59709*0 + 3*703*FLEN/8, x4, x1, x2)

inst_19904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fffff0; valaddr_reg:x3; val_offset:59712*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59712*0 + 3*704*FLEN/8, x4, x1, x2)

inst_19905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fffff8; valaddr_reg:x3; val_offset:59715*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59715*0 + 3*705*FLEN/8, x4, x1, x2)

inst_19906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fffffc; valaddr_reg:x3; val_offset:59718*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59718*0 + 3*706*FLEN/8, x4, x1, x2)

inst_19907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10fffffe; valaddr_reg:x3; val_offset:59721*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59721*0 + 3*707*FLEN/8, x4, x1, x2)

inst_19908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49dc7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x21 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9dc7e; op2val:0x0;
op3val:0x10ffffff; valaddr_reg:x3; val_offset:59724*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59724*0 + 3*708*FLEN/8, x4, x1, x2)

inst_19909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:59727*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59727*0 + 3*709*FLEN/8, x4, x1, x2)

inst_19910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:59730*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59730*0 + 3*710*FLEN/8, x4, x1, x2)

inst_19911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:59733*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59733*0 + 3*711*FLEN/8, x4, x1, x2)

inst_19912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:59736*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59736*0 + 3*712*FLEN/8, x4, x1, x2)

inst_19913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:59739*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59739*0 + 3*713*FLEN/8, x4, x1, x2)

inst_19914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:59742*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59742*0 + 3*714*FLEN/8, x4, x1, x2)

inst_19915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:59745*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59745*0 + 3*715*FLEN/8, x4, x1, x2)

inst_19916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:59748*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59748*0 + 3*716*FLEN/8, x4, x1, x2)

inst_19917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:59751*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59751*0 + 3*717*FLEN/8, x4, x1, x2)

inst_19918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:59754*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59754*0 + 3*718*FLEN/8, x4, x1, x2)

inst_19919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:59757*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59757*0 + 3*719*FLEN/8, x4, x1, x2)

inst_19920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:59760*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59760*0 + 3*720*FLEN/8, x4, x1, x2)

inst_19921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:59763*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59763*0 + 3*721*FLEN/8, x4, x1, x2)

inst_19922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:59766*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59766*0 + 3*722*FLEN/8, x4, x1, x2)

inst_19923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:59769*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59769*0 + 3*723*FLEN/8, x4, x1, x2)

inst_19924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:59772*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59772*0 + 3*724*FLEN/8, x4, x1, x2)

inst_19925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf000000; valaddr_reg:x3; val_offset:59775*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59775*0 + 3*725*FLEN/8, x4, x1, x2)

inst_19926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf000001; valaddr_reg:x3; val_offset:59778*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59778*0 + 3*726*FLEN/8, x4, x1, x2)

inst_19927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf000003; valaddr_reg:x3; val_offset:59781*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59781*0 + 3*727*FLEN/8, x4, x1, x2)

inst_19928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf000007; valaddr_reg:x3; val_offset:59784*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59784*0 + 3*728*FLEN/8, x4, x1, x2)

inst_19929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf00000f; valaddr_reg:x3; val_offset:59787*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59787*0 + 3*729*FLEN/8, x4, x1, x2)

inst_19930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf00001f; valaddr_reg:x3; val_offset:59790*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59790*0 + 3*730*FLEN/8, x4, x1, x2)

inst_19931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf00003f; valaddr_reg:x3; val_offset:59793*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59793*0 + 3*731*FLEN/8, x4, x1, x2)

inst_19932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf00007f; valaddr_reg:x3; val_offset:59796*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59796*0 + 3*732*FLEN/8, x4, x1, x2)

inst_19933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf0000ff; valaddr_reg:x3; val_offset:59799*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59799*0 + 3*733*FLEN/8, x4, x1, x2)

inst_19934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf0001ff; valaddr_reg:x3; val_offset:59802*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59802*0 + 3*734*FLEN/8, x4, x1, x2)

inst_19935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf0003ff; valaddr_reg:x3; val_offset:59805*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59805*0 + 3*735*FLEN/8, x4, x1, x2)

inst_19936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf0007ff; valaddr_reg:x3; val_offset:59808*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59808*0 + 3*736*FLEN/8, x4, x1, x2)

inst_19937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf000fff; valaddr_reg:x3; val_offset:59811*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59811*0 + 3*737*FLEN/8, x4, x1, x2)

inst_19938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf001fff; valaddr_reg:x3; val_offset:59814*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59814*0 + 3*738*FLEN/8, x4, x1, x2)

inst_19939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf003fff; valaddr_reg:x3; val_offset:59817*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59817*0 + 3*739*FLEN/8, x4, x1, x2)

inst_19940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf007fff; valaddr_reg:x3; val_offset:59820*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59820*0 + 3*740*FLEN/8, x4, x1, x2)

inst_19941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf00ffff; valaddr_reg:x3; val_offset:59823*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59823*0 + 3*741*FLEN/8, x4, x1, x2)

inst_19942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf01ffff; valaddr_reg:x3; val_offset:59826*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59826*0 + 3*742*FLEN/8, x4, x1, x2)

inst_19943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf03ffff; valaddr_reg:x3; val_offset:59829*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59829*0 + 3*743*FLEN/8, x4, x1, x2)

inst_19944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf07ffff; valaddr_reg:x3; val_offset:59832*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59832*0 + 3*744*FLEN/8, x4, x1, x2)

inst_19945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf0fffff; valaddr_reg:x3; val_offset:59835*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59835*0 + 3*745*FLEN/8, x4, x1, x2)

inst_19946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf1fffff; valaddr_reg:x3; val_offset:59838*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59838*0 + 3*746*FLEN/8, x4, x1, x2)

inst_19947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf3fffff; valaddr_reg:x3; val_offset:59841*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59841*0 + 3*747*FLEN/8, x4, x1, x2)

inst_19948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf400000; valaddr_reg:x3; val_offset:59844*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59844*0 + 3*748*FLEN/8, x4, x1, x2)

inst_19949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf600000; valaddr_reg:x3; val_offset:59847*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59847*0 + 3*749*FLEN/8, x4, x1, x2)

inst_19950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf700000; valaddr_reg:x3; val_offset:59850*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59850*0 + 3*750*FLEN/8, x4, x1, x2)

inst_19951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf780000; valaddr_reg:x3; val_offset:59853*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59853*0 + 3*751*FLEN/8, x4, x1, x2)

inst_19952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7c0000; valaddr_reg:x3; val_offset:59856*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59856*0 + 3*752*FLEN/8, x4, x1, x2)

inst_19953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7e0000; valaddr_reg:x3; val_offset:59859*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59859*0 + 3*753*FLEN/8, x4, x1, x2)

inst_19954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7f0000; valaddr_reg:x3; val_offset:59862*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59862*0 + 3*754*FLEN/8, x4, x1, x2)

inst_19955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7f8000; valaddr_reg:x3; val_offset:59865*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59865*0 + 3*755*FLEN/8, x4, x1, x2)

inst_19956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7fc000; valaddr_reg:x3; val_offset:59868*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59868*0 + 3*756*FLEN/8, x4, x1, x2)

inst_19957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7fe000; valaddr_reg:x3; val_offset:59871*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59871*0 + 3*757*FLEN/8, x4, x1, x2)

inst_19958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7ff000; valaddr_reg:x3; val_offset:59874*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59874*0 + 3*758*FLEN/8, x4, x1, x2)

inst_19959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7ff800; valaddr_reg:x3; val_offset:59877*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59877*0 + 3*759*FLEN/8, x4, x1, x2)

inst_19960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7ffc00; valaddr_reg:x3; val_offset:59880*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59880*0 + 3*760*FLEN/8, x4, x1, x2)

inst_19961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7ffe00; valaddr_reg:x3; val_offset:59883*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59883*0 + 3*761*FLEN/8, x4, x1, x2)

inst_19962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7fff00; valaddr_reg:x3; val_offset:59886*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59886*0 + 3*762*FLEN/8, x4, x1, x2)

inst_19963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7fff80; valaddr_reg:x3; val_offset:59889*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59889*0 + 3*763*FLEN/8, x4, x1, x2)

inst_19964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7fffc0; valaddr_reg:x3; val_offset:59892*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59892*0 + 3*764*FLEN/8, x4, x1, x2)

inst_19965:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7fffe0; valaddr_reg:x3; val_offset:59895*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59895*0 + 3*765*FLEN/8, x4, x1, x2)

inst_19966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7ffff0; valaddr_reg:x3; val_offset:59898*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59898*0 + 3*766*FLEN/8, x4, x1, x2)

inst_19967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a727e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca727e; op2val:0x0;
op3val:0xf7ffff8; valaddr_reg:x3; val_offset:59901*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59901*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399666175,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2400190463,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2401239039,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336191,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336192,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2405433344,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2406481920,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407006208,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407268352,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407399424,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407464960,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407497728,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407514112,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407522304,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407526400,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407528448,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529472,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529984,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530240,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530368,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530432,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530464,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530480,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530488,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530492,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530494,32,FLEN)
NAN_BOXED(2126630703,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530495,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587202560,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587202561,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587202563,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587202567,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587202575,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587202591,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587202623,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587202687,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587202815,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587203071,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587203583,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587204607,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587206655,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587210751,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587218943,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587235327,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587268095,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587333631,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587464703,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(587726847,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(588251135,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(589299711,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(591396863,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(591396864,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(593494016,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(594542592,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595066880,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595329024,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595460096,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595525632,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595558400,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595574784,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595582976,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595587072,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595589120,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595590144,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595590656,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595590912,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595591040,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595591104,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595591136,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595591152,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595591160,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595591164,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595591166,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(595591167,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2126648535,32,FLEN)
NAN_BOXED(5532429,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763392,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763393,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763395,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763399,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763407,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763423,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763455,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763519,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763647,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088763903,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088764415,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088765439,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088767487,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088771583,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088779775,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088796159,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088828927,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2088894463,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2089025535,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2089287679,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2089811967,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2090860543,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2092957695,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2092957696,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2095054848,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2096103424,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2096627712,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2096889856,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097020928,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097086464,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097119232,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097135616,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097143808,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097147904,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097149952,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097150976,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151488,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151744,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151872,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151936,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151968,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151984,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151992,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151996,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151998,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2097151999,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2126661962,32,FLEN)
NAN_BOXED(1076406407,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780140544,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780140545,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780140547,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780140551,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780140559,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780140575,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780140607,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780140671,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780140799,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780141055,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780141567,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780142591,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780144639,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780148735,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780156927,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780173311,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780206079,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780271615,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780402687,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(780664831,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(781189119,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(782237695,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(784334847,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(784334848,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(786432000,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(787480576,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788004864,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788267008,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788398080,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788463616,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788496384,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788512768,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788520960,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788525056,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788527104,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788528128,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788528640,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788528896,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788529024,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788529088,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788529120,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788529136,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788529144,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788529148,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788529150,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(788529151,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2126688963,32,FLEN)
NAN_BOXED(5514901,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815296,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815297,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815299,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815303,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815311,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815327,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815359,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815423,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815551,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815807,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197816319,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197817343,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197819391,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197823487,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197831679,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197848063,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197880831,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197946367,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198077439,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198339583,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198863871,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2199912447,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009599,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009600,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2204106752,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205155328,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205679616,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205941760,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206072832,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206138368,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206171136,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206187520,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206195712,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206199808,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206201856,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206202880,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203392,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203648,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203776,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203840,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203872,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203888,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203896,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203900,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203902,32,FLEN)
NAN_BOXED(2126694403,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203903,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369728,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369729,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369731,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369735,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369743,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369759,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369791,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369855,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369983,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231370239,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231370751,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231371775,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231373823,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231377919,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231386111,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231402495,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231435263,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231500799,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231631871,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231894015,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2232418303,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2233466879,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2235564031,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2235564032,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2237661184,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2238709760,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239234048,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239496192,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239627264,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239692800,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239725568,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239741952,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239750144,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239754240,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239756288,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239757312,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239757824,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758080,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758208,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758272,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758304,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758320,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758328,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758332,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758334,32,FLEN)
NAN_BOXED(2126797149,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758335,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606336,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606337,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606339,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606343,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606351,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606367,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606399,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606463,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606591,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606847,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142607359,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142608383,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142610431,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142614527,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142622719,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142639103,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142671871,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142737407,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142868479,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(143130623,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(143654911,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(144703487,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(146800639,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(146800640,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(148897792,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(149946368,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150470656,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150732800,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150863872,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150929408,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150962176,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150978560,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150986752,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150990848,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150992896,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150993920,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994432,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994688,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994816,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994880,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994912,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994928,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994936,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994940,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994942,32,FLEN)
NAN_BOXED(2126905174,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994943,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835349504,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835349505,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835349507,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835349511,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835349519,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835349535,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835349567,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835349631,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835349759,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835350015,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835350527,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835351551,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835353599,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835357695,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835365887,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835382271,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835415039,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835480575,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835611647,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2835873791,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2836398079,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2837446655,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2839543807,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2839543808,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2841640960,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2842689536,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843213824,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843475968,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843607040,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843672576,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843705344,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843721728,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843729920,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843734016,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843736064,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843737088,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843737600,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843737856,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843737984,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843738048,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843738080,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843738096,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843738104,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843738108,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843738110,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(2843738111,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2126990655,32,FLEN)
NAN_BOXED(2152871166,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729808896,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729808897,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729808899,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729808903,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729808911,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729808927,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729808959,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729809023,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729809151,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729809407,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729809919,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729810943,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729812991,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729817087,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729825279,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729841663,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729874431,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(729939967,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(730071039,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(730333183,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(730857471,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(731906047,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(734003199,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(734003200,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(736100352,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(737148928,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(737673216,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(737935360,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738066432,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738131968,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738164736,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738181120,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738189312,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738193408,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738195456,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738196480,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738196992,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738197248,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738197376,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738197440,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738197472,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738197488,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738197496,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738197500,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738197502,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(738197503,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2127017280,32,FLEN)
NAN_BOXED(5376558,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472192,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472193,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472195,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472199,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472207,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472223,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472255,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472319,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472447,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830472703,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830473215,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830474239,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830476287,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830480383,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830488575,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830504959,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830537727,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830603263,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830734335,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(830996479,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(831520767,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(832569343,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(834666495,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(834666496,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(836763648,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(837812224,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838336512,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838598656,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838729728,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838795264,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838828032,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838844416,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838852608,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838856704,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838858752,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838859776,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860288,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860544,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860672,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860736,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860768,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860784,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860792,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860796,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860798,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(838860799,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2127043813,32,FLEN)
NAN_BOXED(5365680,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003121664,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003121665,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003121667,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003121671,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003121679,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003121695,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003121727,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003121791,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003121919,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003122175,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003122687,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003123711,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003125759,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003129855,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003138047,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003154431,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003187199,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003252735,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003383807,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3003645951,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3004170239,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3005218815,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3007315967,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3007315968,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3009413120,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3010461696,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3010985984,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011248128,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011379200,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011444736,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011477504,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011493888,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011502080,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011506176,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011508224,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011509248,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011509760,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011510016,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011510144,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011510208,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011510240,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011510256,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011510264,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011510268,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011510270,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3011510271,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2127140370,32,FLEN)
NAN_BOXED(2152810112,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824064,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824065,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824067,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824071,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824079,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824095,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824127,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824191,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824319,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276824575,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276825087,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276826111,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276828159,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276832255,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276840447,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276856831,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276889599,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(276955135,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(277086207,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(277348351,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(277872639,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(278921215,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(281018367,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(281018368,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(283115520,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(284164096,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(284688384,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(284950528,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285081600,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285147136,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285179904,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285196288,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285204480,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285208576,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285210624,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285211648,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212160,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212416,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212544,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212608,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212640,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212656,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212664,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212668,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212670,32,FLEN)
NAN_BOXED(2127158398,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(285212671,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658240,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658241,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658243,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658247,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658255,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658271,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658303,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658367,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658495,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658751,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251659263,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251660287,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251662335,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251666431,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251674623,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251691007,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251723775,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251789311,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251920383,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(252182527,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(252706815,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(253755391,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(255852543,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(255852544,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(257949696,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(258998272,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(259522560,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(259784704,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(259915776,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(259981312,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260014080,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260030464,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260038656,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260042752,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260044800,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260045824,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046336,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046592,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046720,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046784,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046816,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046832,32,FLEN)
NAN_BOXED(2127196798,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(260046840,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
