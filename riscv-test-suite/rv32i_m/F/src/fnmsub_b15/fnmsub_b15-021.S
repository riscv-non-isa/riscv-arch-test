
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_15360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff249249; valaddr_reg:x3; val_offset:46080*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46080*0 + 3*0*FLEN/8, x4, x1, x2)

inst_15361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff333333; valaddr_reg:x3; val_offset:46083*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46083*0 + 3*1*FLEN/8, x4, x1, x2)

inst_15362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:46086*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46086*0 + 3*2*FLEN/8, x4, x1, x2)

inst_15363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:46089*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46089*0 + 3*3*FLEN/8, x4, x1, x2)

inst_15364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff444444; valaddr_reg:x3; val_offset:46092*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46092*0 + 3*4*FLEN/8, x4, x1, x2)

inst_15365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:46095*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46095*0 + 3*5*FLEN/8, x4, x1, x2)

inst_15366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:46098*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46098*0 + 3*6*FLEN/8, x4, x1, x2)

inst_15367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff666666; valaddr_reg:x3; val_offset:46101*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46101*0 + 3*7*FLEN/8, x4, x1, x2)

inst_15368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:46104*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46104*0 + 3*8*FLEN/8, x4, x1, x2)

inst_15369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:46107*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46107*0 + 3*9*FLEN/8, x4, x1, x2)

inst_15370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:46110*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46110*0 + 3*10*FLEN/8, x4, x1, x2)

inst_15371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a28e8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x548f03 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a28e8; op2val:0xc0548f03;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:46113*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46113*0 + 3*11*FLEN/8, x4, x1, x2)

inst_15372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000000; valaddr_reg:x3; val_offset:46116*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46116*0 + 3*12*FLEN/8, x4, x1, x2)

inst_15373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000001; valaddr_reg:x3; val_offset:46119*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46119*0 + 3*13*FLEN/8, x4, x1, x2)

inst_15374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000003; valaddr_reg:x3; val_offset:46122*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46122*0 + 3*14*FLEN/8, x4, x1, x2)

inst_15375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000007; valaddr_reg:x3; val_offset:46125*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46125*0 + 3*15*FLEN/8, x4, x1, x2)

inst_15376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900000f; valaddr_reg:x3; val_offset:46128*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46128*0 + 3*16*FLEN/8, x4, x1, x2)

inst_15377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900001f; valaddr_reg:x3; val_offset:46131*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46131*0 + 3*17*FLEN/8, x4, x1, x2)

inst_15378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900003f; valaddr_reg:x3; val_offset:46134*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46134*0 + 3*18*FLEN/8, x4, x1, x2)

inst_15379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900007f; valaddr_reg:x3; val_offset:46137*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46137*0 + 3*19*FLEN/8, x4, x1, x2)

inst_15380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90000ff; valaddr_reg:x3; val_offset:46140*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46140*0 + 3*20*FLEN/8, x4, x1, x2)

inst_15381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90001ff; valaddr_reg:x3; val_offset:46143*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46143*0 + 3*21*FLEN/8, x4, x1, x2)

inst_15382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90003ff; valaddr_reg:x3; val_offset:46146*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46146*0 + 3*22*FLEN/8, x4, x1, x2)

inst_15383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90007ff; valaddr_reg:x3; val_offset:46149*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46149*0 + 3*23*FLEN/8, x4, x1, x2)

inst_15384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9000fff; valaddr_reg:x3; val_offset:46152*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46152*0 + 3*24*FLEN/8, x4, x1, x2)

inst_15385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9001fff; valaddr_reg:x3; val_offset:46155*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46155*0 + 3*25*FLEN/8, x4, x1, x2)

inst_15386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9003fff; valaddr_reg:x3; val_offset:46158*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46158*0 + 3*26*FLEN/8, x4, x1, x2)

inst_15387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9007fff; valaddr_reg:x3; val_offset:46161*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46161*0 + 3*27*FLEN/8, x4, x1, x2)

inst_15388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf900ffff; valaddr_reg:x3; val_offset:46164*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46164*0 + 3*28*FLEN/8, x4, x1, x2)

inst_15389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf901ffff; valaddr_reg:x3; val_offset:46167*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46167*0 + 3*29*FLEN/8, x4, x1, x2)

inst_15390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf903ffff; valaddr_reg:x3; val_offset:46170*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46170*0 + 3*30*FLEN/8, x4, x1, x2)

inst_15391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf907ffff; valaddr_reg:x3; val_offset:46173*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46173*0 + 3*31*FLEN/8, x4, x1, x2)

inst_15392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf90fffff; valaddr_reg:x3; val_offset:46176*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46176*0 + 3*32*FLEN/8, x4, x1, x2)

inst_15393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf91fffff; valaddr_reg:x3; val_offset:46179*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46179*0 + 3*33*FLEN/8, x4, x1, x2)

inst_15394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf93fffff; valaddr_reg:x3; val_offset:46182*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46182*0 + 3*34*FLEN/8, x4, x1, x2)

inst_15395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9400000; valaddr_reg:x3; val_offset:46185*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46185*0 + 3*35*FLEN/8, x4, x1, x2)

inst_15396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9600000; valaddr_reg:x3; val_offset:46188*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46188*0 + 3*36*FLEN/8, x4, x1, x2)

inst_15397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9700000; valaddr_reg:x3; val_offset:46191*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46191*0 + 3*37*FLEN/8, x4, x1, x2)

inst_15398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf9780000; valaddr_reg:x3; val_offset:46194*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46194*0 + 3*38*FLEN/8, x4, x1, x2)

inst_15399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97c0000; valaddr_reg:x3; val_offset:46197*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46197*0 + 3*39*FLEN/8, x4, x1, x2)

inst_15400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97e0000; valaddr_reg:x3; val_offset:46200*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46200*0 + 3*40*FLEN/8, x4, x1, x2)

inst_15401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97f0000; valaddr_reg:x3; val_offset:46203*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46203*0 + 3*41*FLEN/8, x4, x1, x2)

inst_15402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97f8000; valaddr_reg:x3; val_offset:46206*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46206*0 + 3*42*FLEN/8, x4, x1, x2)

inst_15403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fc000; valaddr_reg:x3; val_offset:46209*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46209*0 + 3*43*FLEN/8, x4, x1, x2)

inst_15404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fe000; valaddr_reg:x3; val_offset:46212*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46212*0 + 3*44*FLEN/8, x4, x1, x2)

inst_15405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ff000; valaddr_reg:x3; val_offset:46215*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46215*0 + 3*45*FLEN/8, x4, x1, x2)

inst_15406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ff800; valaddr_reg:x3; val_offset:46218*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46218*0 + 3*46*FLEN/8, x4, x1, x2)

inst_15407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffc00; valaddr_reg:x3; val_offset:46221*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46221*0 + 3*47*FLEN/8, x4, x1, x2)

inst_15408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffe00; valaddr_reg:x3; val_offset:46224*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46224*0 + 3*48*FLEN/8, x4, x1, x2)

inst_15409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fff00; valaddr_reg:x3; val_offset:46227*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46227*0 + 3*49*FLEN/8, x4, x1, x2)

inst_15410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fff80; valaddr_reg:x3; val_offset:46230*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46230*0 + 3*50*FLEN/8, x4, x1, x2)

inst_15411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fffc0; valaddr_reg:x3; val_offset:46233*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46233*0 + 3*51*FLEN/8, x4, x1, x2)

inst_15412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fffe0; valaddr_reg:x3; val_offset:46236*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46236*0 + 3*52*FLEN/8, x4, x1, x2)

inst_15413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffff0; valaddr_reg:x3; val_offset:46239*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46239*0 + 3*53*FLEN/8, x4, x1, x2)

inst_15414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffff8; valaddr_reg:x3; val_offset:46242*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46242*0 + 3*54*FLEN/8, x4, x1, x2)

inst_15415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffffc; valaddr_reg:x3; val_offset:46245*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46245*0 + 3*55*FLEN/8, x4, x1, x2)

inst_15416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97ffffe; valaddr_reg:x3; val_offset:46248*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46248*0 + 3*56*FLEN/8, x4, x1, x2)

inst_15417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xf2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xf97fffff; valaddr_reg:x3; val_offset:46251*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46251*0 + 3*57*FLEN/8, x4, x1, x2)

inst_15418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff000001; valaddr_reg:x3; val_offset:46254*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46254*0 + 3*58*FLEN/8, x4, x1, x2)

inst_15419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff000003; valaddr_reg:x3; val_offset:46257*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46257*0 + 3*59*FLEN/8, x4, x1, x2)

inst_15420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff000007; valaddr_reg:x3; val_offset:46260*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46260*0 + 3*60*FLEN/8, x4, x1, x2)

inst_15421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff199999; valaddr_reg:x3; val_offset:46263*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46263*0 + 3*61*FLEN/8, x4, x1, x2)

inst_15422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff249249; valaddr_reg:x3; val_offset:46266*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46266*0 + 3*62*FLEN/8, x4, x1, x2)

inst_15423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff333333; valaddr_reg:x3; val_offset:46269*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46269*0 + 3*63*FLEN/8, x4, x1, x2)

inst_15424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:46272*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46272*0 + 3*64*FLEN/8, x4, x1, x2)

inst_15425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:46275*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46275*0 + 3*65*FLEN/8, x4, x1, x2)

inst_15426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff444444; valaddr_reg:x3; val_offset:46278*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46278*0 + 3*66*FLEN/8, x4, x1, x2)

inst_15427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:46281*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46281*0 + 3*67*FLEN/8, x4, x1, x2)

inst_15428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:46284*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46284*0 + 3*68*FLEN/8, x4, x1, x2)

inst_15429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff666666; valaddr_reg:x3; val_offset:46287*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46287*0 + 3*69*FLEN/8, x4, x1, x2)

inst_15430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:46290*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46290*0 + 3*70*FLEN/8, x4, x1, x2)

inst_15431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:46293*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46293*0 + 3*71*FLEN/8, x4, x1, x2)

inst_15432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:46296*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46296*0 + 3*72*FLEN/8, x4, x1, x2)

inst_15433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ade51 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x539606 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ade51; op2val:0xc0539606;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:46299*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46299*0 + 3*73*FLEN/8, x4, x1, x2)

inst_15434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000000; valaddr_reg:x3; val_offset:46302*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46302*0 + 3*74*FLEN/8, x4, x1, x2)

inst_15435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000001; valaddr_reg:x3; val_offset:46305*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46305*0 + 3*75*FLEN/8, x4, x1, x2)

inst_15436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000003; valaddr_reg:x3; val_offset:46308*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46308*0 + 3*76*FLEN/8, x4, x1, x2)

inst_15437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000007; valaddr_reg:x3; val_offset:46311*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46311*0 + 3*77*FLEN/8, x4, x1, x2)

inst_15438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300000f; valaddr_reg:x3; val_offset:46314*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46314*0 + 3*78*FLEN/8, x4, x1, x2)

inst_15439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300001f; valaddr_reg:x3; val_offset:46317*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46317*0 + 3*79*FLEN/8, x4, x1, x2)

inst_15440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300003f; valaddr_reg:x3; val_offset:46320*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46320*0 + 3*80*FLEN/8, x4, x1, x2)

inst_15441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300007f; valaddr_reg:x3; val_offset:46323*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46323*0 + 3*81*FLEN/8, x4, x1, x2)

inst_15442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30000ff; valaddr_reg:x3; val_offset:46326*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46326*0 + 3*82*FLEN/8, x4, x1, x2)

inst_15443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30001ff; valaddr_reg:x3; val_offset:46329*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46329*0 + 3*83*FLEN/8, x4, x1, x2)

inst_15444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30003ff; valaddr_reg:x3; val_offset:46332*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46332*0 + 3*84*FLEN/8, x4, x1, x2)

inst_15445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30007ff; valaddr_reg:x3; val_offset:46335*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46335*0 + 3*85*FLEN/8, x4, x1, x2)

inst_15446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3000fff; valaddr_reg:x3; val_offset:46338*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46338*0 + 3*86*FLEN/8, x4, x1, x2)

inst_15447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3001fff; valaddr_reg:x3; val_offset:46341*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46341*0 + 3*87*FLEN/8, x4, x1, x2)

inst_15448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3003fff; valaddr_reg:x3; val_offset:46344*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46344*0 + 3*88*FLEN/8, x4, x1, x2)

inst_15449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3007fff; valaddr_reg:x3; val_offset:46347*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46347*0 + 3*89*FLEN/8, x4, x1, x2)

inst_15450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf300ffff; valaddr_reg:x3; val_offset:46350*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46350*0 + 3*90*FLEN/8, x4, x1, x2)

inst_15451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf301ffff; valaddr_reg:x3; val_offset:46353*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46353*0 + 3*91*FLEN/8, x4, x1, x2)

inst_15452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf303ffff; valaddr_reg:x3; val_offset:46356*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46356*0 + 3*92*FLEN/8, x4, x1, x2)

inst_15453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf307ffff; valaddr_reg:x3; val_offset:46359*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46359*0 + 3*93*FLEN/8, x4, x1, x2)

inst_15454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf30fffff; valaddr_reg:x3; val_offset:46362*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46362*0 + 3*94*FLEN/8, x4, x1, x2)

inst_15455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf31fffff; valaddr_reg:x3; val_offset:46365*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46365*0 + 3*95*FLEN/8, x4, x1, x2)

inst_15456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf33fffff; valaddr_reg:x3; val_offset:46368*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46368*0 + 3*96*FLEN/8, x4, x1, x2)

inst_15457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3400000; valaddr_reg:x3; val_offset:46371*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46371*0 + 3*97*FLEN/8, x4, x1, x2)

inst_15458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3600000; valaddr_reg:x3; val_offset:46374*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46374*0 + 3*98*FLEN/8, x4, x1, x2)

inst_15459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3700000; valaddr_reg:x3; val_offset:46377*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46377*0 + 3*99*FLEN/8, x4, x1, x2)

inst_15460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf3780000; valaddr_reg:x3; val_offset:46380*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46380*0 + 3*100*FLEN/8, x4, x1, x2)

inst_15461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37c0000; valaddr_reg:x3; val_offset:46383*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46383*0 + 3*101*FLEN/8, x4, x1, x2)

inst_15462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37e0000; valaddr_reg:x3; val_offset:46386*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46386*0 + 3*102*FLEN/8, x4, x1, x2)

inst_15463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37f0000; valaddr_reg:x3; val_offset:46389*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46389*0 + 3*103*FLEN/8, x4, x1, x2)

inst_15464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37f8000; valaddr_reg:x3; val_offset:46392*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46392*0 + 3*104*FLEN/8, x4, x1, x2)

inst_15465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fc000; valaddr_reg:x3; val_offset:46395*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46395*0 + 3*105*FLEN/8, x4, x1, x2)

inst_15466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fe000; valaddr_reg:x3; val_offset:46398*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46398*0 + 3*106*FLEN/8, x4, x1, x2)

inst_15467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ff000; valaddr_reg:x3; val_offset:46401*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46401*0 + 3*107*FLEN/8, x4, x1, x2)

inst_15468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ff800; valaddr_reg:x3; val_offset:46404*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46404*0 + 3*108*FLEN/8, x4, x1, x2)

inst_15469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffc00; valaddr_reg:x3; val_offset:46407*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46407*0 + 3*109*FLEN/8, x4, x1, x2)

inst_15470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffe00; valaddr_reg:x3; val_offset:46410*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46410*0 + 3*110*FLEN/8, x4, x1, x2)

inst_15471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fff00; valaddr_reg:x3; val_offset:46413*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46413*0 + 3*111*FLEN/8, x4, x1, x2)

inst_15472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fff80; valaddr_reg:x3; val_offset:46416*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46416*0 + 3*112*FLEN/8, x4, x1, x2)

inst_15473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fffc0; valaddr_reg:x3; val_offset:46419*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46419*0 + 3*113*FLEN/8, x4, x1, x2)

inst_15474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fffe0; valaddr_reg:x3; val_offset:46422*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46422*0 + 3*114*FLEN/8, x4, x1, x2)

inst_15475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffff0; valaddr_reg:x3; val_offset:46425*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46425*0 + 3*115*FLEN/8, x4, x1, x2)

inst_15476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffff8; valaddr_reg:x3; val_offset:46428*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46428*0 + 3*116*FLEN/8, x4, x1, x2)

inst_15477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffffc; valaddr_reg:x3; val_offset:46431*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46431*0 + 3*117*FLEN/8, x4, x1, x2)

inst_15478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37ffffe; valaddr_reg:x3; val_offset:46434*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46434*0 + 3*118*FLEN/8, x4, x1, x2)

inst_15479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xf37fffff; valaddr_reg:x3; val_offset:46437*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46437*0 + 3*119*FLEN/8, x4, x1, x2)

inst_15480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff000001; valaddr_reg:x3; val_offset:46440*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46440*0 + 3*120*FLEN/8, x4, x1, x2)

inst_15481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff000003; valaddr_reg:x3; val_offset:46443*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46443*0 + 3*121*FLEN/8, x4, x1, x2)

inst_15482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff000007; valaddr_reg:x3; val_offset:46446*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46446*0 + 3*122*FLEN/8, x4, x1, x2)

inst_15483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff199999; valaddr_reg:x3; val_offset:46449*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46449*0 + 3*123*FLEN/8, x4, x1, x2)

inst_15484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff249249; valaddr_reg:x3; val_offset:46452*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46452*0 + 3*124*FLEN/8, x4, x1, x2)

inst_15485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff333333; valaddr_reg:x3; val_offset:46455*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46455*0 + 3*125*FLEN/8, x4, x1, x2)

inst_15486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:46458*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46458*0 + 3*126*FLEN/8, x4, x1, x2)

inst_15487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:46461*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46461*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_15488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff444444; valaddr_reg:x3; val_offset:46464*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46464*0 + 3*128*FLEN/8, x4, x1, x2)

inst_15489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:46467*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46467*0 + 3*129*FLEN/8, x4, x1, x2)

inst_15490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:46470*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46470*0 + 3*130*FLEN/8, x4, x1, x2)

inst_15491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff666666; valaddr_reg:x3; val_offset:46473*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46473*0 + 3*131*FLEN/8, x4, x1, x2)

inst_15492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:46476*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46476*0 + 3*132*FLEN/8, x4, x1, x2)

inst_15493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:46479*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46479*0 + 3*133*FLEN/8, x4, x1, x2)

inst_15494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:46482*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46482*0 + 3*134*FLEN/8, x4, x1, x2)

inst_15495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b09f8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x535a74 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b09f8; op2val:0xc0535a74;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:46485*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46485*0 + 3*135*FLEN/8, x4, x1, x2)

inst_15496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c000000; valaddr_reg:x3; val_offset:46488*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46488*0 + 3*136*FLEN/8, x4, x1, x2)

inst_15497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c000001; valaddr_reg:x3; val_offset:46491*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46491*0 + 3*137*FLEN/8, x4, x1, x2)

inst_15498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c000003; valaddr_reg:x3; val_offset:46494*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46494*0 + 3*138*FLEN/8, x4, x1, x2)

inst_15499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c000007; valaddr_reg:x3; val_offset:46497*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46497*0 + 3*139*FLEN/8, x4, x1, x2)

inst_15500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c00000f; valaddr_reg:x3; val_offset:46500*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46500*0 + 3*140*FLEN/8, x4, x1, x2)

inst_15501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c00001f; valaddr_reg:x3; val_offset:46503*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46503*0 + 3*141*FLEN/8, x4, x1, x2)

inst_15502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c00003f; valaddr_reg:x3; val_offset:46506*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46506*0 + 3*142*FLEN/8, x4, x1, x2)

inst_15503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c00007f; valaddr_reg:x3; val_offset:46509*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46509*0 + 3*143*FLEN/8, x4, x1, x2)

inst_15504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c0000ff; valaddr_reg:x3; val_offset:46512*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46512*0 + 3*144*FLEN/8, x4, x1, x2)

inst_15505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c0001ff; valaddr_reg:x3; val_offset:46515*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46515*0 + 3*145*FLEN/8, x4, x1, x2)

inst_15506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c0003ff; valaddr_reg:x3; val_offset:46518*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46518*0 + 3*146*FLEN/8, x4, x1, x2)

inst_15507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c0007ff; valaddr_reg:x3; val_offset:46521*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46521*0 + 3*147*FLEN/8, x4, x1, x2)

inst_15508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c000fff; valaddr_reg:x3; val_offset:46524*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46524*0 + 3*148*FLEN/8, x4, x1, x2)

inst_15509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c001fff; valaddr_reg:x3; val_offset:46527*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46527*0 + 3*149*FLEN/8, x4, x1, x2)

inst_15510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c003fff; valaddr_reg:x3; val_offset:46530*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46530*0 + 3*150*FLEN/8, x4, x1, x2)

inst_15511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c007fff; valaddr_reg:x3; val_offset:46533*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46533*0 + 3*151*FLEN/8, x4, x1, x2)

inst_15512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c00ffff; valaddr_reg:x3; val_offset:46536*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46536*0 + 3*152*FLEN/8, x4, x1, x2)

inst_15513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c01ffff; valaddr_reg:x3; val_offset:46539*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46539*0 + 3*153*FLEN/8, x4, x1, x2)

inst_15514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c03ffff; valaddr_reg:x3; val_offset:46542*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46542*0 + 3*154*FLEN/8, x4, x1, x2)

inst_15515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c07ffff; valaddr_reg:x3; val_offset:46545*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46545*0 + 3*155*FLEN/8, x4, x1, x2)

inst_15516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c0fffff; valaddr_reg:x3; val_offset:46548*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46548*0 + 3*156*FLEN/8, x4, x1, x2)

inst_15517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c1fffff; valaddr_reg:x3; val_offset:46551*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46551*0 + 3*157*FLEN/8, x4, x1, x2)

inst_15518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c3fffff; valaddr_reg:x3; val_offset:46554*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46554*0 + 3*158*FLEN/8, x4, x1, x2)

inst_15519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c400000; valaddr_reg:x3; val_offset:46557*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46557*0 + 3*159*FLEN/8, x4, x1, x2)

inst_15520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c600000; valaddr_reg:x3; val_offset:46560*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46560*0 + 3*160*FLEN/8, x4, x1, x2)

inst_15521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c700000; valaddr_reg:x3; val_offset:46563*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46563*0 + 3*161*FLEN/8, x4, x1, x2)

inst_15522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c780000; valaddr_reg:x3; val_offset:46566*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46566*0 + 3*162*FLEN/8, x4, x1, x2)

inst_15523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7c0000; valaddr_reg:x3; val_offset:46569*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46569*0 + 3*163*FLEN/8, x4, x1, x2)

inst_15524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7e0000; valaddr_reg:x3; val_offset:46572*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46572*0 + 3*164*FLEN/8, x4, x1, x2)

inst_15525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7f0000; valaddr_reg:x3; val_offset:46575*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46575*0 + 3*165*FLEN/8, x4, x1, x2)

inst_15526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7f8000; valaddr_reg:x3; val_offset:46578*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46578*0 + 3*166*FLEN/8, x4, x1, x2)

inst_15527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7fc000; valaddr_reg:x3; val_offset:46581*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46581*0 + 3*167*FLEN/8, x4, x1, x2)

inst_15528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7fe000; valaddr_reg:x3; val_offset:46584*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46584*0 + 3*168*FLEN/8, x4, x1, x2)

inst_15529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7ff000; valaddr_reg:x3; val_offset:46587*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46587*0 + 3*169*FLEN/8, x4, x1, x2)

inst_15530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7ff800; valaddr_reg:x3; val_offset:46590*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46590*0 + 3*170*FLEN/8, x4, x1, x2)

inst_15531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7ffc00; valaddr_reg:x3; val_offset:46593*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46593*0 + 3*171*FLEN/8, x4, x1, x2)

inst_15532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7ffe00; valaddr_reg:x3; val_offset:46596*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46596*0 + 3*172*FLEN/8, x4, x1, x2)

inst_15533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7fff00; valaddr_reg:x3; val_offset:46599*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46599*0 + 3*173*FLEN/8, x4, x1, x2)

inst_15534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7fff80; valaddr_reg:x3; val_offset:46602*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46602*0 + 3*174*FLEN/8, x4, x1, x2)

inst_15535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7fffc0; valaddr_reg:x3; val_offset:46605*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46605*0 + 3*175*FLEN/8, x4, x1, x2)

inst_15536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7fffe0; valaddr_reg:x3; val_offset:46608*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46608*0 + 3*176*FLEN/8, x4, x1, x2)

inst_15537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7ffff0; valaddr_reg:x3; val_offset:46611*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46611*0 + 3*177*FLEN/8, x4, x1, x2)

inst_15538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7ffff8; valaddr_reg:x3; val_offset:46614*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46614*0 + 3*178*FLEN/8, x4, x1, x2)

inst_15539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7ffffc; valaddr_reg:x3; val_offset:46617*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46617*0 + 3*179*FLEN/8, x4, x1, x2)

inst_15540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7ffffe; valaddr_reg:x3; val_offset:46620*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46620*0 + 3*180*FLEN/8, x4, x1, x2)

inst_15541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xd8 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x6c7fffff; valaddr_reg:x3; val_offset:46623*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46623*0 + 3*181*FLEN/8, x4, x1, x2)

inst_15542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f000001; valaddr_reg:x3; val_offset:46626*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46626*0 + 3*182*FLEN/8, x4, x1, x2)

inst_15543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f000003; valaddr_reg:x3; val_offset:46629*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46629*0 + 3*183*FLEN/8, x4, x1, x2)

inst_15544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f000007; valaddr_reg:x3; val_offset:46632*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46632*0 + 3*184*FLEN/8, x4, x1, x2)

inst_15545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f199999; valaddr_reg:x3; val_offset:46635*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46635*0 + 3*185*FLEN/8, x4, x1, x2)

inst_15546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f249249; valaddr_reg:x3; val_offset:46638*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46638*0 + 3*186*FLEN/8, x4, x1, x2)

inst_15547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f333333; valaddr_reg:x3; val_offset:46641*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46641*0 + 3*187*FLEN/8, x4, x1, x2)

inst_15548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:46644*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46644*0 + 3*188*FLEN/8, x4, x1, x2)

inst_15549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:46647*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46647*0 + 3*189*FLEN/8, x4, x1, x2)

inst_15550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f444444; valaddr_reg:x3; val_offset:46650*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46650*0 + 3*190*FLEN/8, x4, x1, x2)

inst_15551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:46653*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46653*0 + 3*191*FLEN/8, x4, x1, x2)

inst_15552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:46656*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46656*0 + 3*192*FLEN/8, x4, x1, x2)

inst_15553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f666666; valaddr_reg:x3; val_offset:46659*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46659*0 + 3*193*FLEN/8, x4, x1, x2)

inst_15554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:46662*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46662*0 + 3*194*FLEN/8, x4, x1, x2)

inst_15555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:46665*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46665*0 + 3*195*FLEN/8, x4, x1, x2)

inst_15556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:46668*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46668*0 + 3*196*FLEN/8, x4, x1, x2)

inst_15557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c600e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x518c18 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c600e; op2val:0x40518c18;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:46671*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46671*0 + 3*197*FLEN/8, x4, x1, x2)

inst_15558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7800000; valaddr_reg:x3; val_offset:46674*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46674*0 + 3*198*FLEN/8, x4, x1, x2)

inst_15559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7800001; valaddr_reg:x3; val_offset:46677*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46677*0 + 3*199*FLEN/8, x4, x1, x2)

inst_15560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7800003; valaddr_reg:x3; val_offset:46680*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46680*0 + 3*200*FLEN/8, x4, x1, x2)

inst_15561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7800007; valaddr_reg:x3; val_offset:46683*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46683*0 + 3*201*FLEN/8, x4, x1, x2)

inst_15562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf780000f; valaddr_reg:x3; val_offset:46686*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46686*0 + 3*202*FLEN/8, x4, x1, x2)

inst_15563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf780001f; valaddr_reg:x3; val_offset:46689*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46689*0 + 3*203*FLEN/8, x4, x1, x2)

inst_15564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf780003f; valaddr_reg:x3; val_offset:46692*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46692*0 + 3*204*FLEN/8, x4, x1, x2)

inst_15565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf780007f; valaddr_reg:x3; val_offset:46695*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46695*0 + 3*205*FLEN/8, x4, x1, x2)

inst_15566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf78000ff; valaddr_reg:x3; val_offset:46698*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46698*0 + 3*206*FLEN/8, x4, x1, x2)

inst_15567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf78001ff; valaddr_reg:x3; val_offset:46701*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46701*0 + 3*207*FLEN/8, x4, x1, x2)

inst_15568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf78003ff; valaddr_reg:x3; val_offset:46704*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46704*0 + 3*208*FLEN/8, x4, x1, x2)

inst_15569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf78007ff; valaddr_reg:x3; val_offset:46707*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46707*0 + 3*209*FLEN/8, x4, x1, x2)

inst_15570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7800fff; valaddr_reg:x3; val_offset:46710*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46710*0 + 3*210*FLEN/8, x4, x1, x2)

inst_15571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7801fff; valaddr_reg:x3; val_offset:46713*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46713*0 + 3*211*FLEN/8, x4, x1, x2)

inst_15572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7803fff; valaddr_reg:x3; val_offset:46716*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46716*0 + 3*212*FLEN/8, x4, x1, x2)

inst_15573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7807fff; valaddr_reg:x3; val_offset:46719*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46719*0 + 3*213*FLEN/8, x4, x1, x2)

inst_15574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf780ffff; valaddr_reg:x3; val_offset:46722*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46722*0 + 3*214*FLEN/8, x4, x1, x2)

inst_15575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf781ffff; valaddr_reg:x3; val_offset:46725*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46725*0 + 3*215*FLEN/8, x4, x1, x2)

inst_15576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf783ffff; valaddr_reg:x3; val_offset:46728*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46728*0 + 3*216*FLEN/8, x4, x1, x2)

inst_15577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf787ffff; valaddr_reg:x3; val_offset:46731*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46731*0 + 3*217*FLEN/8, x4, x1, x2)

inst_15578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf78fffff; valaddr_reg:x3; val_offset:46734*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46734*0 + 3*218*FLEN/8, x4, x1, x2)

inst_15579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf79fffff; valaddr_reg:x3; val_offset:46737*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46737*0 + 3*219*FLEN/8, x4, x1, x2)

inst_15580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7bfffff; valaddr_reg:x3; val_offset:46740*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46740*0 + 3*220*FLEN/8, x4, x1, x2)

inst_15581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7c00000; valaddr_reg:x3; val_offset:46743*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46743*0 + 3*221*FLEN/8, x4, x1, x2)

inst_15582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7e00000; valaddr_reg:x3; val_offset:46746*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46746*0 + 3*222*FLEN/8, x4, x1, x2)

inst_15583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7f00000; valaddr_reg:x3; val_offset:46749*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46749*0 + 3*223*FLEN/8, x4, x1, x2)

inst_15584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7f80000; valaddr_reg:x3; val_offset:46752*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46752*0 + 3*224*FLEN/8, x4, x1, x2)

inst_15585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fc0000; valaddr_reg:x3; val_offset:46755*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46755*0 + 3*225*FLEN/8, x4, x1, x2)

inst_15586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fe0000; valaddr_reg:x3; val_offset:46758*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46758*0 + 3*226*FLEN/8, x4, x1, x2)

inst_15587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7ff0000; valaddr_reg:x3; val_offset:46761*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46761*0 + 3*227*FLEN/8, x4, x1, x2)

inst_15588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7ff8000; valaddr_reg:x3; val_offset:46764*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46764*0 + 3*228*FLEN/8, x4, x1, x2)

inst_15589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7ffc000; valaddr_reg:x3; val_offset:46767*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46767*0 + 3*229*FLEN/8, x4, x1, x2)

inst_15590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7ffe000; valaddr_reg:x3; val_offset:46770*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46770*0 + 3*230*FLEN/8, x4, x1, x2)

inst_15591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fff000; valaddr_reg:x3; val_offset:46773*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46773*0 + 3*231*FLEN/8, x4, x1, x2)

inst_15592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fff800; valaddr_reg:x3; val_offset:46776*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46776*0 + 3*232*FLEN/8, x4, x1, x2)

inst_15593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fffc00; valaddr_reg:x3; val_offset:46779*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46779*0 + 3*233*FLEN/8, x4, x1, x2)

inst_15594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fffe00; valaddr_reg:x3; val_offset:46782*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46782*0 + 3*234*FLEN/8, x4, x1, x2)

inst_15595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7ffff00; valaddr_reg:x3; val_offset:46785*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46785*0 + 3*235*FLEN/8, x4, x1, x2)

inst_15596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7ffff80; valaddr_reg:x3; val_offset:46788*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46788*0 + 3*236*FLEN/8, x4, x1, x2)

inst_15597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7ffffc0; valaddr_reg:x3; val_offset:46791*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46791*0 + 3*237*FLEN/8, x4, x1, x2)

inst_15598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7ffffe0; valaddr_reg:x3; val_offset:46794*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46794*0 + 3*238*FLEN/8, x4, x1, x2)

inst_15599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fffff0; valaddr_reg:x3; val_offset:46797*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46797*0 + 3*239*FLEN/8, x4, x1, x2)

inst_15600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fffff8; valaddr_reg:x3; val_offset:46800*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46800*0 + 3*240*FLEN/8, x4, x1, x2)

inst_15601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fffffc; valaddr_reg:x3; val_offset:46803*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46803*0 + 3*241*FLEN/8, x4, x1, x2)

inst_15602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7fffffe; valaddr_reg:x3; val_offset:46806*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46806*0 + 3*242*FLEN/8, x4, x1, x2)

inst_15603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xef and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xf7ffffff; valaddr_reg:x3; val_offset:46809*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46809*0 + 3*243*FLEN/8, x4, x1, x2)

inst_15604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff000001; valaddr_reg:x3; val_offset:46812*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46812*0 + 3*244*FLEN/8, x4, x1, x2)

inst_15605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff000003; valaddr_reg:x3; val_offset:46815*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46815*0 + 3*245*FLEN/8, x4, x1, x2)

inst_15606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff000007; valaddr_reg:x3; val_offset:46818*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46818*0 + 3*246*FLEN/8, x4, x1, x2)

inst_15607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff199999; valaddr_reg:x3; val_offset:46821*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46821*0 + 3*247*FLEN/8, x4, x1, x2)

inst_15608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff249249; valaddr_reg:x3; val_offset:46824*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46824*0 + 3*248*FLEN/8, x4, x1, x2)

inst_15609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff333333; valaddr_reg:x3; val_offset:46827*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46827*0 + 3*249*FLEN/8, x4, x1, x2)

inst_15610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:46830*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46830*0 + 3*250*FLEN/8, x4, x1, x2)

inst_15611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:46833*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46833*0 + 3*251*FLEN/8, x4, x1, x2)

inst_15612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff444444; valaddr_reg:x3; val_offset:46836*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46836*0 + 3*252*FLEN/8, x4, x1, x2)

inst_15613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:46839*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46839*0 + 3*253*FLEN/8, x4, x1, x2)

inst_15614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:46842*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46842*0 + 3*254*FLEN/8, x4, x1, x2)

inst_15615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff666666; valaddr_reg:x3; val_offset:46845*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46845*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_15616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:46848*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46848*0 + 3*256*FLEN/8, x4, x1, x2)

inst_15617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:46851*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46851*0 + 3*257*FLEN/8, x4, x1, x2)

inst_15618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:46854*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46854*0 + 3*258*FLEN/8, x4, x1, x2)

inst_15619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c92c3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51483b and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9c92c3; op2val:0xc051483b;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:46857*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46857*0 + 3*259*FLEN/8, x4, x1, x2)

inst_15620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26800000; valaddr_reg:x3; val_offset:46860*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46860*0 + 3*260*FLEN/8, x4, x1, x2)

inst_15621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26800001; valaddr_reg:x3; val_offset:46863*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46863*0 + 3*261*FLEN/8, x4, x1, x2)

inst_15622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26800003; valaddr_reg:x3; val_offset:46866*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46866*0 + 3*262*FLEN/8, x4, x1, x2)

inst_15623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26800007; valaddr_reg:x3; val_offset:46869*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46869*0 + 3*263*FLEN/8, x4, x1, x2)

inst_15624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x2680000f; valaddr_reg:x3; val_offset:46872*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46872*0 + 3*264*FLEN/8, x4, x1, x2)

inst_15625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x2680001f; valaddr_reg:x3; val_offset:46875*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46875*0 + 3*265*FLEN/8, x4, x1, x2)

inst_15626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x2680003f; valaddr_reg:x3; val_offset:46878*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46878*0 + 3*266*FLEN/8, x4, x1, x2)

inst_15627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x2680007f; valaddr_reg:x3; val_offset:46881*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46881*0 + 3*267*FLEN/8, x4, x1, x2)

inst_15628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x268000ff; valaddr_reg:x3; val_offset:46884*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46884*0 + 3*268*FLEN/8, x4, x1, x2)

inst_15629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x268001ff; valaddr_reg:x3; val_offset:46887*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46887*0 + 3*269*FLEN/8, x4, x1, x2)

inst_15630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x268003ff; valaddr_reg:x3; val_offset:46890*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46890*0 + 3*270*FLEN/8, x4, x1, x2)

inst_15631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x268007ff; valaddr_reg:x3; val_offset:46893*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46893*0 + 3*271*FLEN/8, x4, x1, x2)

inst_15632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26800fff; valaddr_reg:x3; val_offset:46896*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46896*0 + 3*272*FLEN/8, x4, x1, x2)

inst_15633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26801fff; valaddr_reg:x3; val_offset:46899*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46899*0 + 3*273*FLEN/8, x4, x1, x2)

inst_15634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26803fff; valaddr_reg:x3; val_offset:46902*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46902*0 + 3*274*FLEN/8, x4, x1, x2)

inst_15635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26807fff; valaddr_reg:x3; val_offset:46905*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46905*0 + 3*275*FLEN/8, x4, x1, x2)

inst_15636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x2680ffff; valaddr_reg:x3; val_offset:46908*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46908*0 + 3*276*FLEN/8, x4, x1, x2)

inst_15637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x2681ffff; valaddr_reg:x3; val_offset:46911*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46911*0 + 3*277*FLEN/8, x4, x1, x2)

inst_15638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x2683ffff; valaddr_reg:x3; val_offset:46914*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46914*0 + 3*278*FLEN/8, x4, x1, x2)

inst_15639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x2687ffff; valaddr_reg:x3; val_offset:46917*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46917*0 + 3*279*FLEN/8, x4, x1, x2)

inst_15640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x268fffff; valaddr_reg:x3; val_offset:46920*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46920*0 + 3*280*FLEN/8, x4, x1, x2)

inst_15641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x269fffff; valaddr_reg:x3; val_offset:46923*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46923*0 + 3*281*FLEN/8, x4, x1, x2)

inst_15642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26bfffff; valaddr_reg:x3; val_offset:46926*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46926*0 + 3*282*FLEN/8, x4, x1, x2)

inst_15643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26c00000; valaddr_reg:x3; val_offset:46929*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46929*0 + 3*283*FLEN/8, x4, x1, x2)

inst_15644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26e00000; valaddr_reg:x3; val_offset:46932*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46932*0 + 3*284*FLEN/8, x4, x1, x2)

inst_15645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26f00000; valaddr_reg:x3; val_offset:46935*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46935*0 + 3*285*FLEN/8, x4, x1, x2)

inst_15646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26f80000; valaddr_reg:x3; val_offset:46938*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46938*0 + 3*286*FLEN/8, x4, x1, x2)

inst_15647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fc0000; valaddr_reg:x3; val_offset:46941*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46941*0 + 3*287*FLEN/8, x4, x1, x2)

inst_15648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fe0000; valaddr_reg:x3; val_offset:46944*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46944*0 + 3*288*FLEN/8, x4, x1, x2)

inst_15649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26ff0000; valaddr_reg:x3; val_offset:46947*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46947*0 + 3*289*FLEN/8, x4, x1, x2)

inst_15650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26ff8000; valaddr_reg:x3; val_offset:46950*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46950*0 + 3*290*FLEN/8, x4, x1, x2)

inst_15651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26ffc000; valaddr_reg:x3; val_offset:46953*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46953*0 + 3*291*FLEN/8, x4, x1, x2)

inst_15652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26ffe000; valaddr_reg:x3; val_offset:46956*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46956*0 + 3*292*FLEN/8, x4, x1, x2)

inst_15653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fff000; valaddr_reg:x3; val_offset:46959*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46959*0 + 3*293*FLEN/8, x4, x1, x2)

inst_15654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fff800; valaddr_reg:x3; val_offset:46962*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46962*0 + 3*294*FLEN/8, x4, x1, x2)

inst_15655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fffc00; valaddr_reg:x3; val_offset:46965*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46965*0 + 3*295*FLEN/8, x4, x1, x2)

inst_15656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fffe00; valaddr_reg:x3; val_offset:46968*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46968*0 + 3*296*FLEN/8, x4, x1, x2)

inst_15657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26ffff00; valaddr_reg:x3; val_offset:46971*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46971*0 + 3*297*FLEN/8, x4, x1, x2)

inst_15658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26ffff80; valaddr_reg:x3; val_offset:46974*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46974*0 + 3*298*FLEN/8, x4, x1, x2)

inst_15659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26ffffc0; valaddr_reg:x3; val_offset:46977*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46977*0 + 3*299*FLEN/8, x4, x1, x2)

inst_15660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26ffffe0; valaddr_reg:x3; val_offset:46980*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46980*0 + 3*300*FLEN/8, x4, x1, x2)

inst_15661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fffff0; valaddr_reg:x3; val_offset:46983*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46983*0 + 3*301*FLEN/8, x4, x1, x2)

inst_15662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fffff8; valaddr_reg:x3; val_offset:46986*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46986*0 + 3*302*FLEN/8, x4, x1, x2)

inst_15663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fffffc; valaddr_reg:x3; val_offset:46989*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46989*0 + 3*303*FLEN/8, x4, x1, x2)

inst_15664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26fffffe; valaddr_reg:x3; val_offset:46992*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46992*0 + 3*304*FLEN/8, x4, x1, x2)

inst_15665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x4d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x26ffffff; valaddr_reg:x3; val_offset:46995*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46995*0 + 3*305*FLEN/8, x4, x1, x2)

inst_15666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3f800001; valaddr_reg:x3; val_offset:46998*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 46998*0 + 3*306*FLEN/8, x4, x1, x2)

inst_15667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3f800003; valaddr_reg:x3; val_offset:47001*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47001*0 + 3*307*FLEN/8, x4, x1, x2)

inst_15668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3f800007; valaddr_reg:x3; val_offset:47004*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47004*0 + 3*308*FLEN/8, x4, x1, x2)

inst_15669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3f999999; valaddr_reg:x3; val_offset:47007*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47007*0 + 3*309*FLEN/8, x4, x1, x2)

inst_15670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:47010*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47010*0 + 3*310*FLEN/8, x4, x1, x2)

inst_15671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:47013*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47013*0 + 3*311*FLEN/8, x4, x1, x2)

inst_15672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:47016*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47016*0 + 3*312*FLEN/8, x4, x1, x2)

inst_15673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:47019*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47019*0 + 3*313*FLEN/8, x4, x1, x2)

inst_15674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:47022*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47022*0 + 3*314*FLEN/8, x4, x1, x2)

inst_15675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:47025*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47025*0 + 3*315*FLEN/8, x4, x1, x2)

inst_15676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:47028*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47028*0 + 3*316*FLEN/8, x4, x1, x2)

inst_15677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:47031*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47031*0 + 3*317*FLEN/8, x4, x1, x2)

inst_15678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:47034*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47034*0 + 3*318*FLEN/8, x4, x1, x2)

inst_15679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:47037*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47037*0 + 3*319*FLEN/8, x4, x1, x2)

inst_15680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:47040*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47040*0 + 3*320*FLEN/8, x4, x1, x2)

inst_15681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x68976f and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ca5c0; op2val:0x68976f;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:47043*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47043*0 + 3*321*FLEN/8, x4, x1, x2)

inst_15682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2000000; valaddr_reg:x3; val_offset:47046*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47046*0 + 3*322*FLEN/8, x4, x1, x2)

inst_15683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2000001; valaddr_reg:x3; val_offset:47049*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47049*0 + 3*323*FLEN/8, x4, x1, x2)

inst_15684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2000003; valaddr_reg:x3; val_offset:47052*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47052*0 + 3*324*FLEN/8, x4, x1, x2)

inst_15685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2000007; valaddr_reg:x3; val_offset:47055*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47055*0 + 3*325*FLEN/8, x4, x1, x2)

inst_15686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa200000f; valaddr_reg:x3; val_offset:47058*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47058*0 + 3*326*FLEN/8, x4, x1, x2)

inst_15687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa200001f; valaddr_reg:x3; val_offset:47061*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47061*0 + 3*327*FLEN/8, x4, x1, x2)

inst_15688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa200003f; valaddr_reg:x3; val_offset:47064*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47064*0 + 3*328*FLEN/8, x4, x1, x2)

inst_15689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa200007f; valaddr_reg:x3; val_offset:47067*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47067*0 + 3*329*FLEN/8, x4, x1, x2)

inst_15690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa20000ff; valaddr_reg:x3; val_offset:47070*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47070*0 + 3*330*FLEN/8, x4, x1, x2)

inst_15691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa20001ff; valaddr_reg:x3; val_offset:47073*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47073*0 + 3*331*FLEN/8, x4, x1, x2)

inst_15692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa20003ff; valaddr_reg:x3; val_offset:47076*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47076*0 + 3*332*FLEN/8, x4, x1, x2)

inst_15693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa20007ff; valaddr_reg:x3; val_offset:47079*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47079*0 + 3*333*FLEN/8, x4, x1, x2)

inst_15694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2000fff; valaddr_reg:x3; val_offset:47082*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47082*0 + 3*334*FLEN/8, x4, x1, x2)

inst_15695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2001fff; valaddr_reg:x3; val_offset:47085*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47085*0 + 3*335*FLEN/8, x4, x1, x2)

inst_15696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2003fff; valaddr_reg:x3; val_offset:47088*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47088*0 + 3*336*FLEN/8, x4, x1, x2)

inst_15697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2007fff; valaddr_reg:x3; val_offset:47091*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47091*0 + 3*337*FLEN/8, x4, x1, x2)

inst_15698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa200ffff; valaddr_reg:x3; val_offset:47094*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47094*0 + 3*338*FLEN/8, x4, x1, x2)

inst_15699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa201ffff; valaddr_reg:x3; val_offset:47097*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47097*0 + 3*339*FLEN/8, x4, x1, x2)

inst_15700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa203ffff; valaddr_reg:x3; val_offset:47100*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47100*0 + 3*340*FLEN/8, x4, x1, x2)

inst_15701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa207ffff; valaddr_reg:x3; val_offset:47103*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47103*0 + 3*341*FLEN/8, x4, x1, x2)

inst_15702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa20fffff; valaddr_reg:x3; val_offset:47106*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47106*0 + 3*342*FLEN/8, x4, x1, x2)

inst_15703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa21fffff; valaddr_reg:x3; val_offset:47109*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47109*0 + 3*343*FLEN/8, x4, x1, x2)

inst_15704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa23fffff; valaddr_reg:x3; val_offset:47112*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47112*0 + 3*344*FLEN/8, x4, x1, x2)

inst_15705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2400000; valaddr_reg:x3; val_offset:47115*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47115*0 + 3*345*FLEN/8, x4, x1, x2)

inst_15706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2600000; valaddr_reg:x3; val_offset:47118*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47118*0 + 3*346*FLEN/8, x4, x1, x2)

inst_15707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2700000; valaddr_reg:x3; val_offset:47121*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47121*0 + 3*347*FLEN/8, x4, x1, x2)

inst_15708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa2780000; valaddr_reg:x3; val_offset:47124*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47124*0 + 3*348*FLEN/8, x4, x1, x2)

inst_15709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27c0000; valaddr_reg:x3; val_offset:47127*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47127*0 + 3*349*FLEN/8, x4, x1, x2)

inst_15710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27e0000; valaddr_reg:x3; val_offset:47130*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47130*0 + 3*350*FLEN/8, x4, x1, x2)

inst_15711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27f0000; valaddr_reg:x3; val_offset:47133*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47133*0 + 3*351*FLEN/8, x4, x1, x2)

inst_15712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27f8000; valaddr_reg:x3; val_offset:47136*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47136*0 + 3*352*FLEN/8, x4, x1, x2)

inst_15713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27fc000; valaddr_reg:x3; val_offset:47139*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47139*0 + 3*353*FLEN/8, x4, x1, x2)

inst_15714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27fe000; valaddr_reg:x3; val_offset:47142*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47142*0 + 3*354*FLEN/8, x4, x1, x2)

inst_15715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27ff000; valaddr_reg:x3; val_offset:47145*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47145*0 + 3*355*FLEN/8, x4, x1, x2)

inst_15716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27ff800; valaddr_reg:x3; val_offset:47148*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47148*0 + 3*356*FLEN/8, x4, x1, x2)

inst_15717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27ffc00; valaddr_reg:x3; val_offset:47151*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47151*0 + 3*357*FLEN/8, x4, x1, x2)

inst_15718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27ffe00; valaddr_reg:x3; val_offset:47154*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47154*0 + 3*358*FLEN/8, x4, x1, x2)

inst_15719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27fff00; valaddr_reg:x3; val_offset:47157*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47157*0 + 3*359*FLEN/8, x4, x1, x2)

inst_15720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27fff80; valaddr_reg:x3; val_offset:47160*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47160*0 + 3*360*FLEN/8, x4, x1, x2)

inst_15721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27fffc0; valaddr_reg:x3; val_offset:47163*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47163*0 + 3*361*FLEN/8, x4, x1, x2)

inst_15722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27fffe0; valaddr_reg:x3; val_offset:47166*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47166*0 + 3*362*FLEN/8, x4, x1, x2)

inst_15723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27ffff0; valaddr_reg:x3; val_offset:47169*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47169*0 + 3*363*FLEN/8, x4, x1, x2)

inst_15724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27ffff8; valaddr_reg:x3; val_offset:47172*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47172*0 + 3*364*FLEN/8, x4, x1, x2)

inst_15725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27ffffc; valaddr_reg:x3; val_offset:47175*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47175*0 + 3*365*FLEN/8, x4, x1, x2)

inst_15726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27ffffe; valaddr_reg:x3; val_offset:47178*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47178*0 + 3*366*FLEN/8, x4, x1, x2)

inst_15727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xa27fffff; valaddr_reg:x3; val_offset:47181*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47181*0 + 3*367*FLEN/8, x4, x1, x2)

inst_15728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbf800001; valaddr_reg:x3; val_offset:47184*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47184*0 + 3*368*FLEN/8, x4, x1, x2)

inst_15729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbf800003; valaddr_reg:x3; val_offset:47187*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47187*0 + 3*369*FLEN/8, x4, x1, x2)

inst_15730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbf800007; valaddr_reg:x3; val_offset:47190*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47190*0 + 3*370*FLEN/8, x4, x1, x2)

inst_15731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbf999999; valaddr_reg:x3; val_offset:47193*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47193*0 + 3*371*FLEN/8, x4, x1, x2)

inst_15732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:47196*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47196*0 + 3*372*FLEN/8, x4, x1, x2)

inst_15733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:47199*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47199*0 + 3*373*FLEN/8, x4, x1, x2)

inst_15734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:47202*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47202*0 + 3*374*FLEN/8, x4, x1, x2)

inst_15735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:47205*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47205*0 + 3*375*FLEN/8, x4, x1, x2)

inst_15736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:47208*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47208*0 + 3*376*FLEN/8, x4, x1, x2)

inst_15737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:47211*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47211*0 + 3*377*FLEN/8, x4, x1, x2)

inst_15738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:47214*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47214*0 + 3*378*FLEN/8, x4, x1, x2)

inst_15739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:47217*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47217*0 + 3*379*FLEN/8, x4, x1, x2)

inst_15740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:47220*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47220*0 + 3*380*FLEN/8, x4, x1, x2)

inst_15741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:47223*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47223*0 + 3*381*FLEN/8, x4, x1, x2)

inst_15742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:47226*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47226*0 + 3*382*FLEN/8, x4, x1, x2)

inst_15743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x682fbd and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d41a9; op2val:0x80682fbd;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:47229*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47229*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_15744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:47232*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47232*0 + 3*384*FLEN/8, x4, x1, x2)

inst_15745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:47235*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47235*0 + 3*385*FLEN/8, x4, x1, x2)

inst_15746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:47238*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47238*0 + 3*386*FLEN/8, x4, x1, x2)

inst_15747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:47241*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47241*0 + 3*387*FLEN/8, x4, x1, x2)

inst_15748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:47244*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47244*0 + 3*388*FLEN/8, x4, x1, x2)

inst_15749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:47247*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47247*0 + 3*389*FLEN/8, x4, x1, x2)

inst_15750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:47250*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47250*0 + 3*390*FLEN/8, x4, x1, x2)

inst_15751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:47253*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47253*0 + 3*391*FLEN/8, x4, x1, x2)

inst_15752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:47256*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47256*0 + 3*392*FLEN/8, x4, x1, x2)

inst_15753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:47259*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47259*0 + 3*393*FLEN/8, x4, x1, x2)

inst_15754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:47262*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47262*0 + 3*394*FLEN/8, x4, x1, x2)

inst_15755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:47265*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47265*0 + 3*395*FLEN/8, x4, x1, x2)

inst_15756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:47268*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47268*0 + 3*396*FLEN/8, x4, x1, x2)

inst_15757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:47271*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47271*0 + 3*397*FLEN/8, x4, x1, x2)

inst_15758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:47274*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47274*0 + 3*398*FLEN/8, x4, x1, x2)

inst_15759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:47277*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47277*0 + 3*399*FLEN/8, x4, x1, x2)

inst_15760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90000000; valaddr_reg:x3; val_offset:47280*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47280*0 + 3*400*FLEN/8, x4, x1, x2)

inst_15761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90000001; valaddr_reg:x3; val_offset:47283*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47283*0 + 3*401*FLEN/8, x4, x1, x2)

inst_15762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90000003; valaddr_reg:x3; val_offset:47286*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47286*0 + 3*402*FLEN/8, x4, x1, x2)

inst_15763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90000007; valaddr_reg:x3; val_offset:47289*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47289*0 + 3*403*FLEN/8, x4, x1, x2)

inst_15764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x9000000f; valaddr_reg:x3; val_offset:47292*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47292*0 + 3*404*FLEN/8, x4, x1, x2)

inst_15765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x9000001f; valaddr_reg:x3; val_offset:47295*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47295*0 + 3*405*FLEN/8, x4, x1, x2)

inst_15766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x9000003f; valaddr_reg:x3; val_offset:47298*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47298*0 + 3*406*FLEN/8, x4, x1, x2)

inst_15767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x9000007f; valaddr_reg:x3; val_offset:47301*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47301*0 + 3*407*FLEN/8, x4, x1, x2)

inst_15768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x900000ff; valaddr_reg:x3; val_offset:47304*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47304*0 + 3*408*FLEN/8, x4, x1, x2)

inst_15769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x900001ff; valaddr_reg:x3; val_offset:47307*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47307*0 + 3*409*FLEN/8, x4, x1, x2)

inst_15770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x900003ff; valaddr_reg:x3; val_offset:47310*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47310*0 + 3*410*FLEN/8, x4, x1, x2)

inst_15771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x900007ff; valaddr_reg:x3; val_offset:47313*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47313*0 + 3*411*FLEN/8, x4, x1, x2)

inst_15772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90000fff; valaddr_reg:x3; val_offset:47316*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47316*0 + 3*412*FLEN/8, x4, x1, x2)

inst_15773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90001fff; valaddr_reg:x3; val_offset:47319*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47319*0 + 3*413*FLEN/8, x4, x1, x2)

inst_15774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90003fff; valaddr_reg:x3; val_offset:47322*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47322*0 + 3*414*FLEN/8, x4, x1, x2)

inst_15775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90007fff; valaddr_reg:x3; val_offset:47325*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47325*0 + 3*415*FLEN/8, x4, x1, x2)

inst_15776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x9000ffff; valaddr_reg:x3; val_offset:47328*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47328*0 + 3*416*FLEN/8, x4, x1, x2)

inst_15777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x9001ffff; valaddr_reg:x3; val_offset:47331*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47331*0 + 3*417*FLEN/8, x4, x1, x2)

inst_15778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x9003ffff; valaddr_reg:x3; val_offset:47334*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47334*0 + 3*418*FLEN/8, x4, x1, x2)

inst_15779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x9007ffff; valaddr_reg:x3; val_offset:47337*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47337*0 + 3*419*FLEN/8, x4, x1, x2)

inst_15780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x900fffff; valaddr_reg:x3; val_offset:47340*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47340*0 + 3*420*FLEN/8, x4, x1, x2)

inst_15781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x901fffff; valaddr_reg:x3; val_offset:47343*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47343*0 + 3*421*FLEN/8, x4, x1, x2)

inst_15782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x903fffff; valaddr_reg:x3; val_offset:47346*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47346*0 + 3*422*FLEN/8, x4, x1, x2)

inst_15783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90400000; valaddr_reg:x3; val_offset:47349*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47349*0 + 3*423*FLEN/8, x4, x1, x2)

inst_15784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90600000; valaddr_reg:x3; val_offset:47352*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47352*0 + 3*424*FLEN/8, x4, x1, x2)

inst_15785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90700000; valaddr_reg:x3; val_offset:47355*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47355*0 + 3*425*FLEN/8, x4, x1, x2)

inst_15786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x90780000; valaddr_reg:x3; val_offset:47358*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47358*0 + 3*426*FLEN/8, x4, x1, x2)

inst_15787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907c0000; valaddr_reg:x3; val_offset:47361*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47361*0 + 3*427*FLEN/8, x4, x1, x2)

inst_15788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907e0000; valaddr_reg:x3; val_offset:47364*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47364*0 + 3*428*FLEN/8, x4, x1, x2)

inst_15789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907f0000; valaddr_reg:x3; val_offset:47367*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47367*0 + 3*429*FLEN/8, x4, x1, x2)

inst_15790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907f8000; valaddr_reg:x3; val_offset:47370*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47370*0 + 3*430*FLEN/8, x4, x1, x2)

inst_15791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907fc000; valaddr_reg:x3; val_offset:47373*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47373*0 + 3*431*FLEN/8, x4, x1, x2)

inst_15792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907fe000; valaddr_reg:x3; val_offset:47376*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47376*0 + 3*432*FLEN/8, x4, x1, x2)

inst_15793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907ff000; valaddr_reg:x3; val_offset:47379*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47379*0 + 3*433*FLEN/8, x4, x1, x2)

inst_15794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907ff800; valaddr_reg:x3; val_offset:47382*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47382*0 + 3*434*FLEN/8, x4, x1, x2)

inst_15795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907ffc00; valaddr_reg:x3; val_offset:47385*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47385*0 + 3*435*FLEN/8, x4, x1, x2)

inst_15796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907ffe00; valaddr_reg:x3; val_offset:47388*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47388*0 + 3*436*FLEN/8, x4, x1, x2)

inst_15797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907fff00; valaddr_reg:x3; val_offset:47391*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47391*0 + 3*437*FLEN/8, x4, x1, x2)

inst_15798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907fff80; valaddr_reg:x3; val_offset:47394*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47394*0 + 3*438*FLEN/8, x4, x1, x2)

inst_15799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907fffc0; valaddr_reg:x3; val_offset:47397*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47397*0 + 3*439*FLEN/8, x4, x1, x2)

inst_15800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907fffe0; valaddr_reg:x3; val_offset:47400*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47400*0 + 3*440*FLEN/8, x4, x1, x2)

inst_15801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907ffff0; valaddr_reg:x3; val_offset:47403*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47403*0 + 3*441*FLEN/8, x4, x1, x2)

inst_15802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907ffff8; valaddr_reg:x3; val_offset:47406*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47406*0 + 3*442*FLEN/8, x4, x1, x2)

inst_15803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907ffffc; valaddr_reg:x3; val_offset:47409*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47409*0 + 3*443*FLEN/8, x4, x1, x2)

inst_15804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907ffffe; valaddr_reg:x3; val_offset:47412*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47412*0 + 3*444*FLEN/8, x4, x1, x2)

inst_15805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9d9e09; op2val:0x80000000;
op3val:0x907fffff; valaddr_reg:x3; val_offset:47415*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47415*0 + 3*445*FLEN/8, x4, x1, x2)

inst_15806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:47418*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47418*0 + 3*446*FLEN/8, x4, x1, x2)

inst_15807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:47421*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47421*0 + 3*447*FLEN/8, x4, x1, x2)

inst_15808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:47424*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47424*0 + 3*448*FLEN/8, x4, x1, x2)

inst_15809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:47427*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47427*0 + 3*449*FLEN/8, x4, x1, x2)

inst_15810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:47430*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47430*0 + 3*450*FLEN/8, x4, x1, x2)

inst_15811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:47433*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47433*0 + 3*451*FLEN/8, x4, x1, x2)

inst_15812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:47436*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47436*0 + 3*452*FLEN/8, x4, x1, x2)

inst_15813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:47439*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47439*0 + 3*453*FLEN/8, x4, x1, x2)

inst_15814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:47442*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47442*0 + 3*454*FLEN/8, x4, x1, x2)

inst_15815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:47445*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47445*0 + 3*455*FLEN/8, x4, x1, x2)

inst_15816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:47448*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47448*0 + 3*456*FLEN/8, x4, x1, x2)

inst_15817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:47451*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47451*0 + 3*457*FLEN/8, x4, x1, x2)

inst_15818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:47454*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47454*0 + 3*458*FLEN/8, x4, x1, x2)

inst_15819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:47457*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47457*0 + 3*459*FLEN/8, x4, x1, x2)

inst_15820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:47460*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47460*0 + 3*460*FLEN/8, x4, x1, x2)

inst_15821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:47463*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47463*0 + 3*461*FLEN/8, x4, x1, x2)

inst_15822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90000000; valaddr_reg:x3; val_offset:47466*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47466*0 + 3*462*FLEN/8, x4, x1, x2)

inst_15823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90000001; valaddr_reg:x3; val_offset:47469*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47469*0 + 3*463*FLEN/8, x4, x1, x2)

inst_15824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90000003; valaddr_reg:x3; val_offset:47472*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47472*0 + 3*464*FLEN/8, x4, x1, x2)

inst_15825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90000007; valaddr_reg:x3; val_offset:47475*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47475*0 + 3*465*FLEN/8, x4, x1, x2)

inst_15826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x9000000f; valaddr_reg:x3; val_offset:47478*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47478*0 + 3*466*FLEN/8, x4, x1, x2)

inst_15827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x9000001f; valaddr_reg:x3; val_offset:47481*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47481*0 + 3*467*FLEN/8, x4, x1, x2)

inst_15828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x9000003f; valaddr_reg:x3; val_offset:47484*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47484*0 + 3*468*FLEN/8, x4, x1, x2)

inst_15829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x9000007f; valaddr_reg:x3; val_offset:47487*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47487*0 + 3*469*FLEN/8, x4, x1, x2)

inst_15830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x900000ff; valaddr_reg:x3; val_offset:47490*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47490*0 + 3*470*FLEN/8, x4, x1, x2)

inst_15831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x900001ff; valaddr_reg:x3; val_offset:47493*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47493*0 + 3*471*FLEN/8, x4, x1, x2)

inst_15832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x900003ff; valaddr_reg:x3; val_offset:47496*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47496*0 + 3*472*FLEN/8, x4, x1, x2)

inst_15833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x900007ff; valaddr_reg:x3; val_offset:47499*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47499*0 + 3*473*FLEN/8, x4, x1, x2)

inst_15834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90000fff; valaddr_reg:x3; val_offset:47502*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47502*0 + 3*474*FLEN/8, x4, x1, x2)

inst_15835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90001fff; valaddr_reg:x3; val_offset:47505*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47505*0 + 3*475*FLEN/8, x4, x1, x2)

inst_15836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90003fff; valaddr_reg:x3; val_offset:47508*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47508*0 + 3*476*FLEN/8, x4, x1, x2)

inst_15837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90007fff; valaddr_reg:x3; val_offset:47511*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47511*0 + 3*477*FLEN/8, x4, x1, x2)

inst_15838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x9000ffff; valaddr_reg:x3; val_offset:47514*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47514*0 + 3*478*FLEN/8, x4, x1, x2)

inst_15839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x9001ffff; valaddr_reg:x3; val_offset:47517*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47517*0 + 3*479*FLEN/8, x4, x1, x2)

inst_15840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x9003ffff; valaddr_reg:x3; val_offset:47520*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47520*0 + 3*480*FLEN/8, x4, x1, x2)

inst_15841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x9007ffff; valaddr_reg:x3; val_offset:47523*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47523*0 + 3*481*FLEN/8, x4, x1, x2)

inst_15842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x900fffff; valaddr_reg:x3; val_offset:47526*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47526*0 + 3*482*FLEN/8, x4, x1, x2)

inst_15843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x901fffff; valaddr_reg:x3; val_offset:47529*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47529*0 + 3*483*FLEN/8, x4, x1, x2)

inst_15844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x903fffff; valaddr_reg:x3; val_offset:47532*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47532*0 + 3*484*FLEN/8, x4, x1, x2)

inst_15845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90400000; valaddr_reg:x3; val_offset:47535*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47535*0 + 3*485*FLEN/8, x4, x1, x2)

inst_15846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90600000; valaddr_reg:x3; val_offset:47538*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47538*0 + 3*486*FLEN/8, x4, x1, x2)

inst_15847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90700000; valaddr_reg:x3; val_offset:47541*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47541*0 + 3*487*FLEN/8, x4, x1, x2)

inst_15848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x90780000; valaddr_reg:x3; val_offset:47544*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47544*0 + 3*488*FLEN/8, x4, x1, x2)

inst_15849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907c0000; valaddr_reg:x3; val_offset:47547*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47547*0 + 3*489*FLEN/8, x4, x1, x2)

inst_15850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907e0000; valaddr_reg:x3; val_offset:47550*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47550*0 + 3*490*FLEN/8, x4, x1, x2)

inst_15851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907f0000; valaddr_reg:x3; val_offset:47553*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47553*0 + 3*491*FLEN/8, x4, x1, x2)

inst_15852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907f8000; valaddr_reg:x3; val_offset:47556*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47556*0 + 3*492*FLEN/8, x4, x1, x2)

inst_15853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907fc000; valaddr_reg:x3; val_offset:47559*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47559*0 + 3*493*FLEN/8, x4, x1, x2)

inst_15854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907fe000; valaddr_reg:x3; val_offset:47562*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47562*0 + 3*494*FLEN/8, x4, x1, x2)

inst_15855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907ff000; valaddr_reg:x3; val_offset:47565*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47565*0 + 3*495*FLEN/8, x4, x1, x2)

inst_15856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907ff800; valaddr_reg:x3; val_offset:47568*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47568*0 + 3*496*FLEN/8, x4, x1, x2)

inst_15857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907ffc00; valaddr_reg:x3; val_offset:47571*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47571*0 + 3*497*FLEN/8, x4, x1, x2)

inst_15858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907ffe00; valaddr_reg:x3; val_offset:47574*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47574*0 + 3*498*FLEN/8, x4, x1, x2)

inst_15859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907fff00; valaddr_reg:x3; val_offset:47577*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47577*0 + 3*499*FLEN/8, x4, x1, x2)

inst_15860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907fff80; valaddr_reg:x3; val_offset:47580*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47580*0 + 3*500*FLEN/8, x4, x1, x2)

inst_15861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907fffc0; valaddr_reg:x3; val_offset:47583*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47583*0 + 3*501*FLEN/8, x4, x1, x2)

inst_15862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907fffe0; valaddr_reg:x3; val_offset:47586*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47586*0 + 3*502*FLEN/8, x4, x1, x2)

inst_15863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907ffff0; valaddr_reg:x3; val_offset:47589*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47589*0 + 3*503*FLEN/8, x4, x1, x2)

inst_15864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907ffff8; valaddr_reg:x3; val_offset:47592*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47592*0 + 3*504*FLEN/8, x4, x1, x2)

inst_15865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907ffffc; valaddr_reg:x3; val_offset:47595*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47595*0 + 3*505*FLEN/8, x4, x1, x2)

inst_15866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907ffffe; valaddr_reg:x3; val_offset:47598*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47598*0 + 3*506*FLEN/8, x4, x1, x2)

inst_15867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e86f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9e86f9; op2val:0x80000000;
op3val:0x907fffff; valaddr_reg:x3; val_offset:47601*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47601*0 + 3*507*FLEN/8, x4, x1, x2)

inst_15868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3800000; valaddr_reg:x3; val_offset:47604*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47604*0 + 3*508*FLEN/8, x4, x1, x2)

inst_15869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3800001; valaddr_reg:x3; val_offset:47607*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47607*0 + 3*509*FLEN/8, x4, x1, x2)

inst_15870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3800003; valaddr_reg:x3; val_offset:47610*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47610*0 + 3*510*FLEN/8, x4, x1, x2)

inst_15871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3800007; valaddr_reg:x3; val_offset:47613*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47613*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_15872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb380000f; valaddr_reg:x3; val_offset:47616*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47616*0 + 3*512*FLEN/8, x4, x1, x2)

inst_15873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb380001f; valaddr_reg:x3; val_offset:47619*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47619*0 + 3*513*FLEN/8, x4, x1, x2)

inst_15874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb380003f; valaddr_reg:x3; val_offset:47622*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47622*0 + 3*514*FLEN/8, x4, x1, x2)

inst_15875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb380007f; valaddr_reg:x3; val_offset:47625*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47625*0 + 3*515*FLEN/8, x4, x1, x2)

inst_15876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb38000ff; valaddr_reg:x3; val_offset:47628*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47628*0 + 3*516*FLEN/8, x4, x1, x2)

inst_15877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb38001ff; valaddr_reg:x3; val_offset:47631*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47631*0 + 3*517*FLEN/8, x4, x1, x2)

inst_15878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb38003ff; valaddr_reg:x3; val_offset:47634*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47634*0 + 3*518*FLEN/8, x4, x1, x2)

inst_15879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb38007ff; valaddr_reg:x3; val_offset:47637*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47637*0 + 3*519*FLEN/8, x4, x1, x2)

inst_15880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3800fff; valaddr_reg:x3; val_offset:47640*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47640*0 + 3*520*FLEN/8, x4, x1, x2)

inst_15881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3801fff; valaddr_reg:x3; val_offset:47643*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47643*0 + 3*521*FLEN/8, x4, x1, x2)

inst_15882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3803fff; valaddr_reg:x3; val_offset:47646*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47646*0 + 3*522*FLEN/8, x4, x1, x2)

inst_15883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3807fff; valaddr_reg:x3; val_offset:47649*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47649*0 + 3*523*FLEN/8, x4, x1, x2)

inst_15884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb380ffff; valaddr_reg:x3; val_offset:47652*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47652*0 + 3*524*FLEN/8, x4, x1, x2)

inst_15885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb381ffff; valaddr_reg:x3; val_offset:47655*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47655*0 + 3*525*FLEN/8, x4, x1, x2)

inst_15886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb383ffff; valaddr_reg:x3; val_offset:47658*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47658*0 + 3*526*FLEN/8, x4, x1, x2)

inst_15887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb387ffff; valaddr_reg:x3; val_offset:47661*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47661*0 + 3*527*FLEN/8, x4, x1, x2)

inst_15888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb38fffff; valaddr_reg:x3; val_offset:47664*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47664*0 + 3*528*FLEN/8, x4, x1, x2)

inst_15889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb39fffff; valaddr_reg:x3; val_offset:47667*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47667*0 + 3*529*FLEN/8, x4, x1, x2)

inst_15890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3bfffff; valaddr_reg:x3; val_offset:47670*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47670*0 + 3*530*FLEN/8, x4, x1, x2)

inst_15891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3c00000; valaddr_reg:x3; val_offset:47673*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47673*0 + 3*531*FLEN/8, x4, x1, x2)

inst_15892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3e00000; valaddr_reg:x3; val_offset:47676*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47676*0 + 3*532*FLEN/8, x4, x1, x2)

inst_15893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3f00000; valaddr_reg:x3; val_offset:47679*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47679*0 + 3*533*FLEN/8, x4, x1, x2)

inst_15894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3f80000; valaddr_reg:x3; val_offset:47682*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47682*0 + 3*534*FLEN/8, x4, x1, x2)

inst_15895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fc0000; valaddr_reg:x3; val_offset:47685*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47685*0 + 3*535*FLEN/8, x4, x1, x2)

inst_15896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fe0000; valaddr_reg:x3; val_offset:47688*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47688*0 + 3*536*FLEN/8, x4, x1, x2)

inst_15897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3ff0000; valaddr_reg:x3; val_offset:47691*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47691*0 + 3*537*FLEN/8, x4, x1, x2)

inst_15898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3ff8000; valaddr_reg:x3; val_offset:47694*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47694*0 + 3*538*FLEN/8, x4, x1, x2)

inst_15899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3ffc000; valaddr_reg:x3; val_offset:47697*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47697*0 + 3*539*FLEN/8, x4, x1, x2)

inst_15900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3ffe000; valaddr_reg:x3; val_offset:47700*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47700*0 + 3*540*FLEN/8, x4, x1, x2)

inst_15901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fff000; valaddr_reg:x3; val_offset:47703*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47703*0 + 3*541*FLEN/8, x4, x1, x2)

inst_15902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fff800; valaddr_reg:x3; val_offset:47706*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47706*0 + 3*542*FLEN/8, x4, x1, x2)

inst_15903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fffc00; valaddr_reg:x3; val_offset:47709*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47709*0 + 3*543*FLEN/8, x4, x1, x2)

inst_15904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fffe00; valaddr_reg:x3; val_offset:47712*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47712*0 + 3*544*FLEN/8, x4, x1, x2)

inst_15905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3ffff00; valaddr_reg:x3; val_offset:47715*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47715*0 + 3*545*FLEN/8, x4, x1, x2)

inst_15906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3ffff80; valaddr_reg:x3; val_offset:47718*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47718*0 + 3*546*FLEN/8, x4, x1, x2)

inst_15907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3ffffc0; valaddr_reg:x3; val_offset:47721*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47721*0 + 3*547*FLEN/8, x4, x1, x2)

inst_15908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3ffffe0; valaddr_reg:x3; val_offset:47724*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47724*0 + 3*548*FLEN/8, x4, x1, x2)

inst_15909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fffff0; valaddr_reg:x3; val_offset:47727*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47727*0 + 3*549*FLEN/8, x4, x1, x2)

inst_15910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fffff8; valaddr_reg:x3; val_offset:47730*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47730*0 + 3*550*FLEN/8, x4, x1, x2)

inst_15911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fffffc; valaddr_reg:x3; val_offset:47733*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47733*0 + 3*551*FLEN/8, x4, x1, x2)

inst_15912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3fffffe; valaddr_reg:x3; val_offset:47736*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47736*0 + 3*552*FLEN/8, x4, x1, x2)

inst_15913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xb3ffffff; valaddr_reg:x3; val_offset:47739*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47739*0 + 3*553*FLEN/8, x4, x1, x2)

inst_15914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbf800001; valaddr_reg:x3; val_offset:47742*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47742*0 + 3*554*FLEN/8, x4, x1, x2)

inst_15915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbf800003; valaddr_reg:x3; val_offset:47745*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47745*0 + 3*555*FLEN/8, x4, x1, x2)

inst_15916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbf800007; valaddr_reg:x3; val_offset:47748*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47748*0 + 3*556*FLEN/8, x4, x1, x2)

inst_15917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbf999999; valaddr_reg:x3; val_offset:47751*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47751*0 + 3*557*FLEN/8, x4, x1, x2)

inst_15918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:47754*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47754*0 + 3*558*FLEN/8, x4, x1, x2)

inst_15919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:47757*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47757*0 + 3*559*FLEN/8, x4, x1, x2)

inst_15920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:47760*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47760*0 + 3*560*FLEN/8, x4, x1, x2)

inst_15921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:47763*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47763*0 + 3*561*FLEN/8, x4, x1, x2)

inst_15922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:47766*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47766*0 + 3*562*FLEN/8, x4, x1, x2)

inst_15923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:47769*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47769*0 + 3*563*FLEN/8, x4, x1, x2)

inst_15924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:47772*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47772*0 + 3*564*FLEN/8, x4, x1, x2)

inst_15925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:47775*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47775*0 + 3*565*FLEN/8, x4, x1, x2)

inst_15926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:47778*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47778*0 + 3*566*FLEN/8, x4, x1, x2)

inst_15927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:47781*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47781*0 + 3*567*FLEN/8, x4, x1, x2)

inst_15928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:47784*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47784*0 + 3*568*FLEN/8, x4, x1, x2)

inst_15929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x671f2a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9ee152; op2val:0x80671f2a;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:47787*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47787*0 + 3*569*FLEN/8, x4, x1, x2)

inst_15930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33000000; valaddr_reg:x3; val_offset:47790*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47790*0 + 3*570*FLEN/8, x4, x1, x2)

inst_15931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33000001; valaddr_reg:x3; val_offset:47793*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47793*0 + 3*571*FLEN/8, x4, x1, x2)

inst_15932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33000003; valaddr_reg:x3; val_offset:47796*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47796*0 + 3*572*FLEN/8, x4, x1, x2)

inst_15933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33000007; valaddr_reg:x3; val_offset:47799*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47799*0 + 3*573*FLEN/8, x4, x1, x2)

inst_15934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3300000f; valaddr_reg:x3; val_offset:47802*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47802*0 + 3*574*FLEN/8, x4, x1, x2)

inst_15935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3300001f; valaddr_reg:x3; val_offset:47805*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47805*0 + 3*575*FLEN/8, x4, x1, x2)

inst_15936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3300003f; valaddr_reg:x3; val_offset:47808*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47808*0 + 3*576*FLEN/8, x4, x1, x2)

inst_15937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3300007f; valaddr_reg:x3; val_offset:47811*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47811*0 + 3*577*FLEN/8, x4, x1, x2)

inst_15938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x330000ff; valaddr_reg:x3; val_offset:47814*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47814*0 + 3*578*FLEN/8, x4, x1, x2)

inst_15939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x330001ff; valaddr_reg:x3; val_offset:47817*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47817*0 + 3*579*FLEN/8, x4, x1, x2)

inst_15940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x330003ff; valaddr_reg:x3; val_offset:47820*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47820*0 + 3*580*FLEN/8, x4, x1, x2)

inst_15941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x330007ff; valaddr_reg:x3; val_offset:47823*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47823*0 + 3*581*FLEN/8, x4, x1, x2)

inst_15942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33000fff; valaddr_reg:x3; val_offset:47826*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47826*0 + 3*582*FLEN/8, x4, x1, x2)

inst_15943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33001fff; valaddr_reg:x3; val_offset:47829*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47829*0 + 3*583*FLEN/8, x4, x1, x2)

inst_15944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33003fff; valaddr_reg:x3; val_offset:47832*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47832*0 + 3*584*FLEN/8, x4, x1, x2)

inst_15945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33007fff; valaddr_reg:x3; val_offset:47835*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47835*0 + 3*585*FLEN/8, x4, x1, x2)

inst_15946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3300ffff; valaddr_reg:x3; val_offset:47838*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47838*0 + 3*586*FLEN/8, x4, x1, x2)

inst_15947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3301ffff; valaddr_reg:x3; val_offset:47841*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47841*0 + 3*587*FLEN/8, x4, x1, x2)

inst_15948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3303ffff; valaddr_reg:x3; val_offset:47844*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47844*0 + 3*588*FLEN/8, x4, x1, x2)

inst_15949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3307ffff; valaddr_reg:x3; val_offset:47847*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47847*0 + 3*589*FLEN/8, x4, x1, x2)

inst_15950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x330fffff; valaddr_reg:x3; val_offset:47850*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47850*0 + 3*590*FLEN/8, x4, x1, x2)

inst_15951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x331fffff; valaddr_reg:x3; val_offset:47853*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47853*0 + 3*591*FLEN/8, x4, x1, x2)

inst_15952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x333fffff; valaddr_reg:x3; val_offset:47856*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47856*0 + 3*592*FLEN/8, x4, x1, x2)

inst_15953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33400000; valaddr_reg:x3; val_offset:47859*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47859*0 + 3*593*FLEN/8, x4, x1, x2)

inst_15954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33600000; valaddr_reg:x3; val_offset:47862*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47862*0 + 3*594*FLEN/8, x4, x1, x2)

inst_15955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33700000; valaddr_reg:x3; val_offset:47865*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47865*0 + 3*595*FLEN/8, x4, x1, x2)

inst_15956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x33780000; valaddr_reg:x3; val_offset:47868*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47868*0 + 3*596*FLEN/8, x4, x1, x2)

inst_15957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337c0000; valaddr_reg:x3; val_offset:47871*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47871*0 + 3*597*FLEN/8, x4, x1, x2)

inst_15958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337e0000; valaddr_reg:x3; val_offset:47874*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47874*0 + 3*598*FLEN/8, x4, x1, x2)

inst_15959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337f0000; valaddr_reg:x3; val_offset:47877*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47877*0 + 3*599*FLEN/8, x4, x1, x2)

inst_15960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337f8000; valaddr_reg:x3; val_offset:47880*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47880*0 + 3*600*FLEN/8, x4, x1, x2)

inst_15961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337fc000; valaddr_reg:x3; val_offset:47883*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47883*0 + 3*601*FLEN/8, x4, x1, x2)

inst_15962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337fe000; valaddr_reg:x3; val_offset:47886*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47886*0 + 3*602*FLEN/8, x4, x1, x2)

inst_15963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337ff000; valaddr_reg:x3; val_offset:47889*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47889*0 + 3*603*FLEN/8, x4, x1, x2)

inst_15964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337ff800; valaddr_reg:x3; val_offset:47892*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47892*0 + 3*604*FLEN/8, x4, x1, x2)

inst_15965:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337ffc00; valaddr_reg:x3; val_offset:47895*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47895*0 + 3*605*FLEN/8, x4, x1, x2)

inst_15966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337ffe00; valaddr_reg:x3; val_offset:47898*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47898*0 + 3*606*FLEN/8, x4, x1, x2)

inst_15967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337fff00; valaddr_reg:x3; val_offset:47901*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47901*0 + 3*607*FLEN/8, x4, x1, x2)

inst_15968:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337fff80; valaddr_reg:x3; val_offset:47904*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47904*0 + 3*608*FLEN/8, x4, x1, x2)

inst_15969:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337fffc0; valaddr_reg:x3; val_offset:47907*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47907*0 + 3*609*FLEN/8, x4, x1, x2)

inst_15970:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337fffe0; valaddr_reg:x3; val_offset:47910*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47910*0 + 3*610*FLEN/8, x4, x1, x2)

inst_15971:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337ffff0; valaddr_reg:x3; val_offset:47913*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47913*0 + 3*611*FLEN/8, x4, x1, x2)

inst_15972:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337ffff8; valaddr_reg:x3; val_offset:47916*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47916*0 + 3*612*FLEN/8, x4, x1, x2)

inst_15973:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337ffffc; valaddr_reg:x3; val_offset:47919*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47919*0 + 3*613*FLEN/8, x4, x1, x2)

inst_15974:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337ffffe; valaddr_reg:x3; val_offset:47922*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47922*0 + 3*614*FLEN/8, x4, x1, x2)

inst_15975:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x337fffff; valaddr_reg:x3; val_offset:47925*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47925*0 + 3*615*FLEN/8, x4, x1, x2)

inst_15976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3f800001; valaddr_reg:x3; val_offset:47928*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47928*0 + 3*616*FLEN/8, x4, x1, x2)

inst_15977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3f800003; valaddr_reg:x3; val_offset:47931*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47931*0 + 3*617*FLEN/8, x4, x1, x2)

inst_15978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3f800007; valaddr_reg:x3; val_offset:47934*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47934*0 + 3*618*FLEN/8, x4, x1, x2)

inst_15979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3f999999; valaddr_reg:x3; val_offset:47937*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47937*0 + 3*619*FLEN/8, x4, x1, x2)

inst_15980:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:47940*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47940*0 + 3*620*FLEN/8, x4, x1, x2)

inst_15981:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:47943*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47943*0 + 3*621*FLEN/8, x4, x1, x2)

inst_15982:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:47946*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47946*0 + 3*622*FLEN/8, x4, x1, x2)

inst_15983:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:47949*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47949*0 + 3*623*FLEN/8, x4, x1, x2)

inst_15984:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:47952*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47952*0 + 3*624*FLEN/8, x4, x1, x2)

inst_15985:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:47955*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47955*0 + 3*625*FLEN/8, x4, x1, x2)

inst_15986:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:47958*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47958*0 + 3*626*FLEN/8, x4, x1, x2)

inst_15987:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:47961*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47961*0 + 3*627*FLEN/8, x4, x1, x2)

inst_15988:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:47964*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47964*0 + 3*628*FLEN/8, x4, x1, x2)

inst_15989:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:47967*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47967*0 + 3*629*FLEN/8, x4, x1, x2)

inst_15990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:47970*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47970*0 + 3*630*FLEN/8, x4, x1, x2)

inst_15991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x66c258 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f70d6; op2val:0x66c258;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:47973*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47973*0 + 3*631*FLEN/8, x4, x1, x2)

inst_15992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:47976*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47976*0 + 3*632*FLEN/8, x4, x1, x2)

inst_15993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:47979*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47979*0 + 3*633*FLEN/8, x4, x1, x2)

inst_15994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:47982*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47982*0 + 3*634*FLEN/8, x4, x1, x2)

inst_15995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:47985*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47985*0 + 3*635*FLEN/8, x4, x1, x2)

inst_15996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:47988*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47988*0 + 3*636*FLEN/8, x4, x1, x2)

inst_15997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:47991*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47991*0 + 3*637*FLEN/8, x4, x1, x2)

inst_15998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:47994*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47994*0 + 3*638*FLEN/8, x4, x1, x2)

inst_15999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:47997*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 47997*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_16000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:48000*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48000*0 + 3*640*FLEN/8, x4, x1, x2)

inst_16001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:48003*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48003*0 + 3*641*FLEN/8, x4, x1, x2)

inst_16002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:48006*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48006*0 + 3*642*FLEN/8, x4, x1, x2)

inst_16003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:48009*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48009*0 + 3*643*FLEN/8, x4, x1, x2)

inst_16004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:48012*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48012*0 + 3*644*FLEN/8, x4, x1, x2)

inst_16005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:48015*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48015*0 + 3*645*FLEN/8, x4, x1, x2)

inst_16006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:48018*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48018*0 + 3*646*FLEN/8, x4, x1, x2)

inst_16007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:48021*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48021*0 + 3*647*FLEN/8, x4, x1, x2)

inst_16008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000000; valaddr_reg:x3; val_offset:48024*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48024*0 + 3*648*FLEN/8, x4, x1, x2)

inst_16009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000001; valaddr_reg:x3; val_offset:48027*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48027*0 + 3*649*FLEN/8, x4, x1, x2)

inst_16010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000003; valaddr_reg:x3; val_offset:48030*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48030*0 + 3*650*FLEN/8, x4, x1, x2)

inst_16011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000007; valaddr_reg:x3; val_offset:48033*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48033*0 + 3*651*FLEN/8, x4, x1, x2)

inst_16012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500000f; valaddr_reg:x3; val_offset:48036*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48036*0 + 3*652*FLEN/8, x4, x1, x2)

inst_16013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500001f; valaddr_reg:x3; val_offset:48039*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48039*0 + 3*653*FLEN/8, x4, x1, x2)

inst_16014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500003f; valaddr_reg:x3; val_offset:48042*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48042*0 + 3*654*FLEN/8, x4, x1, x2)

inst_16015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500007f; valaddr_reg:x3; val_offset:48045*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48045*0 + 3*655*FLEN/8, x4, x1, x2)

inst_16016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250000ff; valaddr_reg:x3; val_offset:48048*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48048*0 + 3*656*FLEN/8, x4, x1, x2)

inst_16017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250001ff; valaddr_reg:x3; val_offset:48051*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48051*0 + 3*657*FLEN/8, x4, x1, x2)

inst_16018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250003ff; valaddr_reg:x3; val_offset:48054*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48054*0 + 3*658*FLEN/8, x4, x1, x2)

inst_16019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250007ff; valaddr_reg:x3; val_offset:48057*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48057*0 + 3*659*FLEN/8, x4, x1, x2)

inst_16020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25000fff; valaddr_reg:x3; val_offset:48060*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48060*0 + 3*660*FLEN/8, x4, x1, x2)

inst_16021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25001fff; valaddr_reg:x3; val_offset:48063*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48063*0 + 3*661*FLEN/8, x4, x1, x2)

inst_16022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25003fff; valaddr_reg:x3; val_offset:48066*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48066*0 + 3*662*FLEN/8, x4, x1, x2)

inst_16023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25007fff; valaddr_reg:x3; val_offset:48069*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48069*0 + 3*663*FLEN/8, x4, x1, x2)

inst_16024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2500ffff; valaddr_reg:x3; val_offset:48072*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48072*0 + 3*664*FLEN/8, x4, x1, x2)

inst_16025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2501ffff; valaddr_reg:x3; val_offset:48075*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48075*0 + 3*665*FLEN/8, x4, x1, x2)

inst_16026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2503ffff; valaddr_reg:x3; val_offset:48078*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48078*0 + 3*666*FLEN/8, x4, x1, x2)

inst_16027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x2507ffff; valaddr_reg:x3; val_offset:48081*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48081*0 + 3*667*FLEN/8, x4, x1, x2)

inst_16028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x250fffff; valaddr_reg:x3; val_offset:48084*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48084*0 + 3*668*FLEN/8, x4, x1, x2)

inst_16029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x251fffff; valaddr_reg:x3; val_offset:48087*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48087*0 + 3*669*FLEN/8, x4, x1, x2)

inst_16030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x253fffff; valaddr_reg:x3; val_offset:48090*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48090*0 + 3*670*FLEN/8, x4, x1, x2)

inst_16031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25400000; valaddr_reg:x3; val_offset:48093*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48093*0 + 3*671*FLEN/8, x4, x1, x2)

inst_16032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25600000; valaddr_reg:x3; val_offset:48096*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48096*0 + 3*672*FLEN/8, x4, x1, x2)

inst_16033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25700000; valaddr_reg:x3; val_offset:48099*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48099*0 + 3*673*FLEN/8, x4, x1, x2)

inst_16034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x25780000; valaddr_reg:x3; val_offset:48102*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48102*0 + 3*674*FLEN/8, x4, x1, x2)

inst_16035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257c0000; valaddr_reg:x3; val_offset:48105*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48105*0 + 3*675*FLEN/8, x4, x1, x2)

inst_16036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257e0000; valaddr_reg:x3; val_offset:48108*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48108*0 + 3*676*FLEN/8, x4, x1, x2)

inst_16037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257f0000; valaddr_reg:x3; val_offset:48111*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48111*0 + 3*677*FLEN/8, x4, x1, x2)

inst_16038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257f8000; valaddr_reg:x3; val_offset:48114*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48114*0 + 3*678*FLEN/8, x4, x1, x2)

inst_16039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fc000; valaddr_reg:x3; val_offset:48117*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48117*0 + 3*679*FLEN/8, x4, x1, x2)

inst_16040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fe000; valaddr_reg:x3; val_offset:48120*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48120*0 + 3*680*FLEN/8, x4, x1, x2)

inst_16041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ff000; valaddr_reg:x3; val_offset:48123*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48123*0 + 3*681*FLEN/8, x4, x1, x2)

inst_16042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ff800; valaddr_reg:x3; val_offset:48126*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48126*0 + 3*682*FLEN/8, x4, x1, x2)

inst_16043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffc00; valaddr_reg:x3; val_offset:48129*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48129*0 + 3*683*FLEN/8, x4, x1, x2)

inst_16044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffe00; valaddr_reg:x3; val_offset:48132*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48132*0 + 3*684*FLEN/8, x4, x1, x2)

inst_16045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fff00; valaddr_reg:x3; val_offset:48135*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48135*0 + 3*685*FLEN/8, x4, x1, x2)

inst_16046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fff80; valaddr_reg:x3; val_offset:48138*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48138*0 + 3*686*FLEN/8, x4, x1, x2)

inst_16047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fffc0; valaddr_reg:x3; val_offset:48141*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48141*0 + 3*687*FLEN/8, x4, x1, x2)

inst_16048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fffe0; valaddr_reg:x3; val_offset:48144*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48144*0 + 3*688*FLEN/8, x4, x1, x2)

inst_16049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffff0; valaddr_reg:x3; val_offset:48147*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48147*0 + 3*689*FLEN/8, x4, x1, x2)

inst_16050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffff8; valaddr_reg:x3; val_offset:48150*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48150*0 + 3*690*FLEN/8, x4, x1, x2)

inst_16051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffffc; valaddr_reg:x3; val_offset:48153*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48153*0 + 3*691*FLEN/8, x4, x1, x2)

inst_16052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257ffffe; valaddr_reg:x3; val_offset:48156*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48156*0 + 3*692*FLEN/8, x4, x1, x2)

inst_16053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f76cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x4a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9f76cd; op2val:0x0;
op3val:0x257fffff; valaddr_reg:x3; val_offset:48159*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48159*0 + 3*693*FLEN/8, x4, x1, x2)

inst_16054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000000; valaddr_reg:x3; val_offset:48162*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48162*0 + 3*694*FLEN/8, x4, x1, x2)

inst_16055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000001; valaddr_reg:x3; val_offset:48165*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48165*0 + 3*695*FLEN/8, x4, x1, x2)

inst_16056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000003; valaddr_reg:x3; val_offset:48168*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48168*0 + 3*696*FLEN/8, x4, x1, x2)

inst_16057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000007; valaddr_reg:x3; val_offset:48171*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48171*0 + 3*697*FLEN/8, x4, x1, x2)

inst_16058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100000f; valaddr_reg:x3; val_offset:48174*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48174*0 + 3*698*FLEN/8, x4, x1, x2)

inst_16059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100001f; valaddr_reg:x3; val_offset:48177*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48177*0 + 3*699*FLEN/8, x4, x1, x2)

inst_16060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100003f; valaddr_reg:x3; val_offset:48180*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48180*0 + 3*700*FLEN/8, x4, x1, x2)

inst_16061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100007f; valaddr_reg:x3; val_offset:48183*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48183*0 + 3*701*FLEN/8, x4, x1, x2)

inst_16062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10000ff; valaddr_reg:x3; val_offset:48186*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48186*0 + 3*702*FLEN/8, x4, x1, x2)

inst_16063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10001ff; valaddr_reg:x3; val_offset:48189*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48189*0 + 3*703*FLEN/8, x4, x1, x2)

inst_16064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10003ff; valaddr_reg:x3; val_offset:48192*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48192*0 + 3*704*FLEN/8, x4, x1, x2)

inst_16065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10007ff; valaddr_reg:x3; val_offset:48195*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48195*0 + 3*705*FLEN/8, x4, x1, x2)

inst_16066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1000fff; valaddr_reg:x3; val_offset:48198*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48198*0 + 3*706*FLEN/8, x4, x1, x2)

inst_16067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1001fff; valaddr_reg:x3; val_offset:48201*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48201*0 + 3*707*FLEN/8, x4, x1, x2)

inst_16068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1003fff; valaddr_reg:x3; val_offset:48204*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48204*0 + 3*708*FLEN/8, x4, x1, x2)

inst_16069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1007fff; valaddr_reg:x3; val_offset:48207*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48207*0 + 3*709*FLEN/8, x4, x1, x2)

inst_16070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa100ffff; valaddr_reg:x3; val_offset:48210*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48210*0 + 3*710*FLEN/8, x4, x1, x2)

inst_16071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa101ffff; valaddr_reg:x3; val_offset:48213*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48213*0 + 3*711*FLEN/8, x4, x1, x2)

inst_16072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa103ffff; valaddr_reg:x3; val_offset:48216*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48216*0 + 3*712*FLEN/8, x4, x1, x2)

inst_16073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa107ffff; valaddr_reg:x3; val_offset:48219*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48219*0 + 3*713*FLEN/8, x4, x1, x2)

inst_16074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa10fffff; valaddr_reg:x3; val_offset:48222*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48222*0 + 3*714*FLEN/8, x4, x1, x2)

inst_16075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa11fffff; valaddr_reg:x3; val_offset:48225*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48225*0 + 3*715*FLEN/8, x4, x1, x2)

inst_16076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa13fffff; valaddr_reg:x3; val_offset:48228*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48228*0 + 3*716*FLEN/8, x4, x1, x2)

inst_16077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1400000; valaddr_reg:x3; val_offset:48231*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48231*0 + 3*717*FLEN/8, x4, x1, x2)

inst_16078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1600000; valaddr_reg:x3; val_offset:48234*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48234*0 + 3*718*FLEN/8, x4, x1, x2)

inst_16079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1700000; valaddr_reg:x3; val_offset:48237*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48237*0 + 3*719*FLEN/8, x4, x1, x2)

inst_16080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa1780000; valaddr_reg:x3; val_offset:48240*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48240*0 + 3*720*FLEN/8, x4, x1, x2)

inst_16081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17c0000; valaddr_reg:x3; val_offset:48243*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48243*0 + 3*721*FLEN/8, x4, x1, x2)

inst_16082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17e0000; valaddr_reg:x3; val_offset:48246*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48246*0 + 3*722*FLEN/8, x4, x1, x2)

inst_16083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17f0000; valaddr_reg:x3; val_offset:48249*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48249*0 + 3*723*FLEN/8, x4, x1, x2)

inst_16084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17f8000; valaddr_reg:x3; val_offset:48252*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48252*0 + 3*724*FLEN/8, x4, x1, x2)

inst_16085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fc000; valaddr_reg:x3; val_offset:48255*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48255*0 + 3*725*FLEN/8, x4, x1, x2)

inst_16086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fe000; valaddr_reg:x3; val_offset:48258*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48258*0 + 3*726*FLEN/8, x4, x1, x2)

inst_16087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ff000; valaddr_reg:x3; val_offset:48261*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48261*0 + 3*727*FLEN/8, x4, x1, x2)

inst_16088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ff800; valaddr_reg:x3; val_offset:48264*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48264*0 + 3*728*FLEN/8, x4, x1, x2)

inst_16089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffc00; valaddr_reg:x3; val_offset:48267*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48267*0 + 3*729*FLEN/8, x4, x1, x2)

inst_16090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffe00; valaddr_reg:x3; val_offset:48270*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48270*0 + 3*730*FLEN/8, x4, x1, x2)

inst_16091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fff00; valaddr_reg:x3; val_offset:48273*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48273*0 + 3*731*FLEN/8, x4, x1, x2)

inst_16092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fff80; valaddr_reg:x3; val_offset:48276*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48276*0 + 3*732*FLEN/8, x4, x1, x2)

inst_16093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fffc0; valaddr_reg:x3; val_offset:48279*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48279*0 + 3*733*FLEN/8, x4, x1, x2)

inst_16094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fffe0; valaddr_reg:x3; val_offset:48282*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48282*0 + 3*734*FLEN/8, x4, x1, x2)

inst_16095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffff0; valaddr_reg:x3; val_offset:48285*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48285*0 + 3*735*FLEN/8, x4, x1, x2)

inst_16096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffff8; valaddr_reg:x3; val_offset:48288*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48288*0 + 3*736*FLEN/8, x4, x1, x2)

inst_16097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffffc; valaddr_reg:x3; val_offset:48291*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48291*0 + 3*737*FLEN/8, x4, x1, x2)

inst_16098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17ffffe; valaddr_reg:x3; val_offset:48294*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48294*0 + 3*738*FLEN/8, x4, x1, x2)

inst_16099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xa17fffff; valaddr_reg:x3; val_offset:48297*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48297*0 + 3*739*FLEN/8, x4, x1, x2)

inst_16100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbf800001; valaddr_reg:x3; val_offset:48300*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48300*0 + 3*740*FLEN/8, x4, x1, x2)

inst_16101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbf800003; valaddr_reg:x3; val_offset:48303*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48303*0 + 3*741*FLEN/8, x4, x1, x2)

inst_16102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbf800007; valaddr_reg:x3; val_offset:48306*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48306*0 + 3*742*FLEN/8, x4, x1, x2)

inst_16103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbf999999; valaddr_reg:x3; val_offset:48309*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48309*0 + 3*743*FLEN/8, x4, x1, x2)

inst_16104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:48312*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48312*0 + 3*744*FLEN/8, x4, x1, x2)

inst_16105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:48315*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48315*0 + 3*745*FLEN/8, x4, x1, x2)

inst_16106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:48318*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48318*0 + 3*746*FLEN/8, x4, x1, x2)

inst_16107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:48321*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48321*0 + 3*747*FLEN/8, x4, x1, x2)

inst_16108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:48324*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48324*0 + 3*748*FLEN/8, x4, x1, x2)

inst_16109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:48327*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48327*0 + 3*749*FLEN/8, x4, x1, x2)

inst_16110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:48330*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48330*0 + 3*750*FLEN/8, x4, x1, x2)

inst_16111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:48333*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48333*0 + 3*751*FLEN/8, x4, x1, x2)

inst_16112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:48336*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48336*0 + 3*752*FLEN/8, x4, x1, x2)

inst_16113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:48339*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48339*0 + 3*753*FLEN/8, x4, x1, x2)

inst_16114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:48342*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48342*0 + 3*754*FLEN/8, x4, x1, x2)

inst_16115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x66575f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea0177e; op2val:0x8066575f;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:48345*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48345*0 + 3*755*FLEN/8, x4, x1, x2)

inst_16116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:48348*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48348*0 + 3*756*FLEN/8, x4, x1, x2)

inst_16117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:48351*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48351*0 + 3*757*FLEN/8, x4, x1, x2)

inst_16118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:48354*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48354*0 + 3*758*FLEN/8, x4, x1, x2)

inst_16119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:48357*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48357*0 + 3*759*FLEN/8, x4, x1, x2)

inst_16120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:48360*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48360*0 + 3*760*FLEN/8, x4, x1, x2)

inst_16121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:48363*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48363*0 + 3*761*FLEN/8, x4, x1, x2)

inst_16122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:48366*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48366*0 + 3*762*FLEN/8, x4, x1, x2)

inst_16123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:48369*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48369*0 + 3*763*FLEN/8, x4, x1, x2)

inst_16124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:48372*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48372*0 + 3*764*FLEN/8, x4, x1, x2)

inst_16125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:48375*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48375*0 + 3*765*FLEN/8, x4, x1, x2)

inst_16126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:48378*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48378*0 + 3*766*FLEN/8, x4, x1, x2)

inst_16127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209877 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea09877; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:48381*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 48381*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2124032232,32,FLEN)
NAN_BOXED(3226767107,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526784,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526785,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526787,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526791,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526799,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526815,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526847,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177526911,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177527039,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177527295,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177527807,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177528831,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177530879,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177534975,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177543167,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177559551,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177592319,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177657855,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4177788927,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4178051071,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4178575359,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4179623935,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4181721087,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4181721088,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4183818240,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4184866816,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185391104,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185653248,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185784320,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185849856,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185882624,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185899008,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185907200,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185911296,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185913344,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185914368,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185914880,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915136,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915264,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915328,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915360,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915376,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915384,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915388,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915390,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4185915391,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2124078673,32,FLEN)
NAN_BOXED(3226703366,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863488,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863489,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863491,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863495,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863503,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863519,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863551,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863615,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863743,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076863999,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076864511,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076865535,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076867583,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076871679,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076879871,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076896255,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076929023,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4076994559,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4077125631,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4077387775,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4077912063,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4078960639,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4081057791,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4081057792,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4083154944,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4084203520,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4084727808,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4084989952,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085121024,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085186560,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085219328,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085235712,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085243904,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085248000,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085250048,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085251072,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085251584,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085251840,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085251968,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252032,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252064,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252080,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252088,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252092,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252094,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4085252095,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2124089848,32,FLEN)
NAN_BOXED(3226688116,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939328,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939329,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939331,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939335,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939343,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939359,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939391,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939455,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939583,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811939839,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811940351,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811941375,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811943423,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811947519,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811955711,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1811972095,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1812004863,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1812070399,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1812201471,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1812463615,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1812987903,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1814036479,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1816133631,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1816133632,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1818230784,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1819279360,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1819803648,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820065792,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820196864,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820262400,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820295168,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820311552,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820319744,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820323840,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820325888,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820326912,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327424,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327680,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327808,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327872,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327904,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327920,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327928,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327932,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327934,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(1820327935,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2124177422,32,FLEN)
NAN_BOXED(1079086104,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152360960,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152360961,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152360963,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152360967,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152360975,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152360991,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152361023,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152361087,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152361215,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152361471,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152361983,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152363007,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152365055,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152369151,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152377343,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152393727,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152426495,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152492031,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152623103,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4152885247,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4153409535,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4154458111,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4156555263,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4156555264,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4158652416,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4159700992,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160225280,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160487424,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160618496,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160684032,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160716800,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160733184,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160741376,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160745472,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160747520,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160748544,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749056,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749312,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749440,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749504,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749536,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749552,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749560,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749564,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749566,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4160749567,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2124190403,32,FLEN)
NAN_BOXED(3226552379,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645922816,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645922817,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645922819,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645922823,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645922831,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645922847,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645922879,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645922943,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645923071,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645923327,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645923839,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645924863,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645926911,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645931007,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645939199,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645955583,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(645988351,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(646053887,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(646184959,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(646447103,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(646971391,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(648019967,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(650117119,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(650117120,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(652214272,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(653262848,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(653787136,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654049280,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654180352,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654245888,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654278656,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654295040,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654303232,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654307328,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654309376,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654310400,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654310912,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654311168,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654311296,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654311360,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654311392,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654311408,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654311416,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654311420,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654311422,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(654311423,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2124195264,32,FLEN)
NAN_BOXED(6854511,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717908992,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717908993,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717908995,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717908999,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717909007,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717909023,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717909055,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717909119,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717909247,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717909503,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717910015,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717911039,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717913087,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717917183,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717925375,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717941759,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2717974527,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2718040063,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2718171135,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2718433279,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2718957567,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2720006143,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2722103295,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2722103296,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2724200448,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2725249024,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2725773312,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726035456,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726166528,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726232064,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726264832,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726281216,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726289408,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726293504,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726295552,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726296576,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297088,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297344,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297472,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297536,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297568,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297584,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297592,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297596,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297598,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(2726297599,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2124235177,32,FLEN)
NAN_BOXED(2154311613,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919104,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919105,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919107,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919111,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919119,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919135,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919167,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919231,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919359,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919615,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415920127,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415921151,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415923199,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415927295,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415935487,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415951871,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415984639,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416050175,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416181247,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416443391,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416967679,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2418016255,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113407,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113408,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2422210560,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423259136,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423783424,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424045568,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424176640,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424242176,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424274944,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424291328,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424299520,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424303616,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424305664,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424306688,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307200,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307456,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307584,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307648,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307680,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307696,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307704,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307708,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307710,32,FLEN)
NAN_BOXED(2124258825,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307711,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919104,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919105,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919107,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919111,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919119,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919135,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919167,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919231,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919359,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919615,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415920127,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415921151,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415923199,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415927295,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415935487,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415951871,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415984639,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416050175,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416181247,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416443391,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416967679,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2418016255,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113407,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113408,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2422210560,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423259136,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423783424,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424045568,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424176640,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424242176,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424274944,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424291328,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424299520,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424303616,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424305664,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424306688,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307200,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307456,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307584,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307648,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307680,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307696,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307704,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307708,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307710,32,FLEN)
NAN_BOXED(2124318457,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307711,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510272,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510273,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510275,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510279,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510287,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510303,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510335,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510399,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510527,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011510783,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011511295,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011512319,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011514367,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011518463,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011526655,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011543039,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011575807,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011641343,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3011772415,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3012034559,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3012558847,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3013607423,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3015704575,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3015704576,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3017801728,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3018850304,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019374592,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019636736,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019767808,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019833344,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019866112,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019882496,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019890688,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019894784,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019896832,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019897856,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898368,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898624,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898752,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898816,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898848,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898864,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898872,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898876,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898878,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3019898879,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2124341586,32,FLEN)
NAN_BOXED(2154241834,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638016,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638017,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638019,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638023,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638031,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638047,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638079,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638143,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638271,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855638527,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855639039,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855640063,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855642111,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855646207,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855654399,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855670783,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855703551,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855769087,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(855900159,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(856162303,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(856686591,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(857735167,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(859832319,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(859832320,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(861929472,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(862978048,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(863502336,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(863764480,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(863895552,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(863961088,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(863993856,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864010240,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864018432,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864022528,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864024576,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864025600,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026112,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026368,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026496,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026560,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026592,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026608,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026616,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026620,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026622,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(864026623,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2124378326,32,FLEN)
NAN_BOXED(6734424,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620756992,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620756993,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620756995,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620756999,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757007,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757023,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757055,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757119,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757247,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620757503,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620758015,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620759039,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620761087,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620765183,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620773375,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620789759,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620822527,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(620888063,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(621019135,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(621281279,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(621805567,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(622854143,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(624951295,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(624951296,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(627048448,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(628097024,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(628621312,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(628883456,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629014528,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629080064,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629112832,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629129216,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629137408,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629141504,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629143552,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629144576,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145088,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145344,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145472,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145536,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145568,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145584,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145592,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145596,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145598,32,FLEN)
NAN_BOXED(2124379853,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(629145599,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131776,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131777,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131779,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131783,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131791,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131807,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131839,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701131903,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701132031,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701132287,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701132799,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701133823,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701135871,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701139967,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701148159,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701164543,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701197311,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701262847,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701393919,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2701656063,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2702180351,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2703228927,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2705326079,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2705326080,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2707423232,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2708471808,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2708996096,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709258240,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709389312,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709454848,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709487616,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709504000,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709512192,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709516288,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709518336,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709519360,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709519872,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520128,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520256,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520320,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520352,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520368,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520376,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520380,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520382,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(2709520383,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2124420990,32,FLEN)
NAN_BOXED(2154190687,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2124454007,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
