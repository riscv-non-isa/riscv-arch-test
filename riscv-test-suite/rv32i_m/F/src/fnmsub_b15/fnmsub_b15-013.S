
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_9216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:27648*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27648*0 + 3*0*FLEN/8, x4, x1, x2)

inst_9217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:27651*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27651*0 + 3*1*FLEN/8, x4, x1, x2)

inst_9218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89800000; valaddr_reg:x3; val_offset:27654*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27654*0 + 3*2*FLEN/8, x4, x1, x2)

inst_9219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89800001; valaddr_reg:x3; val_offset:27657*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27657*0 + 3*3*FLEN/8, x4, x1, x2)

inst_9220:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89800003; valaddr_reg:x3; val_offset:27660*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27660*0 + 3*4*FLEN/8, x4, x1, x2)

inst_9221:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89800007; valaddr_reg:x3; val_offset:27663*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27663*0 + 3*5*FLEN/8, x4, x1, x2)

inst_9222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x8980000f; valaddr_reg:x3; val_offset:27666*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27666*0 + 3*6*FLEN/8, x4, x1, x2)

inst_9223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x8980001f; valaddr_reg:x3; val_offset:27669*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27669*0 + 3*7*FLEN/8, x4, x1, x2)

inst_9224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x8980003f; valaddr_reg:x3; val_offset:27672*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27672*0 + 3*8*FLEN/8, x4, x1, x2)

inst_9225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x8980007f; valaddr_reg:x3; val_offset:27675*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27675*0 + 3*9*FLEN/8, x4, x1, x2)

inst_9226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x898000ff; valaddr_reg:x3; val_offset:27678*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27678*0 + 3*10*FLEN/8, x4, x1, x2)

inst_9227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x898001ff; valaddr_reg:x3; val_offset:27681*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27681*0 + 3*11*FLEN/8, x4, x1, x2)

inst_9228:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x898003ff; valaddr_reg:x3; val_offset:27684*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27684*0 + 3*12*FLEN/8, x4, x1, x2)

inst_9229:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x898007ff; valaddr_reg:x3; val_offset:27687*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27687*0 + 3*13*FLEN/8, x4, x1, x2)

inst_9230:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89800fff; valaddr_reg:x3; val_offset:27690*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27690*0 + 3*14*FLEN/8, x4, x1, x2)

inst_9231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89801fff; valaddr_reg:x3; val_offset:27693*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27693*0 + 3*15*FLEN/8, x4, x1, x2)

inst_9232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89803fff; valaddr_reg:x3; val_offset:27696*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27696*0 + 3*16*FLEN/8, x4, x1, x2)

inst_9233:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89807fff; valaddr_reg:x3; val_offset:27699*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27699*0 + 3*17*FLEN/8, x4, x1, x2)

inst_9234:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x8980ffff; valaddr_reg:x3; val_offset:27702*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27702*0 + 3*18*FLEN/8, x4, x1, x2)

inst_9235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x8981ffff; valaddr_reg:x3; val_offset:27705*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27705*0 + 3*19*FLEN/8, x4, x1, x2)

inst_9236:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x8983ffff; valaddr_reg:x3; val_offset:27708*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27708*0 + 3*20*FLEN/8, x4, x1, x2)

inst_9237:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x8987ffff; valaddr_reg:x3; val_offset:27711*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27711*0 + 3*21*FLEN/8, x4, x1, x2)

inst_9238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x898fffff; valaddr_reg:x3; val_offset:27714*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27714*0 + 3*22*FLEN/8, x4, x1, x2)

inst_9239:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x899fffff; valaddr_reg:x3; val_offset:27717*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27717*0 + 3*23*FLEN/8, x4, x1, x2)

inst_9240:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89bfffff; valaddr_reg:x3; val_offset:27720*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27720*0 + 3*24*FLEN/8, x4, x1, x2)

inst_9241:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89c00000; valaddr_reg:x3; val_offset:27723*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27723*0 + 3*25*FLEN/8, x4, x1, x2)

inst_9242:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89e00000; valaddr_reg:x3; val_offset:27726*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27726*0 + 3*26*FLEN/8, x4, x1, x2)

inst_9243:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89f00000; valaddr_reg:x3; val_offset:27729*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27729*0 + 3*27*FLEN/8, x4, x1, x2)

inst_9244:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89f80000; valaddr_reg:x3; val_offset:27732*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27732*0 + 3*28*FLEN/8, x4, x1, x2)

inst_9245:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fc0000; valaddr_reg:x3; val_offset:27735*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27735*0 + 3*29*FLEN/8, x4, x1, x2)

inst_9246:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fe0000; valaddr_reg:x3; val_offset:27738*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27738*0 + 3*30*FLEN/8, x4, x1, x2)

inst_9247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89ff0000; valaddr_reg:x3; val_offset:27741*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27741*0 + 3*31*FLEN/8, x4, x1, x2)

inst_9248:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89ff8000; valaddr_reg:x3; val_offset:27744*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27744*0 + 3*32*FLEN/8, x4, x1, x2)

inst_9249:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89ffc000; valaddr_reg:x3; val_offset:27747*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27747*0 + 3*33*FLEN/8, x4, x1, x2)

inst_9250:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89ffe000; valaddr_reg:x3; val_offset:27750*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27750*0 + 3*34*FLEN/8, x4, x1, x2)

inst_9251:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fff000; valaddr_reg:x3; val_offset:27753*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27753*0 + 3*35*FLEN/8, x4, x1, x2)

inst_9252:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fff800; valaddr_reg:x3; val_offset:27756*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27756*0 + 3*36*FLEN/8, x4, x1, x2)

inst_9253:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fffc00; valaddr_reg:x3; val_offset:27759*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27759*0 + 3*37*FLEN/8, x4, x1, x2)

inst_9254:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fffe00; valaddr_reg:x3; val_offset:27762*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27762*0 + 3*38*FLEN/8, x4, x1, x2)

inst_9255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89ffff00; valaddr_reg:x3; val_offset:27765*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27765*0 + 3*39*FLEN/8, x4, x1, x2)

inst_9256:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89ffff80; valaddr_reg:x3; val_offset:27768*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27768*0 + 3*40*FLEN/8, x4, x1, x2)

inst_9257:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89ffffc0; valaddr_reg:x3; val_offset:27771*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27771*0 + 3*41*FLEN/8, x4, x1, x2)

inst_9258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89ffffe0; valaddr_reg:x3; val_offset:27774*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27774*0 + 3*42*FLEN/8, x4, x1, x2)

inst_9259:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fffff0; valaddr_reg:x3; val_offset:27777*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27777*0 + 3*43*FLEN/8, x4, x1, x2)

inst_9260:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fffff8; valaddr_reg:x3; val_offset:27780*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27780*0 + 3*44*FLEN/8, x4, x1, x2)

inst_9261:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fffffc; valaddr_reg:x3; val_offset:27783*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27783*0 + 3*45*FLEN/8, x4, x1, x2)

inst_9262:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89fffffe; valaddr_reg:x3; val_offset:27786*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27786*0 + 3*46*FLEN/8, x4, x1, x2)

inst_9263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e39f3eb; op2val:0x80000000;
op3val:0x89ffffff; valaddr_reg:x3; val_offset:27789*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27789*0 + 3*47*FLEN/8, x4, x1, x2)

inst_9264:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:27792*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27792*0 + 3*48*FLEN/8, x4, x1, x2)

inst_9265:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:27795*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27795*0 + 3*49*FLEN/8, x4, x1, x2)

inst_9266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:27798*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27798*0 + 3*50*FLEN/8, x4, x1, x2)

inst_9267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:27801*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27801*0 + 3*51*FLEN/8, x4, x1, x2)

inst_9268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:27804*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27804*0 + 3*52*FLEN/8, x4, x1, x2)

inst_9269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:27807*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27807*0 + 3*53*FLEN/8, x4, x1, x2)

inst_9270:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:27810*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27810*0 + 3*54*FLEN/8, x4, x1, x2)

inst_9271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:27813*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27813*0 + 3*55*FLEN/8, x4, x1, x2)

inst_9272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:27816*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27816*0 + 3*56*FLEN/8, x4, x1, x2)

inst_9273:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:27819*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27819*0 + 3*57*FLEN/8, x4, x1, x2)

inst_9274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:27822*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27822*0 + 3*58*FLEN/8, x4, x1, x2)

inst_9275:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:27825*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27825*0 + 3*59*FLEN/8, x4, x1, x2)

inst_9276:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:27828*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27828*0 + 3*60*FLEN/8, x4, x1, x2)

inst_9277:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:27831*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27831*0 + 3*61*FLEN/8, x4, x1, x2)

inst_9278:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:27834*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27834*0 + 3*62*FLEN/8, x4, x1, x2)

inst_9279:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:27837*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27837*0 + 3*63*FLEN/8, x4, x1, x2)

inst_9280:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f800000; valaddr_reg:x3; val_offset:27840*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27840*0 + 3*64*FLEN/8, x4, x1, x2)

inst_9281:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f800001; valaddr_reg:x3; val_offset:27843*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27843*0 + 3*65*FLEN/8, x4, x1, x2)

inst_9282:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f800003; valaddr_reg:x3; val_offset:27846*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27846*0 + 3*66*FLEN/8, x4, x1, x2)

inst_9283:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f800007; valaddr_reg:x3; val_offset:27849*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27849*0 + 3*67*FLEN/8, x4, x1, x2)

inst_9284:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f80000f; valaddr_reg:x3; val_offset:27852*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27852*0 + 3*68*FLEN/8, x4, x1, x2)

inst_9285:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f80001f; valaddr_reg:x3; val_offset:27855*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27855*0 + 3*69*FLEN/8, x4, x1, x2)

inst_9286:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f80003f; valaddr_reg:x3; val_offset:27858*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27858*0 + 3*70*FLEN/8, x4, x1, x2)

inst_9287:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f80007f; valaddr_reg:x3; val_offset:27861*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27861*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9288:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f8000ff; valaddr_reg:x3; val_offset:27864*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27864*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9289:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f8001ff; valaddr_reg:x3; val_offset:27867*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27867*0 + 3*73*FLEN/8, x4, x1, x2)

inst_9290:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f8003ff; valaddr_reg:x3; val_offset:27870*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27870*0 + 3*74*FLEN/8, x4, x1, x2)

inst_9291:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f8007ff; valaddr_reg:x3; val_offset:27873*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27873*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9292:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f800fff; valaddr_reg:x3; val_offset:27876*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27876*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9293:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f801fff; valaddr_reg:x3; val_offset:27879*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27879*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9294:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f803fff; valaddr_reg:x3; val_offset:27882*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27882*0 + 3*78*FLEN/8, x4, x1, x2)

inst_9295:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f807fff; valaddr_reg:x3; val_offset:27885*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27885*0 + 3*79*FLEN/8, x4, x1, x2)

inst_9296:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f80ffff; valaddr_reg:x3; val_offset:27888*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27888*0 + 3*80*FLEN/8, x4, x1, x2)

inst_9297:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f81ffff; valaddr_reg:x3; val_offset:27891*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27891*0 + 3*81*FLEN/8, x4, x1, x2)

inst_9298:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f83ffff; valaddr_reg:x3; val_offset:27894*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27894*0 + 3*82*FLEN/8, x4, x1, x2)

inst_9299:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f87ffff; valaddr_reg:x3; val_offset:27897*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27897*0 + 3*83*FLEN/8, x4, x1, x2)

inst_9300:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f8fffff; valaddr_reg:x3; val_offset:27900*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27900*0 + 3*84*FLEN/8, x4, x1, x2)

inst_9301:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8f9fffff; valaddr_reg:x3; val_offset:27903*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27903*0 + 3*85*FLEN/8, x4, x1, x2)

inst_9302:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fbfffff; valaddr_reg:x3; val_offset:27906*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27906*0 + 3*86*FLEN/8, x4, x1, x2)

inst_9303:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fc00000; valaddr_reg:x3; val_offset:27909*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27909*0 + 3*87*FLEN/8, x4, x1, x2)

inst_9304:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fe00000; valaddr_reg:x3; val_offset:27912*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27912*0 + 3*88*FLEN/8, x4, x1, x2)

inst_9305:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ff00000; valaddr_reg:x3; val_offset:27915*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27915*0 + 3*89*FLEN/8, x4, x1, x2)

inst_9306:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ff80000; valaddr_reg:x3; val_offset:27918*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27918*0 + 3*90*FLEN/8, x4, x1, x2)

inst_9307:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffc0000; valaddr_reg:x3; val_offset:27921*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27921*0 + 3*91*FLEN/8, x4, x1, x2)

inst_9308:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffe0000; valaddr_reg:x3; val_offset:27924*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27924*0 + 3*92*FLEN/8, x4, x1, x2)

inst_9309:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fff0000; valaddr_reg:x3; val_offset:27927*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27927*0 + 3*93*FLEN/8, x4, x1, x2)

inst_9310:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fff8000; valaddr_reg:x3; val_offset:27930*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27930*0 + 3*94*FLEN/8, x4, x1, x2)

inst_9311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fffc000; valaddr_reg:x3; val_offset:27933*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27933*0 + 3*95*FLEN/8, x4, x1, x2)

inst_9312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fffe000; valaddr_reg:x3; val_offset:27936*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27936*0 + 3*96*FLEN/8, x4, x1, x2)

inst_9313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffff000; valaddr_reg:x3; val_offset:27939*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27939*0 + 3*97*FLEN/8, x4, x1, x2)

inst_9314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffff800; valaddr_reg:x3; val_offset:27942*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27942*0 + 3*98*FLEN/8, x4, x1, x2)

inst_9315:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffffc00; valaddr_reg:x3; val_offset:27945*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27945*0 + 3*99*FLEN/8, x4, x1, x2)

inst_9316:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffffe00; valaddr_reg:x3; val_offset:27948*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27948*0 + 3*100*FLEN/8, x4, x1, x2)

inst_9317:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fffff00; valaddr_reg:x3; val_offset:27951*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27951*0 + 3*101*FLEN/8, x4, x1, x2)

inst_9318:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fffff80; valaddr_reg:x3; val_offset:27954*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27954*0 + 3*102*FLEN/8, x4, x1, x2)

inst_9319:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fffffc0; valaddr_reg:x3; val_offset:27957*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27957*0 + 3*103*FLEN/8, x4, x1, x2)

inst_9320:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fffffe0; valaddr_reg:x3; val_offset:27960*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27960*0 + 3*104*FLEN/8, x4, x1, x2)

inst_9321:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffffff0; valaddr_reg:x3; val_offset:27963*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27963*0 + 3*105*FLEN/8, x4, x1, x2)

inst_9322:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffffff8; valaddr_reg:x3; val_offset:27966*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27966*0 + 3*106*FLEN/8, x4, x1, x2)

inst_9323:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffffffc; valaddr_reg:x3; val_offset:27969*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27969*0 + 3*107*FLEN/8, x4, x1, x2)

inst_9324:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8ffffffe; valaddr_reg:x3; val_offset:27972*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27972*0 + 3*108*FLEN/8, x4, x1, x2)

inst_9325:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3dd8c4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3dd8c4; op2val:0x80000000;
op3val:0x8fffffff; valaddr_reg:x3; val_offset:27975*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27975*0 + 3*109*FLEN/8, x4, x1, x2)

inst_9326:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:27978*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27978*0 + 3*110*FLEN/8, x4, x1, x2)

inst_9327:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:27981*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27981*0 + 3*111*FLEN/8, x4, x1, x2)

inst_9328:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:27984*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27984*0 + 3*112*FLEN/8, x4, x1, x2)

inst_9329:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:27987*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27987*0 + 3*113*FLEN/8, x4, x1, x2)

inst_9330:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:27990*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27990*0 + 3*114*FLEN/8, x4, x1, x2)

inst_9331:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:27993*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27993*0 + 3*115*FLEN/8, x4, x1, x2)

inst_9332:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:27996*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27996*0 + 3*116*FLEN/8, x4, x1, x2)

inst_9333:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:27999*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 27999*0 + 3*117*FLEN/8, x4, x1, x2)

inst_9334:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:28002*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28002*0 + 3*118*FLEN/8, x4, x1, x2)

inst_9335:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:28005*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28005*0 + 3*119*FLEN/8, x4, x1, x2)

inst_9336:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:28008*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28008*0 + 3*120*FLEN/8, x4, x1, x2)

inst_9337:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:28011*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28011*0 + 3*121*FLEN/8, x4, x1, x2)

inst_9338:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:28014*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28014*0 + 3*122*FLEN/8, x4, x1, x2)

inst_9339:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:28017*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28017*0 + 3*123*FLEN/8, x4, x1, x2)

inst_9340:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:28020*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28020*0 + 3*124*FLEN/8, x4, x1, x2)

inst_9341:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:28023*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28023*0 + 3*125*FLEN/8, x4, x1, x2)

inst_9342:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a800000; valaddr_reg:x3; val_offset:28026*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28026*0 + 3*126*FLEN/8, x4, x1, x2)

inst_9343:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a800001; valaddr_reg:x3; val_offset:28029*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28029*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_9344:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a800003; valaddr_reg:x3; val_offset:28032*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28032*0 + 3*128*FLEN/8, x4, x1, x2)

inst_9345:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a800007; valaddr_reg:x3; val_offset:28035*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28035*0 + 3*129*FLEN/8, x4, x1, x2)

inst_9346:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a80000f; valaddr_reg:x3; val_offset:28038*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28038*0 + 3*130*FLEN/8, x4, x1, x2)

inst_9347:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a80001f; valaddr_reg:x3; val_offset:28041*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28041*0 + 3*131*FLEN/8, x4, x1, x2)

inst_9348:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a80003f; valaddr_reg:x3; val_offset:28044*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28044*0 + 3*132*FLEN/8, x4, x1, x2)

inst_9349:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a80007f; valaddr_reg:x3; val_offset:28047*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28047*0 + 3*133*FLEN/8, x4, x1, x2)

inst_9350:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a8000ff; valaddr_reg:x3; val_offset:28050*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28050*0 + 3*134*FLEN/8, x4, x1, x2)

inst_9351:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a8001ff; valaddr_reg:x3; val_offset:28053*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28053*0 + 3*135*FLEN/8, x4, x1, x2)

inst_9352:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a8003ff; valaddr_reg:x3; val_offset:28056*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28056*0 + 3*136*FLEN/8, x4, x1, x2)

inst_9353:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a8007ff; valaddr_reg:x3; val_offset:28059*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28059*0 + 3*137*FLEN/8, x4, x1, x2)

inst_9354:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a800fff; valaddr_reg:x3; val_offset:28062*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28062*0 + 3*138*FLEN/8, x4, x1, x2)

inst_9355:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a801fff; valaddr_reg:x3; val_offset:28065*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28065*0 + 3*139*FLEN/8, x4, x1, x2)

inst_9356:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a803fff; valaddr_reg:x3; val_offset:28068*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28068*0 + 3*140*FLEN/8, x4, x1, x2)

inst_9357:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a807fff; valaddr_reg:x3; val_offset:28071*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28071*0 + 3*141*FLEN/8, x4, x1, x2)

inst_9358:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a80ffff; valaddr_reg:x3; val_offset:28074*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28074*0 + 3*142*FLEN/8, x4, x1, x2)

inst_9359:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a81ffff; valaddr_reg:x3; val_offset:28077*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28077*0 + 3*143*FLEN/8, x4, x1, x2)

inst_9360:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a83ffff; valaddr_reg:x3; val_offset:28080*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28080*0 + 3*144*FLEN/8, x4, x1, x2)

inst_9361:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a87ffff; valaddr_reg:x3; val_offset:28083*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28083*0 + 3*145*FLEN/8, x4, x1, x2)

inst_9362:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a8fffff; valaddr_reg:x3; val_offset:28086*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28086*0 + 3*146*FLEN/8, x4, x1, x2)

inst_9363:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8a9fffff; valaddr_reg:x3; val_offset:28089*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28089*0 + 3*147*FLEN/8, x4, x1, x2)

inst_9364:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8abfffff; valaddr_reg:x3; val_offset:28092*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28092*0 + 3*148*FLEN/8, x4, x1, x2)

inst_9365:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8ac00000; valaddr_reg:x3; val_offset:28095*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28095*0 + 3*149*FLEN/8, x4, x1, x2)

inst_9366:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8ae00000; valaddr_reg:x3; val_offset:28098*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28098*0 + 3*150*FLEN/8, x4, x1, x2)

inst_9367:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8af00000; valaddr_reg:x3; val_offset:28101*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28101*0 + 3*151*FLEN/8, x4, x1, x2)

inst_9368:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8af80000; valaddr_reg:x3; val_offset:28104*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28104*0 + 3*152*FLEN/8, x4, x1, x2)

inst_9369:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afc0000; valaddr_reg:x3; val_offset:28107*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28107*0 + 3*153*FLEN/8, x4, x1, x2)

inst_9370:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afe0000; valaddr_reg:x3; val_offset:28110*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28110*0 + 3*154*FLEN/8, x4, x1, x2)

inst_9371:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8aff0000; valaddr_reg:x3; val_offset:28113*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28113*0 + 3*155*FLEN/8, x4, x1, x2)

inst_9372:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8aff8000; valaddr_reg:x3; val_offset:28116*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28116*0 + 3*156*FLEN/8, x4, x1, x2)

inst_9373:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8affc000; valaddr_reg:x3; val_offset:28119*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28119*0 + 3*157*FLEN/8, x4, x1, x2)

inst_9374:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8affe000; valaddr_reg:x3; val_offset:28122*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28122*0 + 3*158*FLEN/8, x4, x1, x2)

inst_9375:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afff000; valaddr_reg:x3; val_offset:28125*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28125*0 + 3*159*FLEN/8, x4, x1, x2)

inst_9376:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afff800; valaddr_reg:x3; val_offset:28128*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28128*0 + 3*160*FLEN/8, x4, x1, x2)

inst_9377:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afffc00; valaddr_reg:x3; val_offset:28131*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28131*0 + 3*161*FLEN/8, x4, x1, x2)

inst_9378:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afffe00; valaddr_reg:x3; val_offset:28134*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28134*0 + 3*162*FLEN/8, x4, x1, x2)

inst_9379:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8affff00; valaddr_reg:x3; val_offset:28137*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28137*0 + 3*163*FLEN/8, x4, x1, x2)

inst_9380:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8affff80; valaddr_reg:x3; val_offset:28140*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28140*0 + 3*164*FLEN/8, x4, x1, x2)

inst_9381:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8affffc0; valaddr_reg:x3; val_offset:28143*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28143*0 + 3*165*FLEN/8, x4, x1, x2)

inst_9382:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8affffe0; valaddr_reg:x3; val_offset:28146*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28146*0 + 3*166*FLEN/8, x4, x1, x2)

inst_9383:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afffff0; valaddr_reg:x3; val_offset:28149*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28149*0 + 3*167*FLEN/8, x4, x1, x2)

inst_9384:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afffff8; valaddr_reg:x3; val_offset:28152*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28152*0 + 3*168*FLEN/8, x4, x1, x2)

inst_9385:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afffffc; valaddr_reg:x3; val_offset:28155*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28155*0 + 3*169*FLEN/8, x4, x1, x2)

inst_9386:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8afffffe; valaddr_reg:x3; val_offset:28158*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28158*0 + 3*170*FLEN/8, x4, x1, x2)

inst_9387:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x15 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ff954; op2val:0x80000000;
op3val:0x8affffff; valaddr_reg:x3; val_offset:28161*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28161*0 + 3*171*FLEN/8, x4, x1, x2)

inst_9388:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:28164*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28164*0 + 3*172*FLEN/8, x4, x1, x2)

inst_9389:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:28167*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28167*0 + 3*173*FLEN/8, x4, x1, x2)

inst_9390:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:28170*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28170*0 + 3*174*FLEN/8, x4, x1, x2)

inst_9391:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:28173*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28173*0 + 3*175*FLEN/8, x4, x1, x2)

inst_9392:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:28176*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28176*0 + 3*176*FLEN/8, x4, x1, x2)

inst_9393:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:28179*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28179*0 + 3*177*FLEN/8, x4, x1, x2)

inst_9394:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:28182*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28182*0 + 3*178*FLEN/8, x4, x1, x2)

inst_9395:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:28185*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28185*0 + 3*179*FLEN/8, x4, x1, x2)

inst_9396:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:28188*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28188*0 + 3*180*FLEN/8, x4, x1, x2)

inst_9397:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:28191*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28191*0 + 3*181*FLEN/8, x4, x1, x2)

inst_9398:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:28194*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28194*0 + 3*182*FLEN/8, x4, x1, x2)

inst_9399:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:28197*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28197*0 + 3*183*FLEN/8, x4, x1, x2)

inst_9400:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:28200*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28200*0 + 3*184*FLEN/8, x4, x1, x2)

inst_9401:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:28203*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28203*0 + 3*185*FLEN/8, x4, x1, x2)

inst_9402:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:28206*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28206*0 + 3*186*FLEN/8, x4, x1, x2)

inst_9403:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:28209*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28209*0 + 3*187*FLEN/8, x4, x1, x2)

inst_9404:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9800000; valaddr_reg:x3; val_offset:28212*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28212*0 + 3*188*FLEN/8, x4, x1, x2)

inst_9405:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9800001; valaddr_reg:x3; val_offset:28215*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28215*0 + 3*189*FLEN/8, x4, x1, x2)

inst_9406:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9800003; valaddr_reg:x3; val_offset:28218*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28218*0 + 3*190*FLEN/8, x4, x1, x2)

inst_9407:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9800007; valaddr_reg:x3; val_offset:28221*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28221*0 + 3*191*FLEN/8, x4, x1, x2)

inst_9408:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x980000f; valaddr_reg:x3; val_offset:28224*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28224*0 + 3*192*FLEN/8, x4, x1, x2)

inst_9409:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x980001f; valaddr_reg:x3; val_offset:28227*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28227*0 + 3*193*FLEN/8, x4, x1, x2)

inst_9410:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x980003f; valaddr_reg:x3; val_offset:28230*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28230*0 + 3*194*FLEN/8, x4, x1, x2)

inst_9411:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x980007f; valaddr_reg:x3; val_offset:28233*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28233*0 + 3*195*FLEN/8, x4, x1, x2)

inst_9412:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x98000ff; valaddr_reg:x3; val_offset:28236*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28236*0 + 3*196*FLEN/8, x4, x1, x2)

inst_9413:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x98001ff; valaddr_reg:x3; val_offset:28239*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28239*0 + 3*197*FLEN/8, x4, x1, x2)

inst_9414:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x98003ff; valaddr_reg:x3; val_offset:28242*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28242*0 + 3*198*FLEN/8, x4, x1, x2)

inst_9415:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x98007ff; valaddr_reg:x3; val_offset:28245*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28245*0 + 3*199*FLEN/8, x4, x1, x2)

inst_9416:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9800fff; valaddr_reg:x3; val_offset:28248*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28248*0 + 3*200*FLEN/8, x4, x1, x2)

inst_9417:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9801fff; valaddr_reg:x3; val_offset:28251*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28251*0 + 3*201*FLEN/8, x4, x1, x2)

inst_9418:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9803fff; valaddr_reg:x3; val_offset:28254*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28254*0 + 3*202*FLEN/8, x4, x1, x2)

inst_9419:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9807fff; valaddr_reg:x3; val_offset:28257*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28257*0 + 3*203*FLEN/8, x4, x1, x2)

inst_9420:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x980ffff; valaddr_reg:x3; val_offset:28260*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28260*0 + 3*204*FLEN/8, x4, x1, x2)

inst_9421:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x981ffff; valaddr_reg:x3; val_offset:28263*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28263*0 + 3*205*FLEN/8, x4, x1, x2)

inst_9422:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x983ffff; valaddr_reg:x3; val_offset:28266*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28266*0 + 3*206*FLEN/8, x4, x1, x2)

inst_9423:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x987ffff; valaddr_reg:x3; val_offset:28269*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28269*0 + 3*207*FLEN/8, x4, x1, x2)

inst_9424:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x98fffff; valaddr_reg:x3; val_offset:28272*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28272*0 + 3*208*FLEN/8, x4, x1, x2)

inst_9425:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x99fffff; valaddr_reg:x3; val_offset:28275*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28275*0 + 3*209*FLEN/8, x4, x1, x2)

inst_9426:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9bfffff; valaddr_reg:x3; val_offset:28278*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28278*0 + 3*210*FLEN/8, x4, x1, x2)

inst_9427:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9c00000; valaddr_reg:x3; val_offset:28281*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28281*0 + 3*211*FLEN/8, x4, x1, x2)

inst_9428:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9e00000; valaddr_reg:x3; val_offset:28284*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28284*0 + 3*212*FLEN/8, x4, x1, x2)

inst_9429:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9f00000; valaddr_reg:x3; val_offset:28287*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28287*0 + 3*213*FLEN/8, x4, x1, x2)

inst_9430:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9f80000; valaddr_reg:x3; val_offset:28290*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28290*0 + 3*214*FLEN/8, x4, x1, x2)

inst_9431:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fc0000; valaddr_reg:x3; val_offset:28293*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28293*0 + 3*215*FLEN/8, x4, x1, x2)

inst_9432:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fe0000; valaddr_reg:x3; val_offset:28296*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28296*0 + 3*216*FLEN/8, x4, x1, x2)

inst_9433:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9ff0000; valaddr_reg:x3; val_offset:28299*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28299*0 + 3*217*FLEN/8, x4, x1, x2)

inst_9434:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9ff8000; valaddr_reg:x3; val_offset:28302*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28302*0 + 3*218*FLEN/8, x4, x1, x2)

inst_9435:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9ffc000; valaddr_reg:x3; val_offset:28305*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28305*0 + 3*219*FLEN/8, x4, x1, x2)

inst_9436:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9ffe000; valaddr_reg:x3; val_offset:28308*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28308*0 + 3*220*FLEN/8, x4, x1, x2)

inst_9437:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fff000; valaddr_reg:x3; val_offset:28311*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28311*0 + 3*221*FLEN/8, x4, x1, x2)

inst_9438:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fff800; valaddr_reg:x3; val_offset:28314*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28314*0 + 3*222*FLEN/8, x4, x1, x2)

inst_9439:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fffc00; valaddr_reg:x3; val_offset:28317*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28317*0 + 3*223*FLEN/8, x4, x1, x2)

inst_9440:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fffe00; valaddr_reg:x3; val_offset:28320*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28320*0 + 3*224*FLEN/8, x4, x1, x2)

inst_9441:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9ffff00; valaddr_reg:x3; val_offset:28323*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28323*0 + 3*225*FLEN/8, x4, x1, x2)

inst_9442:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9ffff80; valaddr_reg:x3; val_offset:28326*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28326*0 + 3*226*FLEN/8, x4, x1, x2)

inst_9443:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9ffffc0; valaddr_reg:x3; val_offset:28329*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28329*0 + 3*227*FLEN/8, x4, x1, x2)

inst_9444:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9ffffe0; valaddr_reg:x3; val_offset:28332*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28332*0 + 3*228*FLEN/8, x4, x1, x2)

inst_9445:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fffff0; valaddr_reg:x3; val_offset:28335*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28335*0 + 3*229*FLEN/8, x4, x1, x2)

inst_9446:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fffff8; valaddr_reg:x3; val_offset:28338*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28338*0 + 3*230*FLEN/8, x4, x1, x2)

inst_9447:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fffffc; valaddr_reg:x3; val_offset:28341*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28341*0 + 3*231*FLEN/8, x4, x1, x2)

inst_9448:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9fffffe; valaddr_reg:x3; val_offset:28344*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28344*0 + 3*232*FLEN/8, x4, x1, x2)

inst_9449:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b685 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40b685; op2val:0x0;
op3val:0x9ffffff; valaddr_reg:x3; val_offset:28347*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28347*0 + 3*233*FLEN/8, x4, x1, x2)

inst_9450:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b000000; valaddr_reg:x3; val_offset:28350*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28350*0 + 3*234*FLEN/8, x4, x1, x2)

inst_9451:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b000001; valaddr_reg:x3; val_offset:28353*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28353*0 + 3*235*FLEN/8, x4, x1, x2)

inst_9452:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b000003; valaddr_reg:x3; val_offset:28356*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28356*0 + 3*236*FLEN/8, x4, x1, x2)

inst_9453:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b000007; valaddr_reg:x3; val_offset:28359*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28359*0 + 3*237*FLEN/8, x4, x1, x2)

inst_9454:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b00000f; valaddr_reg:x3; val_offset:28362*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28362*0 + 3*238*FLEN/8, x4, x1, x2)

inst_9455:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b00001f; valaddr_reg:x3; val_offset:28365*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28365*0 + 3*239*FLEN/8, x4, x1, x2)

inst_9456:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b00003f; valaddr_reg:x3; val_offset:28368*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28368*0 + 3*240*FLEN/8, x4, x1, x2)

inst_9457:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b00007f; valaddr_reg:x3; val_offset:28371*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28371*0 + 3*241*FLEN/8, x4, x1, x2)

inst_9458:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b0000ff; valaddr_reg:x3; val_offset:28374*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28374*0 + 3*242*FLEN/8, x4, x1, x2)

inst_9459:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b0001ff; valaddr_reg:x3; val_offset:28377*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28377*0 + 3*243*FLEN/8, x4, x1, x2)

inst_9460:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b0003ff; valaddr_reg:x3; val_offset:28380*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28380*0 + 3*244*FLEN/8, x4, x1, x2)

inst_9461:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b0007ff; valaddr_reg:x3; val_offset:28383*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28383*0 + 3*245*FLEN/8, x4, x1, x2)

inst_9462:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b000fff; valaddr_reg:x3; val_offset:28386*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28386*0 + 3*246*FLEN/8, x4, x1, x2)

inst_9463:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b001fff; valaddr_reg:x3; val_offset:28389*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28389*0 + 3*247*FLEN/8, x4, x1, x2)

inst_9464:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b003fff; valaddr_reg:x3; val_offset:28392*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28392*0 + 3*248*FLEN/8, x4, x1, x2)

inst_9465:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b007fff; valaddr_reg:x3; val_offset:28395*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28395*0 + 3*249*FLEN/8, x4, x1, x2)

inst_9466:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b00ffff; valaddr_reg:x3; val_offset:28398*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28398*0 + 3*250*FLEN/8, x4, x1, x2)

inst_9467:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b01ffff; valaddr_reg:x3; val_offset:28401*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28401*0 + 3*251*FLEN/8, x4, x1, x2)

inst_9468:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b03ffff; valaddr_reg:x3; val_offset:28404*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28404*0 + 3*252*FLEN/8, x4, x1, x2)

inst_9469:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b07ffff; valaddr_reg:x3; val_offset:28407*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28407*0 + 3*253*FLEN/8, x4, x1, x2)

inst_9470:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b0fffff; valaddr_reg:x3; val_offset:28410*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28410*0 + 3*254*FLEN/8, x4, x1, x2)

inst_9471:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b1fffff; valaddr_reg:x3; val_offset:28413*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28413*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_9472:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b3fffff; valaddr_reg:x3; val_offset:28416*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28416*0 + 3*256*FLEN/8, x4, x1, x2)

inst_9473:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b400000; valaddr_reg:x3; val_offset:28419*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28419*0 + 3*257*FLEN/8, x4, x1, x2)

inst_9474:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b600000; valaddr_reg:x3; val_offset:28422*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28422*0 + 3*258*FLEN/8, x4, x1, x2)

inst_9475:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b700000; valaddr_reg:x3; val_offset:28425*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28425*0 + 3*259*FLEN/8, x4, x1, x2)

inst_9476:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b780000; valaddr_reg:x3; val_offset:28428*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28428*0 + 3*260*FLEN/8, x4, x1, x2)

inst_9477:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7c0000; valaddr_reg:x3; val_offset:28431*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28431*0 + 3*261*FLEN/8, x4, x1, x2)

inst_9478:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7e0000; valaddr_reg:x3; val_offset:28434*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28434*0 + 3*262*FLEN/8, x4, x1, x2)

inst_9479:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7f0000; valaddr_reg:x3; val_offset:28437*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28437*0 + 3*263*FLEN/8, x4, x1, x2)

inst_9480:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7f8000; valaddr_reg:x3; val_offset:28440*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28440*0 + 3*264*FLEN/8, x4, x1, x2)

inst_9481:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7fc000; valaddr_reg:x3; val_offset:28443*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28443*0 + 3*265*FLEN/8, x4, x1, x2)

inst_9482:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7fe000; valaddr_reg:x3; val_offset:28446*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28446*0 + 3*266*FLEN/8, x4, x1, x2)

inst_9483:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7ff000; valaddr_reg:x3; val_offset:28449*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28449*0 + 3*267*FLEN/8, x4, x1, x2)

inst_9484:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7ff800; valaddr_reg:x3; val_offset:28452*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28452*0 + 3*268*FLEN/8, x4, x1, x2)

inst_9485:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7ffc00; valaddr_reg:x3; val_offset:28455*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28455*0 + 3*269*FLEN/8, x4, x1, x2)

inst_9486:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7ffe00; valaddr_reg:x3; val_offset:28458*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28458*0 + 3*270*FLEN/8, x4, x1, x2)

inst_9487:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7fff00; valaddr_reg:x3; val_offset:28461*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28461*0 + 3*271*FLEN/8, x4, x1, x2)

inst_9488:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7fff80; valaddr_reg:x3; val_offset:28464*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28464*0 + 3*272*FLEN/8, x4, x1, x2)

inst_9489:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7fffc0; valaddr_reg:x3; val_offset:28467*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28467*0 + 3*273*FLEN/8, x4, x1, x2)

inst_9490:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7fffe0; valaddr_reg:x3; val_offset:28470*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28470*0 + 3*274*FLEN/8, x4, x1, x2)

inst_9491:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7ffff0; valaddr_reg:x3; val_offset:28473*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28473*0 + 3*275*FLEN/8, x4, x1, x2)

inst_9492:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7ffff8; valaddr_reg:x3; val_offset:28476*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28476*0 + 3*276*FLEN/8, x4, x1, x2)

inst_9493:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7ffffc; valaddr_reg:x3; val_offset:28479*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28479*0 + 3*277*FLEN/8, x4, x1, x2)

inst_9494:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7ffffe; valaddr_reg:x3; val_offset:28482*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28482*0 + 3*278*FLEN/8, x4, x1, x2)

inst_9495:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3b7fffff; valaddr_reg:x3; val_offset:28485*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28485*0 + 3*279*FLEN/8, x4, x1, x2)

inst_9496:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3f800001; valaddr_reg:x3; val_offset:28488*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28488*0 + 3*280*FLEN/8, x4, x1, x2)

inst_9497:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3f800003; valaddr_reg:x3; val_offset:28491*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28491*0 + 3*281*FLEN/8, x4, x1, x2)

inst_9498:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3f800007; valaddr_reg:x3; val_offset:28494*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28494*0 + 3*282*FLEN/8, x4, x1, x2)

inst_9499:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3f999999; valaddr_reg:x3; val_offset:28497*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28497*0 + 3*283*FLEN/8, x4, x1, x2)

inst_9500:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:28500*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28500*0 + 3*284*FLEN/8, x4, x1, x2)

inst_9501:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:28503*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28503*0 + 3*285*FLEN/8, x4, x1, x2)

inst_9502:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:28506*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28506*0 + 3*286*FLEN/8, x4, x1, x2)

inst_9503:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:28509*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28509*0 + 3*287*FLEN/8, x4, x1, x2)

inst_9504:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:28512*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28512*0 + 3*288*FLEN/8, x4, x1, x2)

inst_9505:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:28515*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28515*0 + 3*289*FLEN/8, x4, x1, x2)

inst_9506:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:28518*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28518*0 + 3*290*FLEN/8, x4, x1, x2)

inst_9507:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:28521*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28521*0 + 3*291*FLEN/8, x4, x1, x2)

inst_9508:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:28524*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28524*0 + 3*292*FLEN/8, x4, x1, x2)

inst_9509:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:28527*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28527*0 + 3*293*FLEN/8, x4, x1, x2)

inst_9510:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:28530*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28530*0 + 3*294*FLEN/8, x4, x1, x2)

inst_9511:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x29e769 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40dca5; op2val:0xa9e769;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:28533*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28533*0 + 3*295*FLEN/8, x4, x1, x2)

inst_9512:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5800000; valaddr_reg:x3; val_offset:28536*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28536*0 + 3*296*FLEN/8, x4, x1, x2)

inst_9513:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5800001; valaddr_reg:x3; val_offset:28539*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28539*0 + 3*297*FLEN/8, x4, x1, x2)

inst_9514:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5800003; valaddr_reg:x3; val_offset:28542*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28542*0 + 3*298*FLEN/8, x4, x1, x2)

inst_9515:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5800007; valaddr_reg:x3; val_offset:28545*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28545*0 + 3*299*FLEN/8, x4, x1, x2)

inst_9516:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb580000f; valaddr_reg:x3; val_offset:28548*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28548*0 + 3*300*FLEN/8, x4, x1, x2)

inst_9517:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb580001f; valaddr_reg:x3; val_offset:28551*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28551*0 + 3*301*FLEN/8, x4, x1, x2)

inst_9518:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb580003f; valaddr_reg:x3; val_offset:28554*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28554*0 + 3*302*FLEN/8, x4, x1, x2)

inst_9519:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb580007f; valaddr_reg:x3; val_offset:28557*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28557*0 + 3*303*FLEN/8, x4, x1, x2)

inst_9520:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb58000ff; valaddr_reg:x3; val_offset:28560*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28560*0 + 3*304*FLEN/8, x4, x1, x2)

inst_9521:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb58001ff; valaddr_reg:x3; val_offset:28563*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28563*0 + 3*305*FLEN/8, x4, x1, x2)

inst_9522:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb58003ff; valaddr_reg:x3; val_offset:28566*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28566*0 + 3*306*FLEN/8, x4, x1, x2)

inst_9523:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb58007ff; valaddr_reg:x3; val_offset:28569*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28569*0 + 3*307*FLEN/8, x4, x1, x2)

inst_9524:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5800fff; valaddr_reg:x3; val_offset:28572*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28572*0 + 3*308*FLEN/8, x4, x1, x2)

inst_9525:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5801fff; valaddr_reg:x3; val_offset:28575*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28575*0 + 3*309*FLEN/8, x4, x1, x2)

inst_9526:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5803fff; valaddr_reg:x3; val_offset:28578*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28578*0 + 3*310*FLEN/8, x4, x1, x2)

inst_9527:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5807fff; valaddr_reg:x3; val_offset:28581*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28581*0 + 3*311*FLEN/8, x4, x1, x2)

inst_9528:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb580ffff; valaddr_reg:x3; val_offset:28584*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28584*0 + 3*312*FLEN/8, x4, x1, x2)

inst_9529:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb581ffff; valaddr_reg:x3; val_offset:28587*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28587*0 + 3*313*FLEN/8, x4, x1, x2)

inst_9530:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb583ffff; valaddr_reg:x3; val_offset:28590*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28590*0 + 3*314*FLEN/8, x4, x1, x2)

inst_9531:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb587ffff; valaddr_reg:x3; val_offset:28593*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28593*0 + 3*315*FLEN/8, x4, x1, x2)

inst_9532:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb58fffff; valaddr_reg:x3; val_offset:28596*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28596*0 + 3*316*FLEN/8, x4, x1, x2)

inst_9533:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb59fffff; valaddr_reg:x3; val_offset:28599*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28599*0 + 3*317*FLEN/8, x4, x1, x2)

inst_9534:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5bfffff; valaddr_reg:x3; val_offset:28602*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28602*0 + 3*318*FLEN/8, x4, x1, x2)

inst_9535:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5c00000; valaddr_reg:x3; val_offset:28605*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28605*0 + 3*319*FLEN/8, x4, x1, x2)

inst_9536:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5e00000; valaddr_reg:x3; val_offset:28608*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28608*0 + 3*320*FLEN/8, x4, x1, x2)

inst_9537:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5f00000; valaddr_reg:x3; val_offset:28611*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28611*0 + 3*321*FLEN/8, x4, x1, x2)

inst_9538:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5f80000; valaddr_reg:x3; val_offset:28614*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28614*0 + 3*322*FLEN/8, x4, x1, x2)

inst_9539:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fc0000; valaddr_reg:x3; val_offset:28617*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28617*0 + 3*323*FLEN/8, x4, x1, x2)

inst_9540:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fe0000; valaddr_reg:x3; val_offset:28620*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28620*0 + 3*324*FLEN/8, x4, x1, x2)

inst_9541:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5ff0000; valaddr_reg:x3; val_offset:28623*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28623*0 + 3*325*FLEN/8, x4, x1, x2)

inst_9542:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5ff8000; valaddr_reg:x3; val_offset:28626*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28626*0 + 3*326*FLEN/8, x4, x1, x2)

inst_9543:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5ffc000; valaddr_reg:x3; val_offset:28629*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28629*0 + 3*327*FLEN/8, x4, x1, x2)

inst_9544:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5ffe000; valaddr_reg:x3; val_offset:28632*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28632*0 + 3*328*FLEN/8, x4, x1, x2)

inst_9545:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fff000; valaddr_reg:x3; val_offset:28635*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28635*0 + 3*329*FLEN/8, x4, x1, x2)

inst_9546:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fff800; valaddr_reg:x3; val_offset:28638*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28638*0 + 3*330*FLEN/8, x4, x1, x2)

inst_9547:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fffc00; valaddr_reg:x3; val_offset:28641*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28641*0 + 3*331*FLEN/8, x4, x1, x2)

inst_9548:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fffe00; valaddr_reg:x3; val_offset:28644*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28644*0 + 3*332*FLEN/8, x4, x1, x2)

inst_9549:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5ffff00; valaddr_reg:x3; val_offset:28647*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28647*0 + 3*333*FLEN/8, x4, x1, x2)

inst_9550:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5ffff80; valaddr_reg:x3; val_offset:28650*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28650*0 + 3*334*FLEN/8, x4, x1, x2)

inst_9551:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5ffffc0; valaddr_reg:x3; val_offset:28653*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28653*0 + 3*335*FLEN/8, x4, x1, x2)

inst_9552:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5ffffe0; valaddr_reg:x3; val_offset:28656*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28656*0 + 3*336*FLEN/8, x4, x1, x2)

inst_9553:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fffff0; valaddr_reg:x3; val_offset:28659*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28659*0 + 3*337*FLEN/8, x4, x1, x2)

inst_9554:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fffff8; valaddr_reg:x3; val_offset:28662*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28662*0 + 3*338*FLEN/8, x4, x1, x2)

inst_9555:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fffffc; valaddr_reg:x3; val_offset:28665*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28665*0 + 3*339*FLEN/8, x4, x1, x2)

inst_9556:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5fffffe; valaddr_reg:x3; val_offset:28668*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28668*0 + 3*340*FLEN/8, x4, x1, x2)

inst_9557:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x6b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xb5ffffff; valaddr_reg:x3; val_offset:28671*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28671*0 + 3*341*FLEN/8, x4, x1, x2)

inst_9558:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbf800001; valaddr_reg:x3; val_offset:28674*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28674*0 + 3*342*FLEN/8, x4, x1, x2)

inst_9559:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbf800003; valaddr_reg:x3; val_offset:28677*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28677*0 + 3*343*FLEN/8, x4, x1, x2)

inst_9560:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbf800007; valaddr_reg:x3; val_offset:28680*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28680*0 + 3*344*FLEN/8, x4, x1, x2)

inst_9561:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbf999999; valaddr_reg:x3; val_offset:28683*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28683*0 + 3*345*FLEN/8, x4, x1, x2)

inst_9562:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:28686*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28686*0 + 3*346*FLEN/8, x4, x1, x2)

inst_9563:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:28689*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28689*0 + 3*347*FLEN/8, x4, x1, x2)

inst_9564:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:28692*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28692*0 + 3*348*FLEN/8, x4, x1, x2)

inst_9565:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:28695*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28695*0 + 3*349*FLEN/8, x4, x1, x2)

inst_9566:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:28698*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28698*0 + 3*350*FLEN/8, x4, x1, x2)

inst_9567:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:28701*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28701*0 + 3*351*FLEN/8, x4, x1, x2)

inst_9568:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:28704*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28704*0 + 3*352*FLEN/8, x4, x1, x2)

inst_9569:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:28707*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28707*0 + 3*353*FLEN/8, x4, x1, x2)

inst_9570:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:28710*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28710*0 + 3*354*FLEN/8, x4, x1, x2)

inst_9571:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:28713*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28713*0 + 3*355*FLEN/8, x4, x1, x2)

inst_9572:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:28716*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28716*0 + 3*356*FLEN/8, x4, x1, x2)

inst_9573:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x01 and fm2 == 0x28fe65 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41e692; op2val:0x80a8fe65;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:28719*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28719*0 + 3*357*FLEN/8, x4, x1, x2)

inst_9574:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:28722*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28722*0 + 3*358*FLEN/8, x4, x1, x2)

inst_9575:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:28725*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28725*0 + 3*359*FLEN/8, x4, x1, x2)

inst_9576:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:28728*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28728*0 + 3*360*FLEN/8, x4, x1, x2)

inst_9577:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:28731*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28731*0 + 3*361*FLEN/8, x4, x1, x2)

inst_9578:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:28734*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28734*0 + 3*362*FLEN/8, x4, x1, x2)

inst_9579:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:28737*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28737*0 + 3*363*FLEN/8, x4, x1, x2)

inst_9580:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:28740*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28740*0 + 3*364*FLEN/8, x4, x1, x2)

inst_9581:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:28743*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28743*0 + 3*365*FLEN/8, x4, x1, x2)

inst_9582:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:28746*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28746*0 + 3*366*FLEN/8, x4, x1, x2)

inst_9583:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:28749*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28749*0 + 3*367*FLEN/8, x4, x1, x2)

inst_9584:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:28752*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28752*0 + 3*368*FLEN/8, x4, x1, x2)

inst_9585:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:28755*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28755*0 + 3*369*FLEN/8, x4, x1, x2)

inst_9586:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:28758*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28758*0 + 3*370*FLEN/8, x4, x1, x2)

inst_9587:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:28761*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28761*0 + 3*371*FLEN/8, x4, x1, x2)

inst_9588:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:28764*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28764*0 + 3*372*FLEN/8, x4, x1, x2)

inst_9589:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:28767*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28767*0 + 3*373*FLEN/8, x4, x1, x2)

inst_9590:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e000000; valaddr_reg:x3; val_offset:28770*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28770*0 + 3*374*FLEN/8, x4, x1, x2)

inst_9591:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e000001; valaddr_reg:x3; val_offset:28773*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28773*0 + 3*375*FLEN/8, x4, x1, x2)

inst_9592:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e000003; valaddr_reg:x3; val_offset:28776*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28776*0 + 3*376*FLEN/8, x4, x1, x2)

inst_9593:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e000007; valaddr_reg:x3; val_offset:28779*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28779*0 + 3*377*FLEN/8, x4, x1, x2)

inst_9594:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e00000f; valaddr_reg:x3; val_offset:28782*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28782*0 + 3*378*FLEN/8, x4, x1, x2)

inst_9595:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e00001f; valaddr_reg:x3; val_offset:28785*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28785*0 + 3*379*FLEN/8, x4, x1, x2)

inst_9596:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e00003f; valaddr_reg:x3; val_offset:28788*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28788*0 + 3*380*FLEN/8, x4, x1, x2)

inst_9597:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e00007f; valaddr_reg:x3; val_offset:28791*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28791*0 + 3*381*FLEN/8, x4, x1, x2)

inst_9598:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e0000ff; valaddr_reg:x3; val_offset:28794*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28794*0 + 3*382*FLEN/8, x4, x1, x2)

inst_9599:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e0001ff; valaddr_reg:x3; val_offset:28797*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28797*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_9600:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e0003ff; valaddr_reg:x3; val_offset:28800*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28800*0 + 3*384*FLEN/8, x4, x1, x2)

inst_9601:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e0007ff; valaddr_reg:x3; val_offset:28803*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28803*0 + 3*385*FLEN/8, x4, x1, x2)

inst_9602:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e000fff; valaddr_reg:x3; val_offset:28806*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28806*0 + 3*386*FLEN/8, x4, x1, x2)

inst_9603:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e001fff; valaddr_reg:x3; val_offset:28809*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28809*0 + 3*387*FLEN/8, x4, x1, x2)

inst_9604:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e003fff; valaddr_reg:x3; val_offset:28812*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28812*0 + 3*388*FLEN/8, x4, x1, x2)

inst_9605:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e007fff; valaddr_reg:x3; val_offset:28815*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28815*0 + 3*389*FLEN/8, x4, x1, x2)

inst_9606:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e00ffff; valaddr_reg:x3; val_offset:28818*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28818*0 + 3*390*FLEN/8, x4, x1, x2)

inst_9607:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e01ffff; valaddr_reg:x3; val_offset:28821*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28821*0 + 3*391*FLEN/8, x4, x1, x2)

inst_9608:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e03ffff; valaddr_reg:x3; val_offset:28824*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28824*0 + 3*392*FLEN/8, x4, x1, x2)

inst_9609:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e07ffff; valaddr_reg:x3; val_offset:28827*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28827*0 + 3*393*FLEN/8, x4, x1, x2)

inst_9610:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e0fffff; valaddr_reg:x3; val_offset:28830*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28830*0 + 3*394*FLEN/8, x4, x1, x2)

inst_9611:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e1fffff; valaddr_reg:x3; val_offset:28833*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28833*0 + 3*395*FLEN/8, x4, x1, x2)

inst_9612:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e3fffff; valaddr_reg:x3; val_offset:28836*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28836*0 + 3*396*FLEN/8, x4, x1, x2)

inst_9613:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e400000; valaddr_reg:x3; val_offset:28839*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28839*0 + 3*397*FLEN/8, x4, x1, x2)

inst_9614:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e600000; valaddr_reg:x3; val_offset:28842*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28842*0 + 3*398*FLEN/8, x4, x1, x2)

inst_9615:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e700000; valaddr_reg:x3; val_offset:28845*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28845*0 + 3*399*FLEN/8, x4, x1, x2)

inst_9616:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e780000; valaddr_reg:x3; val_offset:28848*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28848*0 + 3*400*FLEN/8, x4, x1, x2)

inst_9617:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7c0000; valaddr_reg:x3; val_offset:28851*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28851*0 + 3*401*FLEN/8, x4, x1, x2)

inst_9618:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7e0000; valaddr_reg:x3; val_offset:28854*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28854*0 + 3*402*FLEN/8, x4, x1, x2)

inst_9619:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7f0000; valaddr_reg:x3; val_offset:28857*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28857*0 + 3*403*FLEN/8, x4, x1, x2)

inst_9620:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7f8000; valaddr_reg:x3; val_offset:28860*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28860*0 + 3*404*FLEN/8, x4, x1, x2)

inst_9621:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fc000; valaddr_reg:x3; val_offset:28863*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28863*0 + 3*405*FLEN/8, x4, x1, x2)

inst_9622:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fe000; valaddr_reg:x3; val_offset:28866*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28866*0 + 3*406*FLEN/8, x4, x1, x2)

inst_9623:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ff000; valaddr_reg:x3; val_offset:28869*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28869*0 + 3*407*FLEN/8, x4, x1, x2)

inst_9624:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ff800; valaddr_reg:x3; val_offset:28872*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28872*0 + 3*408*FLEN/8, x4, x1, x2)

inst_9625:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffc00; valaddr_reg:x3; val_offset:28875*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28875*0 + 3*409*FLEN/8, x4, x1, x2)

inst_9626:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffe00; valaddr_reg:x3; val_offset:28878*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28878*0 + 3*410*FLEN/8, x4, x1, x2)

inst_9627:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fff00; valaddr_reg:x3; val_offset:28881*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28881*0 + 3*411*FLEN/8, x4, x1, x2)

inst_9628:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fff80; valaddr_reg:x3; val_offset:28884*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28884*0 + 3*412*FLEN/8, x4, x1, x2)

inst_9629:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fffc0; valaddr_reg:x3; val_offset:28887*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28887*0 + 3*413*FLEN/8, x4, x1, x2)

inst_9630:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fffe0; valaddr_reg:x3; val_offset:28890*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28890*0 + 3*414*FLEN/8, x4, x1, x2)

inst_9631:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffff0; valaddr_reg:x3; val_offset:28893*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28893*0 + 3*415*FLEN/8, x4, x1, x2)

inst_9632:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffff8; valaddr_reg:x3; val_offset:28896*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28896*0 + 3*416*FLEN/8, x4, x1, x2)

inst_9633:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffffc; valaddr_reg:x3; val_offset:28899*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28899*0 + 3*417*FLEN/8, x4, x1, x2)

inst_9634:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7ffffe; valaddr_reg:x3; val_offset:28902*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28902*0 + 3*418*FLEN/8, x4, x1, x2)

inst_9635:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e43d898; op2val:0x80000000;
op3val:0x8e7fffff; valaddr_reg:x3; val_offset:28905*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28905*0 + 3*419*FLEN/8, x4, x1, x2)

inst_9636:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:28908*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28908*0 + 3*420*FLEN/8, x4, x1, x2)

inst_9637:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:28911*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28911*0 + 3*421*FLEN/8, x4, x1, x2)

inst_9638:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:28914*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28914*0 + 3*422*FLEN/8, x4, x1, x2)

inst_9639:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:28917*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28917*0 + 3*423*FLEN/8, x4, x1, x2)

inst_9640:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:28920*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28920*0 + 3*424*FLEN/8, x4, x1, x2)

inst_9641:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:28923*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28923*0 + 3*425*FLEN/8, x4, x1, x2)

inst_9642:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:28926*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28926*0 + 3*426*FLEN/8, x4, x1, x2)

inst_9643:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:28929*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28929*0 + 3*427*FLEN/8, x4, x1, x2)

inst_9644:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:28932*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28932*0 + 3*428*FLEN/8, x4, x1, x2)

inst_9645:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:28935*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28935*0 + 3*429*FLEN/8, x4, x1, x2)

inst_9646:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:28938*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28938*0 + 3*430*FLEN/8, x4, x1, x2)

inst_9647:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:28941*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28941*0 + 3*431*FLEN/8, x4, x1, x2)

inst_9648:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:28944*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28944*0 + 3*432*FLEN/8, x4, x1, x2)

inst_9649:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:28947*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28947*0 + 3*433*FLEN/8, x4, x1, x2)

inst_9650:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:28950*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28950*0 + 3*434*FLEN/8, x4, x1, x2)

inst_9651:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:28953*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28953*0 + 3*435*FLEN/8, x4, x1, x2)

inst_9652:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800000; valaddr_reg:x3; val_offset:28956*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28956*0 + 3*436*FLEN/8, x4, x1, x2)

inst_9653:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800001; valaddr_reg:x3; val_offset:28959*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28959*0 + 3*437*FLEN/8, x4, x1, x2)

inst_9654:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800003; valaddr_reg:x3; val_offset:28962*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28962*0 + 3*438*FLEN/8, x4, x1, x2)

inst_9655:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800007; valaddr_reg:x3; val_offset:28965*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28965*0 + 3*439*FLEN/8, x4, x1, x2)

inst_9656:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80000f; valaddr_reg:x3; val_offset:28968*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28968*0 + 3*440*FLEN/8, x4, x1, x2)

inst_9657:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80001f; valaddr_reg:x3; val_offset:28971*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28971*0 + 3*441*FLEN/8, x4, x1, x2)

inst_9658:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80003f; valaddr_reg:x3; val_offset:28974*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28974*0 + 3*442*FLEN/8, x4, x1, x2)

inst_9659:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80007f; valaddr_reg:x3; val_offset:28977*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28977*0 + 3*443*FLEN/8, x4, x1, x2)

inst_9660:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8000ff; valaddr_reg:x3; val_offset:28980*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28980*0 + 3*444*FLEN/8, x4, x1, x2)

inst_9661:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8001ff; valaddr_reg:x3; val_offset:28983*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28983*0 + 3*445*FLEN/8, x4, x1, x2)

inst_9662:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8003ff; valaddr_reg:x3; val_offset:28986*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28986*0 + 3*446*FLEN/8, x4, x1, x2)

inst_9663:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8007ff; valaddr_reg:x3; val_offset:28989*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28989*0 + 3*447*FLEN/8, x4, x1, x2)

inst_9664:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b800fff; valaddr_reg:x3; val_offset:28992*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28992*0 + 3*448*FLEN/8, x4, x1, x2)

inst_9665:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b801fff; valaddr_reg:x3; val_offset:28995*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28995*0 + 3*449*FLEN/8, x4, x1, x2)

inst_9666:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b803fff; valaddr_reg:x3; val_offset:28998*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 28998*0 + 3*450*FLEN/8, x4, x1, x2)

inst_9667:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b807fff; valaddr_reg:x3; val_offset:29001*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29001*0 + 3*451*FLEN/8, x4, x1, x2)

inst_9668:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b80ffff; valaddr_reg:x3; val_offset:29004*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29004*0 + 3*452*FLEN/8, x4, x1, x2)

inst_9669:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b81ffff; valaddr_reg:x3; val_offset:29007*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29007*0 + 3*453*FLEN/8, x4, x1, x2)

inst_9670:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b83ffff; valaddr_reg:x3; val_offset:29010*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29010*0 + 3*454*FLEN/8, x4, x1, x2)

inst_9671:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b87ffff; valaddr_reg:x3; val_offset:29013*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29013*0 + 3*455*FLEN/8, x4, x1, x2)

inst_9672:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b8fffff; valaddr_reg:x3; val_offset:29016*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29016*0 + 3*456*FLEN/8, x4, x1, x2)

inst_9673:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8b9fffff; valaddr_reg:x3; val_offset:29019*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29019*0 + 3*457*FLEN/8, x4, x1, x2)

inst_9674:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bbfffff; valaddr_reg:x3; val_offset:29022*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29022*0 + 3*458*FLEN/8, x4, x1, x2)

inst_9675:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bc00000; valaddr_reg:x3; val_offset:29025*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29025*0 + 3*459*FLEN/8, x4, x1, x2)

inst_9676:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8be00000; valaddr_reg:x3; val_offset:29028*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29028*0 + 3*460*FLEN/8, x4, x1, x2)

inst_9677:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bf00000; valaddr_reg:x3; val_offset:29031*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29031*0 + 3*461*FLEN/8, x4, x1, x2)

inst_9678:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bf80000; valaddr_reg:x3; val_offset:29034*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29034*0 + 3*462*FLEN/8, x4, x1, x2)

inst_9679:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfc0000; valaddr_reg:x3; val_offset:29037*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29037*0 + 3*463*FLEN/8, x4, x1, x2)

inst_9680:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfe0000; valaddr_reg:x3; val_offset:29040*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29040*0 + 3*464*FLEN/8, x4, x1, x2)

inst_9681:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bff0000; valaddr_reg:x3; val_offset:29043*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29043*0 + 3*465*FLEN/8, x4, x1, x2)

inst_9682:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bff8000; valaddr_reg:x3; val_offset:29046*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29046*0 + 3*466*FLEN/8, x4, x1, x2)

inst_9683:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffc000; valaddr_reg:x3; val_offset:29049*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29049*0 + 3*467*FLEN/8, x4, x1, x2)

inst_9684:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffe000; valaddr_reg:x3; val_offset:29052*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29052*0 + 3*468*FLEN/8, x4, x1, x2)

inst_9685:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfff000; valaddr_reg:x3; val_offset:29055*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29055*0 + 3*469*FLEN/8, x4, x1, x2)

inst_9686:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfff800; valaddr_reg:x3; val_offset:29058*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29058*0 + 3*470*FLEN/8, x4, x1, x2)

inst_9687:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffc00; valaddr_reg:x3; val_offset:29061*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29061*0 + 3*471*FLEN/8, x4, x1, x2)

inst_9688:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffe00; valaddr_reg:x3; val_offset:29064*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29064*0 + 3*472*FLEN/8, x4, x1, x2)

inst_9689:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffff00; valaddr_reg:x3; val_offset:29067*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29067*0 + 3*473*FLEN/8, x4, x1, x2)

inst_9690:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffff80; valaddr_reg:x3; val_offset:29070*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29070*0 + 3*474*FLEN/8, x4, x1, x2)

inst_9691:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffffc0; valaddr_reg:x3; val_offset:29073*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29073*0 + 3*475*FLEN/8, x4, x1, x2)

inst_9692:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffffe0; valaddr_reg:x3; val_offset:29076*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29076*0 + 3*476*FLEN/8, x4, x1, x2)

inst_9693:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffff0; valaddr_reg:x3; val_offset:29079*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29079*0 + 3*477*FLEN/8, x4, x1, x2)

inst_9694:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffff8; valaddr_reg:x3; val_offset:29082*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29082*0 + 3*478*FLEN/8, x4, x1, x2)

inst_9695:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffffc; valaddr_reg:x3; val_offset:29085*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29085*0 + 3*479*FLEN/8, x4, x1, x2)

inst_9696:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bfffffe; valaddr_reg:x3; val_offset:29088*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29088*0 + 3*480*FLEN/8, x4, x1, x2)

inst_9697:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x469f5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x17 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e469f5a; op2val:0x80000000;
op3val:0x8bffffff; valaddr_reg:x3; val_offset:29091*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29091*0 + 3*481*FLEN/8, x4, x1, x2)

inst_9698:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:29094*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29094*0 + 3*482*FLEN/8, x4, x1, x2)

inst_9699:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:29097*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29097*0 + 3*483*FLEN/8, x4, x1, x2)

inst_9700:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:29100*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29100*0 + 3*484*FLEN/8, x4, x1, x2)

inst_9701:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:29103*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29103*0 + 3*485*FLEN/8, x4, x1, x2)

inst_9702:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:29106*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29106*0 + 3*486*FLEN/8, x4, x1, x2)

inst_9703:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:29109*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29109*0 + 3*487*FLEN/8, x4, x1, x2)

inst_9704:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:29112*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29112*0 + 3*488*FLEN/8, x4, x1, x2)

inst_9705:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:29115*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29115*0 + 3*489*FLEN/8, x4, x1, x2)

inst_9706:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:29118*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29118*0 + 3*490*FLEN/8, x4, x1, x2)

inst_9707:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:29121*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29121*0 + 3*491*FLEN/8, x4, x1, x2)

inst_9708:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:29124*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29124*0 + 3*492*FLEN/8, x4, x1, x2)

inst_9709:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:29127*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29127*0 + 3*493*FLEN/8, x4, x1, x2)

inst_9710:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:29130*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29130*0 + 3*494*FLEN/8, x4, x1, x2)

inst_9711:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:29133*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29133*0 + 3*495*FLEN/8, x4, x1, x2)

inst_9712:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:29136*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29136*0 + 3*496*FLEN/8, x4, x1, x2)

inst_9713:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:29139*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29139*0 + 3*497*FLEN/8, x4, x1, x2)

inst_9714:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800000; valaddr_reg:x3; val_offset:29142*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29142*0 + 3*498*FLEN/8, x4, x1, x2)

inst_9715:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800001; valaddr_reg:x3; val_offset:29145*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29145*0 + 3*499*FLEN/8, x4, x1, x2)

inst_9716:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800003; valaddr_reg:x3; val_offset:29148*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29148*0 + 3*500*FLEN/8, x4, x1, x2)

inst_9717:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800007; valaddr_reg:x3; val_offset:29151*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29151*0 + 3*501*FLEN/8, x4, x1, x2)

inst_9718:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c80000f; valaddr_reg:x3; val_offset:29154*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29154*0 + 3*502*FLEN/8, x4, x1, x2)

inst_9719:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c80001f; valaddr_reg:x3; val_offset:29157*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29157*0 + 3*503*FLEN/8, x4, x1, x2)

inst_9720:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c80003f; valaddr_reg:x3; val_offset:29160*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29160*0 + 3*504*FLEN/8, x4, x1, x2)

inst_9721:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c80007f; valaddr_reg:x3; val_offset:29163*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29163*0 + 3*505*FLEN/8, x4, x1, x2)

inst_9722:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c8000ff; valaddr_reg:x3; val_offset:29166*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29166*0 + 3*506*FLEN/8, x4, x1, x2)

inst_9723:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c8001ff; valaddr_reg:x3; val_offset:29169*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29169*0 + 3*507*FLEN/8, x4, x1, x2)

inst_9724:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c8003ff; valaddr_reg:x3; val_offset:29172*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29172*0 + 3*508*FLEN/8, x4, x1, x2)

inst_9725:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c8007ff; valaddr_reg:x3; val_offset:29175*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29175*0 + 3*509*FLEN/8, x4, x1, x2)

inst_9726:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c800fff; valaddr_reg:x3; val_offset:29178*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29178*0 + 3*510*FLEN/8, x4, x1, x2)

inst_9727:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c801fff; valaddr_reg:x3; val_offset:29181*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29181*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_9728:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c803fff; valaddr_reg:x3; val_offset:29184*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29184*0 + 3*512*FLEN/8, x4, x1, x2)

inst_9729:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c807fff; valaddr_reg:x3; val_offset:29187*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29187*0 + 3*513*FLEN/8, x4, x1, x2)

inst_9730:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c80ffff; valaddr_reg:x3; val_offset:29190*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29190*0 + 3*514*FLEN/8, x4, x1, x2)

inst_9731:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c81ffff; valaddr_reg:x3; val_offset:29193*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29193*0 + 3*515*FLEN/8, x4, x1, x2)

inst_9732:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c83ffff; valaddr_reg:x3; val_offset:29196*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29196*0 + 3*516*FLEN/8, x4, x1, x2)

inst_9733:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c87ffff; valaddr_reg:x3; val_offset:29199*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29199*0 + 3*517*FLEN/8, x4, x1, x2)

inst_9734:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c8fffff; valaddr_reg:x3; val_offset:29202*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29202*0 + 3*518*FLEN/8, x4, x1, x2)

inst_9735:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1c9fffff; valaddr_reg:x3; val_offset:29205*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29205*0 + 3*519*FLEN/8, x4, x1, x2)

inst_9736:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cbfffff; valaddr_reg:x3; val_offset:29208*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29208*0 + 3*520*FLEN/8, x4, x1, x2)

inst_9737:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cc00000; valaddr_reg:x3; val_offset:29211*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29211*0 + 3*521*FLEN/8, x4, x1, x2)

inst_9738:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1ce00000; valaddr_reg:x3; val_offset:29214*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29214*0 + 3*522*FLEN/8, x4, x1, x2)

inst_9739:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cf00000; valaddr_reg:x3; val_offset:29217*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29217*0 + 3*523*FLEN/8, x4, x1, x2)

inst_9740:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cf80000; valaddr_reg:x3; val_offset:29220*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29220*0 + 3*524*FLEN/8, x4, x1, x2)

inst_9741:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfc0000; valaddr_reg:x3; val_offset:29223*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29223*0 + 3*525*FLEN/8, x4, x1, x2)

inst_9742:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfe0000; valaddr_reg:x3; val_offset:29226*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29226*0 + 3*526*FLEN/8, x4, x1, x2)

inst_9743:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cff0000; valaddr_reg:x3; val_offset:29229*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29229*0 + 3*527*FLEN/8, x4, x1, x2)

inst_9744:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cff8000; valaddr_reg:x3; val_offset:29232*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29232*0 + 3*528*FLEN/8, x4, x1, x2)

inst_9745:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cffc000; valaddr_reg:x3; val_offset:29235*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29235*0 + 3*529*FLEN/8, x4, x1, x2)

inst_9746:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cffe000; valaddr_reg:x3; val_offset:29238*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29238*0 + 3*530*FLEN/8, x4, x1, x2)

inst_9747:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfff000; valaddr_reg:x3; val_offset:29241*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29241*0 + 3*531*FLEN/8, x4, x1, x2)

inst_9748:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfff800; valaddr_reg:x3; val_offset:29244*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29244*0 + 3*532*FLEN/8, x4, x1, x2)

inst_9749:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfffc00; valaddr_reg:x3; val_offset:29247*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29247*0 + 3*533*FLEN/8, x4, x1, x2)

inst_9750:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfffe00; valaddr_reg:x3; val_offset:29250*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29250*0 + 3*534*FLEN/8, x4, x1, x2)

inst_9751:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cffff00; valaddr_reg:x3; val_offset:29253*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29253*0 + 3*535*FLEN/8, x4, x1, x2)

inst_9752:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cffff80; valaddr_reg:x3; val_offset:29256*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29256*0 + 3*536*FLEN/8, x4, x1, x2)

inst_9753:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cffffc0; valaddr_reg:x3; val_offset:29259*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29259*0 + 3*537*FLEN/8, x4, x1, x2)

inst_9754:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cffffe0; valaddr_reg:x3; val_offset:29262*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29262*0 + 3*538*FLEN/8, x4, x1, x2)

inst_9755:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfffff0; valaddr_reg:x3; val_offset:29265*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29265*0 + 3*539*FLEN/8, x4, x1, x2)

inst_9756:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfffff8; valaddr_reg:x3; val_offset:29268*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29268*0 + 3*540*FLEN/8, x4, x1, x2)

inst_9757:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfffffc; valaddr_reg:x3; val_offset:29271*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29271*0 + 3*541*FLEN/8, x4, x1, x2)

inst_9758:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cfffffe; valaddr_reg:x3; val_offset:29274*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29274*0 + 3*542*FLEN/8, x4, x1, x2)

inst_9759:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ae313 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x39 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4ae313; op2val:0x0;
op3val:0x1cffffff; valaddr_reg:x3; val_offset:29277*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29277*0 + 3*543*FLEN/8, x4, x1, x2)

inst_9760:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:29280*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29280*0 + 3*544*FLEN/8, x4, x1, x2)

inst_9761:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:29283*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29283*0 + 3*545*FLEN/8, x4, x1, x2)

inst_9762:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:29286*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29286*0 + 3*546*FLEN/8, x4, x1, x2)

inst_9763:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:29289*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29289*0 + 3*547*FLEN/8, x4, x1, x2)

inst_9764:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:29292*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29292*0 + 3*548*FLEN/8, x4, x1, x2)

inst_9765:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:29295*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29295*0 + 3*549*FLEN/8, x4, x1, x2)

inst_9766:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:29298*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29298*0 + 3*550*FLEN/8, x4, x1, x2)

inst_9767:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:29301*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29301*0 + 3*551*FLEN/8, x4, x1, x2)

inst_9768:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:29304*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29304*0 + 3*552*FLEN/8, x4, x1, x2)

inst_9769:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:29307*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29307*0 + 3*553*FLEN/8, x4, x1, x2)

inst_9770:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:29310*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29310*0 + 3*554*FLEN/8, x4, x1, x2)

inst_9771:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:29313*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29313*0 + 3*555*FLEN/8, x4, x1, x2)

inst_9772:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:29316*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29316*0 + 3*556*FLEN/8, x4, x1, x2)

inst_9773:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:29319*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29319*0 + 3*557*FLEN/8, x4, x1, x2)

inst_9774:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:29322*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29322*0 + 3*558*FLEN/8, x4, x1, x2)

inst_9775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:29325*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29325*0 + 3*559*FLEN/8, x4, x1, x2)

inst_9776:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d000000; valaddr_reg:x3; val_offset:29328*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29328*0 + 3*560*FLEN/8, x4, x1, x2)

inst_9777:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d000001; valaddr_reg:x3; val_offset:29331*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29331*0 + 3*561*FLEN/8, x4, x1, x2)

inst_9778:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d000003; valaddr_reg:x3; val_offset:29334*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29334*0 + 3*562*FLEN/8, x4, x1, x2)

inst_9779:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d000007; valaddr_reg:x3; val_offset:29337*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29337*0 + 3*563*FLEN/8, x4, x1, x2)

inst_9780:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d00000f; valaddr_reg:x3; val_offset:29340*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29340*0 + 3*564*FLEN/8, x4, x1, x2)

inst_9781:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d00001f; valaddr_reg:x3; val_offset:29343*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29343*0 + 3*565*FLEN/8, x4, x1, x2)

inst_9782:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d00003f; valaddr_reg:x3; val_offset:29346*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29346*0 + 3*566*FLEN/8, x4, x1, x2)

inst_9783:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d00007f; valaddr_reg:x3; val_offset:29349*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29349*0 + 3*567*FLEN/8, x4, x1, x2)

inst_9784:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d0000ff; valaddr_reg:x3; val_offset:29352*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29352*0 + 3*568*FLEN/8, x4, x1, x2)

inst_9785:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d0001ff; valaddr_reg:x3; val_offset:29355*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29355*0 + 3*569*FLEN/8, x4, x1, x2)

inst_9786:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d0003ff; valaddr_reg:x3; val_offset:29358*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29358*0 + 3*570*FLEN/8, x4, x1, x2)

inst_9787:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d0007ff; valaddr_reg:x3; val_offset:29361*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29361*0 + 3*571*FLEN/8, x4, x1, x2)

inst_9788:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d000fff; valaddr_reg:x3; val_offset:29364*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29364*0 + 3*572*FLEN/8, x4, x1, x2)

inst_9789:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d001fff; valaddr_reg:x3; val_offset:29367*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29367*0 + 3*573*FLEN/8, x4, x1, x2)

inst_9790:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d003fff; valaddr_reg:x3; val_offset:29370*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29370*0 + 3*574*FLEN/8, x4, x1, x2)

inst_9791:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d007fff; valaddr_reg:x3; val_offset:29373*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29373*0 + 3*575*FLEN/8, x4, x1, x2)

inst_9792:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d00ffff; valaddr_reg:x3; val_offset:29376*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29376*0 + 3*576*FLEN/8, x4, x1, x2)

inst_9793:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d01ffff; valaddr_reg:x3; val_offset:29379*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29379*0 + 3*577*FLEN/8, x4, x1, x2)

inst_9794:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d03ffff; valaddr_reg:x3; val_offset:29382*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29382*0 + 3*578*FLEN/8, x4, x1, x2)

inst_9795:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d07ffff; valaddr_reg:x3; val_offset:29385*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29385*0 + 3*579*FLEN/8, x4, x1, x2)

inst_9796:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d0fffff; valaddr_reg:x3; val_offset:29388*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29388*0 + 3*580*FLEN/8, x4, x1, x2)

inst_9797:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d1fffff; valaddr_reg:x3; val_offset:29391*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29391*0 + 3*581*FLEN/8, x4, x1, x2)

inst_9798:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d3fffff; valaddr_reg:x3; val_offset:29394*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29394*0 + 3*582*FLEN/8, x4, x1, x2)

inst_9799:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d400000; valaddr_reg:x3; val_offset:29397*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29397*0 + 3*583*FLEN/8, x4, x1, x2)

inst_9800:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d600000; valaddr_reg:x3; val_offset:29400*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29400*0 + 3*584*FLEN/8, x4, x1, x2)

inst_9801:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d700000; valaddr_reg:x3; val_offset:29403*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29403*0 + 3*585*FLEN/8, x4, x1, x2)

inst_9802:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d780000; valaddr_reg:x3; val_offset:29406*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29406*0 + 3*586*FLEN/8, x4, x1, x2)

inst_9803:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7c0000; valaddr_reg:x3; val_offset:29409*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29409*0 + 3*587*FLEN/8, x4, x1, x2)

inst_9804:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7e0000; valaddr_reg:x3; val_offset:29412*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29412*0 + 3*588*FLEN/8, x4, x1, x2)

inst_9805:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7f0000; valaddr_reg:x3; val_offset:29415*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29415*0 + 3*589*FLEN/8, x4, x1, x2)

inst_9806:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7f8000; valaddr_reg:x3; val_offset:29418*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29418*0 + 3*590*FLEN/8, x4, x1, x2)

inst_9807:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7fc000; valaddr_reg:x3; val_offset:29421*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29421*0 + 3*591*FLEN/8, x4, x1, x2)

inst_9808:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7fe000; valaddr_reg:x3; val_offset:29424*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29424*0 + 3*592*FLEN/8, x4, x1, x2)

inst_9809:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7ff000; valaddr_reg:x3; val_offset:29427*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29427*0 + 3*593*FLEN/8, x4, x1, x2)

inst_9810:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7ff800; valaddr_reg:x3; val_offset:29430*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29430*0 + 3*594*FLEN/8, x4, x1, x2)

inst_9811:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7ffc00; valaddr_reg:x3; val_offset:29433*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29433*0 + 3*595*FLEN/8, x4, x1, x2)

inst_9812:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7ffe00; valaddr_reg:x3; val_offset:29436*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29436*0 + 3*596*FLEN/8, x4, x1, x2)

inst_9813:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7fff00; valaddr_reg:x3; val_offset:29439*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29439*0 + 3*597*FLEN/8, x4, x1, x2)

inst_9814:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7fff80; valaddr_reg:x3; val_offset:29442*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29442*0 + 3*598*FLEN/8, x4, x1, x2)

inst_9815:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7fffc0; valaddr_reg:x3; val_offset:29445*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29445*0 + 3*599*FLEN/8, x4, x1, x2)

inst_9816:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7fffe0; valaddr_reg:x3; val_offset:29448*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29448*0 + 3*600*FLEN/8, x4, x1, x2)

inst_9817:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7ffff0; valaddr_reg:x3; val_offset:29451*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29451*0 + 3*601*FLEN/8, x4, x1, x2)

inst_9818:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7ffff8; valaddr_reg:x3; val_offset:29454*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29454*0 + 3*602*FLEN/8, x4, x1, x2)

inst_9819:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7ffffc; valaddr_reg:x3; val_offset:29457*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29457*0 + 3*603*FLEN/8, x4, x1, x2)

inst_9820:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7ffffe; valaddr_reg:x3; val_offset:29460*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29460*0 + 3*604*FLEN/8, x4, x1, x2)

inst_9821:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4c2b76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4c2b76; op2val:0x80000000;
op3val:0x8d7fffff; valaddr_reg:x3; val_offset:29463*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29463*0 + 3*605*FLEN/8, x4, x1, x2)

inst_9822:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:29466*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29466*0 + 3*606*FLEN/8, x4, x1, x2)

inst_9823:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:29469*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29469*0 + 3*607*FLEN/8, x4, x1, x2)

inst_9824:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:29472*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29472*0 + 3*608*FLEN/8, x4, x1, x2)

inst_9825:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:29475*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29475*0 + 3*609*FLEN/8, x4, x1, x2)

inst_9826:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:29478*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29478*0 + 3*610*FLEN/8, x4, x1, x2)

inst_9827:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:29481*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29481*0 + 3*611*FLEN/8, x4, x1, x2)

inst_9828:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:29484*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29484*0 + 3*612*FLEN/8, x4, x1, x2)

inst_9829:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:29487*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29487*0 + 3*613*FLEN/8, x4, x1, x2)

inst_9830:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:29490*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29490*0 + 3*614*FLEN/8, x4, x1, x2)

inst_9831:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:29493*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29493*0 + 3*615*FLEN/8, x4, x1, x2)

inst_9832:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:29496*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29496*0 + 3*616*FLEN/8, x4, x1, x2)

inst_9833:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:29499*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29499*0 + 3*617*FLEN/8, x4, x1, x2)

inst_9834:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:29502*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29502*0 + 3*618*FLEN/8, x4, x1, x2)

inst_9835:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:29505*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29505*0 + 3*619*FLEN/8, x4, x1, x2)

inst_9836:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:29508*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29508*0 + 3*620*FLEN/8, x4, x1, x2)

inst_9837:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:29511*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29511*0 + 3*621*FLEN/8, x4, x1, x2)

inst_9838:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe800000; valaddr_reg:x3; val_offset:29514*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29514*0 + 3*622*FLEN/8, x4, x1, x2)

inst_9839:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe800001; valaddr_reg:x3; val_offset:29517*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29517*0 + 3*623*FLEN/8, x4, x1, x2)

inst_9840:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe800003; valaddr_reg:x3; val_offset:29520*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29520*0 + 3*624*FLEN/8, x4, x1, x2)

inst_9841:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe800007; valaddr_reg:x3; val_offset:29523*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29523*0 + 3*625*FLEN/8, x4, x1, x2)

inst_9842:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe80000f; valaddr_reg:x3; val_offset:29526*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29526*0 + 3*626*FLEN/8, x4, x1, x2)

inst_9843:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe80001f; valaddr_reg:x3; val_offset:29529*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29529*0 + 3*627*FLEN/8, x4, x1, x2)

inst_9844:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe80003f; valaddr_reg:x3; val_offset:29532*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29532*0 + 3*628*FLEN/8, x4, x1, x2)

inst_9845:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe80007f; valaddr_reg:x3; val_offset:29535*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29535*0 + 3*629*FLEN/8, x4, x1, x2)

inst_9846:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe8000ff; valaddr_reg:x3; val_offset:29538*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29538*0 + 3*630*FLEN/8, x4, x1, x2)

inst_9847:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe8001ff; valaddr_reg:x3; val_offset:29541*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29541*0 + 3*631*FLEN/8, x4, x1, x2)

inst_9848:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe8003ff; valaddr_reg:x3; val_offset:29544*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29544*0 + 3*632*FLEN/8, x4, x1, x2)

inst_9849:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe8007ff; valaddr_reg:x3; val_offset:29547*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29547*0 + 3*633*FLEN/8, x4, x1, x2)

inst_9850:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe800fff; valaddr_reg:x3; val_offset:29550*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29550*0 + 3*634*FLEN/8, x4, x1, x2)

inst_9851:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe801fff; valaddr_reg:x3; val_offset:29553*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29553*0 + 3*635*FLEN/8, x4, x1, x2)

inst_9852:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe803fff; valaddr_reg:x3; val_offset:29556*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29556*0 + 3*636*FLEN/8, x4, x1, x2)

inst_9853:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe807fff; valaddr_reg:x3; val_offset:29559*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29559*0 + 3*637*FLEN/8, x4, x1, x2)

inst_9854:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe80ffff; valaddr_reg:x3; val_offset:29562*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29562*0 + 3*638*FLEN/8, x4, x1, x2)

inst_9855:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe81ffff; valaddr_reg:x3; val_offset:29565*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29565*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_9856:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe83ffff; valaddr_reg:x3; val_offset:29568*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29568*0 + 3*640*FLEN/8, x4, x1, x2)

inst_9857:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe87ffff; valaddr_reg:x3; val_offset:29571*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29571*0 + 3*641*FLEN/8, x4, x1, x2)

inst_9858:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe8fffff; valaddr_reg:x3; val_offset:29574*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29574*0 + 3*642*FLEN/8, x4, x1, x2)

inst_9859:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xe9fffff; valaddr_reg:x3; val_offset:29577*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29577*0 + 3*643*FLEN/8, x4, x1, x2)

inst_9860:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xebfffff; valaddr_reg:x3; val_offset:29580*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29580*0 + 3*644*FLEN/8, x4, x1, x2)

inst_9861:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xec00000; valaddr_reg:x3; val_offset:29583*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29583*0 + 3*645*FLEN/8, x4, x1, x2)

inst_9862:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xee00000; valaddr_reg:x3; val_offset:29586*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29586*0 + 3*646*FLEN/8, x4, x1, x2)

inst_9863:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xef00000; valaddr_reg:x3; val_offset:29589*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29589*0 + 3*647*FLEN/8, x4, x1, x2)

inst_9864:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xef80000; valaddr_reg:x3; val_offset:29592*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29592*0 + 3*648*FLEN/8, x4, x1, x2)

inst_9865:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefc0000; valaddr_reg:x3; val_offset:29595*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29595*0 + 3*649*FLEN/8, x4, x1, x2)

inst_9866:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefe0000; valaddr_reg:x3; val_offset:29598*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29598*0 + 3*650*FLEN/8, x4, x1, x2)

inst_9867:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xeff0000; valaddr_reg:x3; val_offset:29601*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29601*0 + 3*651*FLEN/8, x4, x1, x2)

inst_9868:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xeff8000; valaddr_reg:x3; val_offset:29604*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29604*0 + 3*652*FLEN/8, x4, x1, x2)

inst_9869:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xeffc000; valaddr_reg:x3; val_offset:29607*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29607*0 + 3*653*FLEN/8, x4, x1, x2)

inst_9870:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xeffe000; valaddr_reg:x3; val_offset:29610*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29610*0 + 3*654*FLEN/8, x4, x1, x2)

inst_9871:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefff000; valaddr_reg:x3; val_offset:29613*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29613*0 + 3*655*FLEN/8, x4, x1, x2)

inst_9872:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefff800; valaddr_reg:x3; val_offset:29616*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29616*0 + 3*656*FLEN/8, x4, x1, x2)

inst_9873:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefffc00; valaddr_reg:x3; val_offset:29619*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29619*0 + 3*657*FLEN/8, x4, x1, x2)

inst_9874:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefffe00; valaddr_reg:x3; val_offset:29622*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29622*0 + 3*658*FLEN/8, x4, x1, x2)

inst_9875:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xeffff00; valaddr_reg:x3; val_offset:29625*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29625*0 + 3*659*FLEN/8, x4, x1, x2)

inst_9876:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xeffff80; valaddr_reg:x3; val_offset:29628*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29628*0 + 3*660*FLEN/8, x4, x1, x2)

inst_9877:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xeffffc0; valaddr_reg:x3; val_offset:29631*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29631*0 + 3*661*FLEN/8, x4, x1, x2)

inst_9878:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xeffffe0; valaddr_reg:x3; val_offset:29634*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29634*0 + 3*662*FLEN/8, x4, x1, x2)

inst_9879:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefffff0; valaddr_reg:x3; val_offset:29637*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29637*0 + 3*663*FLEN/8, x4, x1, x2)

inst_9880:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefffff8; valaddr_reg:x3; val_offset:29640*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29640*0 + 3*664*FLEN/8, x4, x1, x2)

inst_9881:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefffffc; valaddr_reg:x3; val_offset:29643*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29643*0 + 3*665*FLEN/8, x4, x1, x2)

inst_9882:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xefffffe; valaddr_reg:x3; val_offset:29646*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29646*0 + 3*666*FLEN/8, x4, x1, x2)

inst_9883:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4de559 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4de559; op2val:0x0;
op3val:0xeffffff; valaddr_reg:x3; val_offset:29649*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29649*0 + 3*667*FLEN/8, x4, x1, x2)

inst_9884:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe800000; valaddr_reg:x3; val_offset:29652*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29652*0 + 3*668*FLEN/8, x4, x1, x2)

inst_9885:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe800001; valaddr_reg:x3; val_offset:29655*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29655*0 + 3*669*FLEN/8, x4, x1, x2)

inst_9886:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe800003; valaddr_reg:x3; val_offset:29658*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29658*0 + 3*670*FLEN/8, x4, x1, x2)

inst_9887:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe800007; valaddr_reg:x3; val_offset:29661*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29661*0 + 3*671*FLEN/8, x4, x1, x2)

inst_9888:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe80000f; valaddr_reg:x3; val_offset:29664*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29664*0 + 3*672*FLEN/8, x4, x1, x2)

inst_9889:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe80001f; valaddr_reg:x3; val_offset:29667*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29667*0 + 3*673*FLEN/8, x4, x1, x2)

inst_9890:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe80003f; valaddr_reg:x3; val_offset:29670*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29670*0 + 3*674*FLEN/8, x4, x1, x2)

inst_9891:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe80007f; valaddr_reg:x3; val_offset:29673*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29673*0 + 3*675*FLEN/8, x4, x1, x2)

inst_9892:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe8000ff; valaddr_reg:x3; val_offset:29676*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29676*0 + 3*676*FLEN/8, x4, x1, x2)

inst_9893:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe8001ff; valaddr_reg:x3; val_offset:29679*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29679*0 + 3*677*FLEN/8, x4, x1, x2)

inst_9894:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe8003ff; valaddr_reg:x3; val_offset:29682*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29682*0 + 3*678*FLEN/8, x4, x1, x2)

inst_9895:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe8007ff; valaddr_reg:x3; val_offset:29685*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29685*0 + 3*679*FLEN/8, x4, x1, x2)

inst_9896:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe800fff; valaddr_reg:x3; val_offset:29688*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29688*0 + 3*680*FLEN/8, x4, x1, x2)

inst_9897:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe801fff; valaddr_reg:x3; val_offset:29691*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29691*0 + 3*681*FLEN/8, x4, x1, x2)

inst_9898:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe803fff; valaddr_reg:x3; val_offset:29694*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29694*0 + 3*682*FLEN/8, x4, x1, x2)

inst_9899:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe807fff; valaddr_reg:x3; val_offset:29697*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29697*0 + 3*683*FLEN/8, x4, x1, x2)

inst_9900:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe80ffff; valaddr_reg:x3; val_offset:29700*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29700*0 + 3*684*FLEN/8, x4, x1, x2)

inst_9901:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe81ffff; valaddr_reg:x3; val_offset:29703*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29703*0 + 3*685*FLEN/8, x4, x1, x2)

inst_9902:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe83ffff; valaddr_reg:x3; val_offset:29706*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29706*0 + 3*686*FLEN/8, x4, x1, x2)

inst_9903:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe87ffff; valaddr_reg:x3; val_offset:29709*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29709*0 + 3*687*FLEN/8, x4, x1, x2)

inst_9904:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe8fffff; valaddr_reg:x3; val_offset:29712*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29712*0 + 3*688*FLEN/8, x4, x1, x2)

inst_9905:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe9fffff; valaddr_reg:x3; val_offset:29715*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29715*0 + 3*689*FLEN/8, x4, x1, x2)

inst_9906:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbebfffff; valaddr_reg:x3; val_offset:29718*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29718*0 + 3*690*FLEN/8, x4, x1, x2)

inst_9907:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbec00000; valaddr_reg:x3; val_offset:29721*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29721*0 + 3*691*FLEN/8, x4, x1, x2)

inst_9908:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbee00000; valaddr_reg:x3; val_offset:29724*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29724*0 + 3*692*FLEN/8, x4, x1, x2)

inst_9909:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbef00000; valaddr_reg:x3; val_offset:29727*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29727*0 + 3*693*FLEN/8, x4, x1, x2)

inst_9910:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbef80000; valaddr_reg:x3; val_offset:29730*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29730*0 + 3*694*FLEN/8, x4, x1, x2)

inst_9911:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefc0000; valaddr_reg:x3; val_offset:29733*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29733*0 + 3*695*FLEN/8, x4, x1, x2)

inst_9912:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefe0000; valaddr_reg:x3; val_offset:29736*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29736*0 + 3*696*FLEN/8, x4, x1, x2)

inst_9913:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeff0000; valaddr_reg:x3; val_offset:29739*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29739*0 + 3*697*FLEN/8, x4, x1, x2)

inst_9914:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeff8000; valaddr_reg:x3; val_offset:29742*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29742*0 + 3*698*FLEN/8, x4, x1, x2)

inst_9915:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeffc000; valaddr_reg:x3; val_offset:29745*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29745*0 + 3*699*FLEN/8, x4, x1, x2)

inst_9916:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeffe000; valaddr_reg:x3; val_offset:29748*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29748*0 + 3*700*FLEN/8, x4, x1, x2)

inst_9917:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefff000; valaddr_reg:x3; val_offset:29751*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29751*0 + 3*701*FLEN/8, x4, x1, x2)

inst_9918:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefff800; valaddr_reg:x3; val_offset:29754*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29754*0 + 3*702*FLEN/8, x4, x1, x2)

inst_9919:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffc00; valaddr_reg:x3; val_offset:29757*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29757*0 + 3*703*FLEN/8, x4, x1, x2)

inst_9920:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffe00; valaddr_reg:x3; val_offset:29760*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29760*0 + 3*704*FLEN/8, x4, x1, x2)

inst_9921:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeffff00; valaddr_reg:x3; val_offset:29763*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29763*0 + 3*705*FLEN/8, x4, x1, x2)

inst_9922:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeffff80; valaddr_reg:x3; val_offset:29766*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29766*0 + 3*706*FLEN/8, x4, x1, x2)

inst_9923:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeffffc0; valaddr_reg:x3; val_offset:29769*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29769*0 + 3*707*FLEN/8, x4, x1, x2)

inst_9924:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeffffe0; valaddr_reg:x3; val_offset:29772*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29772*0 + 3*708*FLEN/8, x4, x1, x2)

inst_9925:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffff0; valaddr_reg:x3; val_offset:29775*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29775*0 + 3*709*FLEN/8, x4, x1, x2)

inst_9926:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffff8; valaddr_reg:x3; val_offset:29778*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29778*0 + 3*710*FLEN/8, x4, x1, x2)

inst_9927:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffffc; valaddr_reg:x3; val_offset:29781*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29781*0 + 3*711*FLEN/8, x4, x1, x2)

inst_9928:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffffe; valaddr_reg:x3; val_offset:29784*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29784*0 + 3*712*FLEN/8, x4, x1, x2)

inst_9929:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeffffff; valaddr_reg:x3; val_offset:29787*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29787*0 + 3*713*FLEN/8, x4, x1, x2)

inst_9930:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbf800001; valaddr_reg:x3; val_offset:29790*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29790*0 + 3*714*FLEN/8, x4, x1, x2)

inst_9931:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbf800003; valaddr_reg:x3; val_offset:29793*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29793*0 + 3*715*FLEN/8, x4, x1, x2)

inst_9932:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbf800007; valaddr_reg:x3; val_offset:29796*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29796*0 + 3*716*FLEN/8, x4, x1, x2)

inst_9933:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbf999999; valaddr_reg:x3; val_offset:29799*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29799*0 + 3*717*FLEN/8, x4, x1, x2)

inst_9934:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:29802*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29802*0 + 3*718*FLEN/8, x4, x1, x2)

inst_9935:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:29805*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29805*0 + 3*719*FLEN/8, x4, x1, x2)

inst_9936:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:29808*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29808*0 + 3*720*FLEN/8, x4, x1, x2)

inst_9937:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:29811*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29811*0 + 3*721*FLEN/8, x4, x1, x2)

inst_9938:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:29814*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29814*0 + 3*722*FLEN/8, x4, x1, x2)

inst_9939:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:29817*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29817*0 + 3*723*FLEN/8, x4, x1, x2)

inst_9940:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:29820*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29820*0 + 3*724*FLEN/8, x4, x1, x2)

inst_9941:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:29823*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29823*0 + 3*725*FLEN/8, x4, x1, x2)

inst_9942:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:29826*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29826*0 + 3*726*FLEN/8, x4, x1, x2)

inst_9943:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:29829*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29829*0 + 3*727*FLEN/8, x4, x1, x2)

inst_9944:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:29832*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29832*0 + 3*728*FLEN/8, x4, x1, x2)

inst_9945:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:29835*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29835*0 + 3*729*FLEN/8, x4, x1, x2)

inst_9946:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:29838*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29838*0 + 3*730*FLEN/8, x4, x1, x2)

inst_9947:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:29841*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29841*0 + 3*731*FLEN/8, x4, x1, x2)

inst_9948:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:29844*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29844*0 + 3*732*FLEN/8, x4, x1, x2)

inst_9949:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:29847*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29847*0 + 3*733*FLEN/8, x4, x1, x2)

inst_9950:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:29850*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29850*0 + 3*734*FLEN/8, x4, x1, x2)

inst_9951:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:29853*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29853*0 + 3*735*FLEN/8, x4, x1, x2)

inst_9952:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:29856*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29856*0 + 3*736*FLEN/8, x4, x1, x2)

inst_9953:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:29859*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29859*0 + 3*737*FLEN/8, x4, x1, x2)

inst_9954:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:29862*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29862*0 + 3*738*FLEN/8, x4, x1, x2)

inst_9955:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:29865*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29865*0 + 3*739*FLEN/8, x4, x1, x2)

inst_9956:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:29868*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29868*0 + 3*740*FLEN/8, x4, x1, x2)

inst_9957:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:29871*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29871*0 + 3*741*FLEN/8, x4, x1, x2)

inst_9958:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:29874*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29874*0 + 3*742*FLEN/8, x4, x1, x2)

inst_9959:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:29877*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29877*0 + 3*743*FLEN/8, x4, x1, x2)

inst_9960:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:29880*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29880*0 + 3*744*FLEN/8, x4, x1, x2)

inst_9961:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:29883*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29883*0 + 3*745*FLEN/8, x4, x1, x2)

inst_9962:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc000000; valaddr_reg:x3; val_offset:29886*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29886*0 + 3*746*FLEN/8, x4, x1, x2)

inst_9963:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc000001; valaddr_reg:x3; val_offset:29889*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29889*0 + 3*747*FLEN/8, x4, x1, x2)

inst_9964:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc000003; valaddr_reg:x3; val_offset:29892*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29892*0 + 3*748*FLEN/8, x4, x1, x2)

inst_9965:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc000007; valaddr_reg:x3; val_offset:29895*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29895*0 + 3*749*FLEN/8, x4, x1, x2)

inst_9966:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc00000f; valaddr_reg:x3; val_offset:29898*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29898*0 + 3*750*FLEN/8, x4, x1, x2)

inst_9967:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc00001f; valaddr_reg:x3; val_offset:29901*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29901*0 + 3*751*FLEN/8, x4, x1, x2)

inst_9968:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc00003f; valaddr_reg:x3; val_offset:29904*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29904*0 + 3*752*FLEN/8, x4, x1, x2)

inst_9969:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc00007f; valaddr_reg:x3; val_offset:29907*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29907*0 + 3*753*FLEN/8, x4, x1, x2)

inst_9970:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc0000ff; valaddr_reg:x3; val_offset:29910*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29910*0 + 3*754*FLEN/8, x4, x1, x2)

inst_9971:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc0001ff; valaddr_reg:x3; val_offset:29913*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29913*0 + 3*755*FLEN/8, x4, x1, x2)

inst_9972:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc0003ff; valaddr_reg:x3; val_offset:29916*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29916*0 + 3*756*FLEN/8, x4, x1, x2)

inst_9973:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc0007ff; valaddr_reg:x3; val_offset:29919*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29919*0 + 3*757*FLEN/8, x4, x1, x2)

inst_9974:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc000fff; valaddr_reg:x3; val_offset:29922*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29922*0 + 3*758*FLEN/8, x4, x1, x2)

inst_9975:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc001fff; valaddr_reg:x3; val_offset:29925*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29925*0 + 3*759*FLEN/8, x4, x1, x2)

inst_9976:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc003fff; valaddr_reg:x3; val_offset:29928*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29928*0 + 3*760*FLEN/8, x4, x1, x2)

inst_9977:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc007fff; valaddr_reg:x3; val_offset:29931*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29931*0 + 3*761*FLEN/8, x4, x1, x2)

inst_9978:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc00ffff; valaddr_reg:x3; val_offset:29934*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29934*0 + 3*762*FLEN/8, x4, x1, x2)

inst_9979:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc01ffff; valaddr_reg:x3; val_offset:29937*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29937*0 + 3*763*FLEN/8, x4, x1, x2)

inst_9980:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc03ffff; valaddr_reg:x3; val_offset:29940*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29940*0 + 3*764*FLEN/8, x4, x1, x2)

inst_9981:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc07ffff; valaddr_reg:x3; val_offset:29943*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29943*0 + 3*765*FLEN/8, x4, x1, x2)

inst_9982:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc0fffff; valaddr_reg:x3; val_offset:29946*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29946*0 + 3*766*FLEN/8, x4, x1, x2)

inst_9983:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4eec6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4eec6b; op2val:0x0;
op3val:0xc1fffff; valaddr_reg:x3; val_offset:29949*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 29949*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867200,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867201,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867203,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867207,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867215,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867231,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867263,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867327,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867455,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867711,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306868223,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306869247,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306871295,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306875391,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306883583,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306899967,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306932735,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306998271,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307129343,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307391487,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307915775,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2308964351,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061503,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061504,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2313158656,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314207232,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314731520,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314993664,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315124736,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315190272,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315223040,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315239424,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315247616,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315251712,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315253760,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315254784,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255296,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255552,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255680,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255744,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255776,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255792,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255800,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255804,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255806,32,FLEN)
NAN_BOXED(2117727211,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255807,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530496,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530497,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530499,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530503,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530511,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530527,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530559,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530623,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530751,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407531007,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407531519,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407532543,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407534591,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407538687,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407546879,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407563263,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407596031,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407661567,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407792639,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2408054783,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2408579071,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2409627647,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2411724799,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2411724800,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2413821952,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2414870528,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415394816,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415656960,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415788032,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415853568,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415886336,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415902720,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415910912,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415915008,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415917056,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918080,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918592,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918848,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918976,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919040,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919072,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919088,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919096,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919100,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919102,32,FLEN)
NAN_BOXED(2117982404,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919103,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644416,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644417,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644419,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644423,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644431,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644447,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644479,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644543,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644671,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323644927,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323645439,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323646463,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323648511,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323652607,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323660799,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323677183,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323709951,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323775487,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2323906559,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2324168703,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2324692991,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2325741567,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2327838719,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2327838720,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2329935872,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2330984448,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331508736,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331770880,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331901952,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2331967488,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332000256,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332016640,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332024832,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332028928,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332030976,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032000,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032512,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032768,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032896,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032960,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332032992,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033008,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033016,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033020,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033022,32,FLEN)
NAN_BOXED(2118121812,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2332033023,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383552,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383553,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383555,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383559,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383567,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383583,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383615,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383679,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383807,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159384063,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159384575,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159385599,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159387647,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159391743,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159399935,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159416319,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159449087,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159514623,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159645695,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159907839,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(160432127,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(161480703,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(163577855,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(163577856,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(165675008,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(166723584,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167247872,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167510016,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167641088,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167706624,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167739392,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167755776,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167763968,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167768064,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167770112,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167771136,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167771648,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167771904,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772032,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772096,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772128,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772144,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772152,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772156,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772158,32,FLEN)
NAN_BOXED(2118170245,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772159,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989855744,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989855745,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989855747,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989855751,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989855759,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989855775,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989855807,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989855871,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989855999,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989856255,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989856767,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989857791,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989859839,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989863935,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989872127,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989888511,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989921279,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(989986815,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(990117887,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(990380031,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(990904319,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(991952895,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(994050047,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(994050048,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(996147200,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(997195776,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(997720064,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(997982208,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998113280,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998178816,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998211584,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998227968,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998236160,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998240256,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998242304,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998243328,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998243840,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998244096,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998244224,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998244288,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998244320,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998244336,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998244344,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998244348,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998244350,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(998244351,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2118180005,32,FLEN)
NAN_BOXED(11134825,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045064704,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045064705,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045064707,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045064711,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045064719,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045064735,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045064767,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045064831,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045064959,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045065215,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045065727,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045066751,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045068799,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045072895,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045081087,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045097471,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045130239,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045195775,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045326847,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3045588991,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3046113279,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3047161855,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3049259007,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3049259008,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3051356160,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3052404736,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3052929024,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053191168,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053322240,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053387776,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053420544,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053436928,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053445120,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053449216,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053451264,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053452288,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053452800,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053453056,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053453184,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053453248,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053453280,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053453296,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053453304,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053453308,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053453310,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3053453311,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2118248082,32,FLEN)
NAN_BOXED(2158558821,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364672,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364673,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364675,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364679,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364687,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364703,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364735,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364799,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364927,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382365183,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382365695,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382366719,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382368767,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382372863,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382381055,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382397439,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382430207,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382495743,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382626815,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382888959,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2383413247,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2384461823,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2386558975,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2386558976,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2388656128,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2389704704,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390228992,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390491136,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390622208,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390687744,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390720512,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390736896,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390745088,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390749184,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390751232,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390752256,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390752768,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753024,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753152,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753216,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753248,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753264,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753272,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753276,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753278,32,FLEN)
NAN_BOXED(2118375576,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753279,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421632,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421633,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421635,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421639,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421647,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421663,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421695,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421759,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340421887,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340422143,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340422655,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340423679,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340425727,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340429823,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340438015,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340454399,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340487167,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340552703,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340683775,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2340945919,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2341470207,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2342518783,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2344615935,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2344615936,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2346713088,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2347761664,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348285952,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348548096,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348679168,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348744704,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348777472,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348793856,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348802048,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348806144,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348808192,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348809216,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348809728,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348809984,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810112,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810176,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810208,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810224,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810232,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810236,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810238,32,FLEN)
NAN_BOXED(2118557530,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2348810239,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150656,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150657,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150659,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150663,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150671,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150687,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150719,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150783,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478150911,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478151167,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478151679,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478152703,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478154751,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478158847,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478167039,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478183423,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478216191,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478281727,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478412799,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(478674943,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(479199231,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(480247807,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(482344959,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(482344960,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(484442112,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(485490688,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486014976,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486277120,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486408192,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486473728,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486506496,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486522880,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486531072,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486535168,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486537216,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486538240,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486538752,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486539008,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486539136,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486539200,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486539232,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486539248,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486539256,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486539260,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486539262,32,FLEN)
NAN_BOXED(2118837011,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(486539263,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587456,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587457,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587459,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587463,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587471,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587487,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587519,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587583,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587711,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365587967,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365588479,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365589503,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365591551,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365595647,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365603839,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365620223,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365652991,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365718527,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2365849599,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2366111743,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2366636031,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2367684607,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2369781759,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2369781760,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2371878912,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2372927488,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373451776,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373713920,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373844992,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373910528,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373943296,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373959680,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373967872,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373971968,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373974016,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975040,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975552,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975808,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373975936,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976000,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976032,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976048,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976056,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976060,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976062,32,FLEN)
NAN_BOXED(2118921078,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2373976063,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269632,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269633,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269635,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269639,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269647,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269663,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269695,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269759,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243269887,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243270143,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243270655,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243271679,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243273727,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243277823,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243286015,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243302399,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243335167,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243400703,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243531775,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(243793919,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(244318207,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(245366783,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(247463935,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(247463936,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(249561088,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(250609664,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251133952,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251396096,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251527168,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251592704,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251625472,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251641856,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251650048,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251654144,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251656192,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251657216,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251657728,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251657984,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658112,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658176,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658208,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658224,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658232,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658236,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658238,32,FLEN)
NAN_BOXED(2119034201,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(251658239,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196059648,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196059649,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196059651,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196059655,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196059663,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196059679,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196059711,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196059775,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196059903,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196060159,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196060671,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196061695,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196063743,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196067839,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196076031,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196092415,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196125183,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196190719,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196321791,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3196583935,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3197108223,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3198156799,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3200253951,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3200253952,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3202351104,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3203399680,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3203923968,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204186112,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204317184,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204382720,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204415488,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204431872,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204440064,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204444160,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204446208,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204447232,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204447744,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204448000,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204448128,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204448192,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204448224,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204448240,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204448248,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204448252,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204448254,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3204448255,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326592,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326593,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326595,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326599,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326607,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326623,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326655,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326719,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201326847,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201327103,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201327615,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201328639,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201330687,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201334783,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201342975,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201359359,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201392127,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201457663,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201588735,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(201850879,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(202375167,32,FLEN)
NAN_BOXED(2119101547,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(203423743,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
