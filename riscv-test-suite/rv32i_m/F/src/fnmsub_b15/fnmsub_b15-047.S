
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_35328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae800000; valaddr_reg:x3; val_offset:105984*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 105984*0 + 3*0*FLEN/8, x4, x1, x2)

inst_35329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae800001; valaddr_reg:x3; val_offset:105987*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 105987*0 + 3*1*FLEN/8, x4, x1, x2)

inst_35330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae800003; valaddr_reg:x3; val_offset:105990*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 105990*0 + 3*2*FLEN/8, x4, x1, x2)

inst_35331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae800007; valaddr_reg:x3; val_offset:105993*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 105993*0 + 3*3*FLEN/8, x4, x1, x2)

inst_35332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae80000f; valaddr_reg:x3; val_offset:105996*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 105996*0 + 3*4*FLEN/8, x4, x1, x2)

inst_35333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae80001f; valaddr_reg:x3; val_offset:105999*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 105999*0 + 3*5*FLEN/8, x4, x1, x2)

inst_35334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae80003f; valaddr_reg:x3; val_offset:106002*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106002*0 + 3*6*FLEN/8, x4, x1, x2)

inst_35335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae80007f; valaddr_reg:x3; val_offset:106005*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106005*0 + 3*7*FLEN/8, x4, x1, x2)

inst_35336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae8000ff; valaddr_reg:x3; val_offset:106008*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106008*0 + 3*8*FLEN/8, x4, x1, x2)

inst_35337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae8001ff; valaddr_reg:x3; val_offset:106011*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106011*0 + 3*9*FLEN/8, x4, x1, x2)

inst_35338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae8003ff; valaddr_reg:x3; val_offset:106014*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106014*0 + 3*10*FLEN/8, x4, x1, x2)

inst_35339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae8007ff; valaddr_reg:x3; val_offset:106017*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106017*0 + 3*11*FLEN/8, x4, x1, x2)

inst_35340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae800fff; valaddr_reg:x3; val_offset:106020*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106020*0 + 3*12*FLEN/8, x4, x1, x2)

inst_35341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae801fff; valaddr_reg:x3; val_offset:106023*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106023*0 + 3*13*FLEN/8, x4, x1, x2)

inst_35342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae803fff; valaddr_reg:x3; val_offset:106026*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106026*0 + 3*14*FLEN/8, x4, x1, x2)

inst_35343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae807fff; valaddr_reg:x3; val_offset:106029*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106029*0 + 3*15*FLEN/8, x4, x1, x2)

inst_35344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae80ffff; valaddr_reg:x3; val_offset:106032*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106032*0 + 3*16*FLEN/8, x4, x1, x2)

inst_35345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae81ffff; valaddr_reg:x3; val_offset:106035*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106035*0 + 3*17*FLEN/8, x4, x1, x2)

inst_35346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae83ffff; valaddr_reg:x3; val_offset:106038*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106038*0 + 3*18*FLEN/8, x4, x1, x2)

inst_35347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae87ffff; valaddr_reg:x3; val_offset:106041*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106041*0 + 3*19*FLEN/8, x4, x1, x2)

inst_35348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae8fffff; valaddr_reg:x3; val_offset:106044*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106044*0 + 3*20*FLEN/8, x4, x1, x2)

inst_35349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xae9fffff; valaddr_reg:x3; val_offset:106047*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106047*0 + 3*21*FLEN/8, x4, x1, x2)

inst_35350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaebfffff; valaddr_reg:x3; val_offset:106050*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106050*0 + 3*22*FLEN/8, x4, x1, x2)

inst_35351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaec00000; valaddr_reg:x3; val_offset:106053*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106053*0 + 3*23*FLEN/8, x4, x1, x2)

inst_35352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaee00000; valaddr_reg:x3; val_offset:106056*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106056*0 + 3*24*FLEN/8, x4, x1, x2)

inst_35353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaef00000; valaddr_reg:x3; val_offset:106059*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106059*0 + 3*25*FLEN/8, x4, x1, x2)

inst_35354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaef80000; valaddr_reg:x3; val_offset:106062*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106062*0 + 3*26*FLEN/8, x4, x1, x2)

inst_35355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefc0000; valaddr_reg:x3; val_offset:106065*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106065*0 + 3*27*FLEN/8, x4, x1, x2)

inst_35356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefe0000; valaddr_reg:x3; val_offset:106068*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106068*0 + 3*28*FLEN/8, x4, x1, x2)

inst_35357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaeff0000; valaddr_reg:x3; val_offset:106071*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106071*0 + 3*29*FLEN/8, x4, x1, x2)

inst_35358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaeff8000; valaddr_reg:x3; val_offset:106074*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106074*0 + 3*30*FLEN/8, x4, x1, x2)

inst_35359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaeffc000; valaddr_reg:x3; val_offset:106077*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106077*0 + 3*31*FLEN/8, x4, x1, x2)

inst_35360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaeffe000; valaddr_reg:x3; val_offset:106080*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106080*0 + 3*32*FLEN/8, x4, x1, x2)

inst_35361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefff000; valaddr_reg:x3; val_offset:106083*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106083*0 + 3*33*FLEN/8, x4, x1, x2)

inst_35362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefff800; valaddr_reg:x3; val_offset:106086*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106086*0 + 3*34*FLEN/8, x4, x1, x2)

inst_35363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefffc00; valaddr_reg:x3; val_offset:106089*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106089*0 + 3*35*FLEN/8, x4, x1, x2)

inst_35364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefffe00; valaddr_reg:x3; val_offset:106092*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106092*0 + 3*36*FLEN/8, x4, x1, x2)

inst_35365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaeffff00; valaddr_reg:x3; val_offset:106095*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106095*0 + 3*37*FLEN/8, x4, x1, x2)

inst_35366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaeffff80; valaddr_reg:x3; val_offset:106098*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106098*0 + 3*38*FLEN/8, x4, x1, x2)

inst_35367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaeffffc0; valaddr_reg:x3; val_offset:106101*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106101*0 + 3*39*FLEN/8, x4, x1, x2)

inst_35368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaeffffe0; valaddr_reg:x3; val_offset:106104*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106104*0 + 3*40*FLEN/8, x4, x1, x2)

inst_35369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefffff0; valaddr_reg:x3; val_offset:106107*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106107*0 + 3*41*FLEN/8, x4, x1, x2)

inst_35370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefffff8; valaddr_reg:x3; val_offset:106110*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106110*0 + 3*42*FLEN/8, x4, x1, x2)

inst_35371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefffffc; valaddr_reg:x3; val_offset:106113*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106113*0 + 3*43*FLEN/8, x4, x1, x2)

inst_35372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaefffffe; valaddr_reg:x3; val_offset:106116*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106116*0 + 3*44*FLEN/8, x4, x1, x2)

inst_35373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x5d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xaeffffff; valaddr_reg:x3; val_offset:106119*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106119*0 + 3*45*FLEN/8, x4, x1, x2)

inst_35374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbf800001; valaddr_reg:x3; val_offset:106122*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106122*0 + 3*46*FLEN/8, x4, x1, x2)

inst_35375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbf800003; valaddr_reg:x3; val_offset:106125*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106125*0 + 3*47*FLEN/8, x4, x1, x2)

inst_35376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbf800007; valaddr_reg:x3; val_offset:106128*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106128*0 + 3*48*FLEN/8, x4, x1, x2)

inst_35377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbf999999; valaddr_reg:x3; val_offset:106131*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106131*0 + 3*49*FLEN/8, x4, x1, x2)

inst_35378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:106134*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106134*0 + 3*50*FLEN/8, x4, x1, x2)

inst_35379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:106137*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106137*0 + 3*51*FLEN/8, x4, x1, x2)

inst_35380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:106140*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106140*0 + 3*52*FLEN/8, x4, x1, x2)

inst_35381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:106143*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106143*0 + 3*53*FLEN/8, x4, x1, x2)

inst_35382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:106146*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106146*0 + 3*54*FLEN/8, x4, x1, x2)

inst_35383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:106149*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106149*0 + 3*55*FLEN/8, x4, x1, x2)

inst_35384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:106152*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106152*0 + 3*56*FLEN/8, x4, x1, x2)

inst_35385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:106155*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106155*0 + 3*57*FLEN/8, x4, x1, x2)

inst_35386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:106158*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106158*0 + 3*58*FLEN/8, x4, x1, x2)

inst_35387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:106161*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106161*0 + 3*59*FLEN/8, x4, x1, x2)

inst_35388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:106164*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106164*0 + 3*60*FLEN/8, x4, x1, x2)

inst_35389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e2eed and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31614f; op2val:0x802e2eed;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:106167*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106167*0 + 3*61*FLEN/8, x4, x1, x2)

inst_35390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:106170*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106170*0 + 3*62*FLEN/8, x4, x1, x2)

inst_35391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:106173*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106173*0 + 3*63*FLEN/8, x4, x1, x2)

inst_35392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:106176*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106176*0 + 3*64*FLEN/8, x4, x1, x2)

inst_35393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:106179*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106179*0 + 3*65*FLEN/8, x4, x1, x2)

inst_35394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:106182*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106182*0 + 3*66*FLEN/8, x4, x1, x2)

inst_35395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:106185*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106185*0 + 3*67*FLEN/8, x4, x1, x2)

inst_35396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:106188*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106188*0 + 3*68*FLEN/8, x4, x1, x2)

inst_35397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:106191*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106191*0 + 3*69*FLEN/8, x4, x1, x2)

inst_35398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:106194*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106194*0 + 3*70*FLEN/8, x4, x1, x2)

inst_35399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:106197*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106197*0 + 3*71*FLEN/8, x4, x1, x2)

inst_35400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:106200*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106200*0 + 3*72*FLEN/8, x4, x1, x2)

inst_35401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:106203*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106203*0 + 3*73*FLEN/8, x4, x1, x2)

inst_35402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:106206*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106206*0 + 3*74*FLEN/8, x4, x1, x2)

inst_35403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:106209*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106209*0 + 3*75*FLEN/8, x4, x1, x2)

inst_35404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:106212*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106212*0 + 3*76*FLEN/8, x4, x1, x2)

inst_35405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:106215*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106215*0 + 3*77*FLEN/8, x4, x1, x2)

inst_35406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1000000; valaddr_reg:x3; val_offset:106218*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106218*0 + 3*78*FLEN/8, x4, x1, x2)

inst_35407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1000001; valaddr_reg:x3; val_offset:106221*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106221*0 + 3*79*FLEN/8, x4, x1, x2)

inst_35408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1000003; valaddr_reg:x3; val_offset:106224*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106224*0 + 3*80*FLEN/8, x4, x1, x2)

inst_35409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1000007; valaddr_reg:x3; val_offset:106227*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106227*0 + 3*81*FLEN/8, x4, x1, x2)

inst_35410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x100000f; valaddr_reg:x3; val_offset:106230*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106230*0 + 3*82*FLEN/8, x4, x1, x2)

inst_35411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x100001f; valaddr_reg:x3; val_offset:106233*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106233*0 + 3*83*FLEN/8, x4, x1, x2)

inst_35412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x100003f; valaddr_reg:x3; val_offset:106236*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106236*0 + 3*84*FLEN/8, x4, x1, x2)

inst_35413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x100007f; valaddr_reg:x3; val_offset:106239*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106239*0 + 3*85*FLEN/8, x4, x1, x2)

inst_35414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x10000ff; valaddr_reg:x3; val_offset:106242*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106242*0 + 3*86*FLEN/8, x4, x1, x2)

inst_35415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x10001ff; valaddr_reg:x3; val_offset:106245*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106245*0 + 3*87*FLEN/8, x4, x1, x2)

inst_35416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x10003ff; valaddr_reg:x3; val_offset:106248*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106248*0 + 3*88*FLEN/8, x4, x1, x2)

inst_35417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x10007ff; valaddr_reg:x3; val_offset:106251*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106251*0 + 3*89*FLEN/8, x4, x1, x2)

inst_35418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1000fff; valaddr_reg:x3; val_offset:106254*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106254*0 + 3*90*FLEN/8, x4, x1, x2)

inst_35419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1001fff; valaddr_reg:x3; val_offset:106257*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106257*0 + 3*91*FLEN/8, x4, x1, x2)

inst_35420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1003fff; valaddr_reg:x3; val_offset:106260*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106260*0 + 3*92*FLEN/8, x4, x1, x2)

inst_35421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1007fff; valaddr_reg:x3; val_offset:106263*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106263*0 + 3*93*FLEN/8, x4, x1, x2)

inst_35422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x100ffff; valaddr_reg:x3; val_offset:106266*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106266*0 + 3*94*FLEN/8, x4, x1, x2)

inst_35423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x101ffff; valaddr_reg:x3; val_offset:106269*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106269*0 + 3*95*FLEN/8, x4, x1, x2)

inst_35424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x103ffff; valaddr_reg:x3; val_offset:106272*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106272*0 + 3*96*FLEN/8, x4, x1, x2)

inst_35425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x107ffff; valaddr_reg:x3; val_offset:106275*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106275*0 + 3*97*FLEN/8, x4, x1, x2)

inst_35426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x10fffff; valaddr_reg:x3; val_offset:106278*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106278*0 + 3*98*FLEN/8, x4, x1, x2)

inst_35427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x11fffff; valaddr_reg:x3; val_offset:106281*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106281*0 + 3*99*FLEN/8, x4, x1, x2)

inst_35428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x13fffff; valaddr_reg:x3; val_offset:106284*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106284*0 + 3*100*FLEN/8, x4, x1, x2)

inst_35429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1400000; valaddr_reg:x3; val_offset:106287*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106287*0 + 3*101*FLEN/8, x4, x1, x2)

inst_35430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1600000; valaddr_reg:x3; val_offset:106290*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106290*0 + 3*102*FLEN/8, x4, x1, x2)

inst_35431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1700000; valaddr_reg:x3; val_offset:106293*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106293*0 + 3*103*FLEN/8, x4, x1, x2)

inst_35432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x1780000; valaddr_reg:x3; val_offset:106296*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106296*0 + 3*104*FLEN/8, x4, x1, x2)

inst_35433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17c0000; valaddr_reg:x3; val_offset:106299*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106299*0 + 3*105*FLEN/8, x4, x1, x2)

inst_35434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17e0000; valaddr_reg:x3; val_offset:106302*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106302*0 + 3*106*FLEN/8, x4, x1, x2)

inst_35435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17f0000; valaddr_reg:x3; val_offset:106305*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106305*0 + 3*107*FLEN/8, x4, x1, x2)

inst_35436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17f8000; valaddr_reg:x3; val_offset:106308*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106308*0 + 3*108*FLEN/8, x4, x1, x2)

inst_35437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17fc000; valaddr_reg:x3; val_offset:106311*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106311*0 + 3*109*FLEN/8, x4, x1, x2)

inst_35438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17fe000; valaddr_reg:x3; val_offset:106314*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106314*0 + 3*110*FLEN/8, x4, x1, x2)

inst_35439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17ff000; valaddr_reg:x3; val_offset:106317*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106317*0 + 3*111*FLEN/8, x4, x1, x2)

inst_35440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17ff800; valaddr_reg:x3; val_offset:106320*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106320*0 + 3*112*FLEN/8, x4, x1, x2)

inst_35441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17ffc00; valaddr_reg:x3; val_offset:106323*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106323*0 + 3*113*FLEN/8, x4, x1, x2)

inst_35442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17ffe00; valaddr_reg:x3; val_offset:106326*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106326*0 + 3*114*FLEN/8, x4, x1, x2)

inst_35443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17fff00; valaddr_reg:x3; val_offset:106329*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106329*0 + 3*115*FLEN/8, x4, x1, x2)

inst_35444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17fff80; valaddr_reg:x3; val_offset:106332*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106332*0 + 3*116*FLEN/8, x4, x1, x2)

inst_35445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17fffc0; valaddr_reg:x3; val_offset:106335*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106335*0 + 3*117*FLEN/8, x4, x1, x2)

inst_35446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17fffe0; valaddr_reg:x3; val_offset:106338*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106338*0 + 3*118*FLEN/8, x4, x1, x2)

inst_35447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17ffff0; valaddr_reg:x3; val_offset:106341*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106341*0 + 3*119*FLEN/8, x4, x1, x2)

inst_35448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17ffff8; valaddr_reg:x3; val_offset:106344*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106344*0 + 3*120*FLEN/8, x4, x1, x2)

inst_35449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17ffffc; valaddr_reg:x3; val_offset:106347*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106347*0 + 3*121*FLEN/8, x4, x1, x2)

inst_35450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17ffffe; valaddr_reg:x3; val_offset:106350*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106350*0 + 3*122*FLEN/8, x4, x1, x2)

inst_35451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31651b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x02 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31651b; op2val:0x0;
op3val:0x17fffff; valaddr_reg:x3; val_offset:106353*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106353*0 + 3*123*FLEN/8, x4, x1, x2)

inst_35452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:106356*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106356*0 + 3*124*FLEN/8, x4, x1, x2)

inst_35453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:106359*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106359*0 + 3*125*FLEN/8, x4, x1, x2)

inst_35454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:106362*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106362*0 + 3*126*FLEN/8, x4, x1, x2)

inst_35455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:106365*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106365*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_35456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:106368*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106368*0 + 3*128*FLEN/8, x4, x1, x2)

inst_35457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:106371*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106371*0 + 3*129*FLEN/8, x4, x1, x2)

inst_35458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:106374*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106374*0 + 3*130*FLEN/8, x4, x1, x2)

inst_35459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:106377*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106377*0 + 3*131*FLEN/8, x4, x1, x2)

inst_35460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:106380*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106380*0 + 3*132*FLEN/8, x4, x1, x2)

inst_35461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:106383*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106383*0 + 3*133*FLEN/8, x4, x1, x2)

inst_35462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:106386*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106386*0 + 3*134*FLEN/8, x4, x1, x2)

inst_35463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:106389*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106389*0 + 3*135*FLEN/8, x4, x1, x2)

inst_35464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:106392*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106392*0 + 3*136*FLEN/8, x4, x1, x2)

inst_35465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:106395*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106395*0 + 3*137*FLEN/8, x4, x1, x2)

inst_35466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:106398*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106398*0 + 3*138*FLEN/8, x4, x1, x2)

inst_35467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:106401*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106401*0 + 3*139*FLEN/8, x4, x1, x2)

inst_35468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7800000; valaddr_reg:x3; val_offset:106404*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106404*0 + 3*140*FLEN/8, x4, x1, x2)

inst_35469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7800001; valaddr_reg:x3; val_offset:106407*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106407*0 + 3*141*FLEN/8, x4, x1, x2)

inst_35470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7800003; valaddr_reg:x3; val_offset:106410*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106410*0 + 3*142*FLEN/8, x4, x1, x2)

inst_35471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7800007; valaddr_reg:x3; val_offset:106413*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106413*0 + 3*143*FLEN/8, x4, x1, x2)

inst_35472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x780000f; valaddr_reg:x3; val_offset:106416*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106416*0 + 3*144*FLEN/8, x4, x1, x2)

inst_35473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x780001f; valaddr_reg:x3; val_offset:106419*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106419*0 + 3*145*FLEN/8, x4, x1, x2)

inst_35474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x780003f; valaddr_reg:x3; val_offset:106422*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106422*0 + 3*146*FLEN/8, x4, x1, x2)

inst_35475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x780007f; valaddr_reg:x3; val_offset:106425*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106425*0 + 3*147*FLEN/8, x4, x1, x2)

inst_35476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x78000ff; valaddr_reg:x3; val_offset:106428*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106428*0 + 3*148*FLEN/8, x4, x1, x2)

inst_35477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x78001ff; valaddr_reg:x3; val_offset:106431*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106431*0 + 3*149*FLEN/8, x4, x1, x2)

inst_35478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x78003ff; valaddr_reg:x3; val_offset:106434*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106434*0 + 3*150*FLEN/8, x4, x1, x2)

inst_35479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x78007ff; valaddr_reg:x3; val_offset:106437*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106437*0 + 3*151*FLEN/8, x4, x1, x2)

inst_35480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7800fff; valaddr_reg:x3; val_offset:106440*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106440*0 + 3*152*FLEN/8, x4, x1, x2)

inst_35481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7801fff; valaddr_reg:x3; val_offset:106443*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106443*0 + 3*153*FLEN/8, x4, x1, x2)

inst_35482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7803fff; valaddr_reg:x3; val_offset:106446*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106446*0 + 3*154*FLEN/8, x4, x1, x2)

inst_35483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7807fff; valaddr_reg:x3; val_offset:106449*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106449*0 + 3*155*FLEN/8, x4, x1, x2)

inst_35484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x780ffff; valaddr_reg:x3; val_offset:106452*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106452*0 + 3*156*FLEN/8, x4, x1, x2)

inst_35485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x781ffff; valaddr_reg:x3; val_offset:106455*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106455*0 + 3*157*FLEN/8, x4, x1, x2)

inst_35486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x783ffff; valaddr_reg:x3; val_offset:106458*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106458*0 + 3*158*FLEN/8, x4, x1, x2)

inst_35487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x787ffff; valaddr_reg:x3; val_offset:106461*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106461*0 + 3*159*FLEN/8, x4, x1, x2)

inst_35488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x78fffff; valaddr_reg:x3; val_offset:106464*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106464*0 + 3*160*FLEN/8, x4, x1, x2)

inst_35489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x79fffff; valaddr_reg:x3; val_offset:106467*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106467*0 + 3*161*FLEN/8, x4, x1, x2)

inst_35490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7bfffff; valaddr_reg:x3; val_offset:106470*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106470*0 + 3*162*FLEN/8, x4, x1, x2)

inst_35491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7c00000; valaddr_reg:x3; val_offset:106473*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106473*0 + 3*163*FLEN/8, x4, x1, x2)

inst_35492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7e00000; valaddr_reg:x3; val_offset:106476*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106476*0 + 3*164*FLEN/8, x4, x1, x2)

inst_35493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7f00000; valaddr_reg:x3; val_offset:106479*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106479*0 + 3*165*FLEN/8, x4, x1, x2)

inst_35494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7f80000; valaddr_reg:x3; val_offset:106482*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106482*0 + 3*166*FLEN/8, x4, x1, x2)

inst_35495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fc0000; valaddr_reg:x3; val_offset:106485*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106485*0 + 3*167*FLEN/8, x4, x1, x2)

inst_35496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fe0000; valaddr_reg:x3; val_offset:106488*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106488*0 + 3*168*FLEN/8, x4, x1, x2)

inst_35497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ff0000; valaddr_reg:x3; val_offset:106491*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106491*0 + 3*169*FLEN/8, x4, x1, x2)

inst_35498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ff8000; valaddr_reg:x3; val_offset:106494*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106494*0 + 3*170*FLEN/8, x4, x1, x2)

inst_35499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffc000; valaddr_reg:x3; val_offset:106497*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106497*0 + 3*171*FLEN/8, x4, x1, x2)

inst_35500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffe000; valaddr_reg:x3; val_offset:106500*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106500*0 + 3*172*FLEN/8, x4, x1, x2)

inst_35501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fff000; valaddr_reg:x3; val_offset:106503*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106503*0 + 3*173*FLEN/8, x4, x1, x2)

inst_35502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fff800; valaddr_reg:x3; val_offset:106506*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106506*0 + 3*174*FLEN/8, x4, x1, x2)

inst_35503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fffc00; valaddr_reg:x3; val_offset:106509*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106509*0 + 3*175*FLEN/8, x4, x1, x2)

inst_35504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fffe00; valaddr_reg:x3; val_offset:106512*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106512*0 + 3*176*FLEN/8, x4, x1, x2)

inst_35505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffff00; valaddr_reg:x3; val_offset:106515*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106515*0 + 3*177*FLEN/8, x4, x1, x2)

inst_35506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffff80; valaddr_reg:x3; val_offset:106518*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106518*0 + 3*178*FLEN/8, x4, x1, x2)

inst_35507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffffc0; valaddr_reg:x3; val_offset:106521*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106521*0 + 3*179*FLEN/8, x4, x1, x2)

inst_35508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffffe0; valaddr_reg:x3; val_offset:106524*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106524*0 + 3*180*FLEN/8, x4, x1, x2)

inst_35509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fffff0; valaddr_reg:x3; val_offset:106527*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106527*0 + 3*181*FLEN/8, x4, x1, x2)

inst_35510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fffff8; valaddr_reg:x3; val_offset:106530*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106530*0 + 3*182*FLEN/8, x4, x1, x2)

inst_35511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fffffc; valaddr_reg:x3; val_offset:106533*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106533*0 + 3*183*FLEN/8, x4, x1, x2)

inst_35512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7fffffe; valaddr_reg:x3; val_offset:106536*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106536*0 + 3*184*FLEN/8, x4, x1, x2)

inst_35513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31c2a9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31c2a9; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:106539*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106539*0 + 3*185*FLEN/8, x4, x1, x2)

inst_35514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77000000; valaddr_reg:x3; val_offset:106542*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106542*0 + 3*186*FLEN/8, x4, x1, x2)

inst_35515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77000001; valaddr_reg:x3; val_offset:106545*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106545*0 + 3*187*FLEN/8, x4, x1, x2)

inst_35516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77000003; valaddr_reg:x3; val_offset:106548*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106548*0 + 3*188*FLEN/8, x4, x1, x2)

inst_35517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77000007; valaddr_reg:x3; val_offset:106551*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106551*0 + 3*189*FLEN/8, x4, x1, x2)

inst_35518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7700000f; valaddr_reg:x3; val_offset:106554*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106554*0 + 3*190*FLEN/8, x4, x1, x2)

inst_35519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7700001f; valaddr_reg:x3; val_offset:106557*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106557*0 + 3*191*FLEN/8, x4, x1, x2)

inst_35520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7700003f; valaddr_reg:x3; val_offset:106560*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106560*0 + 3*192*FLEN/8, x4, x1, x2)

inst_35521:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7700007f; valaddr_reg:x3; val_offset:106563*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106563*0 + 3*193*FLEN/8, x4, x1, x2)

inst_35522:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x770000ff; valaddr_reg:x3; val_offset:106566*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106566*0 + 3*194*FLEN/8, x4, x1, x2)

inst_35523:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x770001ff; valaddr_reg:x3; val_offset:106569*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106569*0 + 3*195*FLEN/8, x4, x1, x2)

inst_35524:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x770003ff; valaddr_reg:x3; val_offset:106572*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106572*0 + 3*196*FLEN/8, x4, x1, x2)

inst_35525:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x770007ff; valaddr_reg:x3; val_offset:106575*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106575*0 + 3*197*FLEN/8, x4, x1, x2)

inst_35526:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77000fff; valaddr_reg:x3; val_offset:106578*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106578*0 + 3*198*FLEN/8, x4, x1, x2)

inst_35527:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77001fff; valaddr_reg:x3; val_offset:106581*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106581*0 + 3*199*FLEN/8, x4, x1, x2)

inst_35528:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77003fff; valaddr_reg:x3; val_offset:106584*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106584*0 + 3*200*FLEN/8, x4, x1, x2)

inst_35529:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77007fff; valaddr_reg:x3; val_offset:106587*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106587*0 + 3*201*FLEN/8, x4, x1, x2)

inst_35530:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7700ffff; valaddr_reg:x3; val_offset:106590*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106590*0 + 3*202*FLEN/8, x4, x1, x2)

inst_35531:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7701ffff; valaddr_reg:x3; val_offset:106593*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106593*0 + 3*203*FLEN/8, x4, x1, x2)

inst_35532:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7703ffff; valaddr_reg:x3; val_offset:106596*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106596*0 + 3*204*FLEN/8, x4, x1, x2)

inst_35533:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7707ffff; valaddr_reg:x3; val_offset:106599*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106599*0 + 3*205*FLEN/8, x4, x1, x2)

inst_35534:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x770fffff; valaddr_reg:x3; val_offset:106602*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106602*0 + 3*206*FLEN/8, x4, x1, x2)

inst_35535:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x771fffff; valaddr_reg:x3; val_offset:106605*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106605*0 + 3*207*FLEN/8, x4, x1, x2)

inst_35536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x773fffff; valaddr_reg:x3; val_offset:106608*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106608*0 + 3*208*FLEN/8, x4, x1, x2)

inst_35537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77400000; valaddr_reg:x3; val_offset:106611*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106611*0 + 3*209*FLEN/8, x4, x1, x2)

inst_35538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77600000; valaddr_reg:x3; val_offset:106614*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106614*0 + 3*210*FLEN/8, x4, x1, x2)

inst_35539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77700000; valaddr_reg:x3; val_offset:106617*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106617*0 + 3*211*FLEN/8, x4, x1, x2)

inst_35540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x77780000; valaddr_reg:x3; val_offset:106620*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106620*0 + 3*212*FLEN/8, x4, x1, x2)

inst_35541:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777c0000; valaddr_reg:x3; val_offset:106623*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106623*0 + 3*213*FLEN/8, x4, x1, x2)

inst_35542:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777e0000; valaddr_reg:x3; val_offset:106626*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106626*0 + 3*214*FLEN/8, x4, x1, x2)

inst_35543:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777f0000; valaddr_reg:x3; val_offset:106629*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106629*0 + 3*215*FLEN/8, x4, x1, x2)

inst_35544:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777f8000; valaddr_reg:x3; val_offset:106632*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106632*0 + 3*216*FLEN/8, x4, x1, x2)

inst_35545:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777fc000; valaddr_reg:x3; val_offset:106635*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106635*0 + 3*217*FLEN/8, x4, x1, x2)

inst_35546:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777fe000; valaddr_reg:x3; val_offset:106638*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106638*0 + 3*218*FLEN/8, x4, x1, x2)

inst_35547:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777ff000; valaddr_reg:x3; val_offset:106641*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106641*0 + 3*219*FLEN/8, x4, x1, x2)

inst_35548:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777ff800; valaddr_reg:x3; val_offset:106644*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106644*0 + 3*220*FLEN/8, x4, x1, x2)

inst_35549:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777ffc00; valaddr_reg:x3; val_offset:106647*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106647*0 + 3*221*FLEN/8, x4, x1, x2)

inst_35550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777ffe00; valaddr_reg:x3; val_offset:106650*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106650*0 + 3*222*FLEN/8, x4, x1, x2)

inst_35551:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777fff00; valaddr_reg:x3; val_offset:106653*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106653*0 + 3*223*FLEN/8, x4, x1, x2)

inst_35552:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777fff80; valaddr_reg:x3; val_offset:106656*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106656*0 + 3*224*FLEN/8, x4, x1, x2)

inst_35553:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777fffc0; valaddr_reg:x3; val_offset:106659*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106659*0 + 3*225*FLEN/8, x4, x1, x2)

inst_35554:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777fffe0; valaddr_reg:x3; val_offset:106662*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106662*0 + 3*226*FLEN/8, x4, x1, x2)

inst_35555:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777ffff0; valaddr_reg:x3; val_offset:106665*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106665*0 + 3*227*FLEN/8, x4, x1, x2)

inst_35556:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777ffff8; valaddr_reg:x3; val_offset:106668*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106668*0 + 3*228*FLEN/8, x4, x1, x2)

inst_35557:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777ffffc; valaddr_reg:x3; val_offset:106671*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106671*0 + 3*229*FLEN/8, x4, x1, x2)

inst_35558:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777ffffe; valaddr_reg:x3; val_offset:106674*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106674*0 + 3*230*FLEN/8, x4, x1, x2)

inst_35559:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xee and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x777fffff; valaddr_reg:x3; val_offset:106677*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106677*0 + 3*231*FLEN/8, x4, x1, x2)

inst_35560:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f000001; valaddr_reg:x3; val_offset:106680*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106680*0 + 3*232*FLEN/8, x4, x1, x2)

inst_35561:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f000003; valaddr_reg:x3; val_offset:106683*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106683*0 + 3*233*FLEN/8, x4, x1, x2)

inst_35562:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f000007; valaddr_reg:x3; val_offset:106686*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106686*0 + 3*234*FLEN/8, x4, x1, x2)

inst_35563:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f199999; valaddr_reg:x3; val_offset:106689*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106689*0 + 3*235*FLEN/8, x4, x1, x2)

inst_35564:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f249249; valaddr_reg:x3; val_offset:106692*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106692*0 + 3*236*FLEN/8, x4, x1, x2)

inst_35565:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f333333; valaddr_reg:x3; val_offset:106695*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106695*0 + 3*237*FLEN/8, x4, x1, x2)

inst_35566:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:106698*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106698*0 + 3*238*FLEN/8, x4, x1, x2)

inst_35567:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:106701*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106701*0 + 3*239*FLEN/8, x4, x1, x2)

inst_35568:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f444444; valaddr_reg:x3; val_offset:106704*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106704*0 + 3*240*FLEN/8, x4, x1, x2)

inst_35569:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:106707*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106707*0 + 3*241*FLEN/8, x4, x1, x2)

inst_35570:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:106710*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106710*0 + 3*242*FLEN/8, x4, x1, x2)

inst_35571:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f666666; valaddr_reg:x3; val_offset:106713*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106713*0 + 3*243*FLEN/8, x4, x1, x2)

inst_35572:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:106716*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106716*0 + 3*244*FLEN/8, x4, x1, x2)

inst_35573:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:106719*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106719*0 + 3*245*FLEN/8, x4, x1, x2)

inst_35574:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:106722*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106722*0 + 3*246*FLEN/8, x4, x1, x2)

inst_35575:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31cd1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x384bb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31cd1b; op2val:0x3fb84bb3;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:106725*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106725*0 + 3*247*FLEN/8, x4, x1, x2)

inst_35576:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf000000; valaddr_reg:x3; val_offset:106728*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106728*0 + 3*248*FLEN/8, x4, x1, x2)

inst_35577:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf000001; valaddr_reg:x3; val_offset:106731*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106731*0 + 3*249*FLEN/8, x4, x1, x2)

inst_35578:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf000003; valaddr_reg:x3; val_offset:106734*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106734*0 + 3*250*FLEN/8, x4, x1, x2)

inst_35579:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf000007; valaddr_reg:x3; val_offset:106737*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106737*0 + 3*251*FLEN/8, x4, x1, x2)

inst_35580:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf00000f; valaddr_reg:x3; val_offset:106740*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106740*0 + 3*252*FLEN/8, x4, x1, x2)

inst_35581:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf00001f; valaddr_reg:x3; val_offset:106743*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106743*0 + 3*253*FLEN/8, x4, x1, x2)

inst_35582:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf00003f; valaddr_reg:x3; val_offset:106746*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106746*0 + 3*254*FLEN/8, x4, x1, x2)

inst_35583:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf00007f; valaddr_reg:x3; val_offset:106749*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106749*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_35584:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf0000ff; valaddr_reg:x3; val_offset:106752*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106752*0 + 3*256*FLEN/8, x4, x1, x2)

inst_35585:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf0001ff; valaddr_reg:x3; val_offset:106755*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106755*0 + 3*257*FLEN/8, x4, x1, x2)

inst_35586:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf0003ff; valaddr_reg:x3; val_offset:106758*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106758*0 + 3*258*FLEN/8, x4, x1, x2)

inst_35587:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf0007ff; valaddr_reg:x3; val_offset:106761*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106761*0 + 3*259*FLEN/8, x4, x1, x2)

inst_35588:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf000fff; valaddr_reg:x3; val_offset:106764*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106764*0 + 3*260*FLEN/8, x4, x1, x2)

inst_35589:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf001fff; valaddr_reg:x3; val_offset:106767*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106767*0 + 3*261*FLEN/8, x4, x1, x2)

inst_35590:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf003fff; valaddr_reg:x3; val_offset:106770*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106770*0 + 3*262*FLEN/8, x4, x1, x2)

inst_35591:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf007fff; valaddr_reg:x3; val_offset:106773*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106773*0 + 3*263*FLEN/8, x4, x1, x2)

inst_35592:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf00ffff; valaddr_reg:x3; val_offset:106776*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106776*0 + 3*264*FLEN/8, x4, x1, x2)

inst_35593:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf01ffff; valaddr_reg:x3; val_offset:106779*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106779*0 + 3*265*FLEN/8, x4, x1, x2)

inst_35594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf03ffff; valaddr_reg:x3; val_offset:106782*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106782*0 + 3*266*FLEN/8, x4, x1, x2)

inst_35595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf07ffff; valaddr_reg:x3; val_offset:106785*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106785*0 + 3*267*FLEN/8, x4, x1, x2)

inst_35596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf0fffff; valaddr_reg:x3; val_offset:106788*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106788*0 + 3*268*FLEN/8, x4, x1, x2)

inst_35597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf1fffff; valaddr_reg:x3; val_offset:106791*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106791*0 + 3*269*FLEN/8, x4, x1, x2)

inst_35598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf3fffff; valaddr_reg:x3; val_offset:106794*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106794*0 + 3*270*FLEN/8, x4, x1, x2)

inst_35599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf400000; valaddr_reg:x3; val_offset:106797*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106797*0 + 3*271*FLEN/8, x4, x1, x2)

inst_35600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf600000; valaddr_reg:x3; val_offset:106800*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106800*0 + 3*272*FLEN/8, x4, x1, x2)

inst_35601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf700000; valaddr_reg:x3; val_offset:106803*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106803*0 + 3*273*FLEN/8, x4, x1, x2)

inst_35602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf780000; valaddr_reg:x3; val_offset:106806*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106806*0 + 3*274*FLEN/8, x4, x1, x2)

inst_35603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7c0000; valaddr_reg:x3; val_offset:106809*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106809*0 + 3*275*FLEN/8, x4, x1, x2)

inst_35604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7e0000; valaddr_reg:x3; val_offset:106812*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106812*0 + 3*276*FLEN/8, x4, x1, x2)

inst_35605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7f0000; valaddr_reg:x3; val_offset:106815*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106815*0 + 3*277*FLEN/8, x4, x1, x2)

inst_35606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7f8000; valaddr_reg:x3; val_offset:106818*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106818*0 + 3*278*FLEN/8, x4, x1, x2)

inst_35607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7fc000; valaddr_reg:x3; val_offset:106821*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106821*0 + 3*279*FLEN/8, x4, x1, x2)

inst_35608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7fe000; valaddr_reg:x3; val_offset:106824*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106824*0 + 3*280*FLEN/8, x4, x1, x2)

inst_35609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7ff000; valaddr_reg:x3; val_offset:106827*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106827*0 + 3*281*FLEN/8, x4, x1, x2)

inst_35610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7ff800; valaddr_reg:x3; val_offset:106830*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106830*0 + 3*282*FLEN/8, x4, x1, x2)

inst_35611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7ffc00; valaddr_reg:x3; val_offset:106833*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106833*0 + 3*283*FLEN/8, x4, x1, x2)

inst_35612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7ffe00; valaddr_reg:x3; val_offset:106836*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106836*0 + 3*284*FLEN/8, x4, x1, x2)

inst_35613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7fff00; valaddr_reg:x3; val_offset:106839*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106839*0 + 3*285*FLEN/8, x4, x1, x2)

inst_35614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7fff80; valaddr_reg:x3; val_offset:106842*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106842*0 + 3*286*FLEN/8, x4, x1, x2)

inst_35615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7fffc0; valaddr_reg:x3; val_offset:106845*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106845*0 + 3*287*FLEN/8, x4, x1, x2)

inst_35616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7fffe0; valaddr_reg:x3; val_offset:106848*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106848*0 + 3*288*FLEN/8, x4, x1, x2)

inst_35617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7ffff0; valaddr_reg:x3; val_offset:106851*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106851*0 + 3*289*FLEN/8, x4, x1, x2)

inst_35618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7ffff8; valaddr_reg:x3; val_offset:106854*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106854*0 + 3*290*FLEN/8, x4, x1, x2)

inst_35619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7ffffc; valaddr_reg:x3; val_offset:106857*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106857*0 + 3*291*FLEN/8, x4, x1, x2)

inst_35620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7ffffe; valaddr_reg:x3; val_offset:106860*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106860*0 + 3*292*FLEN/8, x4, x1, x2)

inst_35621:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xbe and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xdf7fffff; valaddr_reg:x3; val_offset:106863*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106863*0 + 3*293*FLEN/8, x4, x1, x2)

inst_35622:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff000001; valaddr_reg:x3; val_offset:106866*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106866*0 + 3*294*FLEN/8, x4, x1, x2)

inst_35623:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff000003; valaddr_reg:x3; val_offset:106869*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106869*0 + 3*295*FLEN/8, x4, x1, x2)

inst_35624:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff000007; valaddr_reg:x3; val_offset:106872*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106872*0 + 3*296*FLEN/8, x4, x1, x2)

inst_35625:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff199999; valaddr_reg:x3; val_offset:106875*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106875*0 + 3*297*FLEN/8, x4, x1, x2)

inst_35626:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff249249; valaddr_reg:x3; val_offset:106878*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106878*0 + 3*298*FLEN/8, x4, x1, x2)

inst_35627:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff333333; valaddr_reg:x3; val_offset:106881*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106881*0 + 3*299*FLEN/8, x4, x1, x2)

inst_35628:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:106884*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106884*0 + 3*300*FLEN/8, x4, x1, x2)

inst_35629:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:106887*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106887*0 + 3*301*FLEN/8, x4, x1, x2)

inst_35630:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff444444; valaddr_reg:x3; val_offset:106890*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106890*0 + 3*302*FLEN/8, x4, x1, x2)

inst_35631:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:106893*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106893*0 + 3*303*FLEN/8, x4, x1, x2)

inst_35632:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:106896*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106896*0 + 3*304*FLEN/8, x4, x1, x2)

inst_35633:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff666666; valaddr_reg:x3; val_offset:106899*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106899*0 + 3*305*FLEN/8, x4, x1, x2)

inst_35634:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:106902*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106902*0 + 3*306*FLEN/8, x4, x1, x2)

inst_35635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:106905*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106905*0 + 3*307*FLEN/8, x4, x1, x2)

inst_35636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:106908*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106908*0 + 3*308*FLEN/8, x4, x1, x2)

inst_35637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31fab5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x381c7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f31fab5; op2val:0xbfb81c7a;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:106911*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106911*0 + 3*309*FLEN/8, x4, x1, x2)

inst_35638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6800000; valaddr_reg:x3; val_offset:106914*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106914*0 + 3*310*FLEN/8, x4, x1, x2)

inst_35639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6800001; valaddr_reg:x3; val_offset:106917*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106917*0 + 3*311*FLEN/8, x4, x1, x2)

inst_35640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6800003; valaddr_reg:x3; val_offset:106920*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106920*0 + 3*312*FLEN/8, x4, x1, x2)

inst_35641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6800007; valaddr_reg:x3; val_offset:106923*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106923*0 + 3*313*FLEN/8, x4, x1, x2)

inst_35642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa680000f; valaddr_reg:x3; val_offset:106926*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106926*0 + 3*314*FLEN/8, x4, x1, x2)

inst_35643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa680001f; valaddr_reg:x3; val_offset:106929*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106929*0 + 3*315*FLEN/8, x4, x1, x2)

inst_35644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa680003f; valaddr_reg:x3; val_offset:106932*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106932*0 + 3*316*FLEN/8, x4, x1, x2)

inst_35645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa680007f; valaddr_reg:x3; val_offset:106935*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106935*0 + 3*317*FLEN/8, x4, x1, x2)

inst_35646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa68000ff; valaddr_reg:x3; val_offset:106938*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106938*0 + 3*318*FLEN/8, x4, x1, x2)

inst_35647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa68001ff; valaddr_reg:x3; val_offset:106941*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106941*0 + 3*319*FLEN/8, x4, x1, x2)

inst_35648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa68003ff; valaddr_reg:x3; val_offset:106944*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106944*0 + 3*320*FLEN/8, x4, x1, x2)

inst_35649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa68007ff; valaddr_reg:x3; val_offset:106947*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106947*0 + 3*321*FLEN/8, x4, x1, x2)

inst_35650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6800fff; valaddr_reg:x3; val_offset:106950*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106950*0 + 3*322*FLEN/8, x4, x1, x2)

inst_35651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6801fff; valaddr_reg:x3; val_offset:106953*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106953*0 + 3*323*FLEN/8, x4, x1, x2)

inst_35652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6803fff; valaddr_reg:x3; val_offset:106956*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106956*0 + 3*324*FLEN/8, x4, x1, x2)

inst_35653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6807fff; valaddr_reg:x3; val_offset:106959*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106959*0 + 3*325*FLEN/8, x4, x1, x2)

inst_35654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa680ffff; valaddr_reg:x3; val_offset:106962*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106962*0 + 3*326*FLEN/8, x4, x1, x2)

inst_35655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa681ffff; valaddr_reg:x3; val_offset:106965*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106965*0 + 3*327*FLEN/8, x4, x1, x2)

inst_35656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa683ffff; valaddr_reg:x3; val_offset:106968*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106968*0 + 3*328*FLEN/8, x4, x1, x2)

inst_35657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa687ffff; valaddr_reg:x3; val_offset:106971*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106971*0 + 3*329*FLEN/8, x4, x1, x2)

inst_35658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa68fffff; valaddr_reg:x3; val_offset:106974*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106974*0 + 3*330*FLEN/8, x4, x1, x2)

inst_35659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa69fffff; valaddr_reg:x3; val_offset:106977*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106977*0 + 3*331*FLEN/8, x4, x1, x2)

inst_35660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6bfffff; valaddr_reg:x3; val_offset:106980*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106980*0 + 3*332*FLEN/8, x4, x1, x2)

inst_35661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6c00000; valaddr_reg:x3; val_offset:106983*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106983*0 + 3*333*FLEN/8, x4, x1, x2)

inst_35662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6e00000; valaddr_reg:x3; val_offset:106986*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106986*0 + 3*334*FLEN/8, x4, x1, x2)

inst_35663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6f00000; valaddr_reg:x3; val_offset:106989*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106989*0 + 3*335*FLEN/8, x4, x1, x2)

inst_35664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6f80000; valaddr_reg:x3; val_offset:106992*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106992*0 + 3*336*FLEN/8, x4, x1, x2)

inst_35665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fc0000; valaddr_reg:x3; val_offset:106995*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106995*0 + 3*337*FLEN/8, x4, x1, x2)

inst_35666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fe0000; valaddr_reg:x3; val_offset:106998*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 106998*0 + 3*338*FLEN/8, x4, x1, x2)

inst_35667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6ff0000; valaddr_reg:x3; val_offset:107001*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107001*0 + 3*339*FLEN/8, x4, x1, x2)

inst_35668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6ff8000; valaddr_reg:x3; val_offset:107004*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107004*0 + 3*340*FLEN/8, x4, x1, x2)

inst_35669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6ffc000; valaddr_reg:x3; val_offset:107007*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107007*0 + 3*341*FLEN/8, x4, x1, x2)

inst_35670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6ffe000; valaddr_reg:x3; val_offset:107010*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107010*0 + 3*342*FLEN/8, x4, x1, x2)

inst_35671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fff000; valaddr_reg:x3; val_offset:107013*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107013*0 + 3*343*FLEN/8, x4, x1, x2)

inst_35672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fff800; valaddr_reg:x3; val_offset:107016*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107016*0 + 3*344*FLEN/8, x4, x1, x2)

inst_35673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fffc00; valaddr_reg:x3; val_offset:107019*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107019*0 + 3*345*FLEN/8, x4, x1, x2)

inst_35674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fffe00; valaddr_reg:x3; val_offset:107022*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107022*0 + 3*346*FLEN/8, x4, x1, x2)

inst_35675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6ffff00; valaddr_reg:x3; val_offset:107025*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107025*0 + 3*347*FLEN/8, x4, x1, x2)

inst_35676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6ffff80; valaddr_reg:x3; val_offset:107028*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107028*0 + 3*348*FLEN/8, x4, x1, x2)

inst_35677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6ffffc0; valaddr_reg:x3; val_offset:107031*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107031*0 + 3*349*FLEN/8, x4, x1, x2)

inst_35678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6ffffe0; valaddr_reg:x3; val_offset:107034*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107034*0 + 3*350*FLEN/8, x4, x1, x2)

inst_35679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fffff0; valaddr_reg:x3; val_offset:107037*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107037*0 + 3*351*FLEN/8, x4, x1, x2)

inst_35680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fffff8; valaddr_reg:x3; val_offset:107040*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107040*0 + 3*352*FLEN/8, x4, x1, x2)

inst_35681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fffffc; valaddr_reg:x3; val_offset:107043*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107043*0 + 3*353*FLEN/8, x4, x1, x2)

inst_35682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6fffffe; valaddr_reg:x3; val_offset:107046*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107046*0 + 3*354*FLEN/8, x4, x1, x2)

inst_35683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x4d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xa6ffffff; valaddr_reg:x3; val_offset:107049*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107049*0 + 3*355*FLEN/8, x4, x1, x2)

inst_35684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbf800001; valaddr_reg:x3; val_offset:107052*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107052*0 + 3*356*FLEN/8, x4, x1, x2)

inst_35685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbf800003; valaddr_reg:x3; val_offset:107055*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107055*0 + 3*357*FLEN/8, x4, x1, x2)

inst_35686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbf800007; valaddr_reg:x3; val_offset:107058*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107058*0 + 3*358*FLEN/8, x4, x1, x2)

inst_35687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbf999999; valaddr_reg:x3; val_offset:107061*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107061*0 + 3*359*FLEN/8, x4, x1, x2)

inst_35688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:107064*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107064*0 + 3*360*FLEN/8, x4, x1, x2)

inst_35689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:107067*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107067*0 + 3*361*FLEN/8, x4, x1, x2)

inst_35690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:107070*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107070*0 + 3*362*FLEN/8, x4, x1, x2)

inst_35691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:107073*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107073*0 + 3*363*FLEN/8, x4, x1, x2)

inst_35692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:107076*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107076*0 + 3*364*FLEN/8, x4, x1, x2)

inst_35693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:107079*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107079*0 + 3*365*FLEN/8, x4, x1, x2)

inst_35694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:107082*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107082*0 + 3*366*FLEN/8, x4, x1, x2)

inst_35695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:107085*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107085*0 + 3*367*FLEN/8, x4, x1, x2)

inst_35696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:107088*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107088*0 + 3*368*FLEN/8, x4, x1, x2)

inst_35697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:107091*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107091*0 + 3*369*FLEN/8, x4, x1, x2)

inst_35698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:107094*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107094*0 + 3*370*FLEN/8, x4, x1, x2)

inst_35699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2e0205 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f320e71; op2val:0x802e0205;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:107097*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107097*0 + 3*371*FLEN/8, x4, x1, x2)

inst_35700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:107100*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107100*0 + 3*372*FLEN/8, x4, x1, x2)

inst_35701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:107103*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107103*0 + 3*373*FLEN/8, x4, x1, x2)

inst_35702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:107106*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107106*0 + 3*374*FLEN/8, x4, x1, x2)

inst_35703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:107109*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107109*0 + 3*375*FLEN/8, x4, x1, x2)

inst_35704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:107112*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107112*0 + 3*376*FLEN/8, x4, x1, x2)

inst_35705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:107115*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107115*0 + 3*377*FLEN/8, x4, x1, x2)

inst_35706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:107118*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107118*0 + 3*378*FLEN/8, x4, x1, x2)

inst_35707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:107121*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107121*0 + 3*379*FLEN/8, x4, x1, x2)

inst_35708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:107124*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107124*0 + 3*380*FLEN/8, x4, x1, x2)

inst_35709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:107127*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107127*0 + 3*381*FLEN/8, x4, x1, x2)

inst_35710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:107130*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107130*0 + 3*382*FLEN/8, x4, x1, x2)

inst_35711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:107133*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107133*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_35712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:107136*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107136*0 + 3*384*FLEN/8, x4, x1, x2)

inst_35713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:107139*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107139*0 + 3*385*FLEN/8, x4, x1, x2)

inst_35714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:107142*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107142*0 + 3*386*FLEN/8, x4, x1, x2)

inst_35715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:107145*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107145*0 + 3*387*FLEN/8, x4, x1, x2)

inst_35716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86800000; valaddr_reg:x3; val_offset:107148*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107148*0 + 3*388*FLEN/8, x4, x1, x2)

inst_35717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86800001; valaddr_reg:x3; val_offset:107151*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107151*0 + 3*389*FLEN/8, x4, x1, x2)

inst_35718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86800003; valaddr_reg:x3; val_offset:107154*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107154*0 + 3*390*FLEN/8, x4, x1, x2)

inst_35719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86800007; valaddr_reg:x3; val_offset:107157*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107157*0 + 3*391*FLEN/8, x4, x1, x2)

inst_35720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x8680000f; valaddr_reg:x3; val_offset:107160*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107160*0 + 3*392*FLEN/8, x4, x1, x2)

inst_35721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x8680001f; valaddr_reg:x3; val_offset:107163*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107163*0 + 3*393*FLEN/8, x4, x1, x2)

inst_35722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x8680003f; valaddr_reg:x3; val_offset:107166*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107166*0 + 3*394*FLEN/8, x4, x1, x2)

inst_35723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x8680007f; valaddr_reg:x3; val_offset:107169*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107169*0 + 3*395*FLEN/8, x4, x1, x2)

inst_35724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x868000ff; valaddr_reg:x3; val_offset:107172*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107172*0 + 3*396*FLEN/8, x4, x1, x2)

inst_35725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x868001ff; valaddr_reg:x3; val_offset:107175*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107175*0 + 3*397*FLEN/8, x4, x1, x2)

inst_35726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x868003ff; valaddr_reg:x3; val_offset:107178*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107178*0 + 3*398*FLEN/8, x4, x1, x2)

inst_35727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x868007ff; valaddr_reg:x3; val_offset:107181*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107181*0 + 3*399*FLEN/8, x4, x1, x2)

inst_35728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86800fff; valaddr_reg:x3; val_offset:107184*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107184*0 + 3*400*FLEN/8, x4, x1, x2)

inst_35729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86801fff; valaddr_reg:x3; val_offset:107187*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107187*0 + 3*401*FLEN/8, x4, x1, x2)

inst_35730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86803fff; valaddr_reg:x3; val_offset:107190*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107190*0 + 3*402*FLEN/8, x4, x1, x2)

inst_35731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86807fff; valaddr_reg:x3; val_offset:107193*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107193*0 + 3*403*FLEN/8, x4, x1, x2)

inst_35732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x8680ffff; valaddr_reg:x3; val_offset:107196*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107196*0 + 3*404*FLEN/8, x4, x1, x2)

inst_35733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x8681ffff; valaddr_reg:x3; val_offset:107199*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107199*0 + 3*405*FLEN/8, x4, x1, x2)

inst_35734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x8683ffff; valaddr_reg:x3; val_offset:107202*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107202*0 + 3*406*FLEN/8, x4, x1, x2)

inst_35735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x8687ffff; valaddr_reg:x3; val_offset:107205*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107205*0 + 3*407*FLEN/8, x4, x1, x2)

inst_35736:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x868fffff; valaddr_reg:x3; val_offset:107208*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107208*0 + 3*408*FLEN/8, x4, x1, x2)

inst_35737:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x869fffff; valaddr_reg:x3; val_offset:107211*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107211*0 + 3*409*FLEN/8, x4, x1, x2)

inst_35738:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86bfffff; valaddr_reg:x3; val_offset:107214*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107214*0 + 3*410*FLEN/8, x4, x1, x2)

inst_35739:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86c00000; valaddr_reg:x3; val_offset:107217*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107217*0 + 3*411*FLEN/8, x4, x1, x2)

inst_35740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86e00000; valaddr_reg:x3; val_offset:107220*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107220*0 + 3*412*FLEN/8, x4, x1, x2)

inst_35741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86f00000; valaddr_reg:x3; val_offset:107223*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107223*0 + 3*413*FLEN/8, x4, x1, x2)

inst_35742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86f80000; valaddr_reg:x3; val_offset:107226*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107226*0 + 3*414*FLEN/8, x4, x1, x2)

inst_35743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fc0000; valaddr_reg:x3; val_offset:107229*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107229*0 + 3*415*FLEN/8, x4, x1, x2)

inst_35744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fe0000; valaddr_reg:x3; val_offset:107232*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107232*0 + 3*416*FLEN/8, x4, x1, x2)

inst_35745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86ff0000; valaddr_reg:x3; val_offset:107235*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107235*0 + 3*417*FLEN/8, x4, x1, x2)

inst_35746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86ff8000; valaddr_reg:x3; val_offset:107238*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107238*0 + 3*418*FLEN/8, x4, x1, x2)

inst_35747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86ffc000; valaddr_reg:x3; val_offset:107241*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107241*0 + 3*419*FLEN/8, x4, x1, x2)

inst_35748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86ffe000; valaddr_reg:x3; val_offset:107244*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107244*0 + 3*420*FLEN/8, x4, x1, x2)

inst_35749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fff000; valaddr_reg:x3; val_offset:107247*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107247*0 + 3*421*FLEN/8, x4, x1, x2)

inst_35750:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fff800; valaddr_reg:x3; val_offset:107250*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107250*0 + 3*422*FLEN/8, x4, x1, x2)

inst_35751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fffc00; valaddr_reg:x3; val_offset:107253*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107253*0 + 3*423*FLEN/8, x4, x1, x2)

inst_35752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fffe00; valaddr_reg:x3; val_offset:107256*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107256*0 + 3*424*FLEN/8, x4, x1, x2)

inst_35753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86ffff00; valaddr_reg:x3; val_offset:107259*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107259*0 + 3*425*FLEN/8, x4, x1, x2)

inst_35754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86ffff80; valaddr_reg:x3; val_offset:107262*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107262*0 + 3*426*FLEN/8, x4, x1, x2)

inst_35755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86ffffc0; valaddr_reg:x3; val_offset:107265*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107265*0 + 3*427*FLEN/8, x4, x1, x2)

inst_35756:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86ffffe0; valaddr_reg:x3; val_offset:107268*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107268*0 + 3*428*FLEN/8, x4, x1, x2)

inst_35757:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fffff0; valaddr_reg:x3; val_offset:107271*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107271*0 + 3*429*FLEN/8, x4, x1, x2)

inst_35758:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fffff8; valaddr_reg:x3; val_offset:107274*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107274*0 + 3*430*FLEN/8, x4, x1, x2)

inst_35759:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fffffc; valaddr_reg:x3; val_offset:107277*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107277*0 + 3*431*FLEN/8, x4, x1, x2)

inst_35760:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86fffffe; valaddr_reg:x3; val_offset:107280*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107280*0 + 3*432*FLEN/8, x4, x1, x2)

inst_35761:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f325b88; op2val:0x80000000;
op3val:0x86ffffff; valaddr_reg:x3; val_offset:107283*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107283*0 + 3*433*FLEN/8, x4, x1, x2)

inst_35762:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1800000; valaddr_reg:x3; val_offset:107286*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107286*0 + 3*434*FLEN/8, x4, x1, x2)

inst_35763:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1800001; valaddr_reg:x3; val_offset:107289*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107289*0 + 3*435*FLEN/8, x4, x1, x2)

inst_35764:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1800003; valaddr_reg:x3; val_offset:107292*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107292*0 + 3*436*FLEN/8, x4, x1, x2)

inst_35765:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1800007; valaddr_reg:x3; val_offset:107295*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107295*0 + 3*437*FLEN/8, x4, x1, x2)

inst_35766:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe180000f; valaddr_reg:x3; val_offset:107298*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107298*0 + 3*438*FLEN/8, x4, x1, x2)

inst_35767:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe180001f; valaddr_reg:x3; val_offset:107301*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107301*0 + 3*439*FLEN/8, x4, x1, x2)

inst_35768:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe180003f; valaddr_reg:x3; val_offset:107304*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107304*0 + 3*440*FLEN/8, x4, x1, x2)

inst_35769:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe180007f; valaddr_reg:x3; val_offset:107307*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107307*0 + 3*441*FLEN/8, x4, x1, x2)

inst_35770:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe18000ff; valaddr_reg:x3; val_offset:107310*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107310*0 + 3*442*FLEN/8, x4, x1, x2)

inst_35771:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe18001ff; valaddr_reg:x3; val_offset:107313*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107313*0 + 3*443*FLEN/8, x4, x1, x2)

inst_35772:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe18003ff; valaddr_reg:x3; val_offset:107316*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107316*0 + 3*444*FLEN/8, x4, x1, x2)

inst_35773:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe18007ff; valaddr_reg:x3; val_offset:107319*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107319*0 + 3*445*FLEN/8, x4, x1, x2)

inst_35774:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1800fff; valaddr_reg:x3; val_offset:107322*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107322*0 + 3*446*FLEN/8, x4, x1, x2)

inst_35775:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1801fff; valaddr_reg:x3; val_offset:107325*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107325*0 + 3*447*FLEN/8, x4, x1, x2)

inst_35776:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1803fff; valaddr_reg:x3; val_offset:107328*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107328*0 + 3*448*FLEN/8, x4, x1, x2)

inst_35777:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1807fff; valaddr_reg:x3; val_offset:107331*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107331*0 + 3*449*FLEN/8, x4, x1, x2)

inst_35778:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe180ffff; valaddr_reg:x3; val_offset:107334*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107334*0 + 3*450*FLEN/8, x4, x1, x2)

inst_35779:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe181ffff; valaddr_reg:x3; val_offset:107337*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107337*0 + 3*451*FLEN/8, x4, x1, x2)

inst_35780:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe183ffff; valaddr_reg:x3; val_offset:107340*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107340*0 + 3*452*FLEN/8, x4, x1, x2)

inst_35781:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe187ffff; valaddr_reg:x3; val_offset:107343*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107343*0 + 3*453*FLEN/8, x4, x1, x2)

inst_35782:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe18fffff; valaddr_reg:x3; val_offset:107346*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107346*0 + 3*454*FLEN/8, x4, x1, x2)

inst_35783:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe19fffff; valaddr_reg:x3; val_offset:107349*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107349*0 + 3*455*FLEN/8, x4, x1, x2)

inst_35784:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1bfffff; valaddr_reg:x3; val_offset:107352*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107352*0 + 3*456*FLEN/8, x4, x1, x2)

inst_35785:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1c00000; valaddr_reg:x3; val_offset:107355*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107355*0 + 3*457*FLEN/8, x4, x1, x2)

inst_35786:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1e00000; valaddr_reg:x3; val_offset:107358*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107358*0 + 3*458*FLEN/8, x4, x1, x2)

inst_35787:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1f00000; valaddr_reg:x3; val_offset:107361*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107361*0 + 3*459*FLEN/8, x4, x1, x2)

inst_35788:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1f80000; valaddr_reg:x3; val_offset:107364*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107364*0 + 3*460*FLEN/8, x4, x1, x2)

inst_35789:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fc0000; valaddr_reg:x3; val_offset:107367*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107367*0 + 3*461*FLEN/8, x4, x1, x2)

inst_35790:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fe0000; valaddr_reg:x3; val_offset:107370*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107370*0 + 3*462*FLEN/8, x4, x1, x2)

inst_35791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1ff0000; valaddr_reg:x3; val_offset:107373*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107373*0 + 3*463*FLEN/8, x4, x1, x2)

inst_35792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1ff8000; valaddr_reg:x3; val_offset:107376*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107376*0 + 3*464*FLEN/8, x4, x1, x2)

inst_35793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1ffc000; valaddr_reg:x3; val_offset:107379*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107379*0 + 3*465*FLEN/8, x4, x1, x2)

inst_35794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1ffe000; valaddr_reg:x3; val_offset:107382*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107382*0 + 3*466*FLEN/8, x4, x1, x2)

inst_35795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fff000; valaddr_reg:x3; val_offset:107385*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107385*0 + 3*467*FLEN/8, x4, x1, x2)

inst_35796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fff800; valaddr_reg:x3; val_offset:107388*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107388*0 + 3*468*FLEN/8, x4, x1, x2)

inst_35797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fffc00; valaddr_reg:x3; val_offset:107391*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107391*0 + 3*469*FLEN/8, x4, x1, x2)

inst_35798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fffe00; valaddr_reg:x3; val_offset:107394*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107394*0 + 3*470*FLEN/8, x4, x1, x2)

inst_35799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1ffff00; valaddr_reg:x3; val_offset:107397*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107397*0 + 3*471*FLEN/8, x4, x1, x2)

inst_35800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1ffff80; valaddr_reg:x3; val_offset:107400*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107400*0 + 3*472*FLEN/8, x4, x1, x2)

inst_35801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1ffffc0; valaddr_reg:x3; val_offset:107403*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107403*0 + 3*473*FLEN/8, x4, x1, x2)

inst_35802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1ffffe0; valaddr_reg:x3; val_offset:107406*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107406*0 + 3*474*FLEN/8, x4, x1, x2)

inst_35803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fffff0; valaddr_reg:x3; val_offset:107409*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107409*0 + 3*475*FLEN/8, x4, x1, x2)

inst_35804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fffff8; valaddr_reg:x3; val_offset:107412*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107412*0 + 3*476*FLEN/8, x4, x1, x2)

inst_35805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fffffc; valaddr_reg:x3; val_offset:107415*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107415*0 + 3*477*FLEN/8, x4, x1, x2)

inst_35806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1fffffe; valaddr_reg:x3; val_offset:107418*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107418*0 + 3*478*FLEN/8, x4, x1, x2)

inst_35807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xc3 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xe1ffffff; valaddr_reg:x3; val_offset:107421*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107421*0 + 3*479*FLEN/8, x4, x1, x2)

inst_35808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff000001; valaddr_reg:x3; val_offset:107424*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107424*0 + 3*480*FLEN/8, x4, x1, x2)

inst_35809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff000003; valaddr_reg:x3; val_offset:107427*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107427*0 + 3*481*FLEN/8, x4, x1, x2)

inst_35810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff000007; valaddr_reg:x3; val_offset:107430*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107430*0 + 3*482*FLEN/8, x4, x1, x2)

inst_35811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff199999; valaddr_reg:x3; val_offset:107433*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107433*0 + 3*483*FLEN/8, x4, x1, x2)

inst_35812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff249249; valaddr_reg:x3; val_offset:107436*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107436*0 + 3*484*FLEN/8, x4, x1, x2)

inst_35813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff333333; valaddr_reg:x3; val_offset:107439*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107439*0 + 3*485*FLEN/8, x4, x1, x2)

inst_35814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:107442*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107442*0 + 3*486*FLEN/8, x4, x1, x2)

inst_35815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:107445*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107445*0 + 3*487*FLEN/8, x4, x1, x2)

inst_35816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff444444; valaddr_reg:x3; val_offset:107448*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107448*0 + 3*488*FLEN/8, x4, x1, x2)

inst_35817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:107451*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107451*0 + 3*489*FLEN/8, x4, x1, x2)

inst_35818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:107454*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107454*0 + 3*490*FLEN/8, x4, x1, x2)

inst_35819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff666666; valaddr_reg:x3; val_offset:107457*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107457*0 + 3*491*FLEN/8, x4, x1, x2)

inst_35820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:107460*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107460*0 + 3*492*FLEN/8, x4, x1, x2)

inst_35821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:107463*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107463*0 + 3*493*FLEN/8, x4, x1, x2)

inst_35822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:107466*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107466*0 + 3*494*FLEN/8, x4, x1, x2)

inst_35823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e4e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b7a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e4e1; op2val:0xbfb72b7a;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:107469*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107469*0 + 3*495*FLEN/8, x4, x1, x2)

inst_35824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:107472*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107472*0 + 3*496*FLEN/8, x4, x1, x2)

inst_35825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:107475*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107475*0 + 3*497*FLEN/8, x4, x1, x2)

inst_35826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:107478*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107478*0 + 3*498*FLEN/8, x4, x1, x2)

inst_35827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:107481*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107481*0 + 3*499*FLEN/8, x4, x1, x2)

inst_35828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:107484*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107484*0 + 3*500*FLEN/8, x4, x1, x2)

inst_35829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:107487*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107487*0 + 3*501*FLEN/8, x4, x1, x2)

inst_35830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:107490*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107490*0 + 3*502*FLEN/8, x4, x1, x2)

inst_35831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:107493*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107493*0 + 3*503*FLEN/8, x4, x1, x2)

inst_35832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:107496*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107496*0 + 3*504*FLEN/8, x4, x1, x2)

inst_35833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:107499*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107499*0 + 3*505*FLEN/8, x4, x1, x2)

inst_35834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:107502*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107502*0 + 3*506*FLEN/8, x4, x1, x2)

inst_35835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:107505*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107505*0 + 3*507*FLEN/8, x4, x1, x2)

inst_35836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:107508*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107508*0 + 3*508*FLEN/8, x4, x1, x2)

inst_35837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:107511*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107511*0 + 3*509*FLEN/8, x4, x1, x2)

inst_35838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:107514*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107514*0 + 3*510*FLEN/8, x4, x1, x2)

inst_35839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:107517*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107517*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_35840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85000000; valaddr_reg:x3; val_offset:107520*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107520*0 + 3*512*FLEN/8, x4, x1, x2)

inst_35841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85000001; valaddr_reg:x3; val_offset:107523*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107523*0 + 3*513*FLEN/8, x4, x1, x2)

inst_35842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85000003; valaddr_reg:x3; val_offset:107526*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107526*0 + 3*514*FLEN/8, x4, x1, x2)

inst_35843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85000007; valaddr_reg:x3; val_offset:107529*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107529*0 + 3*515*FLEN/8, x4, x1, x2)

inst_35844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x8500000f; valaddr_reg:x3; val_offset:107532*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107532*0 + 3*516*FLEN/8, x4, x1, x2)

inst_35845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x8500001f; valaddr_reg:x3; val_offset:107535*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107535*0 + 3*517*FLEN/8, x4, x1, x2)

inst_35846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x8500003f; valaddr_reg:x3; val_offset:107538*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107538*0 + 3*518*FLEN/8, x4, x1, x2)

inst_35847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x8500007f; valaddr_reg:x3; val_offset:107541*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107541*0 + 3*519*FLEN/8, x4, x1, x2)

inst_35848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x850000ff; valaddr_reg:x3; val_offset:107544*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107544*0 + 3*520*FLEN/8, x4, x1, x2)

inst_35849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x850001ff; valaddr_reg:x3; val_offset:107547*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107547*0 + 3*521*FLEN/8, x4, x1, x2)

inst_35850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x850003ff; valaddr_reg:x3; val_offset:107550*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107550*0 + 3*522*FLEN/8, x4, x1, x2)

inst_35851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x850007ff; valaddr_reg:x3; val_offset:107553*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107553*0 + 3*523*FLEN/8, x4, x1, x2)

inst_35852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85000fff; valaddr_reg:x3; val_offset:107556*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107556*0 + 3*524*FLEN/8, x4, x1, x2)

inst_35853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85001fff; valaddr_reg:x3; val_offset:107559*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107559*0 + 3*525*FLEN/8, x4, x1, x2)

inst_35854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85003fff; valaddr_reg:x3; val_offset:107562*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107562*0 + 3*526*FLEN/8, x4, x1, x2)

inst_35855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85007fff; valaddr_reg:x3; val_offset:107565*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107565*0 + 3*527*FLEN/8, x4, x1, x2)

inst_35856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x8500ffff; valaddr_reg:x3; val_offset:107568*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107568*0 + 3*528*FLEN/8, x4, x1, x2)

inst_35857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x8501ffff; valaddr_reg:x3; val_offset:107571*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107571*0 + 3*529*FLEN/8, x4, x1, x2)

inst_35858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x8503ffff; valaddr_reg:x3; val_offset:107574*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107574*0 + 3*530*FLEN/8, x4, x1, x2)

inst_35859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x8507ffff; valaddr_reg:x3; val_offset:107577*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107577*0 + 3*531*FLEN/8, x4, x1, x2)

inst_35860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x850fffff; valaddr_reg:x3; val_offset:107580*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107580*0 + 3*532*FLEN/8, x4, x1, x2)

inst_35861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x851fffff; valaddr_reg:x3; val_offset:107583*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107583*0 + 3*533*FLEN/8, x4, x1, x2)

inst_35862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x853fffff; valaddr_reg:x3; val_offset:107586*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107586*0 + 3*534*FLEN/8, x4, x1, x2)

inst_35863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85400000; valaddr_reg:x3; val_offset:107589*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107589*0 + 3*535*FLEN/8, x4, x1, x2)

inst_35864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85600000; valaddr_reg:x3; val_offset:107592*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107592*0 + 3*536*FLEN/8, x4, x1, x2)

inst_35865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85700000; valaddr_reg:x3; val_offset:107595*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107595*0 + 3*537*FLEN/8, x4, x1, x2)

inst_35866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x85780000; valaddr_reg:x3; val_offset:107598*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107598*0 + 3*538*FLEN/8, x4, x1, x2)

inst_35867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857c0000; valaddr_reg:x3; val_offset:107601*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107601*0 + 3*539*FLEN/8, x4, x1, x2)

inst_35868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857e0000; valaddr_reg:x3; val_offset:107604*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107604*0 + 3*540*FLEN/8, x4, x1, x2)

inst_35869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857f0000; valaddr_reg:x3; val_offset:107607*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107607*0 + 3*541*FLEN/8, x4, x1, x2)

inst_35870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857f8000; valaddr_reg:x3; val_offset:107610*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107610*0 + 3*542*FLEN/8, x4, x1, x2)

inst_35871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857fc000; valaddr_reg:x3; val_offset:107613*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107613*0 + 3*543*FLEN/8, x4, x1, x2)

inst_35872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857fe000; valaddr_reg:x3; val_offset:107616*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107616*0 + 3*544*FLEN/8, x4, x1, x2)

inst_35873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857ff000; valaddr_reg:x3; val_offset:107619*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107619*0 + 3*545*FLEN/8, x4, x1, x2)

inst_35874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857ff800; valaddr_reg:x3; val_offset:107622*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107622*0 + 3*546*FLEN/8, x4, x1, x2)

inst_35875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857ffc00; valaddr_reg:x3; val_offset:107625*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107625*0 + 3*547*FLEN/8, x4, x1, x2)

inst_35876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857ffe00; valaddr_reg:x3; val_offset:107628*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107628*0 + 3*548*FLEN/8, x4, x1, x2)

inst_35877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857fff00; valaddr_reg:x3; val_offset:107631*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107631*0 + 3*549*FLEN/8, x4, x1, x2)

inst_35878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857fff80; valaddr_reg:x3; val_offset:107634*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107634*0 + 3*550*FLEN/8, x4, x1, x2)

inst_35879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857fffc0; valaddr_reg:x3; val_offset:107637*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107637*0 + 3*551*FLEN/8, x4, x1, x2)

inst_35880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857fffe0; valaddr_reg:x3; val_offset:107640*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107640*0 + 3*552*FLEN/8, x4, x1, x2)

inst_35881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857ffff0; valaddr_reg:x3; val_offset:107643*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107643*0 + 3*553*FLEN/8, x4, x1, x2)

inst_35882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857ffff8; valaddr_reg:x3; val_offset:107646*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107646*0 + 3*554*FLEN/8, x4, x1, x2)

inst_35883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857ffffc; valaddr_reg:x3; val_offset:107649*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107649*0 + 3*555*FLEN/8, x4, x1, x2)

inst_35884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857ffffe; valaddr_reg:x3; val_offset:107652*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107652*0 + 3*556*FLEN/8, x4, x1, x2)

inst_35885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32e9ff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f32e9ff; op2val:0x80000000;
op3val:0x857fffff; valaddr_reg:x3; val_offset:107655*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107655*0 + 3*557*FLEN/8, x4, x1, x2)

inst_35886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:107658*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107658*0 + 3*558*FLEN/8, x4, x1, x2)

inst_35887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:107661*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107661*0 + 3*559*FLEN/8, x4, x1, x2)

inst_35888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:107664*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107664*0 + 3*560*FLEN/8, x4, x1, x2)

inst_35889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:107667*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107667*0 + 3*561*FLEN/8, x4, x1, x2)

inst_35890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:107670*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107670*0 + 3*562*FLEN/8, x4, x1, x2)

inst_35891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:107673*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107673*0 + 3*563*FLEN/8, x4, x1, x2)

inst_35892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:107676*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107676*0 + 3*564*FLEN/8, x4, x1, x2)

inst_35893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:107679*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107679*0 + 3*565*FLEN/8, x4, x1, x2)

inst_35894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:107682*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107682*0 + 3*566*FLEN/8, x4, x1, x2)

inst_35895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:107685*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107685*0 + 3*567*FLEN/8, x4, x1, x2)

inst_35896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:107688*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107688*0 + 3*568*FLEN/8, x4, x1, x2)

inst_35897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:107691*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107691*0 + 3*569*FLEN/8, x4, x1, x2)

inst_35898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:107694*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107694*0 + 3*570*FLEN/8, x4, x1, x2)

inst_35899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:107697*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107697*0 + 3*571*FLEN/8, x4, x1, x2)

inst_35900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:107700*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107700*0 + 3*572*FLEN/8, x4, x1, x2)

inst_35901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:107703*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107703*0 + 3*573*FLEN/8, x4, x1, x2)

inst_35902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87000000; valaddr_reg:x3; val_offset:107706*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107706*0 + 3*574*FLEN/8, x4, x1, x2)

inst_35903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87000001; valaddr_reg:x3; val_offset:107709*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107709*0 + 3*575*FLEN/8, x4, x1, x2)

inst_35904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87000003; valaddr_reg:x3; val_offset:107712*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107712*0 + 3*576*FLEN/8, x4, x1, x2)

inst_35905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87000007; valaddr_reg:x3; val_offset:107715*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107715*0 + 3*577*FLEN/8, x4, x1, x2)

inst_35906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x8700000f; valaddr_reg:x3; val_offset:107718*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107718*0 + 3*578*FLEN/8, x4, x1, x2)

inst_35907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x8700001f; valaddr_reg:x3; val_offset:107721*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107721*0 + 3*579*FLEN/8, x4, x1, x2)

inst_35908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x8700003f; valaddr_reg:x3; val_offset:107724*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107724*0 + 3*580*FLEN/8, x4, x1, x2)

inst_35909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x8700007f; valaddr_reg:x3; val_offset:107727*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107727*0 + 3*581*FLEN/8, x4, x1, x2)

inst_35910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x870000ff; valaddr_reg:x3; val_offset:107730*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107730*0 + 3*582*FLEN/8, x4, x1, x2)

inst_35911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x870001ff; valaddr_reg:x3; val_offset:107733*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107733*0 + 3*583*FLEN/8, x4, x1, x2)

inst_35912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x870003ff; valaddr_reg:x3; val_offset:107736*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107736*0 + 3*584*FLEN/8, x4, x1, x2)

inst_35913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x870007ff; valaddr_reg:x3; val_offset:107739*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107739*0 + 3*585*FLEN/8, x4, x1, x2)

inst_35914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87000fff; valaddr_reg:x3; val_offset:107742*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107742*0 + 3*586*FLEN/8, x4, x1, x2)

inst_35915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87001fff; valaddr_reg:x3; val_offset:107745*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107745*0 + 3*587*FLEN/8, x4, x1, x2)

inst_35916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87003fff; valaddr_reg:x3; val_offset:107748*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107748*0 + 3*588*FLEN/8, x4, x1, x2)

inst_35917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87007fff; valaddr_reg:x3; val_offset:107751*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107751*0 + 3*589*FLEN/8, x4, x1, x2)

inst_35918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x8700ffff; valaddr_reg:x3; val_offset:107754*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107754*0 + 3*590*FLEN/8, x4, x1, x2)

inst_35919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x8701ffff; valaddr_reg:x3; val_offset:107757*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107757*0 + 3*591*FLEN/8, x4, x1, x2)

inst_35920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x8703ffff; valaddr_reg:x3; val_offset:107760*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107760*0 + 3*592*FLEN/8, x4, x1, x2)

inst_35921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x8707ffff; valaddr_reg:x3; val_offset:107763*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107763*0 + 3*593*FLEN/8, x4, x1, x2)

inst_35922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x870fffff; valaddr_reg:x3; val_offset:107766*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107766*0 + 3*594*FLEN/8, x4, x1, x2)

inst_35923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x871fffff; valaddr_reg:x3; val_offset:107769*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107769*0 + 3*595*FLEN/8, x4, x1, x2)

inst_35924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x873fffff; valaddr_reg:x3; val_offset:107772*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107772*0 + 3*596*FLEN/8, x4, x1, x2)

inst_35925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87400000; valaddr_reg:x3; val_offset:107775*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107775*0 + 3*597*FLEN/8, x4, x1, x2)

inst_35926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87600000; valaddr_reg:x3; val_offset:107778*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107778*0 + 3*598*FLEN/8, x4, x1, x2)

inst_35927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87700000; valaddr_reg:x3; val_offset:107781*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107781*0 + 3*599*FLEN/8, x4, x1, x2)

inst_35928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x87780000; valaddr_reg:x3; val_offset:107784*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107784*0 + 3*600*FLEN/8, x4, x1, x2)

inst_35929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877c0000; valaddr_reg:x3; val_offset:107787*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107787*0 + 3*601*FLEN/8, x4, x1, x2)

inst_35930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877e0000; valaddr_reg:x3; val_offset:107790*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107790*0 + 3*602*FLEN/8, x4, x1, x2)

inst_35931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877f0000; valaddr_reg:x3; val_offset:107793*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107793*0 + 3*603*FLEN/8, x4, x1, x2)

inst_35932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877f8000; valaddr_reg:x3; val_offset:107796*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107796*0 + 3*604*FLEN/8, x4, x1, x2)

inst_35933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877fc000; valaddr_reg:x3; val_offset:107799*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107799*0 + 3*605*FLEN/8, x4, x1, x2)

inst_35934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877fe000; valaddr_reg:x3; val_offset:107802*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107802*0 + 3*606*FLEN/8, x4, x1, x2)

inst_35935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877ff000; valaddr_reg:x3; val_offset:107805*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107805*0 + 3*607*FLEN/8, x4, x1, x2)

inst_35936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877ff800; valaddr_reg:x3; val_offset:107808*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107808*0 + 3*608*FLEN/8, x4, x1, x2)

inst_35937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877ffc00; valaddr_reg:x3; val_offset:107811*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107811*0 + 3*609*FLEN/8, x4, x1, x2)

inst_35938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877ffe00; valaddr_reg:x3; val_offset:107814*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107814*0 + 3*610*FLEN/8, x4, x1, x2)

inst_35939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877fff00; valaddr_reg:x3; val_offset:107817*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107817*0 + 3*611*FLEN/8, x4, x1, x2)

inst_35940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877fff80; valaddr_reg:x3; val_offset:107820*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107820*0 + 3*612*FLEN/8, x4, x1, x2)

inst_35941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877fffc0; valaddr_reg:x3; val_offset:107823*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107823*0 + 3*613*FLEN/8, x4, x1, x2)

inst_35942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877fffe0; valaddr_reg:x3; val_offset:107826*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107826*0 + 3*614*FLEN/8, x4, x1, x2)

inst_35943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877ffff0; valaddr_reg:x3; val_offset:107829*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107829*0 + 3*615*FLEN/8, x4, x1, x2)

inst_35944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877ffff8; valaddr_reg:x3; val_offset:107832*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107832*0 + 3*616*FLEN/8, x4, x1, x2)

inst_35945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877ffffc; valaddr_reg:x3; val_offset:107835*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107835*0 + 3*617*FLEN/8, x4, x1, x2)

inst_35946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877ffffe; valaddr_reg:x3; val_offset:107838*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107838*0 + 3*618*FLEN/8, x4, x1, x2)

inst_35947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x336f9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f336f9b; op2val:0x80000000;
op3val:0x877fffff; valaddr_reg:x3; val_offset:107841*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107841*0 + 3*619*FLEN/8, x4, x1, x2)

inst_35948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:107844*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107844*0 + 3*620*FLEN/8, x4, x1, x2)

inst_35949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:107847*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107847*0 + 3*621*FLEN/8, x4, x1, x2)

inst_35950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:107850*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107850*0 + 3*622*FLEN/8, x4, x1, x2)

inst_35951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:107853*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107853*0 + 3*623*FLEN/8, x4, x1, x2)

inst_35952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:107856*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107856*0 + 3*624*FLEN/8, x4, x1, x2)

inst_35953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:107859*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107859*0 + 3*625*FLEN/8, x4, x1, x2)

inst_35954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:107862*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107862*0 + 3*626*FLEN/8, x4, x1, x2)

inst_35955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:107865*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107865*0 + 3*627*FLEN/8, x4, x1, x2)

inst_35956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:107868*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107868*0 + 3*628*FLEN/8, x4, x1, x2)

inst_35957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:107871*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107871*0 + 3*629*FLEN/8, x4, x1, x2)

inst_35958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:107874*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107874*0 + 3*630*FLEN/8, x4, x1, x2)

inst_35959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:107877*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107877*0 + 3*631*FLEN/8, x4, x1, x2)

inst_35960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:107880*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107880*0 + 3*632*FLEN/8, x4, x1, x2)

inst_35961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:107883*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107883*0 + 3*633*FLEN/8, x4, x1, x2)

inst_35962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:107886*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107886*0 + 3*634*FLEN/8, x4, x1, x2)

inst_35963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:107889*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107889*0 + 3*635*FLEN/8, x4, x1, x2)

inst_35964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9000000; valaddr_reg:x3; val_offset:107892*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107892*0 + 3*636*FLEN/8, x4, x1, x2)

inst_35965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9000001; valaddr_reg:x3; val_offset:107895*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107895*0 + 3*637*FLEN/8, x4, x1, x2)

inst_35966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9000003; valaddr_reg:x3; val_offset:107898*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107898*0 + 3*638*FLEN/8, x4, x1, x2)

inst_35967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9000007; valaddr_reg:x3; val_offset:107901*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107901*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_35968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x900000f; valaddr_reg:x3; val_offset:107904*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107904*0 + 3*640*FLEN/8, x4, x1, x2)

inst_35969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x900001f; valaddr_reg:x3; val_offset:107907*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107907*0 + 3*641*FLEN/8, x4, x1, x2)

inst_35970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x900003f; valaddr_reg:x3; val_offset:107910*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107910*0 + 3*642*FLEN/8, x4, x1, x2)

inst_35971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x900007f; valaddr_reg:x3; val_offset:107913*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107913*0 + 3*643*FLEN/8, x4, x1, x2)

inst_35972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x90000ff; valaddr_reg:x3; val_offset:107916*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107916*0 + 3*644*FLEN/8, x4, x1, x2)

inst_35973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x90001ff; valaddr_reg:x3; val_offset:107919*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107919*0 + 3*645*FLEN/8, x4, x1, x2)

inst_35974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x90003ff; valaddr_reg:x3; val_offset:107922*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107922*0 + 3*646*FLEN/8, x4, x1, x2)

inst_35975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x90007ff; valaddr_reg:x3; val_offset:107925*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107925*0 + 3*647*FLEN/8, x4, x1, x2)

inst_35976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9000fff; valaddr_reg:x3; val_offset:107928*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107928*0 + 3*648*FLEN/8, x4, x1, x2)

inst_35977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9001fff; valaddr_reg:x3; val_offset:107931*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107931*0 + 3*649*FLEN/8, x4, x1, x2)

inst_35978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9003fff; valaddr_reg:x3; val_offset:107934*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107934*0 + 3*650*FLEN/8, x4, x1, x2)

inst_35979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9007fff; valaddr_reg:x3; val_offset:107937*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107937*0 + 3*651*FLEN/8, x4, x1, x2)

inst_35980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x900ffff; valaddr_reg:x3; val_offset:107940*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107940*0 + 3*652*FLEN/8, x4, x1, x2)

inst_35981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x901ffff; valaddr_reg:x3; val_offset:107943*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107943*0 + 3*653*FLEN/8, x4, x1, x2)

inst_35982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x903ffff; valaddr_reg:x3; val_offset:107946*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107946*0 + 3*654*FLEN/8, x4, x1, x2)

inst_35983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x907ffff; valaddr_reg:x3; val_offset:107949*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107949*0 + 3*655*FLEN/8, x4, x1, x2)

inst_35984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x90fffff; valaddr_reg:x3; val_offset:107952*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107952*0 + 3*656*FLEN/8, x4, x1, x2)

inst_35985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x91fffff; valaddr_reg:x3; val_offset:107955*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107955*0 + 3*657*FLEN/8, x4, x1, x2)

inst_35986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x93fffff; valaddr_reg:x3; val_offset:107958*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107958*0 + 3*658*FLEN/8, x4, x1, x2)

inst_35987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9400000; valaddr_reg:x3; val_offset:107961*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107961*0 + 3*659*FLEN/8, x4, x1, x2)

inst_35988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9600000; valaddr_reg:x3; val_offset:107964*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107964*0 + 3*660*FLEN/8, x4, x1, x2)

inst_35989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9700000; valaddr_reg:x3; val_offset:107967*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107967*0 + 3*661*FLEN/8, x4, x1, x2)

inst_35990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x9780000; valaddr_reg:x3; val_offset:107970*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107970*0 + 3*662*FLEN/8, x4, x1, x2)

inst_35991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97c0000; valaddr_reg:x3; val_offset:107973*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107973*0 + 3*663*FLEN/8, x4, x1, x2)

inst_35992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97e0000; valaddr_reg:x3; val_offset:107976*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107976*0 + 3*664*FLEN/8, x4, x1, x2)

inst_35993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97f0000; valaddr_reg:x3; val_offset:107979*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107979*0 + 3*665*FLEN/8, x4, x1, x2)

inst_35994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97f8000; valaddr_reg:x3; val_offset:107982*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107982*0 + 3*666*FLEN/8, x4, x1, x2)

inst_35995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97fc000; valaddr_reg:x3; val_offset:107985*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107985*0 + 3*667*FLEN/8, x4, x1, x2)

inst_35996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97fe000; valaddr_reg:x3; val_offset:107988*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107988*0 + 3*668*FLEN/8, x4, x1, x2)

inst_35997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97ff000; valaddr_reg:x3; val_offset:107991*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107991*0 + 3*669*FLEN/8, x4, x1, x2)

inst_35998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97ff800; valaddr_reg:x3; val_offset:107994*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107994*0 + 3*670*FLEN/8, x4, x1, x2)

inst_35999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97ffc00; valaddr_reg:x3; val_offset:107997*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 107997*0 + 3*671*FLEN/8, x4, x1, x2)

inst_36000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97ffe00; valaddr_reg:x3; val_offset:108000*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108000*0 + 3*672*FLEN/8, x4, x1, x2)

inst_36001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97fff00; valaddr_reg:x3; val_offset:108003*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108003*0 + 3*673*FLEN/8, x4, x1, x2)

inst_36002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97fff80; valaddr_reg:x3; val_offset:108006*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108006*0 + 3*674*FLEN/8, x4, x1, x2)

inst_36003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97fffc0; valaddr_reg:x3; val_offset:108009*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108009*0 + 3*675*FLEN/8, x4, x1, x2)

inst_36004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97fffe0; valaddr_reg:x3; val_offset:108012*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108012*0 + 3*676*FLEN/8, x4, x1, x2)

inst_36005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97ffff0; valaddr_reg:x3; val_offset:108015*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108015*0 + 3*677*FLEN/8, x4, x1, x2)

inst_36006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97ffff8; valaddr_reg:x3; val_offset:108018*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108018*0 + 3*678*FLEN/8, x4, x1, x2)

inst_36007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97ffffc; valaddr_reg:x3; val_offset:108021*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108021*0 + 3*679*FLEN/8, x4, x1, x2)

inst_36008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97ffffe; valaddr_reg:x3; val_offset:108024*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108024*0 + 3*680*FLEN/8, x4, x1, x2)

inst_36009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337ac1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x12 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337ac1; op2val:0x0;
op3val:0x97fffff; valaddr_reg:x3; val_offset:108027*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108027*0 + 3*681*FLEN/8, x4, x1, x2)

inst_36010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4000000; valaddr_reg:x3; val_offset:108030*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108030*0 + 3*682*FLEN/8, x4, x1, x2)

inst_36011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4000001; valaddr_reg:x3; val_offset:108033*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108033*0 + 3*683*FLEN/8, x4, x1, x2)

inst_36012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4000003; valaddr_reg:x3; val_offset:108036*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108036*0 + 3*684*FLEN/8, x4, x1, x2)

inst_36013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4000007; valaddr_reg:x3; val_offset:108039*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108039*0 + 3*685*FLEN/8, x4, x1, x2)

inst_36014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb400000f; valaddr_reg:x3; val_offset:108042*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108042*0 + 3*686*FLEN/8, x4, x1, x2)

inst_36015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb400001f; valaddr_reg:x3; val_offset:108045*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108045*0 + 3*687*FLEN/8, x4, x1, x2)

inst_36016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb400003f; valaddr_reg:x3; val_offset:108048*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108048*0 + 3*688*FLEN/8, x4, x1, x2)

inst_36017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb400007f; valaddr_reg:x3; val_offset:108051*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108051*0 + 3*689*FLEN/8, x4, x1, x2)

inst_36018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb40000ff; valaddr_reg:x3; val_offset:108054*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108054*0 + 3*690*FLEN/8, x4, x1, x2)

inst_36019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb40001ff; valaddr_reg:x3; val_offset:108057*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108057*0 + 3*691*FLEN/8, x4, x1, x2)

inst_36020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb40003ff; valaddr_reg:x3; val_offset:108060*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108060*0 + 3*692*FLEN/8, x4, x1, x2)

inst_36021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb40007ff; valaddr_reg:x3; val_offset:108063*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108063*0 + 3*693*FLEN/8, x4, x1, x2)

inst_36022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4000fff; valaddr_reg:x3; val_offset:108066*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108066*0 + 3*694*FLEN/8, x4, x1, x2)

inst_36023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4001fff; valaddr_reg:x3; val_offset:108069*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108069*0 + 3*695*FLEN/8, x4, x1, x2)

inst_36024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4003fff; valaddr_reg:x3; val_offset:108072*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108072*0 + 3*696*FLEN/8, x4, x1, x2)

inst_36025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4007fff; valaddr_reg:x3; val_offset:108075*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108075*0 + 3*697*FLEN/8, x4, x1, x2)

inst_36026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb400ffff; valaddr_reg:x3; val_offset:108078*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108078*0 + 3*698*FLEN/8, x4, x1, x2)

inst_36027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb401ffff; valaddr_reg:x3; val_offset:108081*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108081*0 + 3*699*FLEN/8, x4, x1, x2)

inst_36028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb403ffff; valaddr_reg:x3; val_offset:108084*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108084*0 + 3*700*FLEN/8, x4, x1, x2)

inst_36029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb407ffff; valaddr_reg:x3; val_offset:108087*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108087*0 + 3*701*FLEN/8, x4, x1, x2)

inst_36030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb40fffff; valaddr_reg:x3; val_offset:108090*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108090*0 + 3*702*FLEN/8, x4, x1, x2)

inst_36031:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb41fffff; valaddr_reg:x3; val_offset:108093*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108093*0 + 3*703*FLEN/8, x4, x1, x2)

inst_36032:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb43fffff; valaddr_reg:x3; val_offset:108096*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108096*0 + 3*704*FLEN/8, x4, x1, x2)

inst_36033:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4400000; valaddr_reg:x3; val_offset:108099*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108099*0 + 3*705*FLEN/8, x4, x1, x2)

inst_36034:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4600000; valaddr_reg:x3; val_offset:108102*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108102*0 + 3*706*FLEN/8, x4, x1, x2)

inst_36035:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4700000; valaddr_reg:x3; val_offset:108105*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108105*0 + 3*707*FLEN/8, x4, x1, x2)

inst_36036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb4780000; valaddr_reg:x3; val_offset:108108*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108108*0 + 3*708*FLEN/8, x4, x1, x2)

inst_36037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47c0000; valaddr_reg:x3; val_offset:108111*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108111*0 + 3*709*FLEN/8, x4, x1, x2)

inst_36038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47e0000; valaddr_reg:x3; val_offset:108114*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108114*0 + 3*710*FLEN/8, x4, x1, x2)

inst_36039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47f0000; valaddr_reg:x3; val_offset:108117*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108117*0 + 3*711*FLEN/8, x4, x1, x2)

inst_36040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47f8000; valaddr_reg:x3; val_offset:108120*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108120*0 + 3*712*FLEN/8, x4, x1, x2)

inst_36041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47fc000; valaddr_reg:x3; val_offset:108123*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108123*0 + 3*713*FLEN/8, x4, x1, x2)

inst_36042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47fe000; valaddr_reg:x3; val_offset:108126*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108126*0 + 3*714*FLEN/8, x4, x1, x2)

inst_36043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47ff000; valaddr_reg:x3; val_offset:108129*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108129*0 + 3*715*FLEN/8, x4, x1, x2)

inst_36044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47ff800; valaddr_reg:x3; val_offset:108132*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108132*0 + 3*716*FLEN/8, x4, x1, x2)

inst_36045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47ffc00; valaddr_reg:x3; val_offset:108135*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108135*0 + 3*717*FLEN/8, x4, x1, x2)

inst_36046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47ffe00; valaddr_reg:x3; val_offset:108138*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108138*0 + 3*718*FLEN/8, x4, x1, x2)

inst_36047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47fff00; valaddr_reg:x3; val_offset:108141*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108141*0 + 3*719*FLEN/8, x4, x1, x2)

inst_36048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47fff80; valaddr_reg:x3; val_offset:108144*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108144*0 + 3*720*FLEN/8, x4, x1, x2)

inst_36049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47fffc0; valaddr_reg:x3; val_offset:108147*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108147*0 + 3*721*FLEN/8, x4, x1, x2)

inst_36050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47fffe0; valaddr_reg:x3; val_offset:108150*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108150*0 + 3*722*FLEN/8, x4, x1, x2)

inst_36051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47ffff0; valaddr_reg:x3; val_offset:108153*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108153*0 + 3*723*FLEN/8, x4, x1, x2)

inst_36052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47ffff8; valaddr_reg:x3; val_offset:108156*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108156*0 + 3*724*FLEN/8, x4, x1, x2)

inst_36053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47ffffc; valaddr_reg:x3; val_offset:108159*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108159*0 + 3*725*FLEN/8, x4, x1, x2)

inst_36054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47ffffe; valaddr_reg:x3; val_offset:108162*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108162*0 + 3*726*FLEN/8, x4, x1, x2)

inst_36055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x68 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xb47fffff; valaddr_reg:x3; val_offset:108165*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108165*0 + 3*727*FLEN/8, x4, x1, x2)

inst_36056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbf800001; valaddr_reg:x3; val_offset:108168*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108168*0 + 3*728*FLEN/8, x4, x1, x2)

inst_36057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbf800003; valaddr_reg:x3; val_offset:108171*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108171*0 + 3*729*FLEN/8, x4, x1, x2)

inst_36058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbf800007; valaddr_reg:x3; val_offset:108174*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108174*0 + 3*730*FLEN/8, x4, x1, x2)

inst_36059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbf999999; valaddr_reg:x3; val_offset:108177*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108177*0 + 3*731*FLEN/8, x4, x1, x2)

inst_36060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:108180*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108180*0 + 3*732*FLEN/8, x4, x1, x2)

inst_36061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:108183*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108183*0 + 3*733*FLEN/8, x4, x1, x2)

inst_36062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:108186*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108186*0 + 3*734*FLEN/8, x4, x1, x2)

inst_36063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:108189*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108189*0 + 3*735*FLEN/8, x4, x1, x2)

inst_36064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:108192*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108192*0 + 3*736*FLEN/8, x4, x1, x2)

inst_36065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:108195*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108195*0 + 3*737*FLEN/8, x4, x1, x2)

inst_36066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:108198*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108198*0 + 3*738*FLEN/8, x4, x1, x2)

inst_36067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:108201*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108201*0 + 3*739*FLEN/8, x4, x1, x2)

inst_36068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:108204*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108204*0 + 3*740*FLEN/8, x4, x1, x2)

inst_36069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:108207*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108207*0 + 3*741*FLEN/8, x4, x1, x2)

inst_36070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:108210*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108210*0 + 3*742*FLEN/8, x4, x1, x2)

inst_36071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2d6fb5 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344bd0; op2val:0x802d6fb5;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:108213*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108213*0 + 3*743*FLEN/8, x4, x1, x2)

inst_36072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:108216*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108216*0 + 3*744*FLEN/8, x4, x1, x2)

inst_36073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:108219*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108219*0 + 3*745*FLEN/8, x4, x1, x2)

inst_36074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:108222*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108222*0 + 3*746*FLEN/8, x4, x1, x2)

inst_36075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:108225*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108225*0 + 3*747*FLEN/8, x4, x1, x2)

inst_36076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:108228*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108228*0 + 3*748*FLEN/8, x4, x1, x2)

inst_36077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:108231*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108231*0 + 3*749*FLEN/8, x4, x1, x2)

inst_36078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:108234*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108234*0 + 3*750*FLEN/8, x4, x1, x2)

inst_36079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:108237*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108237*0 + 3*751*FLEN/8, x4, x1, x2)

inst_36080:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:108240*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108240*0 + 3*752*FLEN/8, x4, x1, x2)

inst_36081:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:108243*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108243*0 + 3*753*FLEN/8, x4, x1, x2)

inst_36082:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:108246*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108246*0 + 3*754*FLEN/8, x4, x1, x2)

inst_36083:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:108249*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108249*0 + 3*755*FLEN/8, x4, x1, x2)

inst_36084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:108252*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108252*0 + 3*756*FLEN/8, x4, x1, x2)

inst_36085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:108255*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108255*0 + 3*757*FLEN/8, x4, x1, x2)

inst_36086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:108258*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108258*0 + 3*758*FLEN/8, x4, x1, x2)

inst_36087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:108261*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108261*0 + 3*759*FLEN/8, x4, x1, x2)

inst_36088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x8800000; valaddr_reg:x3; val_offset:108264*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108264*0 + 3*760*FLEN/8, x4, x1, x2)

inst_36089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x8800001; valaddr_reg:x3; val_offset:108267*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108267*0 + 3*761*FLEN/8, x4, x1, x2)

inst_36090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x8800003; valaddr_reg:x3; val_offset:108270*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108270*0 + 3*762*FLEN/8, x4, x1, x2)

inst_36091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x8800007; valaddr_reg:x3; val_offset:108273*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108273*0 + 3*763*FLEN/8, x4, x1, x2)

inst_36092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x880000f; valaddr_reg:x3; val_offset:108276*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108276*0 + 3*764*FLEN/8, x4, x1, x2)

inst_36093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x880001f; valaddr_reg:x3; val_offset:108279*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108279*0 + 3*765*FLEN/8, x4, x1, x2)

inst_36094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x880003f; valaddr_reg:x3; val_offset:108282*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108282*0 + 3*766*FLEN/8, x4, x1, x2)

inst_36095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344cc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x11 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f344cc5; op2val:0x0;
op3val:0x880007f; valaddr_reg:x3; val_offset:108285*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108285*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624192,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624193,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624195,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624199,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624207,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624223,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624255,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624319,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624447,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927624703,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927625215,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927626239,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927628287,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927632383,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927640575,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927656959,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927689727,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927755263,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2927886335,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2928148479,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2928672767,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2929721343,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2931818495,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2931818496,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2933915648,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2934964224,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2935488512,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2935750656,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2935881728,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2935947264,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2935980032,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2935996416,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936004608,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936008704,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936010752,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936011776,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012288,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012544,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012672,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012736,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012768,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012784,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012792,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012796,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012798,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(2936012799,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2133942607,32,FLEN)
NAN_BOXED(2150510317,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777216,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777217,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777219,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777223,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777231,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777247,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777279,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777343,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777471,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777727,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16778239,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16779263,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16781311,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16785407,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16793599,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16809983,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16842751,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16908287,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17039359,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17301503,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(17825791,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(18874367,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971519,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(20971520,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(23068672,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24117248,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24641536,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(24903680,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25034752,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25100288,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25133056,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25149440,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25157632,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25161728,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25163776,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25164800,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165312,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165568,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165696,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165760,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165792,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165808,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165816,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165820,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165822,32,FLEN)
NAN_BOXED(2133943579,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(25165823,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829120,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829121,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829123,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829127,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829135,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829151,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829183,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829247,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829375,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829631,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125830143,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125831167,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125833215,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125837311,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125845503,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125861887,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125894655,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125960191,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126091263,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126353407,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126877695,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(127926271,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023423,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023424,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(132120576,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133169152,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133693440,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133955584,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134086656,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134152192,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134184960,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134201344,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134209536,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134213632,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134215680,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134216704,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217216,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217472,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217600,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217664,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217696,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217712,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217720,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217724,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217726,32,FLEN)
NAN_BOXED(2133967529,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217727,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996488704,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996488705,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996488707,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996488711,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996488719,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996488735,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996488767,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996488831,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996488959,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996489215,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996489727,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996490751,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996492799,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996496895,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996505087,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996521471,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996554239,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996619775,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1996750847,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1997012991,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1997537279,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(1998585855,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2000683007,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2000683008,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2002780160,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2003828736,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004353024,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004615168,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004746240,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004811776,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004844544,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004860928,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004869120,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004873216,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004875264,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004876288,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004876800,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004877056,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004877184,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004877248,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004877280,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004877296,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004877304,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004877308,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004877310,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2004877311,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2133970203,32,FLEN)
NAN_BOXED(1069042611,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319168,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319169,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319171,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319175,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319183,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319199,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319231,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319295,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319423,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741319679,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741320191,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741321215,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741323263,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741327359,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741335551,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741351935,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741384703,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741450239,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741581311,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3741843455,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3742367743,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3743416319,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3745513471,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3745513472,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3747610624,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3748659200,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749183488,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749445632,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749576704,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749642240,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749675008,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749691392,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749699584,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749703680,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749705728,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749706752,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707264,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707520,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707648,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707712,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707744,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707760,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707768,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707772,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707774,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(3749707775,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2133981877,32,FLEN)
NAN_BOXED(3216514170,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406464,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406465,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406467,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406471,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406479,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406495,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406527,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406591,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406719,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793406975,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793407487,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793408511,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793410559,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793414655,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793422847,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793439231,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793471999,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793537535,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793668607,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2793930751,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2794455039,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2795503615,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2797600767,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2797600768,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2799697920,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2800746496,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801270784,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801532928,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801664000,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801729536,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801762304,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801778688,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801786880,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801790976,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801793024,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801794048,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801794560,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801794816,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801794944,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801795008,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801795040,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801795056,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801795064,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801795068,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801795070,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(2801795071,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2133986929,32,FLEN)
NAN_BOXED(2150498821,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535552,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535553,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535555,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535559,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535567,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535583,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535615,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535679,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535807,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256536063,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256536575,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256537599,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256539647,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256543743,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256551935,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256568319,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256601087,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256666623,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256797695,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2257059839,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2257584127,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2258632703,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2260729855,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2260729856,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2262827008,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2263875584,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264399872,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264662016,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264793088,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264858624,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264891392,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264907776,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264915968,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264920064,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264922112,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923136,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923648,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923904,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924032,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924096,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924128,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924144,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924152,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924156,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924158,32,FLEN)
NAN_BOXED(2134006664,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924159,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262208,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262209,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262211,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262215,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262223,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262239,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262271,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262335,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262463,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783262719,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783263231,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783264255,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783266303,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783270399,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783278591,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783294975,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783327743,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783393279,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783524351,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3783786495,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3784310783,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3785359359,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3787456511,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3787456512,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3789553664,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3790602240,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791126528,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791388672,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791519744,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791585280,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791618048,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791634432,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791642624,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791646720,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791648768,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791649792,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650304,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650560,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650688,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650752,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650784,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650800,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650808,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650812,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650814,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(3791650815,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2134041825,32,FLEN)
NAN_BOXED(3216452474,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369728,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369729,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369731,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369735,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369743,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369759,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369791,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369855,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369983,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231370239,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231370751,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231371775,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231373823,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231377919,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231386111,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231402495,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231435263,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231500799,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231631871,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231894015,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2232418303,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2233466879,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2235564031,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2235564032,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2237661184,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2238709760,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239234048,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239496192,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239627264,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239692800,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239725568,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239741952,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239750144,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239754240,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239756288,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239757312,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239757824,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758080,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758208,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758272,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758304,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758320,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758328,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758332,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758334,32,FLEN)
NAN_BOXED(2134043135,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758335,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924160,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924161,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924163,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924167,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924175,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924191,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924223,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924287,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924415,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924671,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264925183,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264926207,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264928255,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264932351,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264940543,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264956927,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264989695,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2265055231,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2265186303,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2265448447,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2265972735,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2267021311,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2269118463,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2269118464,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2271215616,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2272264192,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2272788480,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273050624,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273181696,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273247232,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273280000,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273296384,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273304576,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273308672,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273310720,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273311744,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312256,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312512,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312640,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312704,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312736,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312752,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312760,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312764,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312766,32,FLEN)
NAN_BOXED(2134077339,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312767,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994944,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994945,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994947,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994951,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994959,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150994975,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995007,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995071,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995199,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995455,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150995967,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150996991,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(150999039,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151003135,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151011327,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151027711,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151060479,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151126015,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151257087,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(151519231,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(152043519,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(153092095,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(155189247,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(155189248,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(157286400,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(158334976,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(158859264,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159121408,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159252480,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159318016,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159350784,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159367168,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159375360,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159379456,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159381504,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159382528,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383040,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383296,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383424,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383488,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383520,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383536,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383544,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383548,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383550,32,FLEN)
NAN_BOXED(2134080193,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383551,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019898880,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019898881,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019898883,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019898887,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019898895,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019898911,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019898943,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019899007,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019899135,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019899391,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019899903,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019900927,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019902975,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019907071,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019915263,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019931647,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3019964415,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3020029951,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3020161023,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3020423167,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3020947455,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3021996031,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3024093183,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3024093184,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3026190336,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3027238912,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3027763200,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028025344,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028156416,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028221952,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028254720,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028271104,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028279296,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028283392,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028285440,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028286464,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028286976,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028287232,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028287360,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028287424,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028287456,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028287472,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028287480,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028287484,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028287486,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3028287487,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2134133712,32,FLEN)
NAN_BOXED(2150461365,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606336,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606337,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606339,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606343,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606351,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606367,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606399,32,FLEN)
NAN_BOXED(2134133957,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606463,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
