
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_3840:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4800003; valaddr_reg:x3; val_offset:11520*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11520*0 + 3*0*FLEN/8, x4, x1, x2)

inst_3841:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4800007; valaddr_reg:x3; val_offset:11523*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11523*0 + 3*1*FLEN/8, x4, x1, x2)

inst_3842:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf480000f; valaddr_reg:x3; val_offset:11526*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11526*0 + 3*2*FLEN/8, x4, x1, x2)

inst_3843:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf480001f; valaddr_reg:x3; val_offset:11529*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11529*0 + 3*3*FLEN/8, x4, x1, x2)

inst_3844:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf480003f; valaddr_reg:x3; val_offset:11532*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11532*0 + 3*4*FLEN/8, x4, x1, x2)

inst_3845:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf480007f; valaddr_reg:x3; val_offset:11535*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11535*0 + 3*5*FLEN/8, x4, x1, x2)

inst_3846:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf48000ff; valaddr_reg:x3; val_offset:11538*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11538*0 + 3*6*FLEN/8, x4, x1, x2)

inst_3847:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf48001ff; valaddr_reg:x3; val_offset:11541*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11541*0 + 3*7*FLEN/8, x4, x1, x2)

inst_3848:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf48003ff; valaddr_reg:x3; val_offset:11544*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11544*0 + 3*8*FLEN/8, x4, x1, x2)

inst_3849:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf48007ff; valaddr_reg:x3; val_offset:11547*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11547*0 + 3*9*FLEN/8, x4, x1, x2)

inst_3850:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4800fff; valaddr_reg:x3; val_offset:11550*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11550*0 + 3*10*FLEN/8, x4, x1, x2)

inst_3851:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4801fff; valaddr_reg:x3; val_offset:11553*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11553*0 + 3*11*FLEN/8, x4, x1, x2)

inst_3852:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4803fff; valaddr_reg:x3; val_offset:11556*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11556*0 + 3*12*FLEN/8, x4, x1, x2)

inst_3853:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4807fff; valaddr_reg:x3; val_offset:11559*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11559*0 + 3*13*FLEN/8, x4, x1, x2)

inst_3854:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf480ffff; valaddr_reg:x3; val_offset:11562*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11562*0 + 3*14*FLEN/8, x4, x1, x2)

inst_3855:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf481ffff; valaddr_reg:x3; val_offset:11565*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11565*0 + 3*15*FLEN/8, x4, x1, x2)

inst_3856:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf483ffff; valaddr_reg:x3; val_offset:11568*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11568*0 + 3*16*FLEN/8, x4, x1, x2)

inst_3857:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf487ffff; valaddr_reg:x3; val_offset:11571*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11571*0 + 3*17*FLEN/8, x4, x1, x2)

inst_3858:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf48fffff; valaddr_reg:x3; val_offset:11574*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11574*0 + 3*18*FLEN/8, x4, x1, x2)

inst_3859:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf49fffff; valaddr_reg:x3; val_offset:11577*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11577*0 + 3*19*FLEN/8, x4, x1, x2)

inst_3860:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4bfffff; valaddr_reg:x3; val_offset:11580*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11580*0 + 3*20*FLEN/8, x4, x1, x2)

inst_3861:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4c00000; valaddr_reg:x3; val_offset:11583*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11583*0 + 3*21*FLEN/8, x4, x1, x2)

inst_3862:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4e00000; valaddr_reg:x3; val_offset:11586*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11586*0 + 3*22*FLEN/8, x4, x1, x2)

inst_3863:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4f00000; valaddr_reg:x3; val_offset:11589*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11589*0 + 3*23*FLEN/8, x4, x1, x2)

inst_3864:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4f80000; valaddr_reg:x3; val_offset:11592*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11592*0 + 3*24*FLEN/8, x4, x1, x2)

inst_3865:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fc0000; valaddr_reg:x3; val_offset:11595*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11595*0 + 3*25*FLEN/8, x4, x1, x2)

inst_3866:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fe0000; valaddr_reg:x3; val_offset:11598*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11598*0 + 3*26*FLEN/8, x4, x1, x2)

inst_3867:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4ff0000; valaddr_reg:x3; val_offset:11601*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11601*0 + 3*27*FLEN/8, x4, x1, x2)

inst_3868:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4ff8000; valaddr_reg:x3; val_offset:11604*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11604*0 + 3*28*FLEN/8, x4, x1, x2)

inst_3869:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4ffc000; valaddr_reg:x3; val_offset:11607*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11607*0 + 3*29*FLEN/8, x4, x1, x2)

inst_3870:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4ffe000; valaddr_reg:x3; val_offset:11610*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11610*0 + 3*30*FLEN/8, x4, x1, x2)

inst_3871:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fff000; valaddr_reg:x3; val_offset:11613*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11613*0 + 3*31*FLEN/8, x4, x1, x2)

inst_3872:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fff800; valaddr_reg:x3; val_offset:11616*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11616*0 + 3*32*FLEN/8, x4, x1, x2)

inst_3873:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fffc00; valaddr_reg:x3; val_offset:11619*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11619*0 + 3*33*FLEN/8, x4, x1, x2)

inst_3874:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fffe00; valaddr_reg:x3; val_offset:11622*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11622*0 + 3*34*FLEN/8, x4, x1, x2)

inst_3875:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4ffff00; valaddr_reg:x3; val_offset:11625*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11625*0 + 3*35*FLEN/8, x4, x1, x2)

inst_3876:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4ffff80; valaddr_reg:x3; val_offset:11628*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11628*0 + 3*36*FLEN/8, x4, x1, x2)

inst_3877:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4ffffc0; valaddr_reg:x3; val_offset:11631*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11631*0 + 3*37*FLEN/8, x4, x1, x2)

inst_3878:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4ffffe0; valaddr_reg:x3; val_offset:11634*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11634*0 + 3*38*FLEN/8, x4, x1, x2)

inst_3879:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fffff0; valaddr_reg:x3; val_offset:11637*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11637*0 + 3*39*FLEN/8, x4, x1, x2)

inst_3880:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fffff8; valaddr_reg:x3; val_offset:11640*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11640*0 + 3*40*FLEN/8, x4, x1, x2)

inst_3881:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fffffc; valaddr_reg:x3; val_offset:11643*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11643*0 + 3*41*FLEN/8, x4, x1, x2)

inst_3882:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4fffffe; valaddr_reg:x3; val_offset:11646*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11646*0 + 3*42*FLEN/8, x4, x1, x2)

inst_3883:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xf4ffffff; valaddr_reg:x3; val_offset:11649*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11649*0 + 3*43*FLEN/8, x4, x1, x2)

inst_3884:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff000001; valaddr_reg:x3; val_offset:11652*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11652*0 + 3*44*FLEN/8, x4, x1, x2)

inst_3885:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff000003; valaddr_reg:x3; val_offset:11655*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11655*0 + 3*45*FLEN/8, x4, x1, x2)

inst_3886:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff000007; valaddr_reg:x3; val_offset:11658*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11658*0 + 3*46*FLEN/8, x4, x1, x2)

inst_3887:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff199999; valaddr_reg:x3; val_offset:11661*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11661*0 + 3*47*FLEN/8, x4, x1, x2)

inst_3888:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff249249; valaddr_reg:x3; val_offset:11664*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11664*0 + 3*48*FLEN/8, x4, x1, x2)

inst_3889:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff333333; valaddr_reg:x3; val_offset:11667*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11667*0 + 3*49*FLEN/8, x4, x1, x2)

inst_3890:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:11670*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11670*0 + 3*50*FLEN/8, x4, x1, x2)

inst_3891:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:11673*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11673*0 + 3*51*FLEN/8, x4, x1, x2)

inst_3892:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff444444; valaddr_reg:x3; val_offset:11676*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11676*0 + 3*52*FLEN/8, x4, x1, x2)

inst_3893:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:11679*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11679*0 + 3*53*FLEN/8, x4, x1, x2)

inst_3894:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:11682*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11682*0 + 3*54*FLEN/8, x4, x1, x2)

inst_3895:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff666666; valaddr_reg:x3; val_offset:11685*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11685*0 + 3*55*FLEN/8, x4, x1, x2)

inst_3896:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:11688*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11688*0 + 3*56*FLEN/8, x4, x1, x2)

inst_3897:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:11691*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11691*0 + 3*57*FLEN/8, x4, x1, x2)

inst_3898:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:11694*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11694*0 + 3*58*FLEN/8, x4, x1, x2)

inst_3899:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x291107 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x41d133 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da91107; op2val:0xc141d133;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:11697*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11697*0 + 3*59*FLEN/8, x4, x1, x2)

inst_3900:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78000000; valaddr_reg:x3; val_offset:11700*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11700*0 + 3*60*FLEN/8, x4, x1, x2)

inst_3901:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78000001; valaddr_reg:x3; val_offset:11703*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11703*0 + 3*61*FLEN/8, x4, x1, x2)

inst_3902:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78000003; valaddr_reg:x3; val_offset:11706*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11706*0 + 3*62*FLEN/8, x4, x1, x2)

inst_3903:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78000007; valaddr_reg:x3; val_offset:11709*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11709*0 + 3*63*FLEN/8, x4, x1, x2)

inst_3904:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7800000f; valaddr_reg:x3; val_offset:11712*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11712*0 + 3*64*FLEN/8, x4, x1, x2)

inst_3905:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7800001f; valaddr_reg:x3; val_offset:11715*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11715*0 + 3*65*FLEN/8, x4, x1, x2)

inst_3906:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7800003f; valaddr_reg:x3; val_offset:11718*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11718*0 + 3*66*FLEN/8, x4, x1, x2)

inst_3907:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7800007f; valaddr_reg:x3; val_offset:11721*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11721*0 + 3*67*FLEN/8, x4, x1, x2)

inst_3908:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x780000ff; valaddr_reg:x3; val_offset:11724*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11724*0 + 3*68*FLEN/8, x4, x1, x2)

inst_3909:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x780001ff; valaddr_reg:x3; val_offset:11727*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11727*0 + 3*69*FLEN/8, x4, x1, x2)

inst_3910:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x780003ff; valaddr_reg:x3; val_offset:11730*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11730*0 + 3*70*FLEN/8, x4, x1, x2)

inst_3911:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x780007ff; valaddr_reg:x3; val_offset:11733*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11733*0 + 3*71*FLEN/8, x4, x1, x2)

inst_3912:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78000fff; valaddr_reg:x3; val_offset:11736*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11736*0 + 3*72*FLEN/8, x4, x1, x2)

inst_3913:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78001fff; valaddr_reg:x3; val_offset:11739*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11739*0 + 3*73*FLEN/8, x4, x1, x2)

inst_3914:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78003fff; valaddr_reg:x3; val_offset:11742*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11742*0 + 3*74*FLEN/8, x4, x1, x2)

inst_3915:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78007fff; valaddr_reg:x3; val_offset:11745*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11745*0 + 3*75*FLEN/8, x4, x1, x2)

inst_3916:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7800ffff; valaddr_reg:x3; val_offset:11748*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11748*0 + 3*76*FLEN/8, x4, x1, x2)

inst_3917:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7801ffff; valaddr_reg:x3; val_offset:11751*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11751*0 + 3*77*FLEN/8, x4, x1, x2)

inst_3918:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7803ffff; valaddr_reg:x3; val_offset:11754*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11754*0 + 3*78*FLEN/8, x4, x1, x2)

inst_3919:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7807ffff; valaddr_reg:x3; val_offset:11757*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11757*0 + 3*79*FLEN/8, x4, x1, x2)

inst_3920:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x780fffff; valaddr_reg:x3; val_offset:11760*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11760*0 + 3*80*FLEN/8, x4, x1, x2)

inst_3921:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x781fffff; valaddr_reg:x3; val_offset:11763*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11763*0 + 3*81*FLEN/8, x4, x1, x2)

inst_3922:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x783fffff; valaddr_reg:x3; val_offset:11766*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11766*0 + 3*82*FLEN/8, x4, x1, x2)

inst_3923:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78400000; valaddr_reg:x3; val_offset:11769*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11769*0 + 3*83*FLEN/8, x4, x1, x2)

inst_3924:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78600000; valaddr_reg:x3; val_offset:11772*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11772*0 + 3*84*FLEN/8, x4, x1, x2)

inst_3925:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78700000; valaddr_reg:x3; val_offset:11775*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11775*0 + 3*85*FLEN/8, x4, x1, x2)

inst_3926:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x78780000; valaddr_reg:x3; val_offset:11778*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11778*0 + 3*86*FLEN/8, x4, x1, x2)

inst_3927:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787c0000; valaddr_reg:x3; val_offset:11781*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11781*0 + 3*87*FLEN/8, x4, x1, x2)

inst_3928:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787e0000; valaddr_reg:x3; val_offset:11784*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11784*0 + 3*88*FLEN/8, x4, x1, x2)

inst_3929:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787f0000; valaddr_reg:x3; val_offset:11787*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11787*0 + 3*89*FLEN/8, x4, x1, x2)

inst_3930:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787f8000; valaddr_reg:x3; val_offset:11790*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11790*0 + 3*90*FLEN/8, x4, x1, x2)

inst_3931:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787fc000; valaddr_reg:x3; val_offset:11793*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11793*0 + 3*91*FLEN/8, x4, x1, x2)

inst_3932:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787fe000; valaddr_reg:x3; val_offset:11796*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11796*0 + 3*92*FLEN/8, x4, x1, x2)

inst_3933:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787ff000; valaddr_reg:x3; val_offset:11799*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11799*0 + 3*93*FLEN/8, x4, x1, x2)

inst_3934:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787ff800; valaddr_reg:x3; val_offset:11802*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11802*0 + 3*94*FLEN/8, x4, x1, x2)

inst_3935:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787ffc00; valaddr_reg:x3; val_offset:11805*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11805*0 + 3*95*FLEN/8, x4, x1, x2)

inst_3936:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787ffe00; valaddr_reg:x3; val_offset:11808*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11808*0 + 3*96*FLEN/8, x4, x1, x2)

inst_3937:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787fff00; valaddr_reg:x3; val_offset:11811*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11811*0 + 3*97*FLEN/8, x4, x1, x2)

inst_3938:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787fff80; valaddr_reg:x3; val_offset:11814*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11814*0 + 3*98*FLEN/8, x4, x1, x2)

inst_3939:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787fffc0; valaddr_reg:x3; val_offset:11817*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11817*0 + 3*99*FLEN/8, x4, x1, x2)

inst_3940:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787fffe0; valaddr_reg:x3; val_offset:11820*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11820*0 + 3*100*FLEN/8, x4, x1, x2)

inst_3941:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787ffff0; valaddr_reg:x3; val_offset:11823*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11823*0 + 3*101*FLEN/8, x4, x1, x2)

inst_3942:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787ffff8; valaddr_reg:x3; val_offset:11826*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11826*0 + 3*102*FLEN/8, x4, x1, x2)

inst_3943:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787ffffc; valaddr_reg:x3; val_offset:11829*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11829*0 + 3*103*FLEN/8, x4, x1, x2)

inst_3944:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787ffffe; valaddr_reg:x3; val_offset:11832*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11832*0 + 3*104*FLEN/8, x4, x1, x2)

inst_3945:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xf0 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x787fffff; valaddr_reg:x3; val_offset:11835*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11835*0 + 3*105*FLEN/8, x4, x1, x2)

inst_3946:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f000001; valaddr_reg:x3; val_offset:11838*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11838*0 + 3*106*FLEN/8, x4, x1, x2)

inst_3947:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f000003; valaddr_reg:x3; val_offset:11841*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11841*0 + 3*107*FLEN/8, x4, x1, x2)

inst_3948:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f000007; valaddr_reg:x3; val_offset:11844*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11844*0 + 3*108*FLEN/8, x4, x1, x2)

inst_3949:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f199999; valaddr_reg:x3; val_offset:11847*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11847*0 + 3*109*FLEN/8, x4, x1, x2)

inst_3950:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f249249; valaddr_reg:x3; val_offset:11850*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11850*0 + 3*110*FLEN/8, x4, x1, x2)

inst_3951:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f333333; valaddr_reg:x3; val_offset:11853*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11853*0 + 3*111*FLEN/8, x4, x1, x2)

inst_3952:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:11856*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11856*0 + 3*112*FLEN/8, x4, x1, x2)

inst_3953:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:11859*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11859*0 + 3*113*FLEN/8, x4, x1, x2)

inst_3954:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f444444; valaddr_reg:x3; val_offset:11862*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11862*0 + 3*114*FLEN/8, x4, x1, x2)

inst_3955:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:11865*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11865*0 + 3*115*FLEN/8, x4, x1, x2)

inst_3956:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:11868*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11868*0 + 3*116*FLEN/8, x4, x1, x2)

inst_3957:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f666666; valaddr_reg:x3; val_offset:11871*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11871*0 + 3*117*FLEN/8, x4, x1, x2)

inst_3958:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:11874*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11874*0 + 3*118*FLEN/8, x4, x1, x2)

inst_3959:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:11877*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11877*0 + 3*119*FLEN/8, x4, x1, x2)

inst_3960:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:11880*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11880*0 + 3*120*FLEN/8, x4, x1, x2)

inst_3961:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2b6085 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3f3442 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dab6085; op2val:0x413f3442;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:11883*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11883*0 + 3*121*FLEN/8, x4, x1, x2)

inst_3962:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63000000; valaddr_reg:x3; val_offset:11886*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11886*0 + 3*122*FLEN/8, x4, x1, x2)

inst_3963:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63000001; valaddr_reg:x3; val_offset:11889*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11889*0 + 3*123*FLEN/8, x4, x1, x2)

inst_3964:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63000003; valaddr_reg:x3; val_offset:11892*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11892*0 + 3*124*FLEN/8, x4, x1, x2)

inst_3965:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63000007; valaddr_reg:x3; val_offset:11895*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11895*0 + 3*125*FLEN/8, x4, x1, x2)

inst_3966:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x6300000f; valaddr_reg:x3; val_offset:11898*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11898*0 + 3*126*FLEN/8, x4, x1, x2)

inst_3967:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x6300001f; valaddr_reg:x3; val_offset:11901*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11901*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_3968:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x6300003f; valaddr_reg:x3; val_offset:11904*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11904*0 + 3*128*FLEN/8, x4, x1, x2)

inst_3969:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x6300007f; valaddr_reg:x3; val_offset:11907*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11907*0 + 3*129*FLEN/8, x4, x1, x2)

inst_3970:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x630000ff; valaddr_reg:x3; val_offset:11910*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11910*0 + 3*130*FLEN/8, x4, x1, x2)

inst_3971:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x630001ff; valaddr_reg:x3; val_offset:11913*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11913*0 + 3*131*FLEN/8, x4, x1, x2)

inst_3972:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x630003ff; valaddr_reg:x3; val_offset:11916*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11916*0 + 3*132*FLEN/8, x4, x1, x2)

inst_3973:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x630007ff; valaddr_reg:x3; val_offset:11919*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11919*0 + 3*133*FLEN/8, x4, x1, x2)

inst_3974:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63000fff; valaddr_reg:x3; val_offset:11922*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11922*0 + 3*134*FLEN/8, x4, x1, x2)

inst_3975:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63001fff; valaddr_reg:x3; val_offset:11925*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11925*0 + 3*135*FLEN/8, x4, x1, x2)

inst_3976:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63003fff; valaddr_reg:x3; val_offset:11928*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11928*0 + 3*136*FLEN/8, x4, x1, x2)

inst_3977:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63007fff; valaddr_reg:x3; val_offset:11931*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11931*0 + 3*137*FLEN/8, x4, x1, x2)

inst_3978:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x6300ffff; valaddr_reg:x3; val_offset:11934*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11934*0 + 3*138*FLEN/8, x4, x1, x2)

inst_3979:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x6301ffff; valaddr_reg:x3; val_offset:11937*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11937*0 + 3*139*FLEN/8, x4, x1, x2)

inst_3980:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x6303ffff; valaddr_reg:x3; val_offset:11940*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11940*0 + 3*140*FLEN/8, x4, x1, x2)

inst_3981:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x6307ffff; valaddr_reg:x3; val_offset:11943*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11943*0 + 3*141*FLEN/8, x4, x1, x2)

inst_3982:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x630fffff; valaddr_reg:x3; val_offset:11946*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11946*0 + 3*142*FLEN/8, x4, x1, x2)

inst_3983:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x631fffff; valaddr_reg:x3; val_offset:11949*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11949*0 + 3*143*FLEN/8, x4, x1, x2)

inst_3984:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x633fffff; valaddr_reg:x3; val_offset:11952*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11952*0 + 3*144*FLEN/8, x4, x1, x2)

inst_3985:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63400000; valaddr_reg:x3; val_offset:11955*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11955*0 + 3*145*FLEN/8, x4, x1, x2)

inst_3986:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63600000; valaddr_reg:x3; val_offset:11958*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11958*0 + 3*146*FLEN/8, x4, x1, x2)

inst_3987:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63700000; valaddr_reg:x3; val_offset:11961*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11961*0 + 3*147*FLEN/8, x4, x1, x2)

inst_3988:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x63780000; valaddr_reg:x3; val_offset:11964*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11964*0 + 3*148*FLEN/8, x4, x1, x2)

inst_3989:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637c0000; valaddr_reg:x3; val_offset:11967*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11967*0 + 3*149*FLEN/8, x4, x1, x2)

inst_3990:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637e0000; valaddr_reg:x3; val_offset:11970*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11970*0 + 3*150*FLEN/8, x4, x1, x2)

inst_3991:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637f0000; valaddr_reg:x3; val_offset:11973*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11973*0 + 3*151*FLEN/8, x4, x1, x2)

inst_3992:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637f8000; valaddr_reg:x3; val_offset:11976*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11976*0 + 3*152*FLEN/8, x4, x1, x2)

inst_3993:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637fc000; valaddr_reg:x3; val_offset:11979*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11979*0 + 3*153*FLEN/8, x4, x1, x2)

inst_3994:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637fe000; valaddr_reg:x3; val_offset:11982*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11982*0 + 3*154*FLEN/8, x4, x1, x2)

inst_3995:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637ff000; valaddr_reg:x3; val_offset:11985*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11985*0 + 3*155*FLEN/8, x4, x1, x2)

inst_3996:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637ff800; valaddr_reg:x3; val_offset:11988*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11988*0 + 3*156*FLEN/8, x4, x1, x2)

inst_3997:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637ffc00; valaddr_reg:x3; val_offset:11991*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11991*0 + 3*157*FLEN/8, x4, x1, x2)

inst_3998:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637ffe00; valaddr_reg:x3; val_offset:11994*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11994*0 + 3*158*FLEN/8, x4, x1, x2)

inst_3999:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637fff00; valaddr_reg:x3; val_offset:11997*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 11997*0 + 3*159*FLEN/8, x4, x1, x2)

inst_4000:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637fff80; valaddr_reg:x3; val_offset:12000*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12000*0 + 3*160*FLEN/8, x4, x1, x2)

inst_4001:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637fffc0; valaddr_reg:x3; val_offset:12003*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12003*0 + 3*161*FLEN/8, x4, x1, x2)

inst_4002:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637fffe0; valaddr_reg:x3; val_offset:12006*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12006*0 + 3*162*FLEN/8, x4, x1, x2)

inst_4003:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637ffff0; valaddr_reg:x3; val_offset:12009*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12009*0 + 3*163*FLEN/8, x4, x1, x2)

inst_4004:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637ffff8; valaddr_reg:x3; val_offset:12012*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12012*0 + 3*164*FLEN/8, x4, x1, x2)

inst_4005:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637ffffc; valaddr_reg:x3; val_offset:12015*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12015*0 + 3*165*FLEN/8, x4, x1, x2)

inst_4006:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637ffffe; valaddr_reg:x3; val_offset:12018*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12018*0 + 3*166*FLEN/8, x4, x1, x2)

inst_4007:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xc6 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x637fffff; valaddr_reg:x3; val_offset:12021*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12021*0 + 3*167*FLEN/8, x4, x1, x2)

inst_4008:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f000001; valaddr_reg:x3; val_offset:12024*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12024*0 + 3*168*FLEN/8, x4, x1, x2)

inst_4009:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f000003; valaddr_reg:x3; val_offset:12027*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12027*0 + 3*169*FLEN/8, x4, x1, x2)

inst_4010:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f000007; valaddr_reg:x3; val_offset:12030*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12030*0 + 3*170*FLEN/8, x4, x1, x2)

inst_4011:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f199999; valaddr_reg:x3; val_offset:12033*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12033*0 + 3*171*FLEN/8, x4, x1, x2)

inst_4012:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f249249; valaddr_reg:x3; val_offset:12036*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12036*0 + 3*172*FLEN/8, x4, x1, x2)

inst_4013:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f333333; valaddr_reg:x3; val_offset:12039*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12039*0 + 3*173*FLEN/8, x4, x1, x2)

inst_4014:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:12042*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12042*0 + 3*174*FLEN/8, x4, x1, x2)

inst_4015:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:12045*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12045*0 + 3*175*FLEN/8, x4, x1, x2)

inst_4016:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f444444; valaddr_reg:x3; val_offset:12048*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12048*0 + 3*176*FLEN/8, x4, x1, x2)

inst_4017:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:12051*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12051*0 + 3*177*FLEN/8, x4, x1, x2)

inst_4018:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:12054*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12054*0 + 3*178*FLEN/8, x4, x1, x2)

inst_4019:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f666666; valaddr_reg:x3; val_offset:12057*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12057*0 + 3*179*FLEN/8, x4, x1, x2)

inst_4020:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:12060*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12060*0 + 3*180*FLEN/8, x4, x1, x2)

inst_4021:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:12063*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12063*0 + 3*181*FLEN/8, x4, x1, x2)

inst_4022:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:12066*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12066*0 + 3*182*FLEN/8, x4, x1, x2)

inst_4023:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c2cae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3e5188 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dac2cae; op2val:0x413e5188;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:12069*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12069*0 + 3*183*FLEN/8, x4, x1, x2)

inst_4024:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3f800001; valaddr_reg:x3; val_offset:12072*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12072*0 + 3*184*FLEN/8, x4, x1, x2)

inst_4025:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3f800003; valaddr_reg:x3; val_offset:12075*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12075*0 + 3*185*FLEN/8, x4, x1, x2)

inst_4026:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3f800007; valaddr_reg:x3; val_offset:12078*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12078*0 + 3*186*FLEN/8, x4, x1, x2)

inst_4027:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3f999999; valaddr_reg:x3; val_offset:12081*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12081*0 + 3*187*FLEN/8, x4, x1, x2)

inst_4028:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:12084*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12084*0 + 3*188*FLEN/8, x4, x1, x2)

inst_4029:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:12087*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12087*0 + 3*189*FLEN/8, x4, x1, x2)

inst_4030:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:12090*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12090*0 + 3*190*FLEN/8, x4, x1, x2)

inst_4031:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:12093*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12093*0 + 3*191*FLEN/8, x4, x1, x2)

inst_4032:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:12096*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12096*0 + 3*192*FLEN/8, x4, x1, x2)

inst_4033:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:12099*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12099*0 + 3*193*FLEN/8, x4, x1, x2)

inst_4034:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:12102*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12102*0 + 3*194*FLEN/8, x4, x1, x2)

inst_4035:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:12105*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12105*0 + 3*195*FLEN/8, x4, x1, x2)

inst_4036:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:12108*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12108*0 + 3*196*FLEN/8, x4, x1, x2)

inst_4037:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:12111*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12111*0 + 3*197*FLEN/8, x4, x1, x2)

inst_4038:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:12114*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12114*0 + 3*198*FLEN/8, x4, x1, x2)

inst_4039:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:12117*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12117*0 + 3*199*FLEN/8, x4, x1, x2)

inst_4040:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b800000; valaddr_reg:x3; val_offset:12120*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12120*0 + 3*200*FLEN/8, x4, x1, x2)

inst_4041:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b800001; valaddr_reg:x3; val_offset:12123*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12123*0 + 3*201*FLEN/8, x4, x1, x2)

inst_4042:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b800003; valaddr_reg:x3; val_offset:12126*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12126*0 + 3*202*FLEN/8, x4, x1, x2)

inst_4043:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b800007; valaddr_reg:x3; val_offset:12129*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12129*0 + 3*203*FLEN/8, x4, x1, x2)

inst_4044:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b80000f; valaddr_reg:x3; val_offset:12132*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12132*0 + 3*204*FLEN/8, x4, x1, x2)

inst_4045:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b80001f; valaddr_reg:x3; val_offset:12135*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12135*0 + 3*205*FLEN/8, x4, x1, x2)

inst_4046:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b80003f; valaddr_reg:x3; val_offset:12138*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12138*0 + 3*206*FLEN/8, x4, x1, x2)

inst_4047:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b80007f; valaddr_reg:x3; val_offset:12141*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12141*0 + 3*207*FLEN/8, x4, x1, x2)

inst_4048:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b8000ff; valaddr_reg:x3; val_offset:12144*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12144*0 + 3*208*FLEN/8, x4, x1, x2)

inst_4049:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b8001ff; valaddr_reg:x3; val_offset:12147*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12147*0 + 3*209*FLEN/8, x4, x1, x2)

inst_4050:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b8003ff; valaddr_reg:x3; val_offset:12150*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12150*0 + 3*210*FLEN/8, x4, x1, x2)

inst_4051:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b8007ff; valaddr_reg:x3; val_offset:12153*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12153*0 + 3*211*FLEN/8, x4, x1, x2)

inst_4052:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b800fff; valaddr_reg:x3; val_offset:12156*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12156*0 + 3*212*FLEN/8, x4, x1, x2)

inst_4053:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b801fff; valaddr_reg:x3; val_offset:12159*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12159*0 + 3*213*FLEN/8, x4, x1, x2)

inst_4054:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b803fff; valaddr_reg:x3; val_offset:12162*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12162*0 + 3*214*FLEN/8, x4, x1, x2)

inst_4055:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b807fff; valaddr_reg:x3; val_offset:12165*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12165*0 + 3*215*FLEN/8, x4, x1, x2)

inst_4056:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b80ffff; valaddr_reg:x3; val_offset:12168*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12168*0 + 3*216*FLEN/8, x4, x1, x2)

inst_4057:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b81ffff; valaddr_reg:x3; val_offset:12171*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12171*0 + 3*217*FLEN/8, x4, x1, x2)

inst_4058:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b83ffff; valaddr_reg:x3; val_offset:12174*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12174*0 + 3*218*FLEN/8, x4, x1, x2)

inst_4059:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b87ffff; valaddr_reg:x3; val_offset:12177*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12177*0 + 3*219*FLEN/8, x4, x1, x2)

inst_4060:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b8fffff; valaddr_reg:x3; val_offset:12180*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12180*0 + 3*220*FLEN/8, x4, x1, x2)

inst_4061:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4b9fffff; valaddr_reg:x3; val_offset:12183*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12183*0 + 3*221*FLEN/8, x4, x1, x2)

inst_4062:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bbfffff; valaddr_reg:x3; val_offset:12186*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12186*0 + 3*222*FLEN/8, x4, x1, x2)

inst_4063:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bc00000; valaddr_reg:x3; val_offset:12189*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12189*0 + 3*223*FLEN/8, x4, x1, x2)

inst_4064:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4be00000; valaddr_reg:x3; val_offset:12192*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12192*0 + 3*224*FLEN/8, x4, x1, x2)

inst_4065:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bf00000; valaddr_reg:x3; val_offset:12195*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12195*0 + 3*225*FLEN/8, x4, x1, x2)

inst_4066:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bf80000; valaddr_reg:x3; val_offset:12198*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12198*0 + 3*226*FLEN/8, x4, x1, x2)

inst_4067:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfc0000; valaddr_reg:x3; val_offset:12201*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12201*0 + 3*227*FLEN/8, x4, x1, x2)

inst_4068:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfe0000; valaddr_reg:x3; val_offset:12204*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12204*0 + 3*228*FLEN/8, x4, x1, x2)

inst_4069:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bff0000; valaddr_reg:x3; val_offset:12207*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12207*0 + 3*229*FLEN/8, x4, x1, x2)

inst_4070:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bff8000; valaddr_reg:x3; val_offset:12210*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12210*0 + 3*230*FLEN/8, x4, x1, x2)

inst_4071:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bffc000; valaddr_reg:x3; val_offset:12213*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12213*0 + 3*231*FLEN/8, x4, x1, x2)

inst_4072:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bffe000; valaddr_reg:x3; val_offset:12216*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12216*0 + 3*232*FLEN/8, x4, x1, x2)

inst_4073:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfff000; valaddr_reg:x3; val_offset:12219*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12219*0 + 3*233*FLEN/8, x4, x1, x2)

inst_4074:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfff800; valaddr_reg:x3; val_offset:12222*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12222*0 + 3*234*FLEN/8, x4, x1, x2)

inst_4075:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfffc00; valaddr_reg:x3; val_offset:12225*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12225*0 + 3*235*FLEN/8, x4, x1, x2)

inst_4076:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfffe00; valaddr_reg:x3; val_offset:12228*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12228*0 + 3*236*FLEN/8, x4, x1, x2)

inst_4077:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bffff00; valaddr_reg:x3; val_offset:12231*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12231*0 + 3*237*FLEN/8, x4, x1, x2)

inst_4078:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bffff80; valaddr_reg:x3; val_offset:12234*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12234*0 + 3*238*FLEN/8, x4, x1, x2)

inst_4079:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bffffc0; valaddr_reg:x3; val_offset:12237*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12237*0 + 3*239*FLEN/8, x4, x1, x2)

inst_4080:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bffffe0; valaddr_reg:x3; val_offset:12240*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12240*0 + 3*240*FLEN/8, x4, x1, x2)

inst_4081:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfffff0; valaddr_reg:x3; val_offset:12243*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12243*0 + 3*241*FLEN/8, x4, x1, x2)

inst_4082:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfffff8; valaddr_reg:x3; val_offset:12246*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12246*0 + 3*242*FLEN/8, x4, x1, x2)

inst_4083:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfffffc; valaddr_reg:x3; val_offset:12249*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12249*0 + 3*243*FLEN/8, x4, x1, x2)

inst_4084:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bfffffe; valaddr_reg:x3; val_offset:12252*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12252*0 + 3*244*FLEN/8, x4, x1, x2)

inst_4085:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x306d19 and fs3 == 0 and fe3 == 0x97 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7db9bb69; op2val:0x1306d19;
op3val:0x4bffffff; valaddr_reg:x3; val_offset:12255*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12255*0 + 3*245*FLEN/8, x4, x1, x2)

inst_4086:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:12258*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12258*0 + 3*246*FLEN/8, x4, x1, x2)

inst_4087:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:12261*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12261*0 + 3*247*FLEN/8, x4, x1, x2)

inst_4088:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:12264*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12264*0 + 3*248*FLEN/8, x4, x1, x2)

inst_4089:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:12267*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12267*0 + 3*249*FLEN/8, x4, x1, x2)

inst_4090:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:12270*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12270*0 + 3*250*FLEN/8, x4, x1, x2)

inst_4091:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:12273*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12273*0 + 3*251*FLEN/8, x4, x1, x2)

inst_4092:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:12276*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12276*0 + 3*252*FLEN/8, x4, x1, x2)

inst_4093:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:12279*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12279*0 + 3*253*FLEN/8, x4, x1, x2)

inst_4094:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:12282*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12282*0 + 3*254*FLEN/8, x4, x1, x2)

inst_4095:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:12285*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12285*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_4096:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:12288*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12288*0 + 3*256*FLEN/8, x4, x1, x2)

inst_4097:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:12291*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12291*0 + 3*257*FLEN/8, x4, x1, x2)

inst_4098:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:12294*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12294*0 + 3*258*FLEN/8, x4, x1, x2)

inst_4099:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:12297*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12297*0 + 3*259*FLEN/8, x4, x1, x2)

inst_4100:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:12300*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12300*0 + 3*260*FLEN/8, x4, x1, x2)

inst_4101:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:12303*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12303*0 + 3*261*FLEN/8, x4, x1, x2)

inst_4102:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80800000; valaddr_reg:x3; val_offset:12306*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12306*0 + 3*262*FLEN/8, x4, x1, x2)

inst_4103:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:12309*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12309*0 + 3*263*FLEN/8, x4, x1, x2)

inst_4104:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:12312*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12312*0 + 3*264*FLEN/8, x4, x1, x2)

inst_4105:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:12315*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12315*0 + 3*265*FLEN/8, x4, x1, x2)

inst_4106:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x8080000f; valaddr_reg:x3; val_offset:12318*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12318*0 + 3*266*FLEN/8, x4, x1, x2)

inst_4107:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x8080001f; valaddr_reg:x3; val_offset:12321*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12321*0 + 3*267*FLEN/8, x4, x1, x2)

inst_4108:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x8080003f; valaddr_reg:x3; val_offset:12324*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12324*0 + 3*268*FLEN/8, x4, x1, x2)

inst_4109:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x8080007f; valaddr_reg:x3; val_offset:12327*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12327*0 + 3*269*FLEN/8, x4, x1, x2)

inst_4110:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x808000ff; valaddr_reg:x3; val_offset:12330*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12330*0 + 3*270*FLEN/8, x4, x1, x2)

inst_4111:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x808001ff; valaddr_reg:x3; val_offset:12333*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12333*0 + 3*271*FLEN/8, x4, x1, x2)

inst_4112:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x808003ff; valaddr_reg:x3; val_offset:12336*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12336*0 + 3*272*FLEN/8, x4, x1, x2)

inst_4113:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x808007ff; valaddr_reg:x3; val_offset:12339*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12339*0 + 3*273*FLEN/8, x4, x1, x2)

inst_4114:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80800fff; valaddr_reg:x3; val_offset:12342*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12342*0 + 3*274*FLEN/8, x4, x1, x2)

inst_4115:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80801fff; valaddr_reg:x3; val_offset:12345*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12345*0 + 3*275*FLEN/8, x4, x1, x2)

inst_4116:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80803fff; valaddr_reg:x3; val_offset:12348*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12348*0 + 3*276*FLEN/8, x4, x1, x2)

inst_4117:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80807fff; valaddr_reg:x3; val_offset:12351*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12351*0 + 3*277*FLEN/8, x4, x1, x2)

inst_4118:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x8080ffff; valaddr_reg:x3; val_offset:12354*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12354*0 + 3*278*FLEN/8, x4, x1, x2)

inst_4119:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x8081ffff; valaddr_reg:x3; val_offset:12357*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12357*0 + 3*279*FLEN/8, x4, x1, x2)

inst_4120:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x8083ffff; valaddr_reg:x3; val_offset:12360*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12360*0 + 3*280*FLEN/8, x4, x1, x2)

inst_4121:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x8087ffff; valaddr_reg:x3; val_offset:12363*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12363*0 + 3*281*FLEN/8, x4, x1, x2)

inst_4122:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x808fffff; valaddr_reg:x3; val_offset:12366*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12366*0 + 3*282*FLEN/8, x4, x1, x2)

inst_4123:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x809fffff; valaddr_reg:x3; val_offset:12369*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12369*0 + 3*283*FLEN/8, x4, x1, x2)

inst_4124:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80bfffff; valaddr_reg:x3; val_offset:12372*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12372*0 + 3*284*FLEN/8, x4, x1, x2)

inst_4125:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80c00000; valaddr_reg:x3; val_offset:12375*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12375*0 + 3*285*FLEN/8, x4, x1, x2)

inst_4126:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80e00000; valaddr_reg:x3; val_offset:12378*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12378*0 + 3*286*FLEN/8, x4, x1, x2)

inst_4127:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80f00000; valaddr_reg:x3; val_offset:12381*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12381*0 + 3*287*FLEN/8, x4, x1, x2)

inst_4128:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80f80000; valaddr_reg:x3; val_offset:12384*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12384*0 + 3*288*FLEN/8, x4, x1, x2)

inst_4129:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fc0000; valaddr_reg:x3; val_offset:12387*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12387*0 + 3*289*FLEN/8, x4, x1, x2)

inst_4130:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fe0000; valaddr_reg:x3; val_offset:12390*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12390*0 + 3*290*FLEN/8, x4, x1, x2)

inst_4131:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80ff0000; valaddr_reg:x3; val_offset:12393*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12393*0 + 3*291*FLEN/8, x4, x1, x2)

inst_4132:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80ff8000; valaddr_reg:x3; val_offset:12396*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12396*0 + 3*292*FLEN/8, x4, x1, x2)

inst_4133:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80ffc000; valaddr_reg:x3; val_offset:12399*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12399*0 + 3*293*FLEN/8, x4, x1, x2)

inst_4134:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80ffe000; valaddr_reg:x3; val_offset:12402*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12402*0 + 3*294*FLEN/8, x4, x1, x2)

inst_4135:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fff000; valaddr_reg:x3; val_offset:12405*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12405*0 + 3*295*FLEN/8, x4, x1, x2)

inst_4136:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fff800; valaddr_reg:x3; val_offset:12408*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12408*0 + 3*296*FLEN/8, x4, x1, x2)

inst_4137:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fffc00; valaddr_reg:x3; val_offset:12411*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12411*0 + 3*297*FLEN/8, x4, x1, x2)

inst_4138:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fffe00; valaddr_reg:x3; val_offset:12414*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12414*0 + 3*298*FLEN/8, x4, x1, x2)

inst_4139:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80ffff00; valaddr_reg:x3; val_offset:12417*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12417*0 + 3*299*FLEN/8, x4, x1, x2)

inst_4140:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80ffff80; valaddr_reg:x3; val_offset:12420*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12420*0 + 3*300*FLEN/8, x4, x1, x2)

inst_4141:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80ffffc0; valaddr_reg:x3; val_offset:12423*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12423*0 + 3*301*FLEN/8, x4, x1, x2)

inst_4142:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80ffffe0; valaddr_reg:x3; val_offset:12426*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12426*0 + 3*302*FLEN/8, x4, x1, x2)

inst_4143:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fffff0; valaddr_reg:x3; val_offset:12429*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12429*0 + 3*303*FLEN/8, x4, x1, x2)

inst_4144:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:12432*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12432*0 + 3*304*FLEN/8, x4, x1, x2)

inst_4145:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:12435*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12435*0 + 3*305*FLEN/8, x4, x1, x2)

inst_4146:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:12438*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12438*0 + 3*306*FLEN/8, x4, x1, x2)

inst_4147:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba4a99; op2val:0x80000000;
op3val:0x80ffffff; valaddr_reg:x3; val_offset:12441*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12441*0 + 3*307*FLEN/8, x4, x1, x2)

inst_4148:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:12444*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12444*0 + 3*308*FLEN/8, x4, x1, x2)

inst_4149:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:12447*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12447*0 + 3*309*FLEN/8, x4, x1, x2)

inst_4150:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:12450*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12450*0 + 3*310*FLEN/8, x4, x1, x2)

inst_4151:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:12453*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12453*0 + 3*311*FLEN/8, x4, x1, x2)

inst_4152:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:12456*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12456*0 + 3*312*FLEN/8, x4, x1, x2)

inst_4153:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:12459*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12459*0 + 3*313*FLEN/8, x4, x1, x2)

inst_4154:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:12462*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12462*0 + 3*314*FLEN/8, x4, x1, x2)

inst_4155:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:12465*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12465*0 + 3*315*FLEN/8, x4, x1, x2)

inst_4156:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:12468*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12468*0 + 3*316*FLEN/8, x4, x1, x2)

inst_4157:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:12471*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12471*0 + 3*317*FLEN/8, x4, x1, x2)

inst_4158:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:12474*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12474*0 + 3*318*FLEN/8, x4, x1, x2)

inst_4159:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:12477*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12477*0 + 3*319*FLEN/8, x4, x1, x2)

inst_4160:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:12480*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12480*0 + 3*320*FLEN/8, x4, x1, x2)

inst_4161:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:12483*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12483*0 + 3*321*FLEN/8, x4, x1, x2)

inst_4162:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:12486*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12486*0 + 3*322*FLEN/8, x4, x1, x2)

inst_4163:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:12489*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12489*0 + 3*323*FLEN/8, x4, x1, x2)

inst_4164:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7800000; valaddr_reg:x3; val_offset:12492*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12492*0 + 3*324*FLEN/8, x4, x1, x2)

inst_4165:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7800001; valaddr_reg:x3; val_offset:12495*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12495*0 + 3*325*FLEN/8, x4, x1, x2)

inst_4166:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7800003; valaddr_reg:x3; val_offset:12498*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12498*0 + 3*326*FLEN/8, x4, x1, x2)

inst_4167:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7800007; valaddr_reg:x3; val_offset:12501*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12501*0 + 3*327*FLEN/8, x4, x1, x2)

inst_4168:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x780000f; valaddr_reg:x3; val_offset:12504*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12504*0 + 3*328*FLEN/8, x4, x1, x2)

inst_4169:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x780001f; valaddr_reg:x3; val_offset:12507*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12507*0 + 3*329*FLEN/8, x4, x1, x2)

inst_4170:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x780003f; valaddr_reg:x3; val_offset:12510*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12510*0 + 3*330*FLEN/8, x4, x1, x2)

inst_4171:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x780007f; valaddr_reg:x3; val_offset:12513*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12513*0 + 3*331*FLEN/8, x4, x1, x2)

inst_4172:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x78000ff; valaddr_reg:x3; val_offset:12516*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12516*0 + 3*332*FLEN/8, x4, x1, x2)

inst_4173:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x78001ff; valaddr_reg:x3; val_offset:12519*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12519*0 + 3*333*FLEN/8, x4, x1, x2)

inst_4174:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x78003ff; valaddr_reg:x3; val_offset:12522*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12522*0 + 3*334*FLEN/8, x4, x1, x2)

inst_4175:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x78007ff; valaddr_reg:x3; val_offset:12525*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12525*0 + 3*335*FLEN/8, x4, x1, x2)

inst_4176:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7800fff; valaddr_reg:x3; val_offset:12528*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12528*0 + 3*336*FLEN/8, x4, x1, x2)

inst_4177:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7801fff; valaddr_reg:x3; val_offset:12531*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12531*0 + 3*337*FLEN/8, x4, x1, x2)

inst_4178:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7803fff; valaddr_reg:x3; val_offset:12534*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12534*0 + 3*338*FLEN/8, x4, x1, x2)

inst_4179:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7807fff; valaddr_reg:x3; val_offset:12537*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12537*0 + 3*339*FLEN/8, x4, x1, x2)

inst_4180:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x780ffff; valaddr_reg:x3; val_offset:12540*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12540*0 + 3*340*FLEN/8, x4, x1, x2)

inst_4181:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x781ffff; valaddr_reg:x3; val_offset:12543*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12543*0 + 3*341*FLEN/8, x4, x1, x2)

inst_4182:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x783ffff; valaddr_reg:x3; val_offset:12546*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12546*0 + 3*342*FLEN/8, x4, x1, x2)

inst_4183:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x787ffff; valaddr_reg:x3; val_offset:12549*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12549*0 + 3*343*FLEN/8, x4, x1, x2)

inst_4184:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x78fffff; valaddr_reg:x3; val_offset:12552*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12552*0 + 3*344*FLEN/8, x4, x1, x2)

inst_4185:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x79fffff; valaddr_reg:x3; val_offset:12555*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12555*0 + 3*345*FLEN/8, x4, x1, x2)

inst_4186:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7bfffff; valaddr_reg:x3; val_offset:12558*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12558*0 + 3*346*FLEN/8, x4, x1, x2)

inst_4187:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7c00000; valaddr_reg:x3; val_offset:12561*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12561*0 + 3*347*FLEN/8, x4, x1, x2)

inst_4188:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7e00000; valaddr_reg:x3; val_offset:12564*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12564*0 + 3*348*FLEN/8, x4, x1, x2)

inst_4189:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7f00000; valaddr_reg:x3; val_offset:12567*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12567*0 + 3*349*FLEN/8, x4, x1, x2)

inst_4190:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7f80000; valaddr_reg:x3; val_offset:12570*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12570*0 + 3*350*FLEN/8, x4, x1, x2)

inst_4191:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fc0000; valaddr_reg:x3; val_offset:12573*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12573*0 + 3*351*FLEN/8, x4, x1, x2)

inst_4192:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fe0000; valaddr_reg:x3; val_offset:12576*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12576*0 + 3*352*FLEN/8, x4, x1, x2)

inst_4193:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ff0000; valaddr_reg:x3; val_offset:12579*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12579*0 + 3*353*FLEN/8, x4, x1, x2)

inst_4194:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ff8000; valaddr_reg:x3; val_offset:12582*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12582*0 + 3*354*FLEN/8, x4, x1, x2)

inst_4195:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffc000; valaddr_reg:x3; val_offset:12585*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12585*0 + 3*355*FLEN/8, x4, x1, x2)

inst_4196:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffe000; valaddr_reg:x3; val_offset:12588*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12588*0 + 3*356*FLEN/8, x4, x1, x2)

inst_4197:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fff000; valaddr_reg:x3; val_offset:12591*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12591*0 + 3*357*FLEN/8, x4, x1, x2)

inst_4198:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fff800; valaddr_reg:x3; val_offset:12594*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12594*0 + 3*358*FLEN/8, x4, x1, x2)

inst_4199:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fffc00; valaddr_reg:x3; val_offset:12597*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12597*0 + 3*359*FLEN/8, x4, x1, x2)

inst_4200:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fffe00; valaddr_reg:x3; val_offset:12600*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12600*0 + 3*360*FLEN/8, x4, x1, x2)

inst_4201:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffff00; valaddr_reg:x3; val_offset:12603*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12603*0 + 3*361*FLEN/8, x4, x1, x2)

inst_4202:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffff80; valaddr_reg:x3; val_offset:12606*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12606*0 + 3*362*FLEN/8, x4, x1, x2)

inst_4203:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffffc0; valaddr_reg:x3; val_offset:12609*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12609*0 + 3*363*FLEN/8, x4, x1, x2)

inst_4204:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffffe0; valaddr_reg:x3; val_offset:12612*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12612*0 + 3*364*FLEN/8, x4, x1, x2)

inst_4205:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fffff0; valaddr_reg:x3; val_offset:12615*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12615*0 + 3*365*FLEN/8, x4, x1, x2)

inst_4206:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fffff8; valaddr_reg:x3; val_offset:12618*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12618*0 + 3*366*FLEN/8, x4, x1, x2)

inst_4207:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fffffc; valaddr_reg:x3; val_offset:12621*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12621*0 + 3*367*FLEN/8, x4, x1, x2)

inst_4208:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7fffffe; valaddr_reg:x3; val_offset:12624*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12624*0 + 3*368*FLEN/8, x4, x1, x2)

inst_4209:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a8c76 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dba8c76; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:12627*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12627*0 + 3*369*FLEN/8, x4, x1, x2)

inst_4210:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:12630*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12630*0 + 3*370*FLEN/8, x4, x1, x2)

inst_4211:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:12633*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12633*0 + 3*371*FLEN/8, x4, x1, x2)

inst_4212:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:12636*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12636*0 + 3*372*FLEN/8, x4, x1, x2)

inst_4213:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:12639*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12639*0 + 3*373*FLEN/8, x4, x1, x2)

inst_4214:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:12642*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12642*0 + 3*374*FLEN/8, x4, x1, x2)

inst_4215:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:12645*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12645*0 + 3*375*FLEN/8, x4, x1, x2)

inst_4216:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:12648*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12648*0 + 3*376*FLEN/8, x4, x1, x2)

inst_4217:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:12651*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12651*0 + 3*377*FLEN/8, x4, x1, x2)

inst_4218:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:12654*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12654*0 + 3*378*FLEN/8, x4, x1, x2)

inst_4219:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:12657*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12657*0 + 3*379*FLEN/8, x4, x1, x2)

inst_4220:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:12660*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12660*0 + 3*380*FLEN/8, x4, x1, x2)

inst_4221:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:12663*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12663*0 + 3*381*FLEN/8, x4, x1, x2)

inst_4222:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:12666*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12666*0 + 3*382*FLEN/8, x4, x1, x2)

inst_4223:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:12669*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12669*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_4224:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:12672*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12672*0 + 3*384*FLEN/8, x4, x1, x2)

inst_4225:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:12675*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12675*0 + 3*385*FLEN/8, x4, x1, x2)

inst_4226:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84800000; valaddr_reg:x3; val_offset:12678*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12678*0 + 3*386*FLEN/8, x4, x1, x2)

inst_4227:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84800001; valaddr_reg:x3; val_offset:12681*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12681*0 + 3*387*FLEN/8, x4, x1, x2)

inst_4228:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84800003; valaddr_reg:x3; val_offset:12684*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12684*0 + 3*388*FLEN/8, x4, x1, x2)

inst_4229:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84800007; valaddr_reg:x3; val_offset:12687*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12687*0 + 3*389*FLEN/8, x4, x1, x2)

inst_4230:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x8480000f; valaddr_reg:x3; val_offset:12690*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12690*0 + 3*390*FLEN/8, x4, x1, x2)

inst_4231:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x8480001f; valaddr_reg:x3; val_offset:12693*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12693*0 + 3*391*FLEN/8, x4, x1, x2)

inst_4232:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x8480003f; valaddr_reg:x3; val_offset:12696*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12696*0 + 3*392*FLEN/8, x4, x1, x2)

inst_4233:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x8480007f; valaddr_reg:x3; val_offset:12699*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12699*0 + 3*393*FLEN/8, x4, x1, x2)

inst_4234:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x848000ff; valaddr_reg:x3; val_offset:12702*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12702*0 + 3*394*FLEN/8, x4, x1, x2)

inst_4235:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x848001ff; valaddr_reg:x3; val_offset:12705*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12705*0 + 3*395*FLEN/8, x4, x1, x2)

inst_4236:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x848003ff; valaddr_reg:x3; val_offset:12708*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12708*0 + 3*396*FLEN/8, x4, x1, x2)

inst_4237:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x848007ff; valaddr_reg:x3; val_offset:12711*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12711*0 + 3*397*FLEN/8, x4, x1, x2)

inst_4238:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84800fff; valaddr_reg:x3; val_offset:12714*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12714*0 + 3*398*FLEN/8, x4, x1, x2)

inst_4239:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84801fff; valaddr_reg:x3; val_offset:12717*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12717*0 + 3*399*FLEN/8, x4, x1, x2)

inst_4240:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84803fff; valaddr_reg:x3; val_offset:12720*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12720*0 + 3*400*FLEN/8, x4, x1, x2)

inst_4241:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84807fff; valaddr_reg:x3; val_offset:12723*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12723*0 + 3*401*FLEN/8, x4, x1, x2)

inst_4242:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x8480ffff; valaddr_reg:x3; val_offset:12726*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12726*0 + 3*402*FLEN/8, x4, x1, x2)

inst_4243:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x8481ffff; valaddr_reg:x3; val_offset:12729*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12729*0 + 3*403*FLEN/8, x4, x1, x2)

inst_4244:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x8483ffff; valaddr_reg:x3; val_offset:12732*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12732*0 + 3*404*FLEN/8, x4, x1, x2)

inst_4245:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x8487ffff; valaddr_reg:x3; val_offset:12735*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12735*0 + 3*405*FLEN/8, x4, x1, x2)

inst_4246:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x848fffff; valaddr_reg:x3; val_offset:12738*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12738*0 + 3*406*FLEN/8, x4, x1, x2)

inst_4247:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x849fffff; valaddr_reg:x3; val_offset:12741*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12741*0 + 3*407*FLEN/8, x4, x1, x2)

inst_4248:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84bfffff; valaddr_reg:x3; val_offset:12744*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12744*0 + 3*408*FLEN/8, x4, x1, x2)

inst_4249:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84c00000; valaddr_reg:x3; val_offset:12747*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12747*0 + 3*409*FLEN/8, x4, x1, x2)

inst_4250:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84e00000; valaddr_reg:x3; val_offset:12750*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12750*0 + 3*410*FLEN/8, x4, x1, x2)

inst_4251:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84f00000; valaddr_reg:x3; val_offset:12753*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12753*0 + 3*411*FLEN/8, x4, x1, x2)

inst_4252:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84f80000; valaddr_reg:x3; val_offset:12756*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12756*0 + 3*412*FLEN/8, x4, x1, x2)

inst_4253:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fc0000; valaddr_reg:x3; val_offset:12759*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12759*0 + 3*413*FLEN/8, x4, x1, x2)

inst_4254:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fe0000; valaddr_reg:x3; val_offset:12762*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12762*0 + 3*414*FLEN/8, x4, x1, x2)

inst_4255:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84ff0000; valaddr_reg:x3; val_offset:12765*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12765*0 + 3*415*FLEN/8, x4, x1, x2)

inst_4256:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84ff8000; valaddr_reg:x3; val_offset:12768*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12768*0 + 3*416*FLEN/8, x4, x1, x2)

inst_4257:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84ffc000; valaddr_reg:x3; val_offset:12771*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12771*0 + 3*417*FLEN/8, x4, x1, x2)

inst_4258:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84ffe000; valaddr_reg:x3; val_offset:12774*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12774*0 + 3*418*FLEN/8, x4, x1, x2)

inst_4259:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fff000; valaddr_reg:x3; val_offset:12777*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12777*0 + 3*419*FLEN/8, x4, x1, x2)

inst_4260:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fff800; valaddr_reg:x3; val_offset:12780*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12780*0 + 3*420*FLEN/8, x4, x1, x2)

inst_4261:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fffc00; valaddr_reg:x3; val_offset:12783*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12783*0 + 3*421*FLEN/8, x4, x1, x2)

inst_4262:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fffe00; valaddr_reg:x3; val_offset:12786*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12786*0 + 3*422*FLEN/8, x4, x1, x2)

inst_4263:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84ffff00; valaddr_reg:x3; val_offset:12789*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12789*0 + 3*423*FLEN/8, x4, x1, x2)

inst_4264:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84ffff80; valaddr_reg:x3; val_offset:12792*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12792*0 + 3*424*FLEN/8, x4, x1, x2)

inst_4265:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84ffffc0; valaddr_reg:x3; val_offset:12795*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12795*0 + 3*425*FLEN/8, x4, x1, x2)

inst_4266:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84ffffe0; valaddr_reg:x3; val_offset:12798*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12798*0 + 3*426*FLEN/8, x4, x1, x2)

inst_4267:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fffff0; valaddr_reg:x3; val_offset:12801*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12801*0 + 3*427*FLEN/8, x4, x1, x2)

inst_4268:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fffff8; valaddr_reg:x3; val_offset:12804*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12804*0 + 3*428*FLEN/8, x4, x1, x2)

inst_4269:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fffffc; valaddr_reg:x3; val_offset:12807*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12807*0 + 3*429*FLEN/8, x4, x1, x2)

inst_4270:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84fffffe; valaddr_reg:x3; val_offset:12810*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12810*0 + 3*430*FLEN/8, x4, x1, x2)

inst_4271:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d2101 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbd2101; op2val:0x80000000;
op3val:0x84ffffff; valaddr_reg:x3; val_offset:12813*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12813*0 + 3*431*FLEN/8, x4, x1, x2)

inst_4272:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbf800001; valaddr_reg:x3; val_offset:12816*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12816*0 + 3*432*FLEN/8, x4, x1, x2)

inst_4273:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbf800003; valaddr_reg:x3; val_offset:12819*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12819*0 + 3*433*FLEN/8, x4, x1, x2)

inst_4274:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbf800007; valaddr_reg:x3; val_offset:12822*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12822*0 + 3*434*FLEN/8, x4, x1, x2)

inst_4275:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbf999999; valaddr_reg:x3; val_offset:12825*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12825*0 + 3*435*FLEN/8, x4, x1, x2)

inst_4276:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:12828*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12828*0 + 3*436*FLEN/8, x4, x1, x2)

inst_4277:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:12831*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12831*0 + 3*437*FLEN/8, x4, x1, x2)

inst_4278:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:12834*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12834*0 + 3*438*FLEN/8, x4, x1, x2)

inst_4279:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:12837*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12837*0 + 3*439*FLEN/8, x4, x1, x2)

inst_4280:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:12840*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12840*0 + 3*440*FLEN/8, x4, x1, x2)

inst_4281:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:12843*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12843*0 + 3*441*FLEN/8, x4, x1, x2)

inst_4282:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:12846*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12846*0 + 3*442*FLEN/8, x4, x1, x2)

inst_4283:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:12849*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12849*0 + 3*443*FLEN/8, x4, x1, x2)

inst_4284:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:12852*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12852*0 + 3*444*FLEN/8, x4, x1, x2)

inst_4285:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:12855*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12855*0 + 3*445*FLEN/8, x4, x1, x2)

inst_4286:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:12858*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12858*0 + 3*446*FLEN/8, x4, x1, x2)

inst_4287:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:12861*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12861*0 + 3*447*FLEN/8, x4, x1, x2)

inst_4288:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9800000; valaddr_reg:x3; val_offset:12864*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12864*0 + 3*448*FLEN/8, x4, x1, x2)

inst_4289:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9800001; valaddr_reg:x3; val_offset:12867*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12867*0 + 3*449*FLEN/8, x4, x1, x2)

inst_4290:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9800003; valaddr_reg:x3; val_offset:12870*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12870*0 + 3*450*FLEN/8, x4, x1, x2)

inst_4291:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9800007; valaddr_reg:x3; val_offset:12873*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12873*0 + 3*451*FLEN/8, x4, x1, x2)

inst_4292:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc980000f; valaddr_reg:x3; val_offset:12876*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12876*0 + 3*452*FLEN/8, x4, x1, x2)

inst_4293:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc980001f; valaddr_reg:x3; val_offset:12879*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12879*0 + 3*453*FLEN/8, x4, x1, x2)

inst_4294:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc980003f; valaddr_reg:x3; val_offset:12882*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12882*0 + 3*454*FLEN/8, x4, x1, x2)

inst_4295:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc980007f; valaddr_reg:x3; val_offset:12885*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12885*0 + 3*455*FLEN/8, x4, x1, x2)

inst_4296:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc98000ff; valaddr_reg:x3; val_offset:12888*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12888*0 + 3*456*FLEN/8, x4, x1, x2)

inst_4297:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc98001ff; valaddr_reg:x3; val_offset:12891*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12891*0 + 3*457*FLEN/8, x4, x1, x2)

inst_4298:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc98003ff; valaddr_reg:x3; val_offset:12894*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12894*0 + 3*458*FLEN/8, x4, x1, x2)

inst_4299:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc98007ff; valaddr_reg:x3; val_offset:12897*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12897*0 + 3*459*FLEN/8, x4, x1, x2)

inst_4300:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9800fff; valaddr_reg:x3; val_offset:12900*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12900*0 + 3*460*FLEN/8, x4, x1, x2)

inst_4301:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9801fff; valaddr_reg:x3; val_offset:12903*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12903*0 + 3*461*FLEN/8, x4, x1, x2)

inst_4302:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9803fff; valaddr_reg:x3; val_offset:12906*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12906*0 + 3*462*FLEN/8, x4, x1, x2)

inst_4303:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9807fff; valaddr_reg:x3; val_offset:12909*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12909*0 + 3*463*FLEN/8, x4, x1, x2)

inst_4304:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc980ffff; valaddr_reg:x3; val_offset:12912*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12912*0 + 3*464*FLEN/8, x4, x1, x2)

inst_4305:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc981ffff; valaddr_reg:x3; val_offset:12915*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12915*0 + 3*465*FLEN/8, x4, x1, x2)

inst_4306:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc983ffff; valaddr_reg:x3; val_offset:12918*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12918*0 + 3*466*FLEN/8, x4, x1, x2)

inst_4307:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc987ffff; valaddr_reg:x3; val_offset:12921*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12921*0 + 3*467*FLEN/8, x4, x1, x2)

inst_4308:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc98fffff; valaddr_reg:x3; val_offset:12924*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12924*0 + 3*468*FLEN/8, x4, x1, x2)

inst_4309:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc99fffff; valaddr_reg:x3; val_offset:12927*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12927*0 + 3*469*FLEN/8, x4, x1, x2)

inst_4310:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9bfffff; valaddr_reg:x3; val_offset:12930*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12930*0 + 3*470*FLEN/8, x4, x1, x2)

inst_4311:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9c00000; valaddr_reg:x3; val_offset:12933*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12933*0 + 3*471*FLEN/8, x4, x1, x2)

inst_4312:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9e00000; valaddr_reg:x3; val_offset:12936*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12936*0 + 3*472*FLEN/8, x4, x1, x2)

inst_4313:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9f00000; valaddr_reg:x3; val_offset:12939*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12939*0 + 3*473*FLEN/8, x4, x1, x2)

inst_4314:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9f80000; valaddr_reg:x3; val_offset:12942*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12942*0 + 3*474*FLEN/8, x4, x1, x2)

inst_4315:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fc0000; valaddr_reg:x3; val_offset:12945*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12945*0 + 3*475*FLEN/8, x4, x1, x2)

inst_4316:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fe0000; valaddr_reg:x3; val_offset:12948*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12948*0 + 3*476*FLEN/8, x4, x1, x2)

inst_4317:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9ff0000; valaddr_reg:x3; val_offset:12951*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12951*0 + 3*477*FLEN/8, x4, x1, x2)

inst_4318:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9ff8000; valaddr_reg:x3; val_offset:12954*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12954*0 + 3*478*FLEN/8, x4, x1, x2)

inst_4319:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9ffc000; valaddr_reg:x3; val_offset:12957*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12957*0 + 3*479*FLEN/8, x4, x1, x2)

inst_4320:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9ffe000; valaddr_reg:x3; val_offset:12960*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12960*0 + 3*480*FLEN/8, x4, x1, x2)

inst_4321:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fff000; valaddr_reg:x3; val_offset:12963*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12963*0 + 3*481*FLEN/8, x4, x1, x2)

inst_4322:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fff800; valaddr_reg:x3; val_offset:12966*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12966*0 + 3*482*FLEN/8, x4, x1, x2)

inst_4323:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fffc00; valaddr_reg:x3; val_offset:12969*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12969*0 + 3*483*FLEN/8, x4, x1, x2)

inst_4324:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fffe00; valaddr_reg:x3; val_offset:12972*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12972*0 + 3*484*FLEN/8, x4, x1, x2)

inst_4325:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9ffff00; valaddr_reg:x3; val_offset:12975*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12975*0 + 3*485*FLEN/8, x4, x1, x2)

inst_4326:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9ffff80; valaddr_reg:x3; val_offset:12978*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12978*0 + 3*486*FLEN/8, x4, x1, x2)

inst_4327:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9ffffc0; valaddr_reg:x3; val_offset:12981*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12981*0 + 3*487*FLEN/8, x4, x1, x2)

inst_4328:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9ffffe0; valaddr_reg:x3; val_offset:12984*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12984*0 + 3*488*FLEN/8, x4, x1, x2)

inst_4329:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fffff0; valaddr_reg:x3; val_offset:12987*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12987*0 + 3*489*FLEN/8, x4, x1, x2)

inst_4330:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fffff8; valaddr_reg:x3; val_offset:12990*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12990*0 + 3*490*FLEN/8, x4, x1, x2)

inst_4331:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fffffc; valaddr_reg:x3; val_offset:12993*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12993*0 + 3*491*FLEN/8, x4, x1, x2)

inst_4332:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9fffffe; valaddr_reg:x3; val_offset:12996*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12996*0 + 3*492*FLEN/8, x4, x1, x2)

inst_4333:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2c6232 and fs3 == 1 and fe3 == 0x93 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe1674; op2val:0x812c6232;
op3val:0xc9ffffff; valaddr_reg:x3; val_offset:12999*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 12999*0 + 3*493*FLEN/8, x4, x1, x2)

inst_4334:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe000000; valaddr_reg:x3; val_offset:13002*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13002*0 + 3*494*FLEN/8, x4, x1, x2)

inst_4335:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe000001; valaddr_reg:x3; val_offset:13005*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13005*0 + 3*495*FLEN/8, x4, x1, x2)

inst_4336:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe000003; valaddr_reg:x3; val_offset:13008*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13008*0 + 3*496*FLEN/8, x4, x1, x2)

inst_4337:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe000007; valaddr_reg:x3; val_offset:13011*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13011*0 + 3*497*FLEN/8, x4, x1, x2)

inst_4338:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe00000f; valaddr_reg:x3; val_offset:13014*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13014*0 + 3*498*FLEN/8, x4, x1, x2)

inst_4339:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe00001f; valaddr_reg:x3; val_offset:13017*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13017*0 + 3*499*FLEN/8, x4, x1, x2)

inst_4340:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe00003f; valaddr_reg:x3; val_offset:13020*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13020*0 + 3*500*FLEN/8, x4, x1, x2)

inst_4341:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe00007f; valaddr_reg:x3; val_offset:13023*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13023*0 + 3*501*FLEN/8, x4, x1, x2)

inst_4342:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe0000ff; valaddr_reg:x3; val_offset:13026*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13026*0 + 3*502*FLEN/8, x4, x1, x2)

inst_4343:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe0001ff; valaddr_reg:x3; val_offset:13029*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13029*0 + 3*503*FLEN/8, x4, x1, x2)

inst_4344:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe0003ff; valaddr_reg:x3; val_offset:13032*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13032*0 + 3*504*FLEN/8, x4, x1, x2)

inst_4345:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe0007ff; valaddr_reg:x3; val_offset:13035*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13035*0 + 3*505*FLEN/8, x4, x1, x2)

inst_4346:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe000fff; valaddr_reg:x3; val_offset:13038*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13038*0 + 3*506*FLEN/8, x4, x1, x2)

inst_4347:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe001fff; valaddr_reg:x3; val_offset:13041*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13041*0 + 3*507*FLEN/8, x4, x1, x2)

inst_4348:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe003fff; valaddr_reg:x3; val_offset:13044*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13044*0 + 3*508*FLEN/8, x4, x1, x2)

inst_4349:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe007fff; valaddr_reg:x3; val_offset:13047*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13047*0 + 3*509*FLEN/8, x4, x1, x2)

inst_4350:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe00ffff; valaddr_reg:x3; val_offset:13050*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13050*0 + 3*510*FLEN/8, x4, x1, x2)

inst_4351:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe01ffff; valaddr_reg:x3; val_offset:13053*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13053*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_4352:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe03ffff; valaddr_reg:x3; val_offset:13056*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13056*0 + 3*512*FLEN/8, x4, x1, x2)

inst_4353:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe07ffff; valaddr_reg:x3; val_offset:13059*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13059*0 + 3*513*FLEN/8, x4, x1, x2)

inst_4354:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe0fffff; valaddr_reg:x3; val_offset:13062*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13062*0 + 3*514*FLEN/8, x4, x1, x2)

inst_4355:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe1fffff; valaddr_reg:x3; val_offset:13065*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13065*0 + 3*515*FLEN/8, x4, x1, x2)

inst_4356:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe3fffff; valaddr_reg:x3; val_offset:13068*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13068*0 + 3*516*FLEN/8, x4, x1, x2)

inst_4357:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe400000; valaddr_reg:x3; val_offset:13071*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13071*0 + 3*517*FLEN/8, x4, x1, x2)

inst_4358:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe600000; valaddr_reg:x3; val_offset:13074*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13074*0 + 3*518*FLEN/8, x4, x1, x2)

inst_4359:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe700000; valaddr_reg:x3; val_offset:13077*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13077*0 + 3*519*FLEN/8, x4, x1, x2)

inst_4360:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe780000; valaddr_reg:x3; val_offset:13080*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13080*0 + 3*520*FLEN/8, x4, x1, x2)

inst_4361:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7c0000; valaddr_reg:x3; val_offset:13083*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13083*0 + 3*521*FLEN/8, x4, x1, x2)

inst_4362:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7e0000; valaddr_reg:x3; val_offset:13086*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13086*0 + 3*522*FLEN/8, x4, x1, x2)

inst_4363:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7f0000; valaddr_reg:x3; val_offset:13089*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13089*0 + 3*523*FLEN/8, x4, x1, x2)

inst_4364:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7f8000; valaddr_reg:x3; val_offset:13092*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13092*0 + 3*524*FLEN/8, x4, x1, x2)

inst_4365:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7fc000; valaddr_reg:x3; val_offset:13095*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13095*0 + 3*525*FLEN/8, x4, x1, x2)

inst_4366:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7fe000; valaddr_reg:x3; val_offset:13098*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13098*0 + 3*526*FLEN/8, x4, x1, x2)

inst_4367:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7ff000; valaddr_reg:x3; val_offset:13101*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13101*0 + 3*527*FLEN/8, x4, x1, x2)

inst_4368:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7ff800; valaddr_reg:x3; val_offset:13104*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13104*0 + 3*528*FLEN/8, x4, x1, x2)

inst_4369:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7ffc00; valaddr_reg:x3; val_offset:13107*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13107*0 + 3*529*FLEN/8, x4, x1, x2)

inst_4370:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7ffe00; valaddr_reg:x3; val_offset:13110*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13110*0 + 3*530*FLEN/8, x4, x1, x2)

inst_4371:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7fff00; valaddr_reg:x3; val_offset:13113*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13113*0 + 3*531*FLEN/8, x4, x1, x2)

inst_4372:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7fff80; valaddr_reg:x3; val_offset:13116*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13116*0 + 3*532*FLEN/8, x4, x1, x2)

inst_4373:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7fffc0; valaddr_reg:x3; val_offset:13119*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13119*0 + 3*533*FLEN/8, x4, x1, x2)

inst_4374:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7fffe0; valaddr_reg:x3; val_offset:13122*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13122*0 + 3*534*FLEN/8, x4, x1, x2)

inst_4375:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7ffff0; valaddr_reg:x3; val_offset:13125*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13125*0 + 3*535*FLEN/8, x4, x1, x2)

inst_4376:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7ffff8; valaddr_reg:x3; val_offset:13128*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13128*0 + 3*536*FLEN/8, x4, x1, x2)

inst_4377:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7ffffc; valaddr_reg:x3; val_offset:13131*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13131*0 + 3*537*FLEN/8, x4, x1, x2)

inst_4378:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7ffffe; valaddr_reg:x3; val_offset:13134*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13134*0 + 3*538*FLEN/8, x4, x1, x2)

inst_4379:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfc and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xfe7fffff; valaddr_reg:x3; val_offset:13137*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13137*0 + 3*539*FLEN/8, x4, x1, x2)

inst_4380:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff000001; valaddr_reg:x3; val_offset:13140*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13140*0 + 3*540*FLEN/8, x4, x1, x2)

inst_4381:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff000003; valaddr_reg:x3; val_offset:13143*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13143*0 + 3*541*FLEN/8, x4, x1, x2)

inst_4382:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff000007; valaddr_reg:x3; val_offset:13146*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13146*0 + 3*542*FLEN/8, x4, x1, x2)

inst_4383:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff199999; valaddr_reg:x3; val_offset:13149*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13149*0 + 3*543*FLEN/8, x4, x1, x2)

inst_4384:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff249249; valaddr_reg:x3; val_offset:13152*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13152*0 + 3*544*FLEN/8, x4, x1, x2)

inst_4385:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff333333; valaddr_reg:x3; val_offset:13155*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13155*0 + 3*545*FLEN/8, x4, x1, x2)

inst_4386:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:13158*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13158*0 + 3*546*FLEN/8, x4, x1, x2)

inst_4387:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:13161*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13161*0 + 3*547*FLEN/8, x4, x1, x2)

inst_4388:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff444444; valaddr_reg:x3; val_offset:13164*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13164*0 + 3*548*FLEN/8, x4, x1, x2)

inst_4389:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:13167*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13167*0 + 3*549*FLEN/8, x4, x1, x2)

inst_4390:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:13170*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13170*0 + 3*550*FLEN/8, x4, x1, x2)

inst_4391:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff666666; valaddr_reg:x3; val_offset:13173*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13173*0 + 3*551*FLEN/8, x4, x1, x2)

inst_4392:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:13176*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13176*0 + 3*552*FLEN/8, x4, x1, x2)

inst_4393:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:13179*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13179*0 + 3*553*FLEN/8, x4, x1, x2)

inst_4394:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:13182*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13182*0 + 3*554*FLEN/8, x4, x1, x2)

inst_4395:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e6163 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2c1e57 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe6163; op2val:0xc12c1e57;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:13185*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13185*0 + 3*555*FLEN/8, x4, x1, x2)

inst_4396:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbf800001; valaddr_reg:x3; val_offset:13188*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13188*0 + 3*556*FLEN/8, x4, x1, x2)

inst_4397:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbf800003; valaddr_reg:x3; val_offset:13191*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13191*0 + 3*557*FLEN/8, x4, x1, x2)

inst_4398:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbf800007; valaddr_reg:x3; val_offset:13194*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13194*0 + 3*558*FLEN/8, x4, x1, x2)

inst_4399:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbf999999; valaddr_reg:x3; val_offset:13197*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13197*0 + 3*559*FLEN/8, x4, x1, x2)

inst_4400:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:13200*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13200*0 + 3*560*FLEN/8, x4, x1, x2)

inst_4401:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:13203*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13203*0 + 3*561*FLEN/8, x4, x1, x2)

inst_4402:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:13206*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13206*0 + 3*562*FLEN/8, x4, x1, x2)

inst_4403:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:13209*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13209*0 + 3*563*FLEN/8, x4, x1, x2)

inst_4404:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:13212*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13212*0 + 3*564*FLEN/8, x4, x1, x2)

inst_4405:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:13215*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13215*0 + 3*565*FLEN/8, x4, x1, x2)

inst_4406:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:13218*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13218*0 + 3*566*FLEN/8, x4, x1, x2)

inst_4407:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:13221*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13221*0 + 3*567*FLEN/8, x4, x1, x2)

inst_4408:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:13224*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13224*0 + 3*568*FLEN/8, x4, x1, x2)

inst_4409:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:13227*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13227*0 + 3*569*FLEN/8, x4, x1, x2)

inst_4410:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:13230*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13230*0 + 3*570*FLEN/8, x4, x1, x2)

inst_4411:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:13233*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13233*0 + 3*571*FLEN/8, x4, x1, x2)

inst_4412:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800000; valaddr_reg:x3; val_offset:13236*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13236*0 + 3*572*FLEN/8, x4, x1, x2)

inst_4413:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800001; valaddr_reg:x3; val_offset:13239*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13239*0 + 3*573*FLEN/8, x4, x1, x2)

inst_4414:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800003; valaddr_reg:x3; val_offset:13242*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13242*0 + 3*574*FLEN/8, x4, x1, x2)

inst_4415:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800007; valaddr_reg:x3; val_offset:13245*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13245*0 + 3*575*FLEN/8, x4, x1, x2)

inst_4416:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280000f; valaddr_reg:x3; val_offset:13248*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13248*0 + 3*576*FLEN/8, x4, x1, x2)

inst_4417:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280001f; valaddr_reg:x3; val_offset:13251*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13251*0 + 3*577*FLEN/8, x4, x1, x2)

inst_4418:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280003f; valaddr_reg:x3; val_offset:13254*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13254*0 + 3*578*FLEN/8, x4, x1, x2)

inst_4419:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280007f; valaddr_reg:x3; val_offset:13257*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13257*0 + 3*579*FLEN/8, x4, x1, x2)

inst_4420:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28000ff; valaddr_reg:x3; val_offset:13260*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13260*0 + 3*580*FLEN/8, x4, x1, x2)

inst_4421:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28001ff; valaddr_reg:x3; val_offset:13263*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13263*0 + 3*581*FLEN/8, x4, x1, x2)

inst_4422:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28003ff; valaddr_reg:x3; val_offset:13266*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13266*0 + 3*582*FLEN/8, x4, x1, x2)

inst_4423:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28007ff; valaddr_reg:x3; val_offset:13269*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13269*0 + 3*583*FLEN/8, x4, x1, x2)

inst_4424:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800fff; valaddr_reg:x3; val_offset:13272*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13272*0 + 3*584*FLEN/8, x4, x1, x2)

inst_4425:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2801fff; valaddr_reg:x3; val_offset:13275*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13275*0 + 3*585*FLEN/8, x4, x1, x2)

inst_4426:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2803fff; valaddr_reg:x3; val_offset:13278*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13278*0 + 3*586*FLEN/8, x4, x1, x2)

inst_4427:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2807fff; valaddr_reg:x3; val_offset:13281*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13281*0 + 3*587*FLEN/8, x4, x1, x2)

inst_4428:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280ffff; valaddr_reg:x3; val_offset:13284*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13284*0 + 3*588*FLEN/8, x4, x1, x2)

inst_4429:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc281ffff; valaddr_reg:x3; val_offset:13287*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13287*0 + 3*589*FLEN/8, x4, x1, x2)

inst_4430:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc283ffff; valaddr_reg:x3; val_offset:13290*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13290*0 + 3*590*FLEN/8, x4, x1, x2)

inst_4431:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc287ffff; valaddr_reg:x3; val_offset:13293*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13293*0 + 3*591*FLEN/8, x4, x1, x2)

inst_4432:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28fffff; valaddr_reg:x3; val_offset:13296*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13296*0 + 3*592*FLEN/8, x4, x1, x2)

inst_4433:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc29fffff; valaddr_reg:x3; val_offset:13299*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13299*0 + 3*593*FLEN/8, x4, x1, x2)

inst_4434:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2bfffff; valaddr_reg:x3; val_offset:13302*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13302*0 + 3*594*FLEN/8, x4, x1, x2)

inst_4435:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2c00000; valaddr_reg:x3; val_offset:13305*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13305*0 + 3*595*FLEN/8, x4, x1, x2)

inst_4436:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2e00000; valaddr_reg:x3; val_offset:13308*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13308*0 + 3*596*FLEN/8, x4, x1, x2)

inst_4437:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2f00000; valaddr_reg:x3; val_offset:13311*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13311*0 + 3*597*FLEN/8, x4, x1, x2)

inst_4438:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2f80000; valaddr_reg:x3; val_offset:13314*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13314*0 + 3*598*FLEN/8, x4, x1, x2)

inst_4439:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fc0000; valaddr_reg:x3; val_offset:13317*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13317*0 + 3*599*FLEN/8, x4, x1, x2)

inst_4440:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fe0000; valaddr_reg:x3; val_offset:13320*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13320*0 + 3*600*FLEN/8, x4, x1, x2)

inst_4441:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ff0000; valaddr_reg:x3; val_offset:13323*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13323*0 + 3*601*FLEN/8, x4, x1, x2)

inst_4442:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ff8000; valaddr_reg:x3; val_offset:13326*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13326*0 + 3*602*FLEN/8, x4, x1, x2)

inst_4443:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffc000; valaddr_reg:x3; val_offset:13329*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13329*0 + 3*603*FLEN/8, x4, x1, x2)

inst_4444:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffe000; valaddr_reg:x3; val_offset:13332*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13332*0 + 3*604*FLEN/8, x4, x1, x2)

inst_4445:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fff000; valaddr_reg:x3; val_offset:13335*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13335*0 + 3*605*FLEN/8, x4, x1, x2)

inst_4446:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fff800; valaddr_reg:x3; val_offset:13338*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13338*0 + 3*606*FLEN/8, x4, x1, x2)

inst_4447:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffc00; valaddr_reg:x3; val_offset:13341*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13341*0 + 3*607*FLEN/8, x4, x1, x2)

inst_4448:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffe00; valaddr_reg:x3; val_offset:13344*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13344*0 + 3*608*FLEN/8, x4, x1, x2)

inst_4449:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffff00; valaddr_reg:x3; val_offset:13347*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13347*0 + 3*609*FLEN/8, x4, x1, x2)

inst_4450:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffff80; valaddr_reg:x3; val_offset:13350*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13350*0 + 3*610*FLEN/8, x4, x1, x2)

inst_4451:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffffc0; valaddr_reg:x3; val_offset:13353*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13353*0 + 3*611*FLEN/8, x4, x1, x2)

inst_4452:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffffe0; valaddr_reg:x3; val_offset:13356*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13356*0 + 3*612*FLEN/8, x4, x1, x2)

inst_4453:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffff0; valaddr_reg:x3; val_offset:13359*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13359*0 + 3*613*FLEN/8, x4, x1, x2)

inst_4454:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffff8; valaddr_reg:x3; val_offset:13362*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13362*0 + 3*614*FLEN/8, x4, x1, x2)

inst_4455:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffffc; valaddr_reg:x3; val_offset:13365*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13365*0 + 3*615*FLEN/8, x4, x1, x2)

inst_4456:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffffe; valaddr_reg:x3; val_offset:13368*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13368*0 + 3*616*FLEN/8, x4, x1, x2)

inst_4457:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffffff; valaddr_reg:x3; val_offset:13371*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13371*0 + 3*617*FLEN/8, x4, x1, x2)

inst_4458:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:13374*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13374*0 + 3*618*FLEN/8, x4, x1, x2)

inst_4459:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:13377*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13377*0 + 3*619*FLEN/8, x4, x1, x2)

inst_4460:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:13380*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13380*0 + 3*620*FLEN/8, x4, x1, x2)

inst_4461:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:13383*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13383*0 + 3*621*FLEN/8, x4, x1, x2)

inst_4462:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:13386*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13386*0 + 3*622*FLEN/8, x4, x1, x2)

inst_4463:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:13389*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13389*0 + 3*623*FLEN/8, x4, x1, x2)

inst_4464:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:13392*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13392*0 + 3*624*FLEN/8, x4, x1, x2)

inst_4465:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:13395*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13395*0 + 3*625*FLEN/8, x4, x1, x2)

inst_4466:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:13398*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13398*0 + 3*626*FLEN/8, x4, x1, x2)

inst_4467:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:13401*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13401*0 + 3*627*FLEN/8, x4, x1, x2)

inst_4468:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:13404*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13404*0 + 3*628*FLEN/8, x4, x1, x2)

inst_4469:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:13407*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13407*0 + 3*629*FLEN/8, x4, x1, x2)

inst_4470:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:13410*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13410*0 + 3*630*FLEN/8, x4, x1, x2)

inst_4471:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:13413*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13413*0 + 3*631*FLEN/8, x4, x1, x2)

inst_4472:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:13416*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13416*0 + 3*632*FLEN/8, x4, x1, x2)

inst_4473:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:13419*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13419*0 + 3*633*FLEN/8, x4, x1, x2)

inst_4474:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6000000; valaddr_reg:x3; val_offset:13422*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13422*0 + 3*634*FLEN/8, x4, x1, x2)

inst_4475:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6000001; valaddr_reg:x3; val_offset:13425*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13425*0 + 3*635*FLEN/8, x4, x1, x2)

inst_4476:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6000003; valaddr_reg:x3; val_offset:13428*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13428*0 + 3*636*FLEN/8, x4, x1, x2)

inst_4477:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6000007; valaddr_reg:x3; val_offset:13431*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13431*0 + 3*637*FLEN/8, x4, x1, x2)

inst_4478:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x600000f; valaddr_reg:x3; val_offset:13434*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13434*0 + 3*638*FLEN/8, x4, x1, x2)

inst_4479:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x600001f; valaddr_reg:x3; val_offset:13437*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13437*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_4480:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x600003f; valaddr_reg:x3; val_offset:13440*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13440*0 + 3*640*FLEN/8, x4, x1, x2)

inst_4481:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x600007f; valaddr_reg:x3; val_offset:13443*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13443*0 + 3*641*FLEN/8, x4, x1, x2)

inst_4482:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x60000ff; valaddr_reg:x3; val_offset:13446*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13446*0 + 3*642*FLEN/8, x4, x1, x2)

inst_4483:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x60001ff; valaddr_reg:x3; val_offset:13449*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13449*0 + 3*643*FLEN/8, x4, x1, x2)

inst_4484:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x60003ff; valaddr_reg:x3; val_offset:13452*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13452*0 + 3*644*FLEN/8, x4, x1, x2)

inst_4485:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x60007ff; valaddr_reg:x3; val_offset:13455*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13455*0 + 3*645*FLEN/8, x4, x1, x2)

inst_4486:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6000fff; valaddr_reg:x3; val_offset:13458*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13458*0 + 3*646*FLEN/8, x4, x1, x2)

inst_4487:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6001fff; valaddr_reg:x3; val_offset:13461*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13461*0 + 3*647*FLEN/8, x4, x1, x2)

inst_4488:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6003fff; valaddr_reg:x3; val_offset:13464*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13464*0 + 3*648*FLEN/8, x4, x1, x2)

inst_4489:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6007fff; valaddr_reg:x3; val_offset:13467*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13467*0 + 3*649*FLEN/8, x4, x1, x2)

inst_4490:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x600ffff; valaddr_reg:x3; val_offset:13470*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13470*0 + 3*650*FLEN/8, x4, x1, x2)

inst_4491:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x601ffff; valaddr_reg:x3; val_offset:13473*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13473*0 + 3*651*FLEN/8, x4, x1, x2)

inst_4492:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x603ffff; valaddr_reg:x3; val_offset:13476*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13476*0 + 3*652*FLEN/8, x4, x1, x2)

inst_4493:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x607ffff; valaddr_reg:x3; val_offset:13479*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13479*0 + 3*653*FLEN/8, x4, x1, x2)

inst_4494:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x60fffff; valaddr_reg:x3; val_offset:13482*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13482*0 + 3*654*FLEN/8, x4, x1, x2)

inst_4495:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x61fffff; valaddr_reg:x3; val_offset:13485*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13485*0 + 3*655*FLEN/8, x4, x1, x2)

inst_4496:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x63fffff; valaddr_reg:x3; val_offset:13488*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13488*0 + 3*656*FLEN/8, x4, x1, x2)

inst_4497:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6400000; valaddr_reg:x3; val_offset:13491*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13491*0 + 3*657*FLEN/8, x4, x1, x2)

inst_4498:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6600000; valaddr_reg:x3; val_offset:13494*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13494*0 + 3*658*FLEN/8, x4, x1, x2)

inst_4499:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6700000; valaddr_reg:x3; val_offset:13497*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13497*0 + 3*659*FLEN/8, x4, x1, x2)

inst_4500:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x6780000; valaddr_reg:x3; val_offset:13500*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13500*0 + 3*660*FLEN/8, x4, x1, x2)

inst_4501:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67c0000; valaddr_reg:x3; val_offset:13503*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13503*0 + 3*661*FLEN/8, x4, x1, x2)

inst_4502:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67e0000; valaddr_reg:x3; val_offset:13506*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13506*0 + 3*662*FLEN/8, x4, x1, x2)

inst_4503:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67f0000; valaddr_reg:x3; val_offset:13509*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13509*0 + 3*663*FLEN/8, x4, x1, x2)

inst_4504:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67f8000; valaddr_reg:x3; val_offset:13512*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13512*0 + 3*664*FLEN/8, x4, x1, x2)

inst_4505:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67fc000; valaddr_reg:x3; val_offset:13515*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13515*0 + 3*665*FLEN/8, x4, x1, x2)

inst_4506:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67fe000; valaddr_reg:x3; val_offset:13518*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13518*0 + 3*666*FLEN/8, x4, x1, x2)

inst_4507:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67ff000; valaddr_reg:x3; val_offset:13521*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13521*0 + 3*667*FLEN/8, x4, x1, x2)

inst_4508:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67ff800; valaddr_reg:x3; val_offset:13524*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13524*0 + 3*668*FLEN/8, x4, x1, x2)

inst_4509:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67ffc00; valaddr_reg:x3; val_offset:13527*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13527*0 + 3*669*FLEN/8, x4, x1, x2)

inst_4510:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67ffe00; valaddr_reg:x3; val_offset:13530*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13530*0 + 3*670*FLEN/8, x4, x1, x2)

inst_4511:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67fff00; valaddr_reg:x3; val_offset:13533*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13533*0 + 3*671*FLEN/8, x4, x1, x2)

inst_4512:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67fff80; valaddr_reg:x3; val_offset:13536*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13536*0 + 3*672*FLEN/8, x4, x1, x2)

inst_4513:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67fffc0; valaddr_reg:x3; val_offset:13539*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13539*0 + 3*673*FLEN/8, x4, x1, x2)

inst_4514:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67fffe0; valaddr_reg:x3; val_offset:13542*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13542*0 + 3*674*FLEN/8, x4, x1, x2)

inst_4515:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67ffff0; valaddr_reg:x3; val_offset:13545*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13545*0 + 3*675*FLEN/8, x4, x1, x2)

inst_4516:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67ffff8; valaddr_reg:x3; val_offset:13548*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13548*0 + 3*676*FLEN/8, x4, x1, x2)

inst_4517:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67ffffc; valaddr_reg:x3; val_offset:13551*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13551*0 + 3*677*FLEN/8, x4, x1, x2)

inst_4518:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67ffffe; valaddr_reg:x3; val_offset:13554*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13554*0 + 3*678*FLEN/8, x4, x1, x2)

inst_4519:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x40a745 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc0a745; op2val:0x0;
op3val:0x67fffff; valaddr_reg:x3; val_offset:13557*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13557*0 + 3*679*FLEN/8, x4, x1, x2)

inst_4520:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbf800001; valaddr_reg:x3; val_offset:13560*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13560*0 + 3*680*FLEN/8, x4, x1, x2)

inst_4521:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbf800003; valaddr_reg:x3; val_offset:13563*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13563*0 + 3*681*FLEN/8, x4, x1, x2)

inst_4522:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbf800007; valaddr_reg:x3; val_offset:13566*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13566*0 + 3*682*FLEN/8, x4, x1, x2)

inst_4523:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbf999999; valaddr_reg:x3; val_offset:13569*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13569*0 + 3*683*FLEN/8, x4, x1, x2)

inst_4524:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:13572*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13572*0 + 3*684*FLEN/8, x4, x1, x2)

inst_4525:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:13575*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13575*0 + 3*685*FLEN/8, x4, x1, x2)

inst_4526:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:13578*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13578*0 + 3*686*FLEN/8, x4, x1, x2)

inst_4527:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:13581*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13581*0 + 3*687*FLEN/8, x4, x1, x2)

inst_4528:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:13584*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13584*0 + 3*688*FLEN/8, x4, x1, x2)

inst_4529:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:13587*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13587*0 + 3*689*FLEN/8, x4, x1, x2)

inst_4530:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:13590*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13590*0 + 3*690*FLEN/8, x4, x1, x2)

inst_4531:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:13593*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13593*0 + 3*691*FLEN/8, x4, x1, x2)

inst_4532:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:13596*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13596*0 + 3*692*FLEN/8, x4, x1, x2)

inst_4533:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:13599*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13599*0 + 3*693*FLEN/8, x4, x1, x2)

inst_4534:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:13602*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13602*0 + 3*694*FLEN/8, x4, x1, x2)

inst_4535:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:13605*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13605*0 + 3*695*FLEN/8, x4, x1, x2)

inst_4536:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000000; valaddr_reg:x3; val_offset:13608*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13608*0 + 3*696*FLEN/8, x4, x1, x2)

inst_4537:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000001; valaddr_reg:x3; val_offset:13611*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13611*0 + 3*697*FLEN/8, x4, x1, x2)

inst_4538:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000003; valaddr_reg:x3; val_offset:13614*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13614*0 + 3*698*FLEN/8, x4, x1, x2)

inst_4539:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000007; valaddr_reg:x3; val_offset:13617*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13617*0 + 3*699*FLEN/8, x4, x1, x2)

inst_4540:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200000f; valaddr_reg:x3; val_offset:13620*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13620*0 + 3*700*FLEN/8, x4, x1, x2)

inst_4541:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200001f; valaddr_reg:x3; val_offset:13623*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13623*0 + 3*701*FLEN/8, x4, x1, x2)

inst_4542:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200003f; valaddr_reg:x3; val_offset:13626*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13626*0 + 3*702*FLEN/8, x4, x1, x2)

inst_4543:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200007f; valaddr_reg:x3; val_offset:13629*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13629*0 + 3*703*FLEN/8, x4, x1, x2)

inst_4544:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20000ff; valaddr_reg:x3; val_offset:13632*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13632*0 + 3*704*FLEN/8, x4, x1, x2)

inst_4545:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20001ff; valaddr_reg:x3; val_offset:13635*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13635*0 + 3*705*FLEN/8, x4, x1, x2)

inst_4546:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20003ff; valaddr_reg:x3; val_offset:13638*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13638*0 + 3*706*FLEN/8, x4, x1, x2)

inst_4547:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20007ff; valaddr_reg:x3; val_offset:13641*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13641*0 + 3*707*FLEN/8, x4, x1, x2)

inst_4548:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000fff; valaddr_reg:x3; val_offset:13644*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13644*0 + 3*708*FLEN/8, x4, x1, x2)

inst_4549:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2001fff; valaddr_reg:x3; val_offset:13647*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13647*0 + 3*709*FLEN/8, x4, x1, x2)

inst_4550:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2003fff; valaddr_reg:x3; val_offset:13650*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13650*0 + 3*710*FLEN/8, x4, x1, x2)

inst_4551:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2007fff; valaddr_reg:x3; val_offset:13653*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13653*0 + 3*711*FLEN/8, x4, x1, x2)

inst_4552:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200ffff; valaddr_reg:x3; val_offset:13656*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13656*0 + 3*712*FLEN/8, x4, x1, x2)

inst_4553:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc201ffff; valaddr_reg:x3; val_offset:13659*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13659*0 + 3*713*FLEN/8, x4, x1, x2)

inst_4554:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc203ffff; valaddr_reg:x3; val_offset:13662*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13662*0 + 3*714*FLEN/8, x4, x1, x2)

inst_4555:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc207ffff; valaddr_reg:x3; val_offset:13665*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13665*0 + 3*715*FLEN/8, x4, x1, x2)

inst_4556:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20fffff; valaddr_reg:x3; val_offset:13668*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13668*0 + 3*716*FLEN/8, x4, x1, x2)

inst_4557:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc21fffff; valaddr_reg:x3; val_offset:13671*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13671*0 + 3*717*FLEN/8, x4, x1, x2)

inst_4558:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc23fffff; valaddr_reg:x3; val_offset:13674*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13674*0 + 3*718*FLEN/8, x4, x1, x2)

inst_4559:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2400000; valaddr_reg:x3; val_offset:13677*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13677*0 + 3*719*FLEN/8, x4, x1, x2)

inst_4560:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2600000; valaddr_reg:x3; val_offset:13680*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13680*0 + 3*720*FLEN/8, x4, x1, x2)

inst_4561:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2700000; valaddr_reg:x3; val_offset:13683*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13683*0 + 3*721*FLEN/8, x4, x1, x2)

inst_4562:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2780000; valaddr_reg:x3; val_offset:13686*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13686*0 + 3*722*FLEN/8, x4, x1, x2)

inst_4563:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27c0000; valaddr_reg:x3; val_offset:13689*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13689*0 + 3*723*FLEN/8, x4, x1, x2)

inst_4564:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27e0000; valaddr_reg:x3; val_offset:13692*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13692*0 + 3*724*FLEN/8, x4, x1, x2)

inst_4565:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27f0000; valaddr_reg:x3; val_offset:13695*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13695*0 + 3*725*FLEN/8, x4, x1, x2)

inst_4566:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27f8000; valaddr_reg:x3; val_offset:13698*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13698*0 + 3*726*FLEN/8, x4, x1, x2)

inst_4567:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fc000; valaddr_reg:x3; val_offset:13701*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13701*0 + 3*727*FLEN/8, x4, x1, x2)

inst_4568:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fe000; valaddr_reg:x3; val_offset:13704*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13704*0 + 3*728*FLEN/8, x4, x1, x2)

inst_4569:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ff000; valaddr_reg:x3; val_offset:13707*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13707*0 + 3*729*FLEN/8, x4, x1, x2)

inst_4570:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ff800; valaddr_reg:x3; val_offset:13710*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13710*0 + 3*730*FLEN/8, x4, x1, x2)

inst_4571:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffc00; valaddr_reg:x3; val_offset:13713*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13713*0 + 3*731*FLEN/8, x4, x1, x2)

inst_4572:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffe00; valaddr_reg:x3; val_offset:13716*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13716*0 + 3*732*FLEN/8, x4, x1, x2)

inst_4573:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fff00; valaddr_reg:x3; val_offset:13719*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13719*0 + 3*733*FLEN/8, x4, x1, x2)

inst_4574:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fff80; valaddr_reg:x3; val_offset:13722*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13722*0 + 3*734*FLEN/8, x4, x1, x2)

inst_4575:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fffc0; valaddr_reg:x3; val_offset:13725*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13725*0 + 3*735*FLEN/8, x4, x1, x2)

inst_4576:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fffe0; valaddr_reg:x3; val_offset:13728*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13728*0 + 3*736*FLEN/8, x4, x1, x2)

inst_4577:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffff0; valaddr_reg:x3; val_offset:13731*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13731*0 + 3*737*FLEN/8, x4, x1, x2)

inst_4578:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffff8; valaddr_reg:x3; val_offset:13734*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13734*0 + 3*738*FLEN/8, x4, x1, x2)

inst_4579:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffffc; valaddr_reg:x3; val_offset:13737*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13737*0 + 3*739*FLEN/8, x4, x1, x2)

inst_4580:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffffe; valaddr_reg:x3; val_offset:13740*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13740*0 + 3*740*FLEN/8, x4, x1, x2)

inst_4581:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fffff; valaddr_reg:x3; val_offset:13743*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13743*0 + 3*741*FLEN/8, x4, x1, x2)

inst_4582:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66000000; valaddr_reg:x3; val_offset:13746*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13746*0 + 3*742*FLEN/8, x4, x1, x2)

inst_4583:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66000001; valaddr_reg:x3; val_offset:13749*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13749*0 + 3*743*FLEN/8, x4, x1, x2)

inst_4584:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66000003; valaddr_reg:x3; val_offset:13752*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13752*0 + 3*744*FLEN/8, x4, x1, x2)

inst_4585:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66000007; valaddr_reg:x3; val_offset:13755*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13755*0 + 3*745*FLEN/8, x4, x1, x2)

inst_4586:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x6600000f; valaddr_reg:x3; val_offset:13758*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13758*0 + 3*746*FLEN/8, x4, x1, x2)

inst_4587:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x6600001f; valaddr_reg:x3; val_offset:13761*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13761*0 + 3*747*FLEN/8, x4, x1, x2)

inst_4588:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x6600003f; valaddr_reg:x3; val_offset:13764*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13764*0 + 3*748*FLEN/8, x4, x1, x2)

inst_4589:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x6600007f; valaddr_reg:x3; val_offset:13767*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13767*0 + 3*749*FLEN/8, x4, x1, x2)

inst_4590:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x660000ff; valaddr_reg:x3; val_offset:13770*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13770*0 + 3*750*FLEN/8, x4, x1, x2)

inst_4591:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x660001ff; valaddr_reg:x3; val_offset:13773*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13773*0 + 3*751*FLEN/8, x4, x1, x2)

inst_4592:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x660003ff; valaddr_reg:x3; val_offset:13776*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13776*0 + 3*752*FLEN/8, x4, x1, x2)

inst_4593:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x660007ff; valaddr_reg:x3; val_offset:13779*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13779*0 + 3*753*FLEN/8, x4, x1, x2)

inst_4594:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66000fff; valaddr_reg:x3; val_offset:13782*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13782*0 + 3*754*FLEN/8, x4, x1, x2)

inst_4595:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66001fff; valaddr_reg:x3; val_offset:13785*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13785*0 + 3*755*FLEN/8, x4, x1, x2)

inst_4596:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66003fff; valaddr_reg:x3; val_offset:13788*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13788*0 + 3*756*FLEN/8, x4, x1, x2)

inst_4597:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66007fff; valaddr_reg:x3; val_offset:13791*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13791*0 + 3*757*FLEN/8, x4, x1, x2)

inst_4598:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x6600ffff; valaddr_reg:x3; val_offset:13794*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13794*0 + 3*758*FLEN/8, x4, x1, x2)

inst_4599:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x6601ffff; valaddr_reg:x3; val_offset:13797*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13797*0 + 3*759*FLEN/8, x4, x1, x2)

inst_4600:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x6603ffff; valaddr_reg:x3; val_offset:13800*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13800*0 + 3*760*FLEN/8, x4, x1, x2)

inst_4601:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x6607ffff; valaddr_reg:x3; val_offset:13803*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13803*0 + 3*761*FLEN/8, x4, x1, x2)

inst_4602:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x660fffff; valaddr_reg:x3; val_offset:13806*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13806*0 + 3*762*FLEN/8, x4, x1, x2)

inst_4603:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x661fffff; valaddr_reg:x3; val_offset:13809*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13809*0 + 3*763*FLEN/8, x4, x1, x2)

inst_4604:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x663fffff; valaddr_reg:x3; val_offset:13812*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13812*0 + 3*764*FLEN/8, x4, x1, x2)

inst_4605:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66400000; valaddr_reg:x3; val_offset:13815*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13815*0 + 3*765*FLEN/8, x4, x1, x2)

inst_4606:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66600000; valaddr_reg:x3; val_offset:13818*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13818*0 + 3*766*FLEN/8, x4, x1, x2)

inst_4607:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4556e5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x260c85 and fs3 == 0 and fe3 == 0xcc and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc556e5; op2val:0x41260c85;
op3val:0x66700000; valaddr_reg:x3; val_offset:13821*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 13821*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102029315,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102029319,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102029327,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102029343,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102029375,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102029439,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102029567,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102029823,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102030335,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102031359,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102033407,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102037503,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102045695,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102062079,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102094847,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102160383,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102291455,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4102553599,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4103077887,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4104126463,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4106223615,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4106223616,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4108320768,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4109369344,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4109893632,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110155776,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110286848,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110352384,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110385152,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110401536,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110409728,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110413824,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110415872,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110416896,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417408,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417664,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417792,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417856,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417888,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417904,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417912,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417916,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417918,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4110417919,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2108231943,32,FLEN)
NAN_BOXED(3242316083,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013265920,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013265921,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013265923,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013265927,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013265935,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013265951,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013265983,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013266047,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013266175,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013266431,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013266943,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013267967,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013270015,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013274111,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013282303,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013298687,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013331455,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013396991,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013528063,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2013790207,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2014314495,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2015363071,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2017460223,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2017460224,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2019557376,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2020605952,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021130240,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021392384,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021523456,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021588992,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021621760,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021638144,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021646336,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021650432,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021652480,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021653504,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654016,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654272,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654400,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654464,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654496,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654512,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654520,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654524,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654526,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2021654527,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2108383365,32,FLEN)
NAN_BOXED(1094661186,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944384,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944385,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944387,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944391,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944399,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944415,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944447,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944511,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944639,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660944895,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660945407,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660946431,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660948479,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660952575,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660960767,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1660977151,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1661009919,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1661075455,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1661206527,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1661468671,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1661992959,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1663041535,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1665138687,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1665138688,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1667235840,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1668284416,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1668808704,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669070848,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669201920,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669267456,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669300224,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669316608,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669324800,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669328896,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669330944,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669331968,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332480,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332736,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332864,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332928,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332960,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332976,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332984,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332988,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332990,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(1669332991,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2108435630,32,FLEN)
NAN_BOXED(1094603144,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266679808,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266679809,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266679811,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266679815,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266679823,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266679839,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266679871,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266679935,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266680063,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266680319,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266680831,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266681855,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266683903,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266687999,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266696191,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266712575,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266745343,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266810879,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1266941951,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1267204095,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1267728383,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1268776959,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1270874111,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1270874112,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1272971264,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1274019840,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1274544128,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1274806272,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1274937344,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275002880,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275035648,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275052032,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275060224,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275064320,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275066368,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275067392,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275067904,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275068160,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275068288,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275068352,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275068384,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275068400,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275068408,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275068412,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275068414,32,FLEN)
NAN_BOXED(2109324137,32,FLEN)
NAN_BOXED(19950873,32,FLEN)
NAN_BOXED(1275068415,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872256,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872271,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872287,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872319,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872383,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872511,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872767,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155873279,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155874303,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155876351,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155880447,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155888639,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155905023,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155937791,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156003327,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156134399,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156396543,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2156920831,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157969407,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066559,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160066560,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162163712,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163212288,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163736576,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163998720,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164129792,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164195328,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164228096,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164244480,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164252672,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164256768,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164258816,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164259840,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260352,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260608,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260736,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260800,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260832,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260848,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2109360793,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260863,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829120,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829121,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829123,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829127,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829135,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829151,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829183,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829247,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829375,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125829631,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125830143,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125831167,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125833215,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125837311,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125845503,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125861887,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125894655,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(125960191,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126091263,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126353407,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(126877695,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(127926271,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023423,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(130023424,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(132120576,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133169152,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133693440,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(133955584,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134086656,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134152192,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134184960,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134201344,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134209536,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134213632,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134215680,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134216704,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217216,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217472,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217600,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217664,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217696,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217712,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217720,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217724,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217726,32,FLEN)
NAN_BOXED(2109377654,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217727,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981120,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981121,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981123,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981127,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981135,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981151,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981183,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981247,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981375,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981631,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222982143,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222983167,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222985215,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222989311,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222997503,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223013887,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223046655,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223112191,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223243263,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223505407,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2224029695,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2225078271,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2227175423,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2227175424,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2229272576,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2230321152,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2230845440,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231107584,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231238656,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231304192,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231336960,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231353344,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231361536,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231365632,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231367680,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231368704,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369216,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369472,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369600,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369664,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369696,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369712,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369720,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369724,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369726,32,FLEN)
NAN_BOXED(2109546753,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369727,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609024,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609025,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609027,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609031,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609039,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609055,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609087,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609151,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609279,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380609535,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380610047,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380611071,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380613119,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380617215,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380625407,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380641791,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380674559,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380740095,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3380871167,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3381133311,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3381657599,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3382706175,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3384803327,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3384803328,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3386900480,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3387949056,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388473344,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388735488,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388866560,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388932096,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388964864,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388981248,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388989440,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388993536,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388995584,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388996608,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997120,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997376,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997504,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997568,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997600,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997616,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997624,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997628,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997630,32,FLEN)
NAN_BOXED(2109609588,32,FLEN)
NAN_BOXED(2167169586,32,FLEN)
NAN_BOXED(3388997631,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261412864,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261412865,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261412867,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261412871,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261412879,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261412895,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261412927,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261412991,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261413119,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261413375,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261413887,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261414911,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261416959,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261421055,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261429247,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261445631,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261478399,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261543935,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261675007,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4261937151,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4262461439,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4263510015,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4265607167,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4265607168,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4267704320,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4268752896,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269277184,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269539328,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269670400,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269735936,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269768704,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269785088,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269793280,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269797376,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269799424,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269800448,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269800960,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269801216,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269801344,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269801408,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269801440,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269801456,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269801464,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269801468,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269801470,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4269801471,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2109628771,32,FLEN)
NAN_BOXED(3240894039,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168512,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168513,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168515,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168519,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168527,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168543,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168575,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168639,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168767,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263169023,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263169535,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263170559,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263172607,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263176703,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263184895,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263201279,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263234047,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263299583,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263430655,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263692799,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3264217087,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3265265663,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3267362815,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3267362816,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3269459968,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3270508544,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271032832,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271294976,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271426048,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271491584,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271524352,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271540736,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271548928,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271553024,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271555072,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271556096,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271556608,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271556864,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271556992,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557056,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557088,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557104,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557112,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557116,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557118,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557119,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663296,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663297,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663299,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663303,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663311,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663327,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663359,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663423,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663551,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100663807,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100664319,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100665343,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100667391,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100671487,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100679679,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100696063,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100728831,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100794367,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(100925439,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(101187583,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(101711871,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(102760447,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(104857599,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(104857600,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(106954752,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108003328,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108527616,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108789760,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108920832,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(108986368,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109019136,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109035520,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109043712,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109047808,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109049856,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109050880,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051392,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051648,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051776,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051840,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051872,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051888,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051896,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051900,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051902,32,FLEN)
NAN_BOXED(2109777733,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(109051903,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779904,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779905,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779907,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779911,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779919,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779935,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779967,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254780031,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254780159,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254780415,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254780927,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254781951,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254783999,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254788095,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254796287,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254812671,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254845439,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254910975,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3255042047,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3255304191,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3255828479,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3256877055,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3258974207,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3258974208,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3261071360,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3262119936,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3262644224,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3262906368,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263037440,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263102976,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263135744,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263152128,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263160320,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263164416,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263166464,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263167488,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168000,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168256,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168384,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168448,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168480,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168496,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168504,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168508,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168510,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168511,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276032,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276033,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276035,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276039,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276047,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276063,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276095,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276159,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276287,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711276543,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711277055,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711278079,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711280127,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711284223,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711292415,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711308799,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711341567,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711407103,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711538175,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1711800319,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1712324607,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1713373183,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1715470335,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1715470336,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1717567488,32,FLEN)
NAN_BOXED(2110084837,32,FLEN)
NAN_BOXED(1093012613,32,FLEN)
NAN_BOXED(1718616064,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
