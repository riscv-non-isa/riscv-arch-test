
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b3 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b3)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 != rd, rs1==f7, rs2==f7, rs3==f7, rd==f5,fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f7; op2:f7; op3:f7; dest:f5; op1val:0x793775d9; op2val:0x793775d9;
op3val:0x793775d9; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f5, f7, f7, f7, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f17, rs2==f22, rs3==f17, rd==f27,fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f17; op2:f22; op3:f17; dest:f27; op1val:0x793775d9; op2val:0x44221af5;
op3val:0x793775d9; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f27, f17, f22, f17, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd == rs3 != rs2, rs1==f3, rs2==f0, rs3==f3, rd==f3,fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f3; op2:f0; op3:f3; dest:f3; op1val:0x793775d9; op2val:0x44221af5;
op3val:0x793775d9; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f3, f3, f0, f3, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f27, rs2==f20, rs3==f10, rd==f7,fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f27; op2:f20; op3:f10; dest:f7; op1val:0x793775d9; op2val:0x44221af5;
op3val:0x7de857ca; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f7, f27, f20, f10, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f24, rs2==f6, rs3==f2, rd==f2,fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f24; op2:f6; op3:f2; dest:f2; op1val:0x793775d9; op2val:0x44221af5;
op3val:0x7de857ca; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f2, f24, f6, f2, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f22, rs2==f26, rs3==f26, rd==f26,fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f22; op2:f26; op3:f26; dest:f26; op1val:0x7a52283f; op2val:0x43b282de;
op3val:0x43b282de; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f26, f22, f26, f26, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f4, rs2==f13, rs3==f15, rd==f4,fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f4; op2:f13; op3:f15; dest:f4; op1val:0x7a52283f; op2val:0x43b282de;
op3val:0x7e928b6b; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f4, f4, f13, f15, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f20, rs2==f15, rs3==f13, rd==f15,fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f20; op2:f15; op3:f13; dest:f15; op1val:0x7a52283f; op2val:0x43b282de;
op3val:0x7e928b6b; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f15, f20, f15, f13, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f11, rs2==f11, rs3==f11, rd==f11,fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f11; op2:f11; op3:f11; dest:f11; op1val:0x7a52283f; op2val:0x7a52283f;
op3val:0x7a52283f; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f11, f11, f11, f11, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f12, rs2==f30, rs3==f30, rd==f17,fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f12; op2:f30; op3:f30; dest:f17; op1val:0x7a52283f; op2val:0x43b282de;
op3val:0x43b282de; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f17, f12, f30, f30, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f21, rs2==f21, rs3==f8, rd==f21,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x414a12 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x4b3911 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1970d3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f21; op2:f21; op3:f8; dest:f21; op1val:0x7b414a12; op2val:0x7b414a12;
op3val:0x7f1970d3; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f21, f21, f21, f8, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f14, rs2==f14, rs3==f21, rd==f25,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x414a12 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x4b3911 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1970d3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f14; op2:f14; op3:f21; dest:f25; op1val:0x7b414a12; op2val:0x7b414a12;
op3val:0x7f1970d3; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f25, f14, f14, f21, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f31, rs2==f4, rs3==f6, rd==f9,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x414a12 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x4b3911 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1970d3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f31; op2:f4; op3:f6; dest:f9; op1val:0x7b414a12; op2val:0x434b3911;
op3val:0x7f1970d3; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f9, f31, f4, f6, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f2, rs2==f27, rs3==f0, rd==f29,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x414a12 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x4b3911 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1970d3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f2; op2:f27; op3:f0; dest:f29; op1val:0x7b414a12; op2val:0x434b3911;
op3val:0x7f1970d3; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f29, f2, f27, f0, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f6, rs2==f1, rs3==f29, rd==f8,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x414a12 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x4b3911 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1970d3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f6; op2:f1; op3:f29; dest:f8; op1val:0x7b414a12; op2val:0x434b3911;
op3val:0x7f1970d3; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f8, f6, f1, f29, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f16, rs2==f9, rs3==f23, rd==f31,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x493572 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x4caef8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e01d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f16; op2:f9; op3:f23; dest:f31; op1val:0x7b493572; op2val:0x42ccaef8;
op3val:0x7ea0e01d; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f16, f9, f23, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f30, rs2==f16, rs3==f14, rd==f6,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x493572 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x4caef8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e01d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f16; op3:f14; dest:f6; op1val:0x7b493572; op2val:0x42ccaef8;
op3val:0x7ea0e01d; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f6, f30, f16, f14, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f25, rs2==f23, rs3==f31, rd==f12,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x493572 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x4caef8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e01d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f25; op2:f23; op3:f31; dest:f12; op1val:0x7b493572; op2val:0x42ccaef8;
op3val:0x7ea0e01d; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f12, f25, f23, f31, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f0, rs2==f28, rs3==f1, rd==f22,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x493572 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x4caef8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e01d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f0; op2:f28; op3:f1; dest:f22; op1val:0x7b493572; op2val:0x42ccaef8;
op3val:0x7ea0e01d; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f22, f0, f28, f1, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f23, rs2==f8, rs3==f19, rd==f16,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x493572 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x4caef8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e01d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f23; op2:f8; op3:f19; dest:f16; op1val:0x7b493572; op2val:0x42ccaef8;
op3val:0x7ea0e01d; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f16, f23, f8, f19, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f18, rs2==f5, rs3==f16, rd==f13,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x735419 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x55725c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ae1ac and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f18; op2:f5; op3:f16; dest:f13; op1val:0x7b735419; op2val:0x4255725c;
op3val:0x7e4ae1ac; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f13, f18, f5, f16, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f26, rs2==f10, rs3==f18, rd==f1,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x735419 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x55725c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ae1ac and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f26; op2:f10; op3:f18; dest:f1; op1val:0x7b735419; op2val:0x4255725c;
op3val:0x7e4ae1ac; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f1, f26, f10, f18, dyn, 32, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f28, rs2==f24, rs3==f4, rd==f14,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x735419 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x55725c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ae1ac and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f28; op2:f24; op3:f4; dest:f14; op1val:0x7b735419; op2val:0x4255725c;
op3val:0x7e4ae1ac; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f14, f28, f24, f4, dyn, 64, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f5, rs2==f29, rs3==f24, rd==f19,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x735419 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x55725c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ae1ac and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f5; op2:f29; op3:f24; dest:f19; op1val:0x7b735419; op2val:0x4255725c;
op3val:0x7e4ae1ac; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f19, f5, f29, f24, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f10, rs2==f31, rs3==f25, rd==f24,fs1 == 0 and fe1 == 0xf6 and fm1 == 0x735419 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x55725c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ae1ac and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f10; op2:f31; op3:f25; dest:f24; op1val:0x7b735419; op2val:0x4255725c;
op3val:0x7e4ae1ac; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f24, f10, f31, f25, dyn, 128, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f8, rs2==f25, rs3==f20, rd==f23,fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e30fd and fs2 == 0 and fe2 == 0x83 and fm2 == 0x12aa17 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e9722 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f8; op2:f25; op3:f20; dest:f23; op1val:0x7c5e30fd; op2val:0x4192aa17;
op3val:0x7e7e9722; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f23, f8, f25, f20, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f13, rs2==f2, rs3==f12, rd==f20,fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e30fd and fs2 == 0 and fe2 == 0x83 and fm2 == 0x12aa17 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e9722 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f13; op2:f2; op3:f12; dest:f20; op1val:0x7c5e30fd; op2val:0x4192aa17;
op3val:0x7e7e9722; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f20, f13, f2, f12, dyn, 32, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f19, rs2==f3, rs3==f5, rd==f18,fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e30fd and fs2 == 0 and fe2 == 0x83 and fm2 == 0x12aa17 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e9722 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f19; op2:f3; op3:f5; dest:f18; op1val:0x7c5e30fd; op2val:0x4192aa17;
op3val:0x7e7e9722; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f18, f19, f3, f5, dyn, 64, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f29, rs2==f18, rs3==f9, rd==f28,fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e30fd and fs2 == 0 and fe2 == 0x83 and fm2 == 0x12aa17 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e9722 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f29; op2:f18; op3:f9; dest:f28; op1val:0x7c5e30fd; op2val:0x4192aa17;
op3val:0x7e7e9722; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f28, f29, f18, f9, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f9, rs2==f12, rs3==f27, rd==f10,fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e30fd and fs2 == 0 and fe2 == 0x83 and fm2 == 0x12aa17 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e9722 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f9; op2:f12; op3:f27; dest:f10; op1val:0x7c5e30fd; op2val:0x4192aa17;
op3val:0x7e7e9722; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f10, f9, f12, f27, dyn, 128, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f15, rs2==f19, rs3==f22, rd==f0,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0aa06a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x23b353 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x314a7d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f15; op2:f19; op3:f22; dest:f0; op1val:0x7c8aa06a; op2val:0x41a3b353;
op3val:0x7eb14a7d; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f0, f15, f19, f22, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f1, rs2==f17, rs3==f28, rd==f30,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0aa06a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x23b353 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x314a7d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f1; op2:f17; op3:f28; dest:f30; op1val:0x7c8aa06a; op2val:0x41a3b353;
op3val:0x7eb14a7d; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f30, f1, f17, f28, dyn, 32, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0aa06a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x23b353 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x314a7d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c8aa06a; op2val:0x41a3b353;
op3val:0x7eb14a7d; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0aa06a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x23b353 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x314a7d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c8aa06a; op2val:0x41a3b353;
op3val:0x7eb14a7d; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0aa06a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x23b353 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x314a7d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c8aa06a; op2val:0x41a3b353;
op3val:0x7eb14a7d; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0de66d and fs2 == 0 and fe2 == 0x84 and fm2 == 0x24b40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3696d7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c8de66d; op2val:0x4224b40d;
op3val:0x7f3696d7; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0de66d and fs2 == 0 and fe2 == 0x84 and fm2 == 0x24b40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3696d7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c8de66d; op2val:0x4224b40d;
op3val:0x7f3696d7; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0de66d and fs2 == 0 and fe2 == 0x84 and fm2 == 0x24b40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3696d7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c8de66d; op2val:0x4224b40d;
op3val:0x7f3696d7; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0de66d and fs2 == 0 and fe2 == 0x84 and fm2 == 0x24b40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3696d7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c8de66d; op2val:0x4224b40d;
op3val:0x7f3696d7; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0de66d and fs2 == 0 and fe2 == 0x84 and fm2 == 0x24b40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3696d7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c8de66d; op2val:0x4224b40d;
op3val:0x7f3696d7; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cad6c and fs2 == 0 and fe2 == 0x84 and fm2 == 0x092539 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x27df2e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cad6c; op2val:0x42092539;
op3val:0x7f27df2e; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cad6c and fs2 == 0 and fe2 == 0x84 and fm2 == 0x092539 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x27df2e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cad6c; op2val:0x42092539;
op3val:0x7f27df2e; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cad6c and fs2 == 0 and fe2 == 0x84 and fm2 == 0x092539 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x27df2e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cad6c; op2val:0x42092539;
op3val:0x7f27df2e; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cad6c and fs2 == 0 and fe2 == 0x84 and fm2 == 0x092539 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x27df2e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cad6c; op2val:0x42092539;
op3val:0x7f27df2e; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cad6c and fs2 == 0 and fe2 == 0x84 and fm2 == 0x092539 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x27df2e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c9cad6c; op2val:0x42092539;
op3val:0x7f27df2e; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2ba537 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x200701 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5697ea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7caba537; op2val:0x41200701;
op3val:0x7e5697ea; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2ba537 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x200701 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5697ea and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7caba537; op2val:0x41200701;
op3val:0x7e5697ea; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2ba537 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x200701 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5697ea and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7caba537; op2val:0x41200701;
op3val:0x7e5697ea; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2ba537 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x200701 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5697ea and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7caba537; op2val:0x41200701;
op3val:0x7e5697ea; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2ba537 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x200701 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5697ea and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7caba537; op2val:0x41200701;
op3val:0x7e5697ea; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x390b28 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce65f91; op2val:0x41390b28;
op3val:0x7ea6851a; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x390b28 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce65f91; op2val:0x41390b28;
op3val:0x7ea6851a; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x390b28 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce65f91; op2val:0x41390b28;
op3val:0x7ea6851a; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x390b28 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce65f91; op2val:0x41390b28;
op3val:0x7ea6851a; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x390b28 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ce65f91; op2val:0x41390b28;
op3val:0x7ea6851a; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x70e3ae and fs2 == 0 and fe2 == 0x83 and fm2 == 0x085868 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x004c24 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf0e3ae; op2val:0x41885868;
op3val:0x7f004c24; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x70e3ae and fs2 == 0 and fe2 == 0x83 and fm2 == 0x085868 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x004c24 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf0e3ae; op2val:0x41885868;
op3val:0x7f004c24; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x70e3ae and fs2 == 0 and fe2 == 0x83 and fm2 == 0x085868 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x004c24 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf0e3ae; op2val:0x41885868;
op3val:0x7f004c24; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x70e3ae and fs2 == 0 and fe2 == 0x83 and fm2 == 0x085868 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x004c24 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf0e3ae; op2val:0x41885868;
op3val:0x7f004c24; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x70e3ae and fs2 == 0 and fe2 == 0x83 and fm2 == 0x085868 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x004c24 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf0e3ae; op2val:0x41885868;
op3val:0x7f004c24; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x733ad6 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x1d6b90 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x159147 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf33ad6; op2val:0x419d6b90;
op3val:0x7f159147; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x733ad6 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x1d6b90 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x159147 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf33ad6; op2val:0x419d6b90;
op3val:0x7f159147; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x733ad6 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x1d6b90 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x159147 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf33ad6; op2val:0x419d6b90;
op3val:0x7f159147; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x733ad6 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x1d6b90 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x159147 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf33ad6; op2val:0x419d6b90;
op3val:0x7f159147; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x733ad6 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x1d6b90 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x159147 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7cf33ad6; op2val:0x419d6b90;
op3val:0x7f159147; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00003a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a33fc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0a343b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d00003a; op2val:0x3f0a33fc;
op3val:0x7c8a343b; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00003a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a33fc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0a343b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d00003a; op2val:0x3f0a33fc;
op3val:0x7c8a343b; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00003a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a33fc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0a343b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d00003a; op2val:0x3f0a33fc;
op3val:0x7c8a343b; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00003a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a33fc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0a343b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d00003a; op2val:0x3f0a33fc;
op3val:0x7c8a343b; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x00003a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a33fc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0a343b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d00003a; op2val:0x3f0a33fc;
op3val:0x7c8a343b; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x1ac438 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00288c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1af540 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d1ac438; op2val:0x4080288c;
op3val:0x7e1af540; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x1ac438 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00288c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1af540 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d1ac438; op2val:0x4080288c;
op3val:0x7e1af540; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x1ac438 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00288c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1af540 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d1ac438; op2val:0x4080288c;
op3val:0x7e1af540; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x1ac438 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00288c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1af540 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d1ac438; op2val:0x4080288c;
op3val:0x7e1af540; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x1ac438 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x00288c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1af540 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d1ac438; op2val:0x4080288c;
op3val:0x7e1af540; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2714e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x18c28a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4766bd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2714e2; op2val:0x4018c28a;
op3val:0x7dc766bd; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2714e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x18c28a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4766bd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2714e2; op2val:0x4018c28a;
op3val:0x7dc766bd; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2714e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x18c28a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4766bd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2714e2; op2val:0x4018c28a;
op3val:0x7dc766bd; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2714e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x18c28a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4766bd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2714e2; op2val:0x4018c28a;
op3val:0x7dc766bd; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2714e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x18c28a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4766bd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d2714e2; op2val:0x4018c28a;
op3val:0x7dc766bd; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0bfc20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d322c35; op2val:0x410bfc20;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0bfc20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d322c35; op2val:0x410bfc20;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0bfc20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d322c35; op2val:0x410bfc20;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0bfc20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d322c35; op2val:0x410bfc20;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0bfc20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d322c35; op2val:0x410bfc20;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x351ba3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x507ed5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13802f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d351ba3; op2val:0x41507ed5;
op3val:0x7f13802f; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x351ba3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x507ed5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13802f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d351ba3; op2val:0x41507ed5;
op3val:0x7f13802f; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x351ba3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x507ed5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13802f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d351ba3; op2val:0x41507ed5;
op3val:0x7f13802f; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x351ba3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x507ed5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13802f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d351ba3; op2val:0x41507ed5;
op3val:0x7f13802f; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x351ba3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x507ed5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13802f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d351ba3; op2val:0x41507ed5;
op3val:0x7f13802f; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5d28cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d371843; op2val:0x405d28cc;
op3val:0x7e1e2d21; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5d28cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d371843; op2val:0x405d28cc;
op3val:0x7e1e2d21; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5d28cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d371843; op2val:0x405d28cc;
op3val:0x7e1e2d21; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5d28cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d371843; op2val:0x405d28cc;
op3val:0x7e1e2d21; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5d28cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d371843; op2val:0x405d28cc;
op3val:0x7e1e2d21; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3a6060 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x39001e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06afbc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3a6060; op2val:0x4139001e;
op3val:0x7f06afbc; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3a6060 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x39001e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06afbc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3a6060; op2val:0x4139001e;
op3val:0x7f06afbc; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3a6060 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x39001e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06afbc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3a6060; op2val:0x4139001e;
op3val:0x7f06afbc; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3a6060 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x39001e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06afbc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3a6060; op2val:0x4139001e;
op3val:0x7f06afbc; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3a6060 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x39001e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06afbc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3a6060; op2val:0x4139001e;
op3val:0x7f06afbc; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3f39ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a7c97 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4ee451 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3f39ad; op2val:0x3f8a7c97;
op3val:0x7d4ee451; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3f39ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a7c97 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4ee451 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3f39ad; op2val:0x3f8a7c97;
op3val:0x7d4ee451; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3f39ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a7c97 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4ee451 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3f39ad; op2val:0x3f8a7c97;
op3val:0x7d4ee451; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3f39ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a7c97 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4ee451 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3f39ad; op2val:0x3f8a7c97;
op3val:0x7d4ee451; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3f39ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a7c97 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4ee451 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d3f39ad; op2val:0x3f8a7c97;
op3val:0x7d4ee451; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x458055 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x75282b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d22cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d458055; op2val:0x4175282b;
op3val:0x7f3d22cf; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x458055 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x75282b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d22cf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d458055; op2val:0x4175282b;
op3val:0x7f3d22cf; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x458055 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x75282b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d22cf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d458055; op2val:0x4175282b;
op3val:0x7f3d22cf; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x458055 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x75282b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d22cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d458055; op2val:0x4175282b;
op3val:0x7f3d22cf; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x458055 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x75282b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d22cf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d458055; op2val:0x4175282b;
op3val:0x7f3d22cf; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4caa17 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f3402 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25a71d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d4caa17; op2val:0x414f3402;
op3val:0x7f25a71d; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4caa17 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f3402 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25a71d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d4caa17; op2val:0x414f3402;
op3val:0x7f25a71d; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4caa17 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f3402 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25a71d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d4caa17; op2val:0x414f3402;
op3val:0x7f25a71d; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4caa17 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f3402 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25a71d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d4caa17; op2val:0x414f3402;
op3val:0x7f25a71d; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4caa17 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f3402 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25a71d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d4caa17; op2val:0x414f3402;
op3val:0x7f25a71d; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2637f1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d569889; op2val:0x3fa637f1;
op3val:0x7d8b55ce; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2637f1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d569889; op2val:0x3fa637f1;
op3val:0x7d8b55ce; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2637f1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d569889; op2val:0x3fa637f1;
op3val:0x7d8b55ce; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2637f1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d569889; op2val:0x3fa637f1;
op3val:0x7d8b55ce; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2637f1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d569889; op2val:0x3fa637f1;
op3val:0x7d8b55ce; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5942ae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x279d85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e402f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5942ae; op2val:0x41279d85;
op3val:0x7f0e402f; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5942ae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x279d85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e402f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5942ae; op2val:0x41279d85;
op3val:0x7f0e402f; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5942ae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x279d85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e402f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5942ae; op2val:0x41279d85;
op3val:0x7f0e402f; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5942ae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x279d85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e402f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5942ae; op2val:0x41279d85;
op3val:0x7f0e402f; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5942ae and fs2 == 0 and fe2 == 0x82 and fm2 == 0x279d85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e402f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5942ae; op2val:0x41279d85;
op3val:0x7f0e402f; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5e74c2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f5469 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3429c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5e74c2; op2val:0x414f5469;
op3val:0x7f3429c3; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5e74c2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f5469 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3429c3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5e74c2; op2val:0x414f5469;
op3val:0x7f3429c3; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5e74c2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f5469 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3429c3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5e74c2; op2val:0x414f5469;
op3val:0x7f3429c3; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5e74c2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f5469 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3429c3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5e74c2; op2val:0x414f5469;
op3val:0x7f3429c3; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5e74c2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4f5469 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3429c3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5e74c2; op2val:0x414f5469;
op3val:0x7f3429c3; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5edc92 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x544a7b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x38cf80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5edc92; op2val:0x40544a7b;
op3val:0x7e38cf80; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5edc92 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x544a7b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x38cf80 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5edc92; op2val:0x40544a7b;
op3val:0x7e38cf80; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5edc92 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x544a7b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x38cf80 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5edc92; op2val:0x40544a7b;
op3val:0x7e38cf80; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5edc92 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x544a7b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x38cf80 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5edc92; op2val:0x40544a7b;
op3val:0x7e38cf80; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5edc92 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x544a7b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x38cf80 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d5edc92; op2val:0x40544a7b;
op3val:0x7e38cf80; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x60a082 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x127dc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0089e4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d60a082; op2val:0x41127dc4;
op3val:0x7f0089e4; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x60a082 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x127dc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0089e4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d60a082; op2val:0x41127dc4;
op3val:0x7f0089e4; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x60a082 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x127dc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0089e4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d60a082; op2val:0x41127dc4;
op3val:0x7f0089e4; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x60a082 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x127dc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0089e4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d60a082; op2val:0x41127dc4;
op3val:0x7f0089e4; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x60a082 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x127dc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0089e4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d60a082; op2val:0x41127dc4;
op3val:0x7f0089e4; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x778bb6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3260f9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c7cea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d778bb6; op2val:0x40b260f9;
op3val:0x7eac7cea; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x778bb6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3260f9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c7cea and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d778bb6; op2val:0x40b260f9;
op3val:0x7eac7cea; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x778bb6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3260f9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c7cea and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d778bb6; op2val:0x40b260f9;
op3val:0x7eac7cea; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x778bb6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3260f9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c7cea and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d778bb6; op2val:0x40b260f9;
op3val:0x7eac7cea; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x778bb6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3260f9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c7cea and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d778bb6; op2val:0x40b260f9;
op3val:0x7eac7cea; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00a0e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2397b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x246559 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d80a0e6; op2val:0x412397b5;
op3val:0x7f246559; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00a0e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2397b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x246559 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d80a0e6; op2val:0x412397b5;
op3val:0x7f246559; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00a0e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2397b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x246559 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d80a0e6; op2val:0x412397b5;
op3val:0x7f246559; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00a0e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2397b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x246559 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d80a0e6; op2val:0x412397b5;
op3val:0x7f246559; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x00a0e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2397b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x246559 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d80a0e6; op2val:0x412397b5;
op3val:0x7f246559; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x01c4cd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1f5272 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21860d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d81c4cd; op2val:0x411f5272;
op3val:0x7f21860d; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x01c4cd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1f5272 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21860d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d81c4cd; op2val:0x411f5272;
op3val:0x7f21860d; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x01c4cd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1f5272 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21860d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d81c4cd; op2val:0x411f5272;
op3val:0x7f21860d; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x01c4cd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1f5272 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21860d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d81c4cd; op2val:0x411f5272;
op3val:0x7f21860d; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x01c4cd and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1f5272 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21860d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d81c4cd; op2val:0x411f5272;
op3val:0x7f21860d; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x023841 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x795742 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7daa35 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d823841; op2val:0x40f95742;
op3val:0x7efdaa35; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x023841 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x795742 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7daa35 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d823841; op2val:0x40f95742;
op3val:0x7efdaa35; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x023841 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x795742 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7daa35 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d823841; op2val:0x40f95742;
op3val:0x7efdaa35; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x023841 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x795742 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7daa35 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d823841; op2val:0x40f95742;
op3val:0x7efdaa35; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x023841 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x795742 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7daa35 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d823841; op2val:0x40f95742;
op3val:0x7efdaa35; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x03eb38 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184c25 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1cf5cd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d83eb38; op2val:0x3f984c25;
op3val:0x7d9cf5cd; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x03eb38 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184c25 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1cf5cd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d83eb38; op2val:0x3f984c25;
op3val:0x7d9cf5cd; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x03eb38 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184c25 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1cf5cd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d83eb38; op2val:0x3f984c25;
op3val:0x7d9cf5cd; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x03eb38 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184c25 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1cf5cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d83eb38; op2val:0x3f984c25;
op3val:0x7d9cf5cd; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x03eb38 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184c25 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1cf5cd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d83eb38; op2val:0x3f984c25;
op3val:0x7d9cf5cd; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0969f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x249d57 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30b8b0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d8969f8; op2val:0x3f249d57;
op3val:0x7d30b8b0; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0969f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x249d57 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30b8b0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d8969f8; op2val:0x3f249d57;
op3val:0x7d30b8b0; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0969f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x249d57 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30b8b0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d8969f8; op2val:0x3f249d57;
op3val:0x7d30b8b0; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0969f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x249d57 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30b8b0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d8969f8; op2val:0x3f249d57;
op3val:0x7d30b8b0; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0969f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x249d57 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30b8b0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d8969f8; op2val:0x3f249d57;
op3val:0x7d30b8b0; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x09dc78 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0e704e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x19698b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d89dc78; op2val:0x408e704e;
op3val:0x7e99698b; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x09dc78 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0e704e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x19698b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d89dc78; op2val:0x408e704e;
op3val:0x7e99698b; valaddr_reg:x3; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 513*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x09dc78 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0e704e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x19698b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d89dc78; op2val:0x408e704e;
op3val:0x7e99698b; valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x09dc78 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0e704e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x19698b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d89dc78; op2val:0x408e704e;
op3val:0x7e99698b; valaddr_reg:x3; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 519*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x09dc78 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0e704e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x19698b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d89dc78; op2val:0x408e704e;
op3val:0x7e99698b; valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1bd969 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x655a0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ba04e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9bd969; op2val:0x40655a0f;
op3val:0x7e8ba04e; valaddr_reg:x3; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 525*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1bd969 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x655a0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ba04e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9bd969; op2val:0x40655a0f;
op3val:0x7e8ba04e; valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1bd969 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x655a0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ba04e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9bd969; op2val:0x40655a0f;
op3val:0x7e8ba04e; valaddr_reg:x3; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 531*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1bd969 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x655a0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ba04e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9bd969; op2val:0x40655a0f;
op3val:0x7e8ba04e; valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1bd969 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x655a0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ba04e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9bd969; op2val:0x40655a0f;
op3val:0x7e8ba04e; valaddr_reg:x3; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 537*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1f0870 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4409e1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x739132 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9f0870; op2val:0x40c409e1;
op3val:0x7ef39132; valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1f0870 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4409e1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x739132 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9f0870; op2val:0x40c409e1;
op3val:0x7ef39132; valaddr_reg:x3; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 543*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1f0870 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4409e1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x739132 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9f0870; op2val:0x40c409e1;
op3val:0x7ef39132; valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1f0870 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4409e1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x739132 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9f0870; op2val:0x40c409e1;
op3val:0x7ef39132; valaddr_reg:x3; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 549*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1f0870 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4409e1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x739132 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7d9f0870; op2val:0x40c409e1;
op3val:0x7ef39132; valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x20f102 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22354f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4bf40e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da0f102; op2val:0x4022354f;
op3val:0x7e4bf40e; valaddr_reg:x3; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 555*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x20f102 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22354f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4bf40e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da0f102; op2val:0x4022354f;
op3val:0x7e4bf40e; valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x20f102 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22354f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4bf40e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da0f102; op2val:0x4022354f;
op3val:0x7e4bf40e; valaddr_reg:x3; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 561*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x20f102 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22354f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4bf40e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da0f102; op2val:0x4022354f;
op3val:0x7e4bf40e; valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x20f102 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22354f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4bf40e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da0f102; op2val:0x4022354f;
op3val:0x7e4bf40e; valaddr_reg:x3; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 567*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x22fbeb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x28f8b9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x572759 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da2fbeb; op2val:0x40a8f8b9;
op3val:0x7ed72759; valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x22fbeb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x28f8b9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x572759 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da2fbeb; op2val:0x40a8f8b9;
op3val:0x7ed72759; valaddr_reg:x3; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 573*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x22fbeb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x28f8b9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x572759 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da2fbeb; op2val:0x40a8f8b9;
op3val:0x7ed72759; valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x22fbeb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x28f8b9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x572759 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da2fbeb; op2val:0x40a8f8b9;
op3val:0x7ed72759; valaddr_reg:x3; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 579*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x22fbeb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x28f8b9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x572759 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da2fbeb; op2val:0x40a8f8b9;
op3val:0x7ed72759; valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x281e10 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ccf3f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77fc5d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da81e10; op2val:0x3fbccf3f;
op3val:0x7df7fc5d; valaddr_reg:x3; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 585*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x281e10 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ccf3f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77fc5d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da81e10; op2val:0x3fbccf3f;
op3val:0x7df7fc5d; valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x281e10 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ccf3f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77fc5d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da81e10; op2val:0x3fbccf3f;
op3val:0x7df7fc5d; valaddr_reg:x3; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 591*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x281e10 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ccf3f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77fc5d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da81e10; op2val:0x3fbccf3f;
op3val:0x7df7fc5d; valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x281e10 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ccf3f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77fc5d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7da81e10; op2val:0x3fbccf3f;
op3val:0x7df7fc5d; valaddr_reg:x3; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 597*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3acfb2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x68a6d7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x29c5f9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbacfb2; op2val:0x4068a6d7;
op3val:0x7ea9c5f9; valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3acfb2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x68a6d7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x29c5f9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbacfb2; op2val:0x4068a6d7;
op3val:0x7ea9c5f9; valaddr_reg:x3; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 603*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3acfb2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x68a6d7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x29c5f9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbacfb2; op2val:0x4068a6d7;
op3val:0x7ea9c5f9; valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3acfb2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x68a6d7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x29c5f9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbacfb2; op2val:0x4068a6d7;
op3val:0x7ea9c5f9; valaddr_reg:x3; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 609*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3acfb2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x68a6d7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x29c5f9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbacfb2; op2val:0x4068a6d7;
op3val:0x7ea9c5f9; valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x66cf10 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe28e8; op2val:0x3fe6cf10;
op3val:0x7e2b7290; valaddr_reg:x3; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 615*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x66cf10 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe28e8; op2val:0x3fe6cf10;
op3val:0x7e2b7290; valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x66cf10 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe28e8; op2val:0x3fe6cf10;
op3val:0x7e2b7290; valaddr_reg:x3; val_offset:621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 621*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x66cf10 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe28e8; op2val:0x3fe6cf10;
op3val:0x7e2b7290; valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x66cf10 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dbe28e8; op2val:0x3fe6cf10;
op3val:0x7e2b7290; valaddr_reg:x3; val_offset:627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 627*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x432184 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184b7b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x682adf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc32184; op2val:0x3f984b7b;
op3val:0x7de82adf; valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x432184 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184b7b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x682adf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc32184; op2val:0x3f984b7b;
op3val:0x7de82adf; valaddr_reg:x3; val_offset:633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 633*FLEN/8, x4, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x432184 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184b7b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x682adf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc32184; op2val:0x3f984b7b;
op3val:0x7de82adf; valaddr_reg:x3; val_offset:636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 636*FLEN/8, x4, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x432184 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184b7b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x682adf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc32184; op2val:0x3f984b7b;
op3val:0x7de82adf; valaddr_reg:x3; val_offset:639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 639*FLEN/8, x4, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x432184 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184b7b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x682adf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc32184; op2val:0x3f984b7b;
op3val:0x7de82adf; valaddr_reg:x3; val_offset:642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 642*FLEN/8, x4, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x46aaa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x750c8e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e2b0e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc6aaa4; op2val:0x3ff50c8e;
op3val:0x7e3e2b0e; valaddr_reg:x3; val_offset:645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 645*FLEN/8, x4, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x46aaa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x750c8e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e2b0e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc6aaa4; op2val:0x3ff50c8e;
op3val:0x7e3e2b0e; valaddr_reg:x3; val_offset:648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 648*FLEN/8, x4, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x46aaa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x750c8e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e2b0e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc6aaa4; op2val:0x3ff50c8e;
op3val:0x7e3e2b0e; valaddr_reg:x3; val_offset:651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 651*FLEN/8, x4, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x46aaa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x750c8e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e2b0e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc6aaa4; op2val:0x3ff50c8e;
op3val:0x7e3e2b0e; valaddr_reg:x3; val_offset:654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 654*FLEN/8, x4, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x46aaa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x750c8e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e2b0e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc6aaa4; op2val:0x3ff50c8e;
op3val:0x7e3e2b0e; valaddr_reg:x3; val_offset:657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 657*FLEN/8, x4, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4930f1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5eb217 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x2f0468 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc930f1; op2val:0x3ddeb217;
op3val:0x7c2f0468; valaddr_reg:x3; val_offset:660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 660*FLEN/8, x4, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4930f1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5eb217 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x2f0468 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc930f1; op2val:0x3ddeb217;
op3val:0x7c2f0468; valaddr_reg:x3; val_offset:663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 663*FLEN/8, x4, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4930f1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5eb217 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x2f0468 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc930f1; op2val:0x3ddeb217;
op3val:0x7c2f0468; valaddr_reg:x3; val_offset:666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 666*FLEN/8, x4, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4930f1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5eb217 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x2f0468 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc930f1; op2val:0x3ddeb217;
op3val:0x7c2f0468; valaddr_reg:x3; val_offset:669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 669*FLEN/8, x4, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4930f1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5eb217 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x2f0468 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc930f1; op2val:0x3ddeb217;
op3val:0x7c2f0468; valaddr_reg:x3; val_offset:672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 672*FLEN/8, x4, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x495443 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5e2b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2eb928 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc95443; op2val:0x40de2b56;
op3val:0x7f2eb928; valaddr_reg:x3; val_offset:675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 675*FLEN/8, x4, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x495443 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5e2b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2eb928 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc95443; op2val:0x40de2b56;
op3val:0x7f2eb928; valaddr_reg:x3; val_offset:678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 678*FLEN/8, x4, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x495443 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5e2b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2eb928 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc95443; op2val:0x40de2b56;
op3val:0x7f2eb928; valaddr_reg:x3; val_offset:681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 681*FLEN/8, x4, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x495443 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5e2b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2eb928 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc95443; op2val:0x40de2b56;
op3val:0x7f2eb928; valaddr_reg:x3; val_offset:684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 684*FLEN/8, x4, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x495443 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5e2b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2eb928 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7dc95443; op2val:0x40de2b56;
op3val:0x7f2eb928; valaddr_reg:x3; val_offset:687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 687*FLEN/8, x4, x1, x2)

inst_230:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5109c2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddd9367; op2val:0x3f5109c2;
op3val:0x7db4edca; valaddr_reg:x3; val_offset:690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 690*FLEN/8, x4, x1, x2)

inst_231:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5109c2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddd9367; op2val:0x3f5109c2;
op3val:0x7db4edca; valaddr_reg:x3; val_offset:693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 693*FLEN/8, x4, x1, x2)

inst_232:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5109c2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddd9367; op2val:0x3f5109c2;
op3val:0x7db4edca; valaddr_reg:x3; val_offset:696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 696*FLEN/8, x4, x1, x2)

inst_233:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5109c2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddd9367; op2val:0x3f5109c2;
op3val:0x7db4edca; valaddr_reg:x3; val_offset:699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 699*FLEN/8, x4, x1, x2)

inst_234:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5109c2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ddd9367; op2val:0x3f5109c2;
op3val:0x7db4edca; valaddr_reg:x3; val_offset:702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 702*FLEN/8, x4, x1, x2)

inst_235:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x608613 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x34efdc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1eb0a4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de08613; op2val:0x40b4efdc;
op3val:0x7f1eb0a4; valaddr_reg:x3; val_offset:705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 705*FLEN/8, x4, x1, x2)

inst_236:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x608613 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x34efdc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1eb0a4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de08613; op2val:0x40b4efdc;
op3val:0x7f1eb0a4; valaddr_reg:x3; val_offset:708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 708*FLEN/8, x4, x1, x2)

inst_237:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x608613 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x34efdc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1eb0a4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de08613; op2val:0x40b4efdc;
op3val:0x7f1eb0a4; valaddr_reg:x3; val_offset:711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 711*FLEN/8, x4, x1, x2)

inst_238:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x608613 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x34efdc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1eb0a4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de08613; op2val:0x40b4efdc;
op3val:0x7f1eb0a4; valaddr_reg:x3; val_offset:714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 714*FLEN/8, x4, x1, x2)

inst_239:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x608613 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x34efdc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1eb0a4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de08613; op2val:0x40b4efdc;
op3val:0x7f1eb0a4; valaddr_reg:x3; val_offset:717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 717*FLEN/8, x4, x1, x2)

inst_240:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x656ddd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x44eb70 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x307b1d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de56ddd; op2val:0x40c4eb70;
op3val:0x7f307b1d; valaddr_reg:x3; val_offset:720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 720*FLEN/8, x4, x1, x2)

inst_241:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x656ddd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x44eb70 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x307b1d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de56ddd; op2val:0x40c4eb70;
op3val:0x7f307b1d; valaddr_reg:x3; val_offset:723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 723*FLEN/8, x4, x1, x2)

inst_242:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x656ddd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x44eb70 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x307b1d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de56ddd; op2val:0x40c4eb70;
op3val:0x7f307b1d; valaddr_reg:x3; val_offset:726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 726*FLEN/8, x4, x1, x2)

inst_243:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x656ddd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x44eb70 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x307b1d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de56ddd; op2val:0x40c4eb70;
op3val:0x7f307b1d; valaddr_reg:x3; val_offset:729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 729*FLEN/8, x4, x1, x2)

inst_244:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x656ddd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x44eb70 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x307b1d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de56ddd; op2val:0x40c4eb70;
op3val:0x7f307b1d; valaddr_reg:x3; val_offset:732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 732*FLEN/8, x4, x1, x2)

inst_245:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4de670 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de972bf; op2val:0x404de670;
op3val:0x7ebbc306; valaddr_reg:x3; val_offset:735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 735*FLEN/8, x4, x1, x2)

inst_246:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4de670 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de972bf; op2val:0x404de670;
op3val:0x7ebbc306; valaddr_reg:x3; val_offset:738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 738*FLEN/8, x4, x1, x2)

inst_247:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4de670 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de972bf; op2val:0x404de670;
op3val:0x7ebbc306; valaddr_reg:x3; val_offset:741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 741*FLEN/8, x4, x1, x2)

inst_248:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4de670 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de972bf; op2val:0x404de670;
op3val:0x7ebbc306; valaddr_reg:x3; val_offset:744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 744*FLEN/8, x4, x1, x2)

inst_249:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4de670 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7de972bf; op2val:0x404de670;
op3val:0x7ebbc306; valaddr_reg:x3; val_offset:747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 747*FLEN/8, x4, x1, x2)

inst_250:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6d3ae1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x145fb2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x097eb9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ded3ae1; op2val:0x40945fb2;
op3val:0x7f097eb9; valaddr_reg:x3; val_offset:750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 750*FLEN/8, x4, x1, x2)

inst_251:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6d3ae1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x145fb2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x097eb9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ded3ae1; op2val:0x40945fb2;
op3val:0x7f097eb9; valaddr_reg:x3; val_offset:753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 753*FLEN/8, x4, x1, x2)

inst_252:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6d3ae1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x145fb2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x097eb9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ded3ae1; op2val:0x40945fb2;
op3val:0x7f097eb9; valaddr_reg:x3; val_offset:756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 756*FLEN/8, x4, x1, x2)

inst_253:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6d3ae1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x145fb2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x097eb9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ded3ae1; op2val:0x40945fb2;
op3val:0x7f097eb9; valaddr_reg:x3; val_offset:759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 759*FLEN/8, x4, x1, x2)

inst_254:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6d3ae1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x145fb2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x097eb9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ded3ae1; op2val:0x40945fb2;
op3val:0x7f097eb9; valaddr_reg:x3; val_offset:762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 762*FLEN/8, x4, x1, x2)

inst_255:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71f878 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x351f62 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2b3257 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1f878; op2val:0x40351f62;
op3val:0x7eab3257; valaddr_reg:x3; val_offset:765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 765*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_256:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71f878 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x351f62 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2b3257 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1f878; op2val:0x40351f62;
op3val:0x7eab3257; valaddr_reg:x3; val_offset:768*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 768*FLEN/8, x4, x1, x2)

inst_257:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71f878 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x351f62 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2b3257 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1f878; op2val:0x40351f62;
op3val:0x7eab3257; valaddr_reg:x3; val_offset:771*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 771*FLEN/8, x4, x1, x2)

inst_258:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71f878 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x351f62 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2b3257 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1f878; op2val:0x40351f62;
op3val:0x7eab3257; valaddr_reg:x3; val_offset:774*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 774*FLEN/8, x4, x1, x2)

inst_259:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71f878 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x351f62 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2b3257 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df1f878; op2val:0x40351f62;
op3val:0x7eab3257; valaddr_reg:x3; val_offset:777*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 777*FLEN/8, x4, x1, x2)

inst_260:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x780309 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b0a9f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25b451 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df80309; op2val:0x402b0a9f;
op3val:0x7ea5b451; valaddr_reg:x3; val_offset:780*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 780*FLEN/8, x4, x1, x2)

inst_261:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x780309 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b0a9f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25b451 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df80309; op2val:0x402b0a9f;
op3val:0x7ea5b451; valaddr_reg:x3; val_offset:783*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 783*FLEN/8, x4, x1, x2)

inst_262:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x780309 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b0a9f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25b451 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df80309; op2val:0x402b0a9f;
op3val:0x7ea5b451; valaddr_reg:x3; val_offset:786*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 786*FLEN/8, x4, x1, x2)

inst_263:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x780309 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b0a9f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25b451 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df80309; op2val:0x402b0a9f;
op3val:0x7ea5b451; valaddr_reg:x3; val_offset:789*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 789*FLEN/8, x4, x1, x2)

inst_264:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x780309 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b0a9f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25b451 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7df80309; op2val:0x402b0a9f;
op3val:0x7ea5b451; valaddr_reg:x3; val_offset:792*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 792*FLEN/8, x4, x1, x2)

inst_265:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0049cc and fs2 == 0 and fe2 == 0x81 and fm2 == 0x13e107 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14364a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0049cc; op2val:0x4093e107;
op3val:0x7f14364a; valaddr_reg:x3; val_offset:795*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 795*FLEN/8, x4, x1, x2)

inst_266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0049cc and fs2 == 0 and fe2 == 0x81 and fm2 == 0x13e107 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14364a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0049cc; op2val:0x4093e107;
op3val:0x7f14364a; valaddr_reg:x3; val_offset:798*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 798*FLEN/8, x4, x1, x2)

inst_267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0049cc and fs2 == 0 and fe2 == 0x81 and fm2 == 0x13e107 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14364a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0049cc; op2val:0x4093e107;
op3val:0x7f14364a; valaddr_reg:x3; val_offset:801*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 801*FLEN/8, x4, x1, x2)

inst_268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0049cc and fs2 == 0 and fe2 == 0x81 and fm2 == 0x13e107 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14364a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0049cc; op2val:0x4093e107;
op3val:0x7f14364a; valaddr_reg:x3; val_offset:804*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 804*FLEN/8, x4, x1, x2)

inst_269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0049cc and fs2 == 0 and fe2 == 0x81 and fm2 == 0x13e107 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14364a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0049cc; op2val:0x4093e107;
op3val:0x7f14364a; valaddr_reg:x3; val_offset:807*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 807*FLEN/8, x4, x1, x2)

inst_270:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x010fa7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x32615c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x33dbf0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e010fa7; op2val:0x3f32615c;
op3val:0x7db3dbf0; valaddr_reg:x3; val_offset:810*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 810*FLEN/8, x4, x1, x2)

inst_271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x010fa7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x32615c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x33dbf0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e010fa7; op2val:0x3f32615c;
op3val:0x7db3dbf0; valaddr_reg:x3; val_offset:813*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 813*FLEN/8, x4, x1, x2)

inst_272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x010fa7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x32615c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x33dbf0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e010fa7; op2val:0x3f32615c;
op3val:0x7db3dbf0; valaddr_reg:x3; val_offset:816*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 816*FLEN/8, x4, x1, x2)

inst_273:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x010fa7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x32615c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x33dbf0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e010fa7; op2val:0x3f32615c;
op3val:0x7db3dbf0; valaddr_reg:x3; val_offset:819*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 819*FLEN/8, x4, x1, x2)

inst_274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x010fa7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x32615c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x33dbf0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e010fa7; op2val:0x3f32615c;
op3val:0x7db3dbf0; valaddr_reg:x3; val_offset:822*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 822*FLEN/8, x4, x1, x2)

inst_275:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x045cbd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2fd438 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35d23f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e045cbd; op2val:0x402fd438;
op3val:0x7eb5d23f; valaddr_reg:x3; val_offset:825*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 825*FLEN/8, x4, x1, x2)

inst_276:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x045cbd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2fd438 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35d23f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e045cbd; op2val:0x402fd438;
op3val:0x7eb5d23f; valaddr_reg:x3; val_offset:828*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 828*FLEN/8, x4, x1, x2)

inst_277:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x045cbd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2fd438 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35d23f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e045cbd; op2val:0x402fd438;
op3val:0x7eb5d23f; valaddr_reg:x3; val_offset:831*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 831*FLEN/8, x4, x1, x2)

inst_278:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x045cbd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2fd438 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35d23f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e045cbd; op2val:0x402fd438;
op3val:0x7eb5d23f; valaddr_reg:x3; val_offset:834*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 834*FLEN/8, x4, x1, x2)

inst_279:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x045cbd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2fd438 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35d23f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e045cbd; op2val:0x402fd438;
op3val:0x7eb5d23f; valaddr_reg:x3; val_offset:837*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 837*FLEN/8, x4, x1, x2)

inst_280:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0755d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x287cca and fs3 == 0 and fe3 == 0xfc and fm3 == 0x322492 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0755d0; op2val:0x3fa87cca;
op3val:0x7e322492; valaddr_reg:x3; val_offset:840*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 840*FLEN/8, x4, x1, x2)

inst_281:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0755d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x287cca and fs3 == 0 and fe3 == 0xfc and fm3 == 0x322492 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0755d0; op2val:0x3fa87cca;
op3val:0x7e322492; valaddr_reg:x3; val_offset:843*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 843*FLEN/8, x4, x1, x2)

inst_282:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0755d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x287cca and fs3 == 0 and fe3 == 0xfc and fm3 == 0x322492 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0755d0; op2val:0x3fa87cca;
op3val:0x7e322492; valaddr_reg:x3; val_offset:846*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 846*FLEN/8, x4, x1, x2)

inst_283:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0755d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x287cca and fs3 == 0 and fe3 == 0xfc and fm3 == 0x322492 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0755d0; op2val:0x3fa87cca;
op3val:0x7e322492; valaddr_reg:x3; val_offset:849*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 849*FLEN/8, x4, x1, x2)

inst_284:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0755d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x287cca and fs3 == 0 and fe3 == 0xfc and fm3 == 0x322492 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0755d0; op2val:0x3fa87cca;
op3val:0x7e322492; valaddr_reg:x3; val_offset:852*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 852*FLEN/8, x4, x1, x2)

inst_285:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x091acb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0d73d3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x178395 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e091acb; op2val:0x408d73d3;
op3val:0x7f178395; valaddr_reg:x3; val_offset:855*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 855*FLEN/8, x4, x1, x2)

inst_286:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x091acb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0d73d3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x178395 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e091acb; op2val:0x408d73d3;
op3val:0x7f178395; valaddr_reg:x3; val_offset:858*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 858*FLEN/8, x4, x1, x2)

inst_287:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x091acb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0d73d3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x178395 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e091acb; op2val:0x408d73d3;
op3val:0x7f178395; valaddr_reg:x3; val_offset:861*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 861*FLEN/8, x4, x1, x2)

inst_288:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x091acb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0d73d3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x178395 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e091acb; op2val:0x408d73d3;
op3val:0x7f178395; valaddr_reg:x3; val_offset:864*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 864*FLEN/8, x4, x1, x2)

inst_289:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x091acb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0d73d3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x178395 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e091acb; op2val:0x408d73d3;
op3val:0x7f178395; valaddr_reg:x3; val_offset:867*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 867*FLEN/8, x4, x1, x2)

inst_290:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4df5c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0acc40; op2val:0x404df5c4;
op3val:0x7edf559e; valaddr_reg:x3; val_offset:870*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 870*FLEN/8, x4, x1, x2)

inst_291:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4df5c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0acc40; op2val:0x404df5c4;
op3val:0x7edf559e; valaddr_reg:x3; val_offset:873*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 873*FLEN/8, x4, x1, x2)

inst_292:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4df5c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0acc40; op2val:0x404df5c4;
op3val:0x7edf559e; valaddr_reg:x3; val_offset:876*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 876*FLEN/8, x4, x1, x2)

inst_293:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4df5c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0acc40; op2val:0x404df5c4;
op3val:0x7edf559e; valaddr_reg:x3; val_offset:879*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 879*FLEN/8, x4, x1, x2)

inst_294:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4df5c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e0acc40; op2val:0x404df5c4;
op3val:0x7edf559e; valaddr_reg:x3; val_offset:882*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 882*FLEN/8, x4, x1, x2)

inst_295:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1180a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2060cd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x364ede and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1180a9; op2val:0x402060cd;
op3val:0x7eb64ede; valaddr_reg:x3; val_offset:885*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 885*FLEN/8, x4, x1, x2)

inst_296:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1180a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2060cd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x364ede and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1180a9; op2val:0x402060cd;
op3val:0x7eb64ede; valaddr_reg:x3; val_offset:888*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 888*FLEN/8, x4, x1, x2)

inst_297:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1180a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2060cd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x364ede and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1180a9; op2val:0x402060cd;
op3val:0x7eb64ede; valaddr_reg:x3; val_offset:891*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 891*FLEN/8, x4, x1, x2)

inst_298:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1180a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2060cd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x364ede and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1180a9; op2val:0x402060cd;
op3val:0x7eb64ede; valaddr_reg:x3; val_offset:894*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 894*FLEN/8, x4, x1, x2)

inst_299:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1180a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2060cd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x364ede and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1180a9; op2val:0x402060cd;
op3val:0x7eb64ede; valaddr_reg:x3; val_offset:897*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 897*FLEN/8, x4, x1, x2)

inst_300:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1654f7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5049bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x74a0ac and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1654f7; op2val:0x3fd049bc;
op3val:0x7e74a0ac; valaddr_reg:x3; val_offset:900*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 900*FLEN/8, x4, x1, x2)

inst_301:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1654f7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5049bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x74a0ac and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1654f7; op2val:0x3fd049bc;
op3val:0x7e74a0ac; valaddr_reg:x3; val_offset:903*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 903*FLEN/8, x4, x1, x2)

inst_302:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1654f7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5049bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x74a0ac and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1654f7; op2val:0x3fd049bc;
op3val:0x7e74a0ac; valaddr_reg:x3; val_offset:906*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 906*FLEN/8, x4, x1, x2)

inst_303:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1654f7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5049bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x74a0ac and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1654f7; op2val:0x3fd049bc;
op3val:0x7e74a0ac; valaddr_reg:x3; val_offset:909*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 909*FLEN/8, x4, x1, x2)

inst_304:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1654f7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5049bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x74a0ac and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1654f7; op2val:0x3fd049bc;
op3val:0x7e74a0ac; valaddr_reg:x3; val_offset:912*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 912*FLEN/8, x4, x1, x2)

inst_305:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x171200 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04fd3a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1cf56f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e171200; op2val:0x3f84fd3a;
op3val:0x7e1cf56f; valaddr_reg:x3; val_offset:915*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 915*FLEN/8, x4, x1, x2)

inst_306:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x171200 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04fd3a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1cf56f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e171200; op2val:0x3f84fd3a;
op3val:0x7e1cf56f; valaddr_reg:x3; val_offset:918*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 918*FLEN/8, x4, x1, x2)

inst_307:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x171200 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04fd3a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1cf56f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e171200; op2val:0x3f84fd3a;
op3val:0x7e1cf56f; valaddr_reg:x3; val_offset:921*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 921*FLEN/8, x4, x1, x2)

inst_308:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x171200 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04fd3a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1cf56f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e171200; op2val:0x3f84fd3a;
op3val:0x7e1cf56f; valaddr_reg:x3; val_offset:924*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 924*FLEN/8, x4, x1, x2)

inst_309:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x171200 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04fd3a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1cf56f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e171200; op2val:0x3f84fd3a;
op3val:0x7e1cf56f; valaddr_reg:x3; val_offset:927*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 927*FLEN/8, x4, x1, x2)

inst_310:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a5a48 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20ba50 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41d187 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a5a48; op2val:0x4020ba50;
op3val:0x7ec1d187; valaddr_reg:x3; val_offset:930*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 930*FLEN/8, x4, x1, x2)

inst_311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a5a48 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20ba50 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41d187 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a5a48; op2val:0x4020ba50;
op3val:0x7ec1d187; valaddr_reg:x3; val_offset:933*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 933*FLEN/8, x4, x1, x2)

inst_312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a5a48 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20ba50 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41d187 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a5a48; op2val:0x4020ba50;
op3val:0x7ec1d187; valaddr_reg:x3; val_offset:936*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 936*FLEN/8, x4, x1, x2)

inst_313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a5a48 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20ba50 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41d187 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a5a48; op2val:0x4020ba50;
op3val:0x7ec1d187; valaddr_reg:x3; val_offset:939*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 939*FLEN/8, x4, x1, x2)

inst_314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a5a48 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x20ba50 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41d187 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1a5a48; op2val:0x4020ba50;
op3val:0x7ec1d187; valaddr_reg:x3; val_offset:942*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 942*FLEN/8, x4, x1, x2)

inst_315:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x205482 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x47070a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x794c35 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e205482; op2val:0x3f47070a;
op3val:0x7df94c35; valaddr_reg:x3; val_offset:945*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 945*FLEN/8, x4, x1, x2)

inst_316:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x205482 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x47070a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x794c35 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e205482; op2val:0x3f47070a;
op3val:0x7df94c35; valaddr_reg:x3; val_offset:948*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 948*FLEN/8, x4, x1, x2)

inst_317:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x205482 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x47070a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x794c35 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e205482; op2val:0x3f47070a;
op3val:0x7df94c35; valaddr_reg:x3; val_offset:951*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 951*FLEN/8, x4, x1, x2)

inst_318:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x205482 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x47070a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x794c35 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e205482; op2val:0x3f47070a;
op3val:0x7df94c35; valaddr_reg:x3; val_offset:954*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 954*FLEN/8, x4, x1, x2)

inst_319:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x205482 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x47070a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x794c35 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e205482; op2val:0x3f47070a;
op3val:0x7df94c35; valaddr_reg:x3; val_offset:957*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 957*FLEN/8, x4, x1, x2)

inst_320:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28a4b8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0ace5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36e17b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e28a4b8; op2val:0x408ace5d;
op3val:0x7f36e17b; valaddr_reg:x3; val_offset:960*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 960*FLEN/8, x4, x1, x2)

inst_321:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28a4b8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0ace5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36e17b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e28a4b8; op2val:0x408ace5d;
op3val:0x7f36e17b; valaddr_reg:x3; val_offset:963*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 963*FLEN/8, x4, x1, x2)

inst_322:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28a4b8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0ace5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36e17b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e28a4b8; op2val:0x408ace5d;
op3val:0x7f36e17b; valaddr_reg:x3; val_offset:966*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 966*FLEN/8, x4, x1, x2)

inst_323:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28a4b8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0ace5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36e17b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e28a4b8; op2val:0x408ace5d;
op3val:0x7f36e17b; valaddr_reg:x3; val_offset:969*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 969*FLEN/8, x4, x1, x2)

inst_324:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28a4b8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0ace5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36e17b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e28a4b8; op2val:0x408ace5d;
op3val:0x7f36e17b; valaddr_reg:x3; val_offset:972*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 972*FLEN/8, x4, x1, x2)

inst_325:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2950a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03b4cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2e37b3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2950a7; op2val:0x3f83b4cc;
op3val:0x7e2e37b3; valaddr_reg:x3; val_offset:975*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 975*FLEN/8, x4, x1, x2)

inst_326:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2950a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03b4cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2e37b3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2950a7; op2val:0x3f83b4cc;
op3val:0x7e2e37b3; valaddr_reg:x3; val_offset:978*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 978*FLEN/8, x4, x1, x2)

inst_327:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2950a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03b4cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2e37b3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2950a7; op2val:0x3f83b4cc;
op3val:0x7e2e37b3; valaddr_reg:x3; val_offset:981*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 981*FLEN/8, x4, x1, x2)

inst_328:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2950a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03b4cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2e37b3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2950a7; op2val:0x3f83b4cc;
op3val:0x7e2e37b3; valaddr_reg:x3; val_offset:984*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 984*FLEN/8, x4, x1, x2)

inst_329:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2950a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03b4cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2e37b3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2950a7; op2val:0x3f83b4cc;
op3val:0x7e2e37b3; valaddr_reg:x3; val_offset:987*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 987*FLEN/8, x4, x1, x2)

inst_330:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e22cb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x121c20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46c5f4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2e22cb; op2val:0x40121c20;
op3val:0x7ec6c5f4; valaddr_reg:x3; val_offset:990*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 990*FLEN/8, x4, x1, x2)

inst_331:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e22cb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x121c20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46c5f4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2e22cb; op2val:0x40121c20;
op3val:0x7ec6c5f4; valaddr_reg:x3; val_offset:993*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 993*FLEN/8, x4, x1, x2)

inst_332:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e22cb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x121c20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46c5f4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2e22cb; op2val:0x40121c20;
op3val:0x7ec6c5f4; valaddr_reg:x3; val_offset:996*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 996*FLEN/8, x4, x1, x2)

inst_333:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e22cb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x121c20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46c5f4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2e22cb; op2val:0x40121c20;
op3val:0x7ec6c5f4; valaddr_reg:x3; val_offset:999*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 999*FLEN/8, x4, x1, x2)

inst_334:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e22cb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x121c20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46c5f4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2e22cb; op2val:0x40121c20;
op3val:0x7ec6c5f4; valaddr_reg:x3; val_offset:1002*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1002*FLEN/8, x4, x1, x2)

inst_335:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3333bd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05044b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a39c6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3333bd; op2val:0x4005044b;
op3val:0x7eba39c6; valaddr_reg:x3; val_offset:1005*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1005*FLEN/8, x4, x1, x2)

inst_336:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3333bd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05044b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a39c6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3333bd; op2val:0x4005044b;
op3val:0x7eba39c6; valaddr_reg:x3; val_offset:1008*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1008*FLEN/8, x4, x1, x2)

inst_337:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3333bd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05044b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a39c6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3333bd; op2val:0x4005044b;
op3val:0x7eba39c6; valaddr_reg:x3; val_offset:1011*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1011*FLEN/8, x4, x1, x2)

inst_338:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3333bd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05044b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a39c6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3333bd; op2val:0x4005044b;
op3val:0x7eba39c6; valaddr_reg:x3; val_offset:1014*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1014*FLEN/8, x4, x1, x2)

inst_339:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3333bd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05044b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a39c6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3333bd; op2val:0x4005044b;
op3val:0x7eba39c6; valaddr_reg:x3; val_offset:1017*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1017*FLEN/8, x4, x1, x2)

inst_340:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x38bbf7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1c0856 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x61311d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e38bbf7; op2val:0x401c0856;
op3val:0x7ee1311d; valaddr_reg:x3; val_offset:1020*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1020*FLEN/8, x4, x1, x2)

inst_341:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x38bbf7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1c0856 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x61311d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e38bbf7; op2val:0x401c0856;
op3val:0x7ee1311d; valaddr_reg:x3; val_offset:1023*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1023*FLEN/8, x4, x1, x2)

inst_342:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x38bbf7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1c0856 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x61311d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e38bbf7; op2val:0x401c0856;
op3val:0x7ee1311d; valaddr_reg:x3; val_offset:1026*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1026*FLEN/8, x4, x1, x2)

inst_343:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x38bbf7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1c0856 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x61311d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e38bbf7; op2val:0x401c0856;
op3val:0x7ee1311d; valaddr_reg:x3; val_offset:1029*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1029*FLEN/8, x4, x1, x2)

inst_344:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x38bbf7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1c0856 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x61311d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e38bbf7; op2val:0x401c0856;
op3val:0x7ee1311d; valaddr_reg:x3; val_offset:1032*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1032*FLEN/8, x4, x1, x2)

inst_345:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x169be3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3b7753; op2val:0x40169be3;
op3val:0x7edc9425; valaddr_reg:x3; val_offset:1035*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1035*FLEN/8, x4, x1, x2)

inst_346:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x169be3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3b7753; op2val:0x40169be3;
op3val:0x7edc9425; valaddr_reg:x3; val_offset:1038*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1038*FLEN/8, x4, x1, x2)

inst_347:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x169be3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3b7753; op2val:0x40169be3;
op3val:0x7edc9425; valaddr_reg:x3; val_offset:1041*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1041*FLEN/8, x4, x1, x2)

inst_348:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x169be3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3b7753; op2val:0x40169be3;
op3val:0x7edc9425; valaddr_reg:x3; val_offset:1044*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1044*FLEN/8, x4, x1, x2)

inst_349:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x169be3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3b7753; op2val:0x40169be3;
op3val:0x7edc9425; valaddr_reg:x3; val_offset:1047*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1047*FLEN/8, x4, x1, x2)

inst_350:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3bbc22 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7cd3b6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x396873 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3bbc22; op2val:0x407cd3b6;
op3val:0x7f396873; valaddr_reg:x3; val_offset:1050*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1050*FLEN/8, x4, x1, x2)

inst_351:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3bbc22 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7cd3b6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x396873 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3bbc22; op2val:0x407cd3b6;
op3val:0x7f396873; valaddr_reg:x3; val_offset:1053*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1053*FLEN/8, x4, x1, x2)

inst_352:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3bbc22 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7cd3b6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x396873 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3bbc22; op2val:0x407cd3b6;
op3val:0x7f396873; valaddr_reg:x3; val_offset:1056*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1056*FLEN/8, x4, x1, x2)

inst_353:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3bbc22 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7cd3b6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x396873 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3bbc22; op2val:0x407cd3b6;
op3val:0x7f396873; valaddr_reg:x3; val_offset:1059*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1059*FLEN/8, x4, x1, x2)

inst_354:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3bbc22 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7cd3b6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x396873 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3bbc22; op2val:0x407cd3b6;
op3val:0x7f396873; valaddr_reg:x3; val_offset:1062*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1062*FLEN/8, x4, x1, x2)

inst_355:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ed7f8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ea3ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x54ac1b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ed7f8; op2val:0x3f8ea3ff;
op3val:0x7e54ac1b; valaddr_reg:x3; val_offset:1065*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1065*FLEN/8, x4, x1, x2)

inst_356:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ed7f8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ea3ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x54ac1b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ed7f8; op2val:0x3f8ea3ff;
op3val:0x7e54ac1b; valaddr_reg:x3; val_offset:1068*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1068*FLEN/8, x4, x1, x2)

inst_357:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ed7f8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ea3ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x54ac1b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ed7f8; op2val:0x3f8ea3ff;
op3val:0x7e54ac1b; valaddr_reg:x3; val_offset:1071*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1071*FLEN/8, x4, x1, x2)

inst_358:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ed7f8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ea3ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x54ac1b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ed7f8; op2val:0x3f8ea3ff;
op3val:0x7e54ac1b; valaddr_reg:x3; val_offset:1074*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1074*FLEN/8, x4, x1, x2)

inst_359:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ed7f8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ea3ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x54ac1b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e3ed7f8; op2val:0x3f8ea3ff;
op3val:0x7e54ac1b; valaddr_reg:x3; val_offset:1077*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1077*FLEN/8, x4, x1, x2)

inst_360:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40583a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7afaf3 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x3c92b5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40583a; op2val:0x3d7afaf3;
op3val:0x7c3c92b5; valaddr_reg:x3; val_offset:1080*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1080*FLEN/8, x4, x1, x2)

inst_361:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40583a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7afaf3 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x3c92b5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40583a; op2val:0x3d7afaf3;
op3val:0x7c3c92b5; valaddr_reg:x3; val_offset:1083*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1083*FLEN/8, x4, x1, x2)

inst_362:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40583a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7afaf3 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x3c92b5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40583a; op2val:0x3d7afaf3;
op3val:0x7c3c92b5; valaddr_reg:x3; val_offset:1086*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1086*FLEN/8, x4, x1, x2)

inst_363:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40583a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7afaf3 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x3c92b5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40583a; op2val:0x3d7afaf3;
op3val:0x7c3c92b5; valaddr_reg:x3; val_offset:1089*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1089*FLEN/8, x4, x1, x2)

inst_364:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40583a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7afaf3 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x3c92b5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e40583a; op2val:0x3d7afaf3;
op3val:0x7c3c92b5; valaddr_reg:x3; val_offset:1092*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1092*FLEN/8, x4, x1, x2)

inst_365:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4168bc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14e7f4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x60ff95 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4168bc; op2val:0x3f94e7f4;
op3val:0x7e60ff95; valaddr_reg:x3; val_offset:1095*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1095*FLEN/8, x4, x1, x2)

inst_366:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4168bc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14e7f4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x60ff95 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4168bc; op2val:0x3f94e7f4;
op3val:0x7e60ff95; valaddr_reg:x3; val_offset:1098*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1098*FLEN/8, x4, x1, x2)

inst_367:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4168bc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14e7f4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x60ff95 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4168bc; op2val:0x3f94e7f4;
op3val:0x7e60ff95; valaddr_reg:x3; val_offset:1101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1101*FLEN/8, x4, x1, x2)

inst_368:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4168bc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14e7f4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x60ff95 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4168bc; op2val:0x3f94e7f4;
op3val:0x7e60ff95; valaddr_reg:x3; val_offset:1104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1104*FLEN/8, x4, x1, x2)

inst_369:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4168bc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14e7f4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x60ff95 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4168bc; op2val:0x3f94e7f4;
op3val:0x7e60ff95; valaddr_reg:x3; val_offset:1107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1107*FLEN/8, x4, x1, x2)

inst_370:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41bbe4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x304583 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0565c7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41bbe4; op2val:0x3fb04583;
op3val:0x7e8565c7; valaddr_reg:x3; val_offset:1110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1110*FLEN/8, x4, x1, x2)

inst_371:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41bbe4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x304583 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0565c7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41bbe4; op2val:0x3fb04583;
op3val:0x7e8565c7; valaddr_reg:x3; val_offset:1113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1113*FLEN/8, x4, x1, x2)

inst_372:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41bbe4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x304583 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0565c7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41bbe4; op2val:0x3fb04583;
op3val:0x7e8565c7; valaddr_reg:x3; val_offset:1116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1116*FLEN/8, x4, x1, x2)

inst_373:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41bbe4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x304583 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0565c7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41bbe4; op2val:0x3fb04583;
op3val:0x7e8565c7; valaddr_reg:x3; val_offset:1119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1119*FLEN/8, x4, x1, x2)

inst_374:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41bbe4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x304583 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0565c7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e41bbe4; op2val:0x3fb04583;
op3val:0x7e8565c7; valaddr_reg:x3; val_offset:1122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1122*FLEN/8, x4, x1, x2)

inst_375:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x444bcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x238183 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7abf24 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e444bcc; op2val:0x3f238183;
op3val:0x7dfabf24; valaddr_reg:x3; val_offset:1125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1125*FLEN/8, x4, x1, x2)

inst_376:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x444bcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x238183 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7abf24 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e444bcc; op2val:0x3f238183;
op3val:0x7dfabf24; valaddr_reg:x3; val_offset:1128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1128*FLEN/8, x4, x1, x2)

inst_377:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x444bcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x238183 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7abf24 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e444bcc; op2val:0x3f238183;
op3val:0x7dfabf24; valaddr_reg:x3; val_offset:1131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1131*FLEN/8, x4, x1, x2)

inst_378:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x444bcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x238183 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7abf24 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e444bcc; op2val:0x3f238183;
op3val:0x7dfabf24; valaddr_reg:x3; val_offset:1134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1134*FLEN/8, x4, x1, x2)

inst_379:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x444bcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x238183 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7abf24 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e444bcc; op2val:0x3f238183;
op3val:0x7dfabf24; valaddr_reg:x3; val_offset:1137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1137*FLEN/8, x4, x1, x2)

inst_380:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x470bc0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b028e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04f6d6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e470bc0; op2val:0x402b028e;
op3val:0x7f04f6d6; valaddr_reg:x3; val_offset:1140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1140*FLEN/8, x4, x1, x2)

inst_381:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x470bc0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b028e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04f6d6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e470bc0; op2val:0x402b028e;
op3val:0x7f04f6d6; valaddr_reg:x3; val_offset:1143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1143*FLEN/8, x4, x1, x2)

inst_382:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x470bc0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b028e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04f6d6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e470bc0; op2val:0x402b028e;
op3val:0x7f04f6d6; valaddr_reg:x3; val_offset:1146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1146*FLEN/8, x4, x1, x2)

inst_383:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x470bc0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b028e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04f6d6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e470bc0; op2val:0x402b028e;
op3val:0x7f04f6d6; valaddr_reg:x3; val_offset:1149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1149*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_384:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x470bc0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b028e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04f6d6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e470bc0; op2val:0x402b028e;
op3val:0x7f04f6d6; valaddr_reg:x3; val_offset:1152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1152*FLEN/8, x4, x1, x2)

inst_385:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x473131 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ec9ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e69b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e473131; op2val:0x3fcec9ce;
op3val:0x7ea0e69b; valaddr_reg:x3; val_offset:1155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1155*FLEN/8, x4, x1, x2)

inst_386:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x473131 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ec9ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e69b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e473131; op2val:0x3fcec9ce;
op3val:0x7ea0e69b; valaddr_reg:x3; val_offset:1158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1158*FLEN/8, x4, x1, x2)

inst_387:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x473131 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ec9ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e69b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e473131; op2val:0x3fcec9ce;
op3val:0x7ea0e69b; valaddr_reg:x3; val_offset:1161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1161*FLEN/8, x4, x1, x2)

inst_388:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x473131 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ec9ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e69b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e473131; op2val:0x3fcec9ce;
op3val:0x7ea0e69b; valaddr_reg:x3; val_offset:1164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1164*FLEN/8, x4, x1, x2)

inst_389:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x473131 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ec9ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e69b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e473131; op2val:0x3fcec9ce;
op3val:0x7ea0e69b; valaddr_reg:x3; val_offset:1167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1167*FLEN/8, x4, x1, x2)

inst_390:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x488955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33c213 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cd00e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e488955; op2val:0x3fb3c213;
op3val:0x7e8cd00e; valaddr_reg:x3; val_offset:1170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1170*FLEN/8, x4, x1, x2)

inst_391:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x488955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33c213 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cd00e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e488955; op2val:0x3fb3c213;
op3val:0x7e8cd00e; valaddr_reg:x3; val_offset:1173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1173*FLEN/8, x4, x1, x2)

inst_392:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x488955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33c213 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cd00e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e488955; op2val:0x3fb3c213;
op3val:0x7e8cd00e; valaddr_reg:x3; val_offset:1176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1176*FLEN/8, x4, x1, x2)

inst_393:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x488955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33c213 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cd00e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e488955; op2val:0x3fb3c213;
op3val:0x7e8cd00e; valaddr_reg:x3; val_offset:1179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1179*FLEN/8, x4, x1, x2)

inst_394:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x488955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33c213 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cd00e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e488955; op2val:0x3fb3c213;
op3val:0x7e8cd00e; valaddr_reg:x3; val_offset:1182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1182*FLEN/8, x4, x1, x2)

inst_395:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2bb0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x69d4af and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38a9ba and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4a2bb0; op2val:0x4069d4af;
op3val:0x7f38a9ba; valaddr_reg:x3; val_offset:1185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1185*FLEN/8, x4, x1, x2)

inst_396:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2bb0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x69d4af and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38a9ba and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4a2bb0; op2val:0x4069d4af;
op3val:0x7f38a9ba; valaddr_reg:x3; val_offset:1188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1188*FLEN/8, x4, x1, x2)

inst_397:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2bb0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x69d4af and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38a9ba and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4a2bb0; op2val:0x4069d4af;
op3val:0x7f38a9ba; valaddr_reg:x3; val_offset:1191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1191*FLEN/8, x4, x1, x2)

inst_398:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2bb0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x69d4af and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38a9ba and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4a2bb0; op2val:0x4069d4af;
op3val:0x7f38a9ba; valaddr_reg:x3; val_offset:1194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1194*FLEN/8, x4, x1, x2)

inst_399:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2bb0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x69d4af and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38a9ba and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4a2bb0; op2val:0x4069d4af;
op3val:0x7f38a9ba; valaddr_reg:x3; val_offset:1197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1197*FLEN/8, x4, x1, x2)

inst_400:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4db75d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7701a9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x467d41 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4db75d; op2val:0x3ef701a9;
op3val:0x7dc67d41; valaddr_reg:x3; val_offset:1200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1200*FLEN/8, x4, x1, x2)

inst_401:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4db75d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7701a9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x467d41 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4db75d; op2val:0x3ef701a9;
op3val:0x7dc67d41; valaddr_reg:x3; val_offset:1203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1203*FLEN/8, x4, x1, x2)

inst_402:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4db75d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7701a9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x467d41 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4db75d; op2val:0x3ef701a9;
op3val:0x7dc67d41; valaddr_reg:x3; val_offset:1206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1206*FLEN/8, x4, x1, x2)

inst_403:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4db75d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7701a9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x467d41 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4db75d; op2val:0x3ef701a9;
op3val:0x7dc67d41; valaddr_reg:x3; val_offset:1209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1209*FLEN/8, x4, x1, x2)

inst_404:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4db75d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7701a9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x467d41 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4db75d; op2val:0x3ef701a9;
op3val:0x7dc67d41; valaddr_reg:x3; val_offset:1212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1212*FLEN/8, x4, x1, x2)

inst_405:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4fb3dd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x75453e and fs3 == 0 and fe3 == 0xfb and fm3 == 0x46ff51 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4fb3dd; op2val:0x3ef5453e;
op3val:0x7dc6ff51; valaddr_reg:x3; val_offset:1215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1215*FLEN/8, x4, x1, x2)

inst_406:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4fb3dd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x75453e and fs3 == 0 and fe3 == 0xfb and fm3 == 0x46ff51 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4fb3dd; op2val:0x3ef5453e;
op3val:0x7dc6ff51; valaddr_reg:x3; val_offset:1218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1218*FLEN/8, x4, x1, x2)

inst_407:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4fb3dd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x75453e and fs3 == 0 and fe3 == 0xfb and fm3 == 0x46ff51 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4fb3dd; op2val:0x3ef5453e;
op3val:0x7dc6ff51; valaddr_reg:x3; val_offset:1221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1221*FLEN/8, x4, x1, x2)

inst_408:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4fb3dd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x75453e and fs3 == 0 and fe3 == 0xfb and fm3 == 0x46ff51 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4fb3dd; op2val:0x3ef5453e;
op3val:0x7dc6ff51; valaddr_reg:x3; val_offset:1224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1224*FLEN/8, x4, x1, x2)

inst_409:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4fb3dd and fs2 == 0 and fe2 == 0x7d and fm2 == 0x75453e and fs3 == 0 and fe3 == 0xfb and fm3 == 0x46ff51 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e4fb3dd; op2val:0x3ef5453e;
op3val:0x7dc6ff51; valaddr_reg:x3; val_offset:1227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1227*FLEN/8, x4, x1, x2)

inst_410:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55d3ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3eed2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f794e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e55d3ce; op2val:0x3fbeed2d;
op3val:0x7e9f794e; valaddr_reg:x3; val_offset:1230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1230*FLEN/8, x4, x1, x2)

inst_411:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55d3ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3eed2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f794e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e55d3ce; op2val:0x3fbeed2d;
op3val:0x7e9f794e; valaddr_reg:x3; val_offset:1233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1233*FLEN/8, x4, x1, x2)

inst_412:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55d3ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3eed2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f794e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e55d3ce; op2val:0x3fbeed2d;
op3val:0x7e9f794e; valaddr_reg:x3; val_offset:1236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1236*FLEN/8, x4, x1, x2)

inst_413:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55d3ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3eed2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f794e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e55d3ce; op2val:0x3fbeed2d;
op3val:0x7e9f794e; valaddr_reg:x3; val_offset:1239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1239*FLEN/8, x4, x1, x2)

inst_414:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55d3ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3eed2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f794e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e55d3ce; op2val:0x3fbeed2d;
op3val:0x7e9f794e; valaddr_reg:x3; val_offset:1242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1242*FLEN/8, x4, x1, x2)

inst_415:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x588656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5beeeb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3a04ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e588656; op2val:0x3f5beeeb;
op3val:0x7e3a04ff; valaddr_reg:x3; val_offset:1245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1245*FLEN/8, x4, x1, x2)

inst_416:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x588656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5beeeb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3a04ff and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e588656; op2val:0x3f5beeeb;
op3val:0x7e3a04ff; valaddr_reg:x3; val_offset:1248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1248*FLEN/8, x4, x1, x2)

inst_417:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x588656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5beeeb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3a04ff and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e588656; op2val:0x3f5beeeb;
op3val:0x7e3a04ff; valaddr_reg:x3; val_offset:1251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1251*FLEN/8, x4, x1, x2)

inst_418:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x588656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5beeeb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3a04ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e588656; op2val:0x3f5beeeb;
op3val:0x7e3a04ff; valaddr_reg:x3; val_offset:1254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1254*FLEN/8, x4, x1, x2)

inst_419:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x588656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5beeeb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3a04ff and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e588656; op2val:0x3f5beeeb;
op3val:0x7e3a04ff; valaddr_reg:x3; val_offset:1257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1257*FLEN/8, x4, x1, x2)

inst_420:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6111a4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48ad34 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x306e0f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6111a4; op2val:0x3fc8ad34;
op3val:0x7eb06e0f; valaddr_reg:x3; val_offset:1260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1260*FLEN/8, x4, x1, x2)

inst_421:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6111a4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48ad34 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x306e0f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6111a4; op2val:0x3fc8ad34;
op3val:0x7eb06e0f; valaddr_reg:x3; val_offset:1263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1263*FLEN/8, x4, x1, x2)

inst_422:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6111a4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48ad34 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x306e0f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6111a4; op2val:0x3fc8ad34;
op3val:0x7eb06e0f; valaddr_reg:x3; val_offset:1266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1266*FLEN/8, x4, x1, x2)

inst_423:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6111a4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48ad34 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x306e0f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6111a4; op2val:0x3fc8ad34;
op3val:0x7eb06e0f; valaddr_reg:x3; val_offset:1269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1269*FLEN/8, x4, x1, x2)

inst_424:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6111a4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48ad34 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x306e0f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6111a4; op2val:0x3fc8ad34;
op3val:0x7eb06e0f; valaddr_reg:x3; val_offset:1272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1272*FLEN/8, x4, x1, x2)

inst_425:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x69a8e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43e47f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32cc38 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e69a8e9; op2val:0x3f43e47f;
op3val:0x7e32cc38; valaddr_reg:x3; val_offset:1275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1275*FLEN/8, x4, x1, x2)

inst_426:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x69a8e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43e47f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32cc38 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e69a8e9; op2val:0x3f43e47f;
op3val:0x7e32cc38; valaddr_reg:x3; val_offset:1278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1278*FLEN/8, x4, x1, x2)

inst_427:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x69a8e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43e47f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32cc38 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e69a8e9; op2val:0x3f43e47f;
op3val:0x7e32cc38; valaddr_reg:x3; val_offset:1281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1281*FLEN/8, x4, x1, x2)

inst_428:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x69a8e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43e47f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32cc38 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e69a8e9; op2val:0x3f43e47f;
op3val:0x7e32cc38; valaddr_reg:x3; val_offset:1284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1284*FLEN/8, x4, x1, x2)

inst_429:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x69a8e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43e47f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32cc38 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e69a8e9; op2val:0x3f43e47f;
op3val:0x7e32cc38; valaddr_reg:x3; val_offset:1287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1287*FLEN/8, x4, x1, x2)

inst_430:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2951df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ce9fd; op2val:0x402951df;
op3val:0x7f1cb23d; valaddr_reg:x3; val_offset:1290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1290*FLEN/8, x4, x1, x2)

inst_431:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2951df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ce9fd; op2val:0x402951df;
op3val:0x7f1cb23d; valaddr_reg:x3; val_offset:1293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1293*FLEN/8, x4, x1, x2)

inst_432:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2951df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ce9fd; op2val:0x402951df;
op3val:0x7f1cb23d; valaddr_reg:x3; val_offset:1296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1296*FLEN/8, x4, x1, x2)

inst_433:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2951df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ce9fd; op2val:0x402951df;
op3val:0x7f1cb23d; valaddr_reg:x3; val_offset:1299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1299*FLEN/8, x4, x1, x2)

inst_434:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2951df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6ce9fd; op2val:0x402951df;
op3val:0x7f1cb23d; valaddr_reg:x3; val_offset:1302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1302*FLEN/8, x4, x1, x2)

inst_435:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dbb98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x13731e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x08ed9f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6dbb98; op2val:0x3f93731e;
op3val:0x7e88ed9f; valaddr_reg:x3; val_offset:1305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1305*FLEN/8, x4, x1, x2)

inst_436:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dbb98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x13731e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x08ed9f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6dbb98; op2val:0x3f93731e;
op3val:0x7e88ed9f; valaddr_reg:x3; val_offset:1308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1308*FLEN/8, x4, x1, x2)

inst_437:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dbb98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x13731e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x08ed9f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6dbb98; op2val:0x3f93731e;
op3val:0x7e88ed9f; valaddr_reg:x3; val_offset:1311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1311*FLEN/8, x4, x1, x2)

inst_438:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dbb98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x13731e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x08ed9f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6dbb98; op2val:0x3f93731e;
op3val:0x7e88ed9f; valaddr_reg:x3; val_offset:1314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1314*FLEN/8, x4, x1, x2)

inst_439:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dbb98 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x13731e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x08ed9f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6dbb98; op2val:0x3f93731e;
op3val:0x7e88ed9f; valaddr_reg:x3; val_offset:1317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1317*FLEN/8, x4, x1, x2)

inst_440:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6f9c33 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a4455 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6a3e7f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6f9c33; op2val:0x3f7a4455;
op3val:0x7e6a3e7f; valaddr_reg:x3; val_offset:1320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1320*FLEN/8, x4, x1, x2)

inst_441:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6f9c33 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a4455 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6a3e7f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6f9c33; op2val:0x3f7a4455;
op3val:0x7e6a3e7f; valaddr_reg:x3; val_offset:1323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1323*FLEN/8, x4, x1, x2)

inst_442:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6f9c33 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a4455 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6a3e7f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6f9c33; op2val:0x3f7a4455;
op3val:0x7e6a3e7f; valaddr_reg:x3; val_offset:1326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1326*FLEN/8, x4, x1, x2)

inst_443:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6f9c33 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a4455 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6a3e7f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6f9c33; op2val:0x3f7a4455;
op3val:0x7e6a3e7f; valaddr_reg:x3; val_offset:1329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1329*FLEN/8, x4, x1, x2)

inst_444:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6f9c33 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a4455 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6a3e7f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e6f9c33; op2val:0x3f7a4455;
op3val:0x7e6a3e7f; valaddr_reg:x3; val_offset:1332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1332*FLEN/8, x4, x1, x2)

inst_445:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6e96ab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7143d8; op2val:0x3fee96ab;
op3val:0x7ee0db12; valaddr_reg:x3; val_offset:1335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1335*FLEN/8, x4, x1, x2)

inst_446:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6e96ab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7143d8; op2val:0x3fee96ab;
op3val:0x7ee0db12; valaddr_reg:x3; val_offset:1338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1338*FLEN/8, x4, x1, x2)

inst_447:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6e96ab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7143d8; op2val:0x3fee96ab;
op3val:0x7ee0db12; valaddr_reg:x3; val_offset:1341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1341*FLEN/8, x4, x1, x2)

inst_448:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6e96ab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7143d8; op2val:0x3fee96ab;
op3val:0x7ee0db12; valaddr_reg:x3; val_offset:1344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1344*FLEN/8, x4, x1, x2)

inst_449:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6e96ab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7143d8; op2val:0x3fee96ab;
op3val:0x7ee0db12; valaddr_reg:x3; val_offset:1347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1347*FLEN/8, x4, x1, x2)

inst_450:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e8086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e78b41c; op2val:0x3eee8086;
op3val:0x7de7b44e; valaddr_reg:x3; val_offset:1350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1350*FLEN/8, x4, x1, x2)

inst_451:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e8086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e78b41c; op2val:0x3eee8086;
op3val:0x7de7b44e; valaddr_reg:x3; val_offset:1353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1353*FLEN/8, x4, x1, x2)

inst_452:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e8086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e78b41c; op2val:0x3eee8086;
op3val:0x7de7b44e; valaddr_reg:x3; val_offset:1356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1356*FLEN/8, x4, x1, x2)

inst_453:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e8086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e78b41c; op2val:0x3eee8086;
op3val:0x7de7b44e; valaddr_reg:x3; val_offset:1359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1359*FLEN/8, x4, x1, x2)

inst_454:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e8086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e78b41c; op2val:0x3eee8086;
op3val:0x7de7b44e; valaddr_reg:x3; val_offset:1362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1362*FLEN/8, x4, x1, x2)

inst_455:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7a5ab2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4b88d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x470bbf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7a5ab2; op2val:0x3fcb88d9;
op3val:0x7ec70bbf; valaddr_reg:x3; val_offset:1365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1365*FLEN/8, x4, x1, x2)

inst_456:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7a5ab2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4b88d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x470bbf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7a5ab2; op2val:0x3fcb88d9;
op3val:0x7ec70bbf; valaddr_reg:x3; val_offset:1368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1368*FLEN/8, x4, x1, x2)

inst_457:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7a5ab2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4b88d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x470bbf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7a5ab2; op2val:0x3fcb88d9;
op3val:0x7ec70bbf; valaddr_reg:x3; val_offset:1371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1371*FLEN/8, x4, x1, x2)

inst_458:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7a5ab2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4b88d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x470bbf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7a5ab2; op2val:0x3fcb88d9;
op3val:0x7ec70bbf; valaddr_reg:x3; val_offset:1374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1374*FLEN/8, x4, x1, x2)

inst_459:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7a5ab2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4b88d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x470bbf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7a5ab2; op2val:0x3fcb88d9;
op3val:0x7ec70bbf; valaddr_reg:x3; val_offset:1377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1377*FLEN/8, x4, x1, x2)

inst_460:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7d2ec5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d33bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b4bc6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7d2ec5; op2val:0x3f2d33bc;
op3val:0x7e2b4bc6; valaddr_reg:x3; val_offset:1380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1380*FLEN/8, x4, x1, x2)

inst_461:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7d2ec5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d33bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b4bc6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7d2ec5; op2val:0x3f2d33bc;
op3val:0x7e2b4bc6; valaddr_reg:x3; val_offset:1383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1383*FLEN/8, x4, x1, x2)

inst_462:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7d2ec5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d33bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b4bc6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7d2ec5; op2val:0x3f2d33bc;
op3val:0x7e2b4bc6; valaddr_reg:x3; val_offset:1386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1386*FLEN/8, x4, x1, x2)

inst_463:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7d2ec5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d33bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b4bc6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7d2ec5; op2val:0x3f2d33bc;
op3val:0x7e2b4bc6; valaddr_reg:x3; val_offset:1389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1389*FLEN/8, x4, x1, x2)

inst_464:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7d2ec5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d33bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b4bc6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7d2ec5; op2val:0x3f2d33bc;
op3val:0x7e2b4bc6; valaddr_reg:x3; val_offset:1392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1392*FLEN/8, x4, x1, x2)

inst_465:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f5f89 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a22b0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19c214 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7f5f89; op2val:0x401a22b0;
op3val:0x7f19c214; valaddr_reg:x3; val_offset:1395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1395*FLEN/8, x4, x1, x2)

inst_466:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f5f89 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a22b0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19c214 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7f5f89; op2val:0x401a22b0;
op3val:0x7f19c214; valaddr_reg:x3; val_offset:1398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1398*FLEN/8, x4, x1, x2)

inst_467:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f5f89 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a22b0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19c214 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7f5f89; op2val:0x401a22b0;
op3val:0x7f19c214; valaddr_reg:x3; val_offset:1401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1401*FLEN/8, x4, x1, x2)

inst_468:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f5f89 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a22b0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19c214 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7f5f89; op2val:0x401a22b0;
op3val:0x7f19c214; valaddr_reg:x3; val_offset:1404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1404*FLEN/8, x4, x1, x2)

inst_469:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f5f89 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a22b0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19c214 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e7f5f89; op2val:0x401a22b0;
op3val:0x7f19c214; valaddr_reg:x3; val_offset:1407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1407*FLEN/8, x4, x1, x2)

inst_470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0294a2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1e5203 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x218322 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8294a2; op2val:0x3e1e5203;
op3val:0x7d218322; valaddr_reg:x3; val_offset:1410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1410*FLEN/8, x4, x1, x2)

inst_471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0294a2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1e5203 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x218322 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8294a2; op2val:0x3e1e5203;
op3val:0x7d218322; valaddr_reg:x3; val_offset:1413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1413*FLEN/8, x4, x1, x2)

inst_472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0294a2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1e5203 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x218322 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8294a2; op2val:0x3e1e5203;
op3val:0x7d218322; valaddr_reg:x3; val_offset:1416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1416*FLEN/8, x4, x1, x2)

inst_473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0294a2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1e5203 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x218322 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8294a2; op2val:0x3e1e5203;
op3val:0x7d218322; valaddr_reg:x3; val_offset:1419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1419*FLEN/8, x4, x1, x2)

inst_474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0294a2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1e5203 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x218322 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8294a2; op2val:0x3e1e5203;
op3val:0x7d218322; valaddr_reg:x3; val_offset:1422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1422*FLEN/8, x4, x1, x2)

inst_475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x039278 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45d015 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4b5552 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e839278; op2val:0x3f45d015;
op3val:0x7e4b5552; valaddr_reg:x3; val_offset:1425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1425*FLEN/8, x4, x1, x2)

inst_476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x039278 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45d015 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4b5552 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e839278; op2val:0x3f45d015;
op3val:0x7e4b5552; valaddr_reg:x3; val_offset:1428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1428*FLEN/8, x4, x1, x2)

inst_477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x039278 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45d015 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4b5552 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e839278; op2val:0x3f45d015;
op3val:0x7e4b5552; valaddr_reg:x3; val_offset:1431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1431*FLEN/8, x4, x1, x2)

inst_478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x039278 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45d015 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4b5552 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e839278; op2val:0x3f45d015;
op3val:0x7e4b5552; valaddr_reg:x3; val_offset:1434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1434*FLEN/8, x4, x1, x2)

inst_479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x039278 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45d015 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4b5552 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e839278; op2val:0x3f45d015;
op3val:0x7e4b5552; valaddr_reg:x3; val_offset:1437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1437*FLEN/8, x4, x1, x2)

inst_480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03993b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6de6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fcc8b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83993b; op2val:0x401b6de6;
op3val:0x7f1fcc8b; valaddr_reg:x3; val_offset:1440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1440*FLEN/8, x4, x1, x2)

inst_481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03993b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6de6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fcc8b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83993b; op2val:0x401b6de6;
op3val:0x7f1fcc8b; valaddr_reg:x3; val_offset:1443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1443*FLEN/8, x4, x1, x2)

inst_482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03993b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6de6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fcc8b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83993b; op2val:0x401b6de6;
op3val:0x7f1fcc8b; valaddr_reg:x3; val_offset:1446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1446*FLEN/8, x4, x1, x2)

inst_483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03993b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6de6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fcc8b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83993b; op2val:0x401b6de6;
op3val:0x7f1fcc8b; valaddr_reg:x3; val_offset:1449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1449*FLEN/8, x4, x1, x2)

inst_484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03993b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b6de6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fcc8b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e83993b; op2val:0x401b6de6;
op3val:0x7f1fcc8b; valaddr_reg:x3; val_offset:1452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1452*FLEN/8, x4, x1, x2)

inst_485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x053f96 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5665b6 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x5f3031 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e853f96; op2val:0x3d5665b6;
op3val:0x7c5f3031; valaddr_reg:x3; val_offset:1455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1455*FLEN/8, x4, x1, x2)

inst_486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x053f96 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5665b6 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x5f3031 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e853f96; op2val:0x3d5665b6;
op3val:0x7c5f3031; valaddr_reg:x3; val_offset:1458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1458*FLEN/8, x4, x1, x2)

inst_487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x053f96 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5665b6 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x5f3031 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e853f96; op2val:0x3d5665b6;
op3val:0x7c5f3031; valaddr_reg:x3; val_offset:1461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1461*FLEN/8, x4, x1, x2)

inst_488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x053f96 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5665b6 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x5f3031 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e853f96; op2val:0x3d5665b6;
op3val:0x7c5f3031; valaddr_reg:x3; val_offset:1464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1464*FLEN/8, x4, x1, x2)

inst_489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x053f96 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5665b6 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x5f3031 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e853f96; op2val:0x3d5665b6;
op3val:0x7c5f3031; valaddr_reg:x3; val_offset:1467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1467*FLEN/8, x4, x1, x2)

inst_490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x068e75 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x486b61 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52af79 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e868e75; op2val:0x3fc86b61;
op3val:0x7ed2af79; valaddr_reg:x3; val_offset:1470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1470*FLEN/8, x4, x1, x2)

inst_491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x068e75 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x486b61 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52af79 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e868e75; op2val:0x3fc86b61;
op3val:0x7ed2af79; valaddr_reg:x3; val_offset:1473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1473*FLEN/8, x4, x1, x2)

inst_492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x068e75 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x486b61 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52af79 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e868e75; op2val:0x3fc86b61;
op3val:0x7ed2af79; valaddr_reg:x3; val_offset:1476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1476*FLEN/8, x4, x1, x2)

inst_493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x068e75 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x486b61 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52af79 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e868e75; op2val:0x3fc86b61;
op3val:0x7ed2af79; valaddr_reg:x3; val_offset:1479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1479*FLEN/8, x4, x1, x2)

inst_494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x068e75 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x486b61 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52af79 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e868e75; op2val:0x3fc86b61;
op3val:0x7ed2af79; valaddr_reg:x3; val_offset:1482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1482*FLEN/8, x4, x1, x2)

inst_495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07da62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25c38c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fef0e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e87da62; op2val:0x3fa5c38c;
op3val:0x7eafef0e; valaddr_reg:x3; val_offset:1485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1485*FLEN/8, x4, x1, x2)

inst_496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07da62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25c38c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fef0e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e87da62; op2val:0x3fa5c38c;
op3val:0x7eafef0e; valaddr_reg:x3; val_offset:1488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1488*FLEN/8, x4, x1, x2)

inst_497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07da62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25c38c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fef0e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e87da62; op2val:0x3fa5c38c;
op3val:0x7eafef0e; valaddr_reg:x3; val_offset:1491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1491*FLEN/8, x4, x1, x2)

inst_498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07da62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25c38c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fef0e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e87da62; op2val:0x3fa5c38c;
op3val:0x7eafef0e; valaddr_reg:x3; val_offset:1494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1494*FLEN/8, x4, x1, x2)

inst_499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07da62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25c38c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fef0e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e87da62; op2val:0x3fa5c38c;
op3val:0x7eafef0e; valaddr_reg:x3; val_offset:1497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1497*FLEN/8, x4, x1, x2)

inst_500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x088938 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x26ec21 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x320dd5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e888938; op2val:0x3da6ec21;
op3val:0x7cb20dd5; valaddr_reg:x3; val_offset:1500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1500*FLEN/8, x4, x1, x2)

inst_501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x088938 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x26ec21 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x320dd5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e888938; op2val:0x3da6ec21;
op3val:0x7cb20dd5; valaddr_reg:x3; val_offset:1503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1503*FLEN/8, x4, x1, x2)

inst_502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x088938 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x26ec21 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x320dd5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e888938; op2val:0x3da6ec21;
op3val:0x7cb20dd5; valaddr_reg:x3; val_offset:1506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1506*FLEN/8, x4, x1, x2)

inst_503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x088938 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x26ec21 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x320dd5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e888938; op2val:0x3da6ec21;
op3val:0x7cb20dd5; valaddr_reg:x3; val_offset:1509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1509*FLEN/8, x4, x1, x2)

inst_504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x088938 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x26ec21 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x320dd5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e888938; op2val:0x3da6ec21;
op3val:0x7cb20dd5; valaddr_reg:x3; val_offset:1512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1512*FLEN/8, x4, x1, x2)

inst_505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09c4a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1dba6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29c3d8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e89c4a3; op2val:0x401dba6d;
op3val:0x7f29c3d8; valaddr_reg:x3; val_offset:1515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1515*FLEN/8, x4, x1, x2)

inst_506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09c4a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1dba6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29c3d8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e89c4a3; op2val:0x401dba6d;
op3val:0x7f29c3d8; valaddr_reg:x3; val_offset:1518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1518*FLEN/8, x4, x1, x2)

inst_507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09c4a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1dba6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29c3d8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e89c4a3; op2val:0x401dba6d;
op3val:0x7f29c3d8; valaddr_reg:x3; val_offset:1521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1521*FLEN/8, x4, x1, x2)

inst_508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09c4a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1dba6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29c3d8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e89c4a3; op2val:0x401dba6d;
op3val:0x7f29c3d8; valaddr_reg:x3; val_offset:1524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1524*FLEN/8, x4, x1, x2)

inst_509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09c4a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1dba6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29c3d8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e89c4a3; op2val:0x401dba6d;
op3val:0x7f29c3d8; valaddr_reg:x3; val_offset:1527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1527*FLEN/8, x4, x1, x2)

inst_510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd6b8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb626 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3caf87 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8bd6b8; op2val:0x3eacb626;
op3val:0x7dbcaf87; valaddr_reg:x3; val_offset:1530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1530*FLEN/8, x4, x1, x2)

inst_511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd6b8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb626 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3caf87 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8bd6b8; op2val:0x3eacb626;
op3val:0x7dbcaf87; valaddr_reg:x3; val_offset:1533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1533*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd6b8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb626 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3caf87 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8bd6b8; op2val:0x3eacb626;
op3val:0x7dbcaf87; valaddr_reg:x3; val_offset:1536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1536*FLEN/8, x4, x1, x2)

inst_513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd6b8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb626 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3caf87 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8bd6b8; op2val:0x3eacb626;
op3val:0x7dbcaf87; valaddr_reg:x3; val_offset:1539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1539*FLEN/8, x4, x1, x2)

inst_514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd6b8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb626 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3caf87 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8bd6b8; op2val:0x3eacb626;
op3val:0x7dbcaf87; valaddr_reg:x3; val_offset:1542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1542*FLEN/8, x4, x1, x2)

inst_515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4451ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x59799a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8dcb1a; op2val:0x3fc451ca;
op3val:0x7ed9799a; valaddr_reg:x3; val_offset:1545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1545*FLEN/8, x4, x1, x2)

inst_516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4451ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x59799a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8dcb1a; op2val:0x3fc451ca;
op3val:0x7ed9799a; valaddr_reg:x3; val_offset:1548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1548*FLEN/8, x4, x1, x2)

inst_517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4451ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x59799a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8dcb1a; op2val:0x3fc451ca;
op3val:0x7ed9799a; valaddr_reg:x3; val_offset:1551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1551*FLEN/8, x4, x1, x2)

inst_518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4451ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x59799a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8dcb1a; op2val:0x3fc451ca;
op3val:0x7ed9799a; valaddr_reg:x3; val_offset:1554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1554*FLEN/8, x4, x1, x2)

inst_519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4451ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x59799a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e8dcb1a; op2val:0x3fc451ca;
op3val:0x7ed9799a; valaddr_reg:x3; val_offset:1557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1557*FLEN/8, x4, x1, x2)

inst_520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1424d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5dd969 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00619d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9424d7; op2val:0x3fddd969;
op3val:0x7f00619d; valaddr_reg:x3; val_offset:1560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1560*FLEN/8, x4, x1, x2)

inst_521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1424d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5dd969 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00619d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9424d7; op2val:0x3fddd969;
op3val:0x7f00619d; valaddr_reg:x3; val_offset:1563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1563*FLEN/8, x4, x1, x2)

inst_522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1424d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5dd969 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00619d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9424d7; op2val:0x3fddd969;
op3val:0x7f00619d; valaddr_reg:x3; val_offset:1566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1566*FLEN/8, x4, x1, x2)

inst_523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1424d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5dd969 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00619d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9424d7; op2val:0x3fddd969;
op3val:0x7f00619d; valaddr_reg:x3; val_offset:1569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1569*FLEN/8, x4, x1, x2)

inst_524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1424d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5dd969 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00619d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9424d7; op2val:0x3fddd969;
op3val:0x7f00619d; valaddr_reg:x3; val_offset:1572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1572*FLEN/8, x4, x1, x2)

inst_525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x159306 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56580c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7a78b2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e959306; op2val:0x3f56580c;
op3val:0x7e7a78b2; valaddr_reg:x3; val_offset:1575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1575*FLEN/8, x4, x1, x2)

inst_526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x159306 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56580c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7a78b2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e959306; op2val:0x3f56580c;
op3val:0x7e7a78b2; valaddr_reg:x3; val_offset:1578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1578*FLEN/8, x4, x1, x2)

inst_527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x159306 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56580c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7a78b2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e959306; op2val:0x3f56580c;
op3val:0x7e7a78b2; valaddr_reg:x3; val_offset:1581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1581*FLEN/8, x4, x1, x2)

inst_528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x159306 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56580c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7a78b2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e959306; op2val:0x3f56580c;
op3val:0x7e7a78b2; valaddr_reg:x3; val_offset:1584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1584*FLEN/8, x4, x1, x2)

inst_529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x159306 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56580c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7a78b2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e959306; op2val:0x3f56580c;
op3val:0x7e7a78b2; valaddr_reg:x3; val_offset:1587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1587*FLEN/8, x4, x1, x2)

inst_530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x161feb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea7ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275021 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e961feb; op2val:0x400ea7ba;
op3val:0x7f275021; valaddr_reg:x3; val_offset:1590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1590*FLEN/8, x4, x1, x2)

inst_531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x161feb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea7ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275021 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e961feb; op2val:0x400ea7ba;
op3val:0x7f275021; valaddr_reg:x3; val_offset:1593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1593*FLEN/8, x4, x1, x2)

inst_532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x161feb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea7ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275021 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e961feb; op2val:0x400ea7ba;
op3val:0x7f275021; valaddr_reg:x3; val_offset:1596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1596*FLEN/8, x4, x1, x2)

inst_533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x161feb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea7ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275021 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e961feb; op2val:0x400ea7ba;
op3val:0x7f275021; valaddr_reg:x3; val_offset:1599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1599*FLEN/8, x4, x1, x2)

inst_534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x161feb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea7ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275021 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e961feb; op2val:0x400ea7ba;
op3val:0x7f275021; valaddr_reg:x3; val_offset:1602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1602*FLEN/8, x4, x1, x2)

inst_535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16ac6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02272a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x193536 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96ac6a; op2val:0x3f82272a;
op3val:0x7e993536; valaddr_reg:x3; val_offset:1605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1605*FLEN/8, x4, x1, x2)

inst_536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16ac6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02272a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x193536 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96ac6a; op2val:0x3f82272a;
op3val:0x7e993536; valaddr_reg:x3; val_offset:1608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1608*FLEN/8, x4, x1, x2)

inst_537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16ac6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02272a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x193536 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96ac6a; op2val:0x3f82272a;
op3val:0x7e993536; valaddr_reg:x3; val_offset:1611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1611*FLEN/8, x4, x1, x2)

inst_538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16ac6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02272a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x193536 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96ac6a; op2val:0x3f82272a;
op3val:0x7e993536; valaddr_reg:x3; val_offset:1614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1614*FLEN/8, x4, x1, x2)

inst_539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16ac6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02272a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x193536 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96ac6a; op2val:0x3f82272a;
op3val:0x7e993536; valaddr_reg:x3; val_offset:1617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1617*FLEN/8, x4, x1, x2)

inst_540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16f1ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x24fdc9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x429140 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96f1ee; op2val:0x3fa4fdc9;
op3val:0x7ec29140; valaddr_reg:x3; val_offset:1620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1620*FLEN/8, x4, x1, x2)

inst_541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16f1ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x24fdc9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x429140 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96f1ee; op2val:0x3fa4fdc9;
op3val:0x7ec29140; valaddr_reg:x3; val_offset:1623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1623*FLEN/8, x4, x1, x2)

inst_542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16f1ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x24fdc9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x429140 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96f1ee; op2val:0x3fa4fdc9;
op3val:0x7ec29140; valaddr_reg:x3; val_offset:1626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1626*FLEN/8, x4, x1, x2)

inst_543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16f1ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x24fdc9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x429140 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96f1ee; op2val:0x3fa4fdc9;
op3val:0x7ec29140; valaddr_reg:x3; val_offset:1629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1629*FLEN/8, x4, x1, x2)

inst_544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16f1ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x24fdc9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x429140 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e96f1ee; op2val:0x3fa4fdc9;
op3val:0x7ec29140; valaddr_reg:x3; val_offset:1632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1632*FLEN/8, x4, x1, x2)

inst_545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18ee3e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c9b1c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b1bae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e98ee3e; op2val:0x3f9c9b1c;
op3val:0x7ebb1bae; valaddr_reg:x3; val_offset:1635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1635*FLEN/8, x4, x1, x2)

inst_546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18ee3e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c9b1c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b1bae and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e98ee3e; op2val:0x3f9c9b1c;
op3val:0x7ebb1bae; valaddr_reg:x3; val_offset:1638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1638*FLEN/8, x4, x1, x2)

inst_547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18ee3e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c9b1c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b1bae and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e98ee3e; op2val:0x3f9c9b1c;
op3val:0x7ebb1bae; valaddr_reg:x3; val_offset:1641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1641*FLEN/8, x4, x1, x2)

inst_548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18ee3e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c9b1c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b1bae and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e98ee3e; op2val:0x3f9c9b1c;
op3val:0x7ebb1bae; valaddr_reg:x3; val_offset:1644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1644*FLEN/8, x4, x1, x2)

inst_549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18ee3e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c9b1c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b1bae and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e98ee3e; op2val:0x3f9c9b1c;
op3val:0x7ebb1bae; valaddr_reg:x3; val_offset:1647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1647*FLEN/8, x4, x1, x2)

inst_550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a21ed and fs2 == 0 and fe2 == 0x80 and fm2 == 0x16f6d0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35c8f6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a21ed; op2val:0x4016f6d0;
op3val:0x7f35c8f6; valaddr_reg:x3; val_offset:1650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1650*FLEN/8, x4, x1, x2)

inst_551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a21ed and fs2 == 0 and fe2 == 0x80 and fm2 == 0x16f6d0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35c8f6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a21ed; op2val:0x4016f6d0;
op3val:0x7f35c8f6; valaddr_reg:x3; val_offset:1653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1653*FLEN/8, x4, x1, x2)

inst_552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a21ed and fs2 == 0 and fe2 == 0x80 and fm2 == 0x16f6d0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35c8f6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a21ed; op2val:0x4016f6d0;
op3val:0x7f35c8f6; valaddr_reg:x3; val_offset:1656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1656*FLEN/8, x4, x1, x2)

inst_553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a21ed and fs2 == 0 and fe2 == 0x80 and fm2 == 0x16f6d0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35c8f6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a21ed; op2val:0x4016f6d0;
op3val:0x7f35c8f6; valaddr_reg:x3; val_offset:1659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1659*FLEN/8, x4, x1, x2)

inst_554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a21ed and fs2 == 0 and fe2 == 0x80 and fm2 == 0x16f6d0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35c8f6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9a21ed; op2val:0x4016f6d0;
op3val:0x7f35c8f6; valaddr_reg:x3; val_offset:1662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1662*FLEN/8, x4, x1, x2)

inst_555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b6766 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bd9f5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0575c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b6766; op2val:0x3f5bd9f5;
op3val:0x7e8575c4; valaddr_reg:x3; val_offset:1665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1665*FLEN/8, x4, x1, x2)

inst_556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b6766 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bd9f5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0575c4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b6766; op2val:0x3f5bd9f5;
op3val:0x7e8575c4; valaddr_reg:x3; val_offset:1668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1668*FLEN/8, x4, x1, x2)

inst_557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b6766 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bd9f5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0575c4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b6766; op2val:0x3f5bd9f5;
op3val:0x7e8575c4; valaddr_reg:x3; val_offset:1671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1671*FLEN/8, x4, x1, x2)

inst_558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b6766 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bd9f5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0575c4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b6766; op2val:0x3f5bd9f5;
op3val:0x7e8575c4; valaddr_reg:x3; val_offset:1674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1674*FLEN/8, x4, x1, x2)

inst_559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b6766 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bd9f5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0575c4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e9b6766; op2val:0x3f5bd9f5;
op3val:0x7e8575c4; valaddr_reg:x3; val_offset:1677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1677*FLEN/8, x4, x1, x2)

inst_560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x67c89e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea08f24; op2val:0x3fe7c89e;
op3val:0x7f115efd; valaddr_reg:x3; val_offset:1680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1680*FLEN/8, x4, x1, x2)

inst_561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x67c89e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea08f24; op2val:0x3fe7c89e;
op3val:0x7f115efd; valaddr_reg:x3; val_offset:1683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1683*FLEN/8, x4, x1, x2)

inst_562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x67c89e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea08f24; op2val:0x3fe7c89e;
op3val:0x7f115efd; valaddr_reg:x3; val_offset:1686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1686*FLEN/8, x4, x1, x2)

inst_563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x67c89e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea08f24; op2val:0x3fe7c89e;
op3val:0x7f115efd; valaddr_reg:x3; val_offset:1689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1689*FLEN/8, x4, x1, x2)

inst_564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x67c89e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea08f24; op2val:0x3fe7c89e;
op3val:0x7f115efd; valaddr_reg:x3; val_offset:1692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1692*FLEN/8, x4, x1, x2)

inst_565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x218570 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ba263 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3033d3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea18570; op2val:0x400ba263;
op3val:0x7f3033d3; valaddr_reg:x3; val_offset:1695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1695*FLEN/8, x4, x1, x2)

inst_566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x218570 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ba263 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3033d3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea18570; op2val:0x400ba263;
op3val:0x7f3033d3; valaddr_reg:x3; val_offset:1698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1698*FLEN/8, x4, x1, x2)

inst_567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x218570 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ba263 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3033d3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea18570; op2val:0x400ba263;
op3val:0x7f3033d3; valaddr_reg:x3; val_offset:1701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1701*FLEN/8, x4, x1, x2)

inst_568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x218570 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ba263 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3033d3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea18570; op2val:0x400ba263;
op3val:0x7f3033d3; valaddr_reg:x3; val_offset:1704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1704*FLEN/8, x4, x1, x2)

inst_569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x218570 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ba263 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3033d3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea18570; op2val:0x400ba263;
op3val:0x7f3033d3; valaddr_reg:x3; val_offset:1707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1707*FLEN/8, x4, x1, x2)

inst_570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x222545 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a2404 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2efdcf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea22545; op2val:0x400a2404;
op3val:0x7f2efdcf; valaddr_reg:x3; val_offset:1710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1710*FLEN/8, x4, x1, x2)

inst_571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x222545 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a2404 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2efdcf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea22545; op2val:0x400a2404;
op3val:0x7f2efdcf; valaddr_reg:x3; val_offset:1713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1713*FLEN/8, x4, x1, x2)

inst_572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x222545 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a2404 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2efdcf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea22545; op2val:0x400a2404;
op3val:0x7f2efdcf; valaddr_reg:x3; val_offset:1716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1716*FLEN/8, x4, x1, x2)

inst_573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x222545 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a2404 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2efdcf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea22545; op2val:0x400a2404;
op3val:0x7f2efdcf; valaddr_reg:x3; val_offset:1719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1719*FLEN/8, x4, x1, x2)

inst_574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x222545 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a2404 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2efdcf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea22545; op2val:0x400a2404;
op3val:0x7f2efdcf; valaddr_reg:x3; val_offset:1722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1722*FLEN/8, x4, x1, x2)

inst_575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x794f79 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea303ee; op2val:0x3ff94f79;
op3val:0x7f1ec16f; valaddr_reg:x3; val_offset:1725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1725*FLEN/8, x4, x1, x2)

inst_576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x794f79 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea303ee; op2val:0x3ff94f79;
op3val:0x7f1ec16f; valaddr_reg:x3; val_offset:1728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1728*FLEN/8, x4, x1, x2)

inst_577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x794f79 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea303ee; op2val:0x3ff94f79;
op3val:0x7f1ec16f; valaddr_reg:x3; val_offset:1731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1731*FLEN/8, x4, x1, x2)

inst_578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x794f79 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea303ee; op2val:0x3ff94f79;
op3val:0x7f1ec16f; valaddr_reg:x3; val_offset:1734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1734*FLEN/8, x4, x1, x2)

inst_579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x794f79 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea303ee; op2val:0x3ff94f79;
op3val:0x7f1ec16f; valaddr_reg:x3; val_offset:1737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1737*FLEN/8, x4, x1, x2)

inst_580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x269533 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x009bc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275fe8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea69533; op2val:0x40009bc1;
op3val:0x7f275fe8; valaddr_reg:x3; val_offset:1740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1740*FLEN/8, x4, x1, x2)

inst_581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x269533 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x009bc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275fe8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea69533; op2val:0x40009bc1;
op3val:0x7f275fe8; valaddr_reg:x3; val_offset:1743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1743*FLEN/8, x4, x1, x2)

inst_582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x269533 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x009bc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275fe8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea69533; op2val:0x40009bc1;
op3val:0x7f275fe8; valaddr_reg:x3; val_offset:1746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1746*FLEN/8, x4, x1, x2)

inst_583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x269533 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x009bc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275fe8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea69533; op2val:0x40009bc1;
op3val:0x7f275fe8; valaddr_reg:x3; val_offset:1749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1749*FLEN/8, x4, x1, x2)

inst_584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x269533 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x009bc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275fe8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea69533; op2val:0x40009bc1;
op3val:0x7f275fe8; valaddr_reg:x3; val_offset:1752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1752*FLEN/8, x4, x1, x2)

inst_585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x290209 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5502b1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0ca079 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea90209; op2val:0x3ed502b1;
op3val:0x7e0ca079; valaddr_reg:x3; val_offset:1755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1755*FLEN/8, x4, x1, x2)

inst_586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x290209 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5502b1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0ca079 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea90209; op2val:0x3ed502b1;
op3val:0x7e0ca079; valaddr_reg:x3; val_offset:1758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1758*FLEN/8, x4, x1, x2)

inst_587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x290209 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5502b1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0ca079 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea90209; op2val:0x3ed502b1;
op3val:0x7e0ca079; valaddr_reg:x3; val_offset:1761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1761*FLEN/8, x4, x1, x2)

inst_588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x290209 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5502b1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0ca079 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea90209; op2val:0x3ed502b1;
op3val:0x7e0ca079; valaddr_reg:x3; val_offset:1764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1764*FLEN/8, x4, x1, x2)

inst_589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x290209 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5502b1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0ca079 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ea90209; op2val:0x3ed502b1;
op3val:0x7e0ca079; valaddr_reg:x3; val_offset:1767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1767*FLEN/8, x4, x1, x2)

inst_590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2db366 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x16e747 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4cc816 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eadb366; op2val:0x3f96e747;
op3val:0x7eccc816; valaddr_reg:x3; val_offset:1770*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1770*FLEN/8, x4, x1, x2)

inst_591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2db366 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x16e747 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4cc816 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eadb366; op2val:0x3f96e747;
op3val:0x7eccc816; valaddr_reg:x3; val_offset:1773*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1773*FLEN/8, x4, x1, x2)

inst_592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2db366 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x16e747 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4cc816 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eadb366; op2val:0x3f96e747;
op3val:0x7eccc816; valaddr_reg:x3; val_offset:1776*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1776*FLEN/8, x4, x1, x2)

inst_593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2db366 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x16e747 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4cc816 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eadb366; op2val:0x3f96e747;
op3val:0x7eccc816; valaddr_reg:x3; val_offset:1779*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1779*FLEN/8, x4, x1, x2)

inst_594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2db366 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x16e747 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4cc816 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eadb366; op2val:0x3f96e747;
op3val:0x7eccc816; valaddr_reg:x3; val_offset:1782*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1782*FLEN/8, x4, x1, x2)

inst_595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2955f8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae05d5; op2val:0x3f2955f8;
op3val:0x7e663896; valaddr_reg:x3; val_offset:1785*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1785*FLEN/8, x4, x1, x2)

inst_596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2955f8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae05d5; op2val:0x3f2955f8;
op3val:0x7e663896; valaddr_reg:x3; val_offset:1788*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1788*FLEN/8, x4, x1, x2)

inst_597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2955f8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae05d5; op2val:0x3f2955f8;
op3val:0x7e663896; valaddr_reg:x3; val_offset:1791*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1791*FLEN/8, x4, x1, x2)

inst_598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2955f8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae05d5; op2val:0x3f2955f8;
op3val:0x7e663896; valaddr_reg:x3; val_offset:1794*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1794*FLEN/8, x4, x1, x2)

inst_599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2955f8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae05d5; op2val:0x3f2955f8;
op3val:0x7e663896; valaddr_reg:x3; val_offset:1797*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1797*FLEN/8, x4, x1, x2)

inst_600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e3fc0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f55d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023bf9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae3fc0; op2val:0x3f3f55d0;
op3val:0x7e823bf9; valaddr_reg:x3; val_offset:1800*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1800*FLEN/8, x4, x1, x2)

inst_601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e3fc0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f55d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023bf9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae3fc0; op2val:0x3f3f55d0;
op3val:0x7e823bf9; valaddr_reg:x3; val_offset:1803*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1803*FLEN/8, x4, x1, x2)

inst_602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e3fc0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f55d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023bf9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae3fc0; op2val:0x3f3f55d0;
op3val:0x7e823bf9; valaddr_reg:x3; val_offset:1806*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1806*FLEN/8, x4, x1, x2)

inst_603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e3fc0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f55d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023bf9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae3fc0; op2val:0x3f3f55d0;
op3val:0x7e823bf9; valaddr_reg:x3; val_offset:1809*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1809*FLEN/8, x4, x1, x2)

inst_604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e3fc0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f55d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023bf9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eae3fc0; op2val:0x3f3f55d0;
op3val:0x7e823bf9; valaddr_reg:x3; val_offset:1812*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1812*FLEN/8, x4, x1, x2)

inst_605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32f0a0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04e6dc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x39cae1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb2f0a0; op2val:0x3f84e6dc;
op3val:0x7eb9cae1; valaddr_reg:x3; val_offset:1815*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1815*FLEN/8, x4, x1, x2)

inst_606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32f0a0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04e6dc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x39cae1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb2f0a0; op2val:0x3f84e6dc;
op3val:0x7eb9cae1; valaddr_reg:x3; val_offset:1818*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1818*FLEN/8, x4, x1, x2)

inst_607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32f0a0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04e6dc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x39cae1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb2f0a0; op2val:0x3f84e6dc;
op3val:0x7eb9cae1; valaddr_reg:x3; val_offset:1821*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1821*FLEN/8, x4, x1, x2)

inst_608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32f0a0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04e6dc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x39cae1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb2f0a0; op2val:0x3f84e6dc;
op3val:0x7eb9cae1; valaddr_reg:x3; val_offset:1824*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1824*FLEN/8, x4, x1, x2)

inst_609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32f0a0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04e6dc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x39cae1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb2f0a0; op2val:0x3f84e6dc;
op3val:0x7eb9cae1; valaddr_reg:x3; val_offset:1827*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1827*FLEN/8, x4, x1, x2)

inst_610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x360dc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x334fd9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f08d0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb60dc2; op2val:0x3fb34fd9;
op3val:0x7eff08d0; valaddr_reg:x3; val_offset:1830*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1830*FLEN/8, x4, x1, x2)

inst_611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x360dc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x334fd9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f08d0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb60dc2; op2val:0x3fb34fd9;
op3val:0x7eff08d0; valaddr_reg:x3; val_offset:1833*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1833*FLEN/8, x4, x1, x2)

inst_612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x360dc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x334fd9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f08d0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb60dc2; op2val:0x3fb34fd9;
op3val:0x7eff08d0; valaddr_reg:x3; val_offset:1836*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1836*FLEN/8, x4, x1, x2)

inst_613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x360dc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x334fd9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f08d0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb60dc2; op2val:0x3fb34fd9;
op3val:0x7eff08d0; valaddr_reg:x3; val_offset:1839*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1839*FLEN/8, x4, x1, x2)

inst_614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x360dc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x334fd9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f08d0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb60dc2; op2val:0x3fb34fd9;
op3val:0x7eff08d0; valaddr_reg:x3; val_offset:1842*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1842*FLEN/8, x4, x1, x2)

inst_615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36435d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x079559 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x410fb5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb6435d; op2val:0x3f879559;
op3val:0x7ec10fb5; valaddr_reg:x3; val_offset:1845*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1845*FLEN/8, x4, x1, x2)

inst_616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36435d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x079559 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x410fb5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb6435d; op2val:0x3f879559;
op3val:0x7ec10fb5; valaddr_reg:x3; val_offset:1848*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1848*FLEN/8, x4, x1, x2)

inst_617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36435d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x079559 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x410fb5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb6435d; op2val:0x3f879559;
op3val:0x7ec10fb5; valaddr_reg:x3; val_offset:1851*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1851*FLEN/8, x4, x1, x2)

inst_618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36435d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x079559 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x410fb5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb6435d; op2val:0x3f879559;
op3val:0x7ec10fb5; valaddr_reg:x3; val_offset:1854*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1854*FLEN/8, x4, x1, x2)

inst_619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36435d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x079559 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x410fb5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb6435d; op2val:0x3f879559;
op3val:0x7ec10fb5; valaddr_reg:x3; val_offset:1857*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1857*FLEN/8, x4, x1, x2)

inst_620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3790e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c192a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c4a9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb790e1; op2val:0x3ffc192a;
op3val:0x7f34c4a9; valaddr_reg:x3; val_offset:1860*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1860*FLEN/8, x4, x1, x2)

inst_621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3790e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c192a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c4a9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb790e1; op2val:0x3ffc192a;
op3val:0x7f34c4a9; valaddr_reg:x3; val_offset:1863*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1863*FLEN/8, x4, x1, x2)

inst_622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3790e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c192a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c4a9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb790e1; op2val:0x3ffc192a;
op3val:0x7f34c4a9; valaddr_reg:x3; val_offset:1866*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1866*FLEN/8, x4, x1, x2)

inst_623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3790e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c192a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c4a9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb790e1; op2val:0x3ffc192a;
op3val:0x7f34c4a9; valaddr_reg:x3; val_offset:1869*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1869*FLEN/8, x4, x1, x2)

inst_624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3790e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c192a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c4a9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eb790e1; op2val:0x3ffc192a;
op3val:0x7f34c4a9; valaddr_reg:x3; val_offset:1872*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1872*FLEN/8, x4, x1, x2)

inst_625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e14a1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57d194 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x203ef1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe14a1; op2val:0x3fd7d194;
op3val:0x7f203ef1; valaddr_reg:x3; val_offset:1875*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1875*FLEN/8, x4, x1, x2)

inst_626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e14a1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57d194 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x203ef1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe14a1; op2val:0x3fd7d194;
op3val:0x7f203ef1; valaddr_reg:x3; val_offset:1878*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1878*FLEN/8, x4, x1, x2)

inst_627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e14a1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57d194 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x203ef1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe14a1; op2val:0x3fd7d194;
op3val:0x7f203ef1; valaddr_reg:x3; val_offset:1881*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1881*FLEN/8, x4, x1, x2)

inst_628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e14a1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57d194 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x203ef1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe14a1; op2val:0x3fd7d194;
op3val:0x7f203ef1; valaddr_reg:x3; val_offset:1884*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1884*FLEN/8, x4, x1, x2)

inst_629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e14a1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57d194 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x203ef1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ebe14a1; op2val:0x3fd7d194;
op3val:0x7f203ef1; valaddr_reg:x3; val_offset:1887*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1887*FLEN/8, x4, x1, x2)

inst_630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4008b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36231f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x08a089 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec008b5; op2val:0x3eb6231f;
op3val:0x7e08a089; valaddr_reg:x3; val_offset:1890*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1890*FLEN/8, x4, x1, x2)

inst_631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4008b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36231f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x08a089 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec008b5; op2val:0x3eb6231f;
op3val:0x7e08a089; valaddr_reg:x3; val_offset:1893*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1893*FLEN/8, x4, x1, x2)

inst_632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4008b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36231f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x08a089 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec008b5; op2val:0x3eb6231f;
op3val:0x7e08a089; valaddr_reg:x3; val_offset:1896*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1896*FLEN/8, x4, x1, x2)

inst_633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4008b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36231f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x08a089 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec008b5; op2val:0x3eb6231f;
op3val:0x7e08a089; valaddr_reg:x3; val_offset:1899*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1899*FLEN/8, x4, x1, x2)

inst_634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4008b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36231f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x08a089 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec008b5; op2val:0x3eb6231f;
op3val:0x7e08a089; valaddr_reg:x3; val_offset:1902*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1902*FLEN/8, x4, x1, x2)

inst_635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40a218 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07b31d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c3884 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0a218; op2val:0x3f87b31d;
op3val:0x7ecc3884; valaddr_reg:x3; val_offset:1905*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1905*FLEN/8, x4, x1, x2)

inst_636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40a218 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07b31d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c3884 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0a218; op2val:0x3f87b31d;
op3val:0x7ecc3884; valaddr_reg:x3; val_offset:1908*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1908*FLEN/8, x4, x1, x2)

inst_637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40a218 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07b31d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c3884 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0a218; op2val:0x3f87b31d;
op3val:0x7ecc3884; valaddr_reg:x3; val_offset:1911*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1911*FLEN/8, x4, x1, x2)

inst_638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40a218 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07b31d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c3884 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0a218; op2val:0x3f87b31d;
op3val:0x7ecc3884; valaddr_reg:x3; val_offset:1914*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1914*FLEN/8, x4, x1, x2)

inst_639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40a218 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07b31d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c3884 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec0a218; op2val:0x3f87b31d;
op3val:0x7ecc3884; valaddr_reg:x3; val_offset:1917*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1917*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44ab84 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d20ce and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05011c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4ab84; op2val:0x3fad20ce;
op3val:0x7f05011c; valaddr_reg:x3; val_offset:1920*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1920*FLEN/8, x4, x1, x2)

inst_641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44ab84 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d20ce and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05011c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4ab84; op2val:0x3fad20ce;
op3val:0x7f05011c; valaddr_reg:x3; val_offset:1923*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1923*FLEN/8, x4, x1, x2)

inst_642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44ab84 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d20ce and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05011c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4ab84; op2val:0x3fad20ce;
op3val:0x7f05011c; valaddr_reg:x3; val_offset:1926*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1926*FLEN/8, x4, x1, x2)

inst_643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44ab84 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d20ce and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05011c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4ab84; op2val:0x3fad20ce;
op3val:0x7f05011c; valaddr_reg:x3; val_offset:1929*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1929*FLEN/8, x4, x1, x2)

inst_644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44ab84 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d20ce and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05011c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec4ab84; op2val:0x3fad20ce;
op3val:0x7f05011c; valaddr_reg:x3; val_offset:1932*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1932*FLEN/8, x4, x1, x2)

inst_645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45f2de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x195a39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d27d5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5f2de; op2val:0x3f995a39;
op3val:0x7eed27d5; valaddr_reg:x3; val_offset:1935*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1935*FLEN/8, x4, x1, x2)

inst_646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45f2de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x195a39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d27d5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5f2de; op2val:0x3f995a39;
op3val:0x7eed27d5; valaddr_reg:x3; val_offset:1938*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1938*FLEN/8, x4, x1, x2)

inst_647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45f2de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x195a39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d27d5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5f2de; op2val:0x3f995a39;
op3val:0x7eed27d5; valaddr_reg:x3; val_offset:1941*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1941*FLEN/8, x4, x1, x2)

inst_648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45f2de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x195a39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d27d5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5f2de; op2val:0x3f995a39;
op3val:0x7eed27d5; valaddr_reg:x3; val_offset:1944*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1944*FLEN/8, x4, x1, x2)

inst_649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45f2de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x195a39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d27d5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5f2de; op2val:0x3f995a39;
op3val:0x7eed27d5; valaddr_reg:x3; val_offset:1947*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1947*FLEN/8, x4, x1, x2)

inst_650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45fe09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x285f5e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023878 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5fe09; op2val:0x3f285f5e;
op3val:0x7e823878; valaddr_reg:x3; val_offset:1950*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1950*FLEN/8, x4, x1, x2)

inst_651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45fe09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x285f5e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023878 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5fe09; op2val:0x3f285f5e;
op3val:0x7e823878; valaddr_reg:x3; val_offset:1953*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1953*FLEN/8, x4, x1, x2)

inst_652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45fe09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x285f5e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023878 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5fe09; op2val:0x3f285f5e;
op3val:0x7e823878; valaddr_reg:x3; val_offset:1956*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1956*FLEN/8, x4, x1, x2)

inst_653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45fe09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x285f5e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023878 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5fe09; op2val:0x3f285f5e;
op3val:0x7e823878; valaddr_reg:x3; val_offset:1959*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1959*FLEN/8, x4, x1, x2)

inst_654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45fe09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x285f5e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023878 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec5fe09; op2val:0x3f285f5e;
op3val:0x7e823878; valaddr_reg:x3; val_offset:1962*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1962*FLEN/8, x4, x1, x2)

inst_655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4906ca and fs2 == 0 and fe2 == 0x7a and fm2 == 0x125993 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x65d86c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec906ca; op2val:0x3d125993;
op3val:0x7c65d86c; valaddr_reg:x3; val_offset:1965*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1965*FLEN/8, x4, x1, x2)

inst_656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4906ca and fs2 == 0 and fe2 == 0x7a and fm2 == 0x125993 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x65d86c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec906ca; op2val:0x3d125993;
op3val:0x7c65d86c; valaddr_reg:x3; val_offset:1968*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1968*FLEN/8, x4, x1, x2)

inst_657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4906ca and fs2 == 0 and fe2 == 0x7a and fm2 == 0x125993 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x65d86c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec906ca; op2val:0x3d125993;
op3val:0x7c65d86c; valaddr_reg:x3; val_offset:1971*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1971*FLEN/8, x4, x1, x2)

inst_658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4906ca and fs2 == 0 and fe2 == 0x7a and fm2 == 0x125993 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x65d86c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec906ca; op2val:0x3d125993;
op3val:0x7c65d86c; valaddr_reg:x3; val_offset:1974*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1974*FLEN/8, x4, x1, x2)

inst_659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4906ca and fs2 == 0 and fe2 == 0x7a and fm2 == 0x125993 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x65d86c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec906ca; op2val:0x3d125993;
op3val:0x7c65d86c; valaddr_reg:x3; val_offset:1977*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1977*FLEN/8, x4, x1, x2)

inst_660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55497a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9acea; op2val:0x3fd5497a;
op3val:0x7f2806c1; valaddr_reg:x3; val_offset:1980*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1980*FLEN/8, x4, x1, x2)

inst_661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55497a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9acea; op2val:0x3fd5497a;
op3val:0x7f2806c1; valaddr_reg:x3; val_offset:1983*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1983*FLEN/8, x4, x1, x2)

inst_662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55497a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9acea; op2val:0x3fd5497a;
op3val:0x7f2806c1; valaddr_reg:x3; val_offset:1986*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 1986*FLEN/8, x4, x1, x2)

inst_663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55497a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9acea; op2val:0x3fd5497a;
op3val:0x7f2806c1; valaddr_reg:x3; val_offset:1989*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 1989*FLEN/8, x4, x1, x2)

inst_664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55497a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ec9acea; op2val:0x3fd5497a;
op3val:0x7f2806c1; valaddr_reg:x3; val_offset:1992*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 1992*FLEN/8, x4, x1, x2)

inst_665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a3505 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62f173 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x334186 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca3505; op2val:0x3fe2f173;
op3val:0x7f334186; valaddr_reg:x3; val_offset:1995*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1995*FLEN/8, x4, x1, x2)

inst_666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a3505 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62f173 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x334186 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca3505; op2val:0x3fe2f173;
op3val:0x7f334186; valaddr_reg:x3; val_offset:1998*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 1998*FLEN/8, x4, x1, x2)

inst_667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a3505 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62f173 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x334186 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca3505; op2val:0x3fe2f173;
op3val:0x7f334186; valaddr_reg:x3; val_offset:2001*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2001*FLEN/8, x4, x1, x2)

inst_668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a3505 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62f173 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x334186 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca3505; op2val:0x3fe2f173;
op3val:0x7f334186; valaddr_reg:x3; val_offset:2004*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2004*FLEN/8, x4, x1, x2)

inst_669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a3505 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62f173 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x334186 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca3505; op2val:0x3fe2f173;
op3val:0x7f334186; valaddr_reg:x3; val_offset:2007*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2007*FLEN/8, x4, x1, x2)

inst_670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a55da and fs2 == 0 and fe2 == 0x7d and fm2 == 0x67afd9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x371e74 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca55da; op2val:0x3ee7afd9;
op3val:0x7e371e74; valaddr_reg:x3; val_offset:2010*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2010*FLEN/8, x4, x1, x2)

inst_671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a55da and fs2 == 0 and fe2 == 0x7d and fm2 == 0x67afd9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x371e74 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca55da; op2val:0x3ee7afd9;
op3val:0x7e371e74; valaddr_reg:x3; val_offset:2013*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2013*FLEN/8, x4, x1, x2)

inst_672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a55da and fs2 == 0 and fe2 == 0x7d and fm2 == 0x67afd9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x371e74 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca55da; op2val:0x3ee7afd9;
op3val:0x7e371e74; valaddr_reg:x3; val_offset:2016*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2016*FLEN/8, x4, x1, x2)

inst_673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a55da and fs2 == 0 and fe2 == 0x7d and fm2 == 0x67afd9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x371e74 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca55da; op2val:0x3ee7afd9;
op3val:0x7e371e74; valaddr_reg:x3; val_offset:2019*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2019*FLEN/8, x4, x1, x2)

inst_674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a55da and fs2 == 0 and fe2 == 0x7d and fm2 == 0x67afd9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x371e74 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eca55da; op2val:0x3ee7afd9;
op3val:0x7e371e74; valaddr_reg:x3; val_offset:2022*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2022*FLEN/8, x4, x1, x2)

inst_675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4acb44 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6d29cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bdf4a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecacb44; op2val:0x3fed29cb;
op3val:0x7f3bdf4a; valaddr_reg:x3; val_offset:2025*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2025*FLEN/8, x4, x1, x2)

inst_676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4acb44 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6d29cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bdf4a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecacb44; op2val:0x3fed29cb;
op3val:0x7f3bdf4a; valaddr_reg:x3; val_offset:2028*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2028*FLEN/8, x4, x1, x2)

inst_677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4acb44 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6d29cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bdf4a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecacb44; op2val:0x3fed29cb;
op3val:0x7f3bdf4a; valaddr_reg:x3; val_offset:2031*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2031*FLEN/8, x4, x1, x2)

inst_678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4acb44 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6d29cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bdf4a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecacb44; op2val:0x3fed29cb;
op3val:0x7f3bdf4a; valaddr_reg:x3; val_offset:2034*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2034*FLEN/8, x4, x1, x2)

inst_679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4acb44 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6d29cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bdf4a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecacb44; op2val:0x3fed29cb;
op3val:0x7f3bdf4a; valaddr_reg:x3; val_offset:2037*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2037*FLEN/8, x4, x1, x2)

inst_680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ad9d0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0e173c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x612e76 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecad9d0; op2val:0x3e8e173c;
op3val:0x7de12e76; valaddr_reg:x3; val_offset:2040*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2040*FLEN/8, x4, x1, x2)

inst_681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ad9d0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0e173c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x612e76 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecad9d0; op2val:0x3e8e173c;
op3val:0x7de12e76; valaddr_reg:x3; val_offset:2043*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2043*FLEN/8, x4, x1, x2)

inst_682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ad9d0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0e173c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x612e76 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecad9d0; op2val:0x3e8e173c;
op3val:0x7de12e76; valaddr_reg:x3; val_offset:2046*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2046*FLEN/8, x4, x1, x2)

inst_683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ad9d0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0e173c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x612e76 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecad9d0; op2val:0x3e8e173c;
op3val:0x7de12e76; valaddr_reg:x3; val_offset:2049*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2049*FLEN/8, x4, x1, x2)

inst_684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ad9d0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0e173c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x612e76 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecad9d0; op2val:0x3e8e173c;
op3val:0x7de12e76; valaddr_reg:x3; val_offset:2052*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2052*FLEN/8, x4, x1, x2)

inst_685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c83f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b3bb8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15941a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc83f6; op2val:0x3fbb3bb8;
op3val:0x7f15941a; valaddr_reg:x3; val_offset:2055*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2055*FLEN/8, x4, x1, x2)

inst_686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c83f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b3bb8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15941a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc83f6; op2val:0x3fbb3bb8;
op3val:0x7f15941a; valaddr_reg:x3; val_offset:2058*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2058*FLEN/8, x4, x1, x2)

inst_687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c83f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b3bb8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15941a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc83f6; op2val:0x3fbb3bb8;
op3val:0x7f15941a; valaddr_reg:x3; val_offset:2061*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2061*FLEN/8, x4, x1, x2)

inst_688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c83f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b3bb8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15941a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc83f6; op2val:0x3fbb3bb8;
op3val:0x7f15941a; valaddr_reg:x3; val_offset:2064*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2064*FLEN/8, x4, x1, x2)

inst_689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c83f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b3bb8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15941a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecc83f6; op2val:0x3fbb3bb8;
op3val:0x7f15941a; valaddr_reg:x3; val_offset:2067*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2067*FLEN/8, x4, x1, x2)

inst_690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2eb223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecdc757; op2val:0x3f2eb223;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:2070*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2070*FLEN/8, x4, x1, x2)

inst_691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2eb223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecdc757; op2val:0x3f2eb223;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:2073*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2073*FLEN/8, x4, x1, x2)

inst_692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2eb223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecdc757; op2val:0x3f2eb223;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:2076*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2076*FLEN/8, x4, x1, x2)

inst_693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2eb223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecdc757; op2val:0x3f2eb223;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:2079*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2079*FLEN/8, x4, x1, x2)

inst_694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2eb223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ecdc757; op2val:0x3f2eb223;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:2082*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2082*FLEN/8, x4, x1, x2)

inst_695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x509405 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4bec9d and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x262628 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed09405; op2val:0x3d4bec9d;
op3val:0x7ca62628; valaddr_reg:x3; val_offset:2085*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2085*FLEN/8, x4, x1, x2)

inst_696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x509405 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4bec9d and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x262628 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed09405; op2val:0x3d4bec9d;
op3val:0x7ca62628; valaddr_reg:x3; val_offset:2088*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2088*FLEN/8, x4, x1, x2)

inst_697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x509405 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4bec9d and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x262628 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed09405; op2val:0x3d4bec9d;
op3val:0x7ca62628; valaddr_reg:x3; val_offset:2091*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2091*FLEN/8, x4, x1, x2)

inst_698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x509405 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4bec9d and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x262628 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed09405; op2val:0x3d4bec9d;
op3val:0x7ca62628; valaddr_reg:x3; val_offset:2094*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2094*FLEN/8, x4, x1, x2)

inst_699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x509405 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4bec9d and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x262628 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed09405; op2val:0x3d4bec9d;
op3val:0x7ca62628; valaddr_reg:x3; val_offset:2097*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2097*FLEN/8, x4, x1, x2)

inst_700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6ac41d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed25578; op2val:0x3deac41d;
op3val:0x7d40e341; valaddr_reg:x3; val_offset:2100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2100*FLEN/8, x4, x1, x2)

inst_701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6ac41d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed25578; op2val:0x3deac41d;
op3val:0x7d40e341; valaddr_reg:x3; val_offset:2103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2103*FLEN/8, x4, x1, x2)

inst_702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6ac41d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed25578; op2val:0x3deac41d;
op3val:0x7d40e341; valaddr_reg:x3; val_offset:2106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2106*FLEN/8, x4, x1, x2)

inst_703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6ac41d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed25578; op2val:0x3deac41d;
op3val:0x7d40e341; valaddr_reg:x3; val_offset:2109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2109*FLEN/8, x4, x1, x2)

inst_704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6ac41d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed25578; op2val:0x3deac41d;
op3val:0x7d40e341; valaddr_reg:x3; val_offset:2112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2112*FLEN/8, x4, x1, x2)

inst_705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52fc23 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dcc0d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x299c14 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2fc23; op2val:0x3fcdcc0d;
op3val:0x7f299c14; valaddr_reg:x3; val_offset:2115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2115*FLEN/8, x4, x1, x2)

inst_706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52fc23 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dcc0d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x299c14 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2fc23; op2val:0x3fcdcc0d;
op3val:0x7f299c14; valaddr_reg:x3; val_offset:2118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2118*FLEN/8, x4, x1, x2)

inst_707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52fc23 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dcc0d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x299c14 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2fc23; op2val:0x3fcdcc0d;
op3val:0x7f299c14; valaddr_reg:x3; val_offset:2121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2121*FLEN/8, x4, x1, x2)

inst_708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52fc23 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dcc0d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x299c14 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2fc23; op2val:0x3fcdcc0d;
op3val:0x7f299c14; valaddr_reg:x3; val_offset:2124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2124*FLEN/8, x4, x1, x2)

inst_709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52fc23 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dcc0d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x299c14 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2fc23; op2val:0x3fcdcc0d;
op3val:0x7f299c14; valaddr_reg:x3; val_offset:2127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2127*FLEN/8, x4, x1, x2)

inst_710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546069 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x567765 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31eba5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46069; op2val:0x3fd67765;
op3val:0x7f31eba5; valaddr_reg:x3; val_offset:2130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2130*FLEN/8, x4, x1, x2)

inst_711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546069 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x567765 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31eba5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46069; op2val:0x3fd67765;
op3val:0x7f31eba5; valaddr_reg:x3; val_offset:2133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2133*FLEN/8, x4, x1, x2)

inst_712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546069 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x567765 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31eba5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46069; op2val:0x3fd67765;
op3val:0x7f31eba5; valaddr_reg:x3; val_offset:2136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2136*FLEN/8, x4, x1, x2)

inst_713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546069 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x567765 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31eba5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46069; op2val:0x3fd67765;
op3val:0x7f31eba5; valaddr_reg:x3; val_offset:2139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2139*FLEN/8, x4, x1, x2)

inst_714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x546069 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x567765 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31eba5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed46069; op2val:0x3fd67765;
op3val:0x7f31eba5; valaddr_reg:x3; val_offset:2142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2142*FLEN/8, x4, x1, x2)

inst_715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54c15a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b83b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2922ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4c15a; op2val:0x3f4b83b8;
op3val:0x7ea922ca; valaddr_reg:x3; val_offset:2145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2145*FLEN/8, x4, x1, x2)

inst_716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54c15a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b83b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2922ca and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4c15a; op2val:0x3f4b83b8;
op3val:0x7ea922ca; valaddr_reg:x3; val_offset:2148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2148*FLEN/8, x4, x1, x2)

inst_717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54c15a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b83b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2922ca and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4c15a; op2val:0x3f4b83b8;
op3val:0x7ea922ca; valaddr_reg:x3; val_offset:2151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2151*FLEN/8, x4, x1, x2)

inst_718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54c15a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b83b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2922ca and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4c15a; op2val:0x3f4b83b8;
op3val:0x7ea922ca; valaddr_reg:x3; val_offset:2154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2154*FLEN/8, x4, x1, x2)

inst_719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54c15a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b83b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2922ca and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4c15a; op2val:0x3f4b83b8;
op3val:0x7ea922ca; valaddr_reg:x3; val_offset:2157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2157*FLEN/8, x4, x1, x2)

inst_720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x554a27 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x34bbbd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16948f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed54a27; op2val:0x3fb4bbbd;
op3val:0x7f16948f; valaddr_reg:x3; val_offset:2160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2160*FLEN/8, x4, x1, x2)

inst_721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x554a27 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x34bbbd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16948f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed54a27; op2val:0x3fb4bbbd;
op3val:0x7f16948f; valaddr_reg:x3; val_offset:2163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2163*FLEN/8, x4, x1, x2)

inst_722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x554a27 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x34bbbd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16948f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed54a27; op2val:0x3fb4bbbd;
op3val:0x7f16948f; valaddr_reg:x3; val_offset:2166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2166*FLEN/8, x4, x1, x2)

inst_723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x554a27 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x34bbbd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16948f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed54a27; op2val:0x3fb4bbbd;
op3val:0x7f16948f; valaddr_reg:x3; val_offset:2169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2169*FLEN/8, x4, x1, x2)

inst_724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x554a27 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x34bbbd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16948f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed54a27; op2val:0x3fb4bbbd;
op3val:0x7f16948f; valaddr_reg:x3; val_offset:2172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2172*FLEN/8, x4, x1, x2)

inst_725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56da71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57ca8e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x351b75 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6da71; op2val:0x3fd7ca8e;
op3val:0x7f351b75; valaddr_reg:x3; val_offset:2175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2175*FLEN/8, x4, x1, x2)

inst_726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56da71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57ca8e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x351b75 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6da71; op2val:0x3fd7ca8e;
op3val:0x7f351b75; valaddr_reg:x3; val_offset:2178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2178*FLEN/8, x4, x1, x2)

inst_727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56da71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57ca8e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x351b75 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6da71; op2val:0x3fd7ca8e;
op3val:0x7f351b75; valaddr_reg:x3; val_offset:2181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2181*FLEN/8, x4, x1, x2)

inst_728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56da71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57ca8e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x351b75 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6da71; op2val:0x3fd7ca8e;
op3val:0x7f351b75; valaddr_reg:x3; val_offset:2184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2184*FLEN/8, x4, x1, x2)

inst_729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56da71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57ca8e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x351b75 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6da71; op2val:0x3fd7ca8e;
op3val:0x7f351b75; valaddr_reg:x3; val_offset:2187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2187*FLEN/8, x4, x1, x2)

inst_730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57b43e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d2d8b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11eb2e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed7b43e; op2val:0x3fad2d8b;
op3val:0x7f11eb2e; valaddr_reg:x3; val_offset:2190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2190*FLEN/8, x4, x1, x2)

inst_731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57b43e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d2d8b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11eb2e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed7b43e; op2val:0x3fad2d8b;
op3val:0x7f11eb2e; valaddr_reg:x3; val_offset:2193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2193*FLEN/8, x4, x1, x2)

inst_732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57b43e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d2d8b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11eb2e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed7b43e; op2val:0x3fad2d8b;
op3val:0x7f11eb2e; valaddr_reg:x3; val_offset:2196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2196*FLEN/8, x4, x1, x2)

inst_733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57b43e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d2d8b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11eb2e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed7b43e; op2val:0x3fad2d8b;
op3val:0x7f11eb2e; valaddr_reg:x3; val_offset:2199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2199*FLEN/8, x4, x1, x2)

inst_734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57b43e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d2d8b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11eb2e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed7b43e; op2val:0x3fad2d8b;
op3val:0x7f11eb2e; valaddr_reg:x3; val_offset:2202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2202*FLEN/8, x4, x1, x2)

inst_735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b1bc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d1f6b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x067aea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edb1bc2; op2val:0x3f9d1f6b;
op3val:0x7f067aea; valaddr_reg:x3; val_offset:2205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2205*FLEN/8, x4, x1, x2)

inst_736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b1bc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d1f6b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x067aea and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edb1bc2; op2val:0x3f9d1f6b;
op3val:0x7f067aea; valaddr_reg:x3; val_offset:2208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2208*FLEN/8, x4, x1, x2)

inst_737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b1bc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d1f6b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x067aea and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edb1bc2; op2val:0x3f9d1f6b;
op3val:0x7f067aea; valaddr_reg:x3; val_offset:2211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2211*FLEN/8, x4, x1, x2)

inst_738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b1bc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d1f6b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x067aea and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edb1bc2; op2val:0x3f9d1f6b;
op3val:0x7f067aea; valaddr_reg:x3; val_offset:2214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2214*FLEN/8, x4, x1, x2)

inst_739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b1bc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d1f6b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x067aea and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edb1bc2; op2val:0x3f9d1f6b;
op3val:0x7f067aea; valaddr_reg:x3; val_offset:2217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2217*FLEN/8, x4, x1, x2)

inst_740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ff72a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd9b86; op2val:0x3f2ff72a;
op3val:0x7e985346; valaddr_reg:x3; val_offset:2220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2220*FLEN/8, x4, x1, x2)

inst_741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ff72a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd9b86; op2val:0x3f2ff72a;
op3val:0x7e985346; valaddr_reg:x3; val_offset:2223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2223*FLEN/8, x4, x1, x2)

inst_742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ff72a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd9b86; op2val:0x3f2ff72a;
op3val:0x7e985346; valaddr_reg:x3; val_offset:2226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2226*FLEN/8, x4, x1, x2)

inst_743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ff72a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd9b86; op2val:0x3f2ff72a;
op3val:0x7e985346; valaddr_reg:x3; val_offset:2229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2229*FLEN/8, x4, x1, x2)

inst_744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ff72a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edd9b86; op2val:0x3f2ff72a;
op3val:0x7e985346; valaddr_reg:x3; val_offset:2232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2232*FLEN/8, x4, x1, x2)

inst_745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eae04 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x49655f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2f2ece and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeae04; op2val:0x3f49655f;
op3val:0x7eaf2ece; valaddr_reg:x3; val_offset:2235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2235*FLEN/8, x4, x1, x2)

inst_746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eae04 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x49655f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2f2ece and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeae04; op2val:0x3f49655f;
op3val:0x7eaf2ece; valaddr_reg:x3; val_offset:2238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2238*FLEN/8, x4, x1, x2)

inst_747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eae04 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x49655f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2f2ece and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeae04; op2val:0x3f49655f;
op3val:0x7eaf2ece; valaddr_reg:x3; val_offset:2241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2241*FLEN/8, x4, x1, x2)

inst_748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eae04 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x49655f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2f2ece and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeae04; op2val:0x3f49655f;
op3val:0x7eaf2ece; valaddr_reg:x3; val_offset:2244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2244*FLEN/8, x4, x1, x2)

inst_749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eae04 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x49655f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2f2ece and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7edeae04; op2val:0x3f49655f;
op3val:0x7eaf2ece; valaddr_reg:x3; val_offset:2247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2247*FLEN/8, x4, x1, x2)

inst_750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x600183 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x466c5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d9ffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee00183; op2val:0x3fc66c5d;
op3val:0x7f2d9ffe; valaddr_reg:x3; val_offset:2250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2250*FLEN/8, x4, x1, x2)

inst_751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x600183 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x466c5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d9ffe and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee00183; op2val:0x3fc66c5d;
op3val:0x7f2d9ffe; valaddr_reg:x3; val_offset:2253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2253*FLEN/8, x4, x1, x2)

inst_752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x600183 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x466c5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d9ffe and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee00183; op2val:0x3fc66c5d;
op3val:0x7f2d9ffe; valaddr_reg:x3; val_offset:2256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2256*FLEN/8, x4, x1, x2)

inst_753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x600183 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x466c5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d9ffe and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee00183; op2val:0x3fc66c5d;
op3val:0x7f2d9ffe; valaddr_reg:x3; val_offset:2259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2259*FLEN/8, x4, x1, x2)

inst_754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x600183 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x466c5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d9ffe and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee00183; op2val:0x3fc66c5d;
op3val:0x7f2d9ffe; valaddr_reg:x3; val_offset:2262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2262*FLEN/8, x4, x1, x2)

inst_755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x60dd2d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6758a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b3572 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee0dd2d; op2val:0x3f6758a6;
op3val:0x7ecb3572; valaddr_reg:x3; val_offset:2265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2265*FLEN/8, x4, x1, x2)

inst_756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x60dd2d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6758a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b3572 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee0dd2d; op2val:0x3f6758a6;
op3val:0x7ecb3572; valaddr_reg:x3; val_offset:2268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2268*FLEN/8, x4, x1, x2)

inst_757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x60dd2d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6758a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b3572 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee0dd2d; op2val:0x3f6758a6;
op3val:0x7ecb3572; valaddr_reg:x3; val_offset:2271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2271*FLEN/8, x4, x1, x2)

inst_758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x60dd2d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6758a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b3572 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee0dd2d; op2val:0x3f6758a6;
op3val:0x7ecb3572; valaddr_reg:x3; val_offset:2274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2274*FLEN/8, x4, x1, x2)

inst_759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x60dd2d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6758a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b3572 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee0dd2d; op2val:0x3f6758a6;
op3val:0x7ecb3572; valaddr_reg:x3; val_offset:2277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2277*FLEN/8, x4, x1, x2)

inst_760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623931 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x645990 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x49ca15 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee23931; op2val:0x3ee45990;
op3val:0x7e49ca15; valaddr_reg:x3; val_offset:2280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2280*FLEN/8, x4, x1, x2)

inst_761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623931 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x645990 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x49ca15 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee23931; op2val:0x3ee45990;
op3val:0x7e49ca15; valaddr_reg:x3; val_offset:2283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2283*FLEN/8, x4, x1, x2)

inst_762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623931 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x645990 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x49ca15 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee23931; op2val:0x3ee45990;
op3val:0x7e49ca15; valaddr_reg:x3; val_offset:2286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2286*FLEN/8, x4, x1, x2)

inst_763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623931 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x645990 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x49ca15 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee23931; op2val:0x3ee45990;
op3val:0x7e49ca15; valaddr_reg:x3; val_offset:2289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2289*FLEN/8, x4, x1, x2)

inst_764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623931 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x645990 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x49ca15 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ee23931; op2val:0x3ee45990;
op3val:0x7e49ca15; valaddr_reg:x3; val_offset:2292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2292*FLEN/8, x4, x1, x2)

inst_765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b35f0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x534a7c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4221e4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb35f0; op2val:0x3f534a7c;
op3val:0x7ec221e4; valaddr_reg:x3; val_offset:2295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2295*FLEN/8, x4, x1, x2)

inst_766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b35f0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x534a7c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4221e4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb35f0; op2val:0x3f534a7c;
op3val:0x7ec221e4; valaddr_reg:x3; val_offset:2298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2298*FLEN/8, x4, x1, x2)

inst_767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b35f0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x534a7c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4221e4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb35f0; op2val:0x3f534a7c;
op3val:0x7ec221e4; valaddr_reg:x3; val_offset:2301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2301*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_7)

inst_768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b35f0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x534a7c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4221e4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb35f0; op2val:0x3f534a7c;
op3val:0x7ec221e4; valaddr_reg:x3; val_offset:2304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2304*FLEN/8, x4, x1, x2)

inst_769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b35f0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x534a7c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4221e4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eeb35f0; op2val:0x3f534a7c;
op3val:0x7ec221e4; valaddr_reg:x3; val_offset:2307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2307*FLEN/8, x4, x1, x2)

inst_770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bcd6f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x77b7b4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x642c6c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eebcd6f; op2val:0x3e77b7b4;
op3val:0x7de42c6c; valaddr_reg:x3; val_offset:2310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2310*FLEN/8, x4, x1, x2)

inst_771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bcd6f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x77b7b4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x642c6c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eebcd6f; op2val:0x3e77b7b4;
op3val:0x7de42c6c; valaddr_reg:x3; val_offset:2313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2313*FLEN/8, x4, x1, x2)

inst_772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bcd6f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x77b7b4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x642c6c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eebcd6f; op2val:0x3e77b7b4;
op3val:0x7de42c6c; valaddr_reg:x3; val_offset:2316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2316*FLEN/8, x4, x1, x2)

inst_773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bcd6f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x77b7b4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x642c6c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eebcd6f; op2val:0x3e77b7b4;
op3val:0x7de42c6c; valaddr_reg:x3; val_offset:2319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2319*FLEN/8, x4, x1, x2)

inst_774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bcd6f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x77b7b4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x642c6c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eebcd6f; op2val:0x3e77b7b4;
op3val:0x7de42c6c; valaddr_reg:x3; val_offset:2322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2322*FLEN/8, x4, x1, x2)

inst_775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f9686 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x522ef6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x44b56d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef9686; op2val:0x3f522ef6;
op3val:0x7ec4b56d; valaddr_reg:x3; val_offset:2325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2325*FLEN/8, x4, x1, x2)

inst_776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f9686 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x522ef6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x44b56d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef9686; op2val:0x3f522ef6;
op3val:0x7ec4b56d; valaddr_reg:x3; val_offset:2328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2328*FLEN/8, x4, x1, x2)

inst_777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f9686 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x522ef6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x44b56d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef9686; op2val:0x3f522ef6;
op3val:0x7ec4b56d; valaddr_reg:x3; val_offset:2331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2331*FLEN/8, x4, x1, x2)

inst_778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f9686 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x522ef6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x44b56d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef9686; op2val:0x3f522ef6;
op3val:0x7ec4b56d; valaddr_reg:x3; val_offset:2334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2334*FLEN/8, x4, x1, x2)

inst_779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f9686 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x522ef6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x44b56d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eef9686; op2val:0x3f522ef6;
op3val:0x7ec4b56d; valaddr_reg:x3; val_offset:2337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2337*FLEN/8, x4, x1, x2)

inst_780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fa438 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x38a8b3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cdbf4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eefa438; op2val:0x3fb8a8b3;
op3val:0x7f2cdbf4; valaddr_reg:x3; val_offset:2340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2340*FLEN/8, x4, x1, x2)

inst_781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fa438 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x38a8b3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cdbf4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eefa438; op2val:0x3fb8a8b3;
op3val:0x7f2cdbf4; valaddr_reg:x3; val_offset:2343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2343*FLEN/8, x4, x1, x2)

inst_782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fa438 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x38a8b3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cdbf4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eefa438; op2val:0x3fb8a8b3;
op3val:0x7f2cdbf4; valaddr_reg:x3; val_offset:2346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2346*FLEN/8, x4, x1, x2)

inst_783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fa438 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x38a8b3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cdbf4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eefa438; op2val:0x3fb8a8b3;
op3val:0x7f2cdbf4; valaddr_reg:x3; val_offset:2349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2349*FLEN/8, x4, x1, x2)

inst_784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fa438 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x38a8b3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cdbf4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7eefa438; op2val:0x3fb8a8b3;
op3val:0x7f2cdbf4; valaddr_reg:x3; val_offset:2352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2352*FLEN/8, x4, x1, x2)

inst_785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x41568d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef0ef31; op2val:0x3fc1568d;
op3val:0x7f35f5c9; valaddr_reg:x3; val_offset:2355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2355*FLEN/8, x4, x1, x2)

inst_786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x41568d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef0ef31; op2val:0x3fc1568d;
op3val:0x7f35f5c9; valaddr_reg:x3; val_offset:2358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2358*FLEN/8, x4, x1, x2)

inst_787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x41568d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef0ef31; op2val:0x3fc1568d;
op3val:0x7f35f5c9; valaddr_reg:x3; val_offset:2361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2361*FLEN/8, x4, x1, x2)

inst_788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x41568d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef0ef31; op2val:0x3fc1568d;
op3val:0x7f35f5c9; valaddr_reg:x3; val_offset:2364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2364*FLEN/8, x4, x1, x2)

inst_789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x41568d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef0ef31; op2val:0x3fc1568d;
op3val:0x7f35f5c9; valaddr_reg:x3; val_offset:2367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2367*FLEN/8, x4, x1, x2)

inst_790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x739ff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21bb1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19e9a5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef39ff0; op2val:0x3fa1bb1a;
op3val:0x7f19e9a5; valaddr_reg:x3; val_offset:2370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2370*FLEN/8, x4, x1, x2)

inst_791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x739ff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21bb1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19e9a5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef39ff0; op2val:0x3fa1bb1a;
op3val:0x7f19e9a5; valaddr_reg:x3; val_offset:2373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2373*FLEN/8, x4, x1, x2)

inst_792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x739ff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21bb1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19e9a5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef39ff0; op2val:0x3fa1bb1a;
op3val:0x7f19e9a5; valaddr_reg:x3; val_offset:2376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2376*FLEN/8, x4, x1, x2)

inst_793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x739ff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21bb1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19e9a5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef39ff0; op2val:0x3fa1bb1a;
op3val:0x7f19e9a5; valaddr_reg:x3; val_offset:2379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2379*FLEN/8, x4, x1, x2)

inst_794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x739ff0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x21bb1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19e9a5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef39ff0; op2val:0x3fa1bb1a;
op3val:0x7f19e9a5; valaddr_reg:x3; val_offset:2382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2382*FLEN/8, x4, x1, x2)

inst_795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x15365b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef557bf; op2val:0x3f15365b;
op3val:0x7e8f002a; valaddr_reg:x3; val_offset:2385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2385*FLEN/8, x4, x1, x2)

inst_796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x15365b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef557bf; op2val:0x3f15365b;
op3val:0x7e8f002a; valaddr_reg:x3; val_offset:2388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2388*FLEN/8, x4, x1, x2)

inst_797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x15365b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef557bf; op2val:0x3f15365b;
op3val:0x7e8f002a; valaddr_reg:x3; val_offset:2391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2391*FLEN/8, x4, x1, x2)

inst_798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x15365b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef557bf; op2val:0x3f15365b;
op3val:0x7e8f002a; valaddr_reg:x3; val_offset:2394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2394*FLEN/8, x4, x1, x2)

inst_799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x15365b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef557bf; op2val:0x3f15365b;
op3val:0x7e8f002a; valaddr_reg:x3; val_offset:2397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2397*FLEN/8, x4, x1, x2)

inst_800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x787f5a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x446e61 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eaca6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef87f5a; op2val:0x3fc46e61;
op3val:0x7f3eaca6; valaddr_reg:x3; val_offset:2400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2400*FLEN/8, x4, x1, x2)

inst_801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x787f5a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x446e61 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eaca6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef87f5a; op2val:0x3fc46e61;
op3val:0x7f3eaca6; valaddr_reg:x3; val_offset:2403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2403*FLEN/8, x4, x1, x2)

inst_802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x787f5a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x446e61 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eaca6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef87f5a; op2val:0x3fc46e61;
op3val:0x7f3eaca6; valaddr_reg:x3; val_offset:2406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2406*FLEN/8, x4, x1, x2)

inst_803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x787f5a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x446e61 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eaca6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef87f5a; op2val:0x3fc46e61;
op3val:0x7f3eaca6; valaddr_reg:x3; val_offset:2409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2409*FLEN/8, x4, x1, x2)

inst_804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x787f5a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x446e61 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eaca6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef87f5a; op2val:0x3fc46e61;
op3val:0x7f3eaca6; valaddr_reg:x3; val_offset:2412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2412*FLEN/8, x4, x1, x2)

inst_805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x63e702 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9f575; op2val:0x3de3e702;
op3val:0x7d5e8636; valaddr_reg:x3; val_offset:2415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2415*FLEN/8, x4, x1, x2)

inst_806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x63e702 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9f575; op2val:0x3de3e702;
op3val:0x7d5e8636; valaddr_reg:x3; val_offset:2418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2418*FLEN/8, x4, x1, x2)

inst_807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x63e702 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9f575; op2val:0x3de3e702;
op3val:0x7d5e8636; valaddr_reg:x3; val_offset:2421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2421*FLEN/8, x4, x1, x2)

inst_808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x63e702 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9f575; op2val:0x3de3e702;
op3val:0x7d5e8636; valaddr_reg:x3; val_offset:2424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2424*FLEN/8, x4, x1, x2)

inst_809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x63e702 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ef9f575; op2val:0x3de3e702;
op3val:0x7d5e8636; valaddr_reg:x3; val_offset:2427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2427*FLEN/8, x4, x1, x2)

inst_810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7abe59 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cc009 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x198816 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efabe59; op2val:0x3f9cc009;
op3val:0x7f198816; valaddr_reg:x3; val_offset:2430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2430*FLEN/8, x4, x1, x2)

inst_811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7abe59 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cc009 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x198816 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efabe59; op2val:0x3f9cc009;
op3val:0x7f198816; valaddr_reg:x3; val_offset:2433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2433*FLEN/8, x4, x1, x2)

inst_812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7abe59 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cc009 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x198816 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efabe59; op2val:0x3f9cc009;
op3val:0x7f198816; valaddr_reg:x3; val_offset:2436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2436*FLEN/8, x4, x1, x2)

inst_813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7abe59 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cc009 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x198816 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efabe59; op2val:0x3f9cc009;
op3val:0x7f198816; valaddr_reg:x3; val_offset:2439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2439*FLEN/8, x4, x1, x2)

inst_814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7abe59 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cc009 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x198816 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efabe59; op2val:0x3f9cc009;
op3val:0x7f198816; valaddr_reg:x3; val_offset:2442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2442*FLEN/8, x4, x1, x2)

inst_815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d89da and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5dbf76 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b9da0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efd89da; op2val:0x3e5dbf76;
op3val:0x7ddb9da0; valaddr_reg:x3; val_offset:2445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2445*FLEN/8, x4, x1, x2)

inst_816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d89da and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5dbf76 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b9da0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efd89da; op2val:0x3e5dbf76;
op3val:0x7ddb9da0; valaddr_reg:x3; val_offset:2448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2448*FLEN/8, x4, x1, x2)

inst_817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d89da and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5dbf76 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b9da0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efd89da; op2val:0x3e5dbf76;
op3val:0x7ddb9da0; valaddr_reg:x3; val_offset:2451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2451*FLEN/8, x4, x1, x2)

inst_818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d89da and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5dbf76 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b9da0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efd89da; op2val:0x3e5dbf76;
op3val:0x7ddb9da0; valaddr_reg:x3; val_offset:2454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2454*FLEN/8, x4, x1, x2)

inst_819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d89da and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5dbf76 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b9da0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7efd89da; op2val:0x3e5dbf76;
op3val:0x7ddb9da0; valaddr_reg:x3; val_offset:2457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2457*FLEN/8, x4, x1, x2)

inst_820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01d495 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x238717 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x25ddbc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f01d495; op2val:0x3da38717;
op3val:0x7d25ddbc; valaddr_reg:x3; val_offset:2460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2460*FLEN/8, x4, x1, x2)

inst_821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01d495 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x238717 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x25ddbc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f01d495; op2val:0x3da38717;
op3val:0x7d25ddbc; valaddr_reg:x3; val_offset:2463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2463*FLEN/8, x4, x1, x2)

inst_822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01d495 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x238717 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x25ddbc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f01d495; op2val:0x3da38717;
op3val:0x7d25ddbc; valaddr_reg:x3; val_offset:2466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2466*FLEN/8, x4, x1, x2)

inst_823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01d495 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x238717 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x25ddbc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f01d495; op2val:0x3da38717;
op3val:0x7d25ddbc; valaddr_reg:x3; val_offset:2469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2469*FLEN/8, x4, x1, x2)

inst_824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01d495 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x238717 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x25ddbc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f01d495; op2val:0x3da38717;
op3val:0x7d25ddbc; valaddr_reg:x3; val_offset:2472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2472*FLEN/8, x4, x1, x2)

inst_825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20e19c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02a304; op2val:0x3f20e19c;
op3val:0x7ea43208; valaddr_reg:x3; val_offset:2475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2475*FLEN/8, x4, x1, x2)

inst_826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20e19c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02a304; op2val:0x3f20e19c;
op3val:0x7ea43208; valaddr_reg:x3; val_offset:2478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2478*FLEN/8, x4, x1, x2)

inst_827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20e19c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02a304; op2val:0x3f20e19c;
op3val:0x7ea43208; valaddr_reg:x3; val_offset:2481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2481*FLEN/8, x4, x1, x2)

inst_828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20e19c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02a304; op2val:0x3f20e19c;
op3val:0x7ea43208; valaddr_reg:x3; val_offset:2484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2484*FLEN/8, x4, x1, x2)

inst_829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20e19c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f02a304; op2val:0x3f20e19c;
op3val:0x7ea43208; valaddr_reg:x3; val_offset:2487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2487*FLEN/8, x4, x1, x2)

inst_830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040be1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36d928 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ca0ea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f040be1; op2val:0x3fb6d928;
op3val:0x7f3ca0ea; valaddr_reg:x3; val_offset:2490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2490*FLEN/8, x4, x1, x2)

inst_831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040be1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36d928 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ca0ea and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f040be1; op2val:0x3fb6d928;
op3val:0x7f3ca0ea; valaddr_reg:x3; val_offset:2493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2493*FLEN/8, x4, x1, x2)

inst_832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040be1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36d928 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ca0ea and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f040be1; op2val:0x3fb6d928;
op3val:0x7f3ca0ea; valaddr_reg:x3; val_offset:2496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2496*FLEN/8, x4, x1, x2)

inst_833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040be1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36d928 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ca0ea and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f040be1; op2val:0x3fb6d928;
op3val:0x7f3ca0ea; valaddr_reg:x3; val_offset:2499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2499*FLEN/8, x4, x1, x2)

inst_834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040be1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x36d928 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ca0ea and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f040be1; op2val:0x3fb6d928;
op3val:0x7f3ca0ea; valaddr_reg:x3; val_offset:2502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2502*FLEN/8, x4, x1, x2)

inst_835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0422ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e35d1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x23525d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0422ad; op2val:0x3f1e35d1;
op3val:0x7ea3525d; valaddr_reg:x3; val_offset:2505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2505*FLEN/8, x4, x1, x2)

inst_836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0422ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e35d1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x23525d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0422ad; op2val:0x3f1e35d1;
op3val:0x7ea3525d; valaddr_reg:x3; val_offset:2508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2508*FLEN/8, x4, x1, x2)

inst_837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0422ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e35d1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x23525d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0422ad; op2val:0x3f1e35d1;
op3val:0x7ea3525d; valaddr_reg:x3; val_offset:2511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2511*FLEN/8, x4, x1, x2)

inst_838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0422ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e35d1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x23525d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0422ad; op2val:0x3f1e35d1;
op3val:0x7ea3525d; valaddr_reg:x3; val_offset:2514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2514*FLEN/8, x4, x1, x2)

inst_839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0422ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e35d1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x23525d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0422ad; op2val:0x3f1e35d1;
op3val:0x7ea3525d; valaddr_reg:x3; val_offset:2517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2517*FLEN/8, x4, x1, x2)

inst_840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x057f28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ad721 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x643cef and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f057f28; op2val:0x3f5ad721;
op3val:0x7ee43cef; valaddr_reg:x3; val_offset:2520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2520*FLEN/8, x4, x1, x2)

inst_841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x057f28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ad721 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x643cef and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f057f28; op2val:0x3f5ad721;
op3val:0x7ee43cef; valaddr_reg:x3; val_offset:2523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2523*FLEN/8, x4, x1, x2)

inst_842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x057f28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ad721 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x643cef and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f057f28; op2val:0x3f5ad721;
op3val:0x7ee43cef; valaddr_reg:x3; val_offset:2526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2526*FLEN/8, x4, x1, x2)

inst_843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x057f28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ad721 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x643cef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f057f28; op2val:0x3f5ad721;
op3val:0x7ee43cef; valaddr_reg:x3; val_offset:2529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2529*FLEN/8, x4, x1, x2)

inst_844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x057f28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ad721 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x643cef and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f057f28; op2val:0x3f5ad721;
op3val:0x7ee43cef; valaddr_reg:x3; val_offset:2532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2532*FLEN/8, x4, x1, x2)

inst_845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063ff4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2075c6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x284b78 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063ff4; op2val:0x3fa075c6;
op3val:0x7f284b78; valaddr_reg:x3; val_offset:2535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2535*FLEN/8, x4, x1, x2)

inst_846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063ff4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2075c6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x284b78 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063ff4; op2val:0x3fa075c6;
op3val:0x7f284b78; valaddr_reg:x3; val_offset:2538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2538*FLEN/8, x4, x1, x2)

inst_847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063ff4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2075c6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x284b78 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063ff4; op2val:0x3fa075c6;
op3val:0x7f284b78; valaddr_reg:x3; val_offset:2541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2541*FLEN/8, x4, x1, x2)

inst_848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063ff4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2075c6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x284b78 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063ff4; op2val:0x3fa075c6;
op3val:0x7f284b78; valaddr_reg:x3; val_offset:2544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2544*FLEN/8, x4, x1, x2)

inst_849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063ff4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2075c6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x284b78 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f063ff4; op2val:0x3fa075c6;
op3val:0x7f284b78; valaddr_reg:x3; val_offset:2547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2547*FLEN/8, x4, x1, x2)

inst_850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07b0f7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x665f5c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x743713 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f07b0f7; op2val:0x3f665f5c;
op3val:0x7ef43713; valaddr_reg:x3; val_offset:2550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2550*FLEN/8, x4, x1, x2)

inst_851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07b0f7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x665f5c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x743713 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f07b0f7; op2val:0x3f665f5c;
op3val:0x7ef43713; valaddr_reg:x3; val_offset:2553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2553*FLEN/8, x4, x1, x2)

inst_852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07b0f7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x665f5c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x743713 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f07b0f7; op2val:0x3f665f5c;
op3val:0x7ef43713; valaddr_reg:x3; val_offset:2556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2556*FLEN/8, x4, x1, x2)

inst_853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07b0f7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x665f5c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x743713 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f07b0f7; op2val:0x3f665f5c;
op3val:0x7ef43713; valaddr_reg:x3; val_offset:2559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2559*FLEN/8, x4, x1, x2)

inst_854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07b0f7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x665f5c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x743713 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f07b0f7; op2val:0x3f665f5c;
op3val:0x7ef43713; valaddr_reg:x3; val_offset:2562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2562*FLEN/8, x4, x1, x2)

inst_855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097882 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d2845 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x28c910 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f097882; op2val:0x3f9d2845;
op3val:0x7f28c910; valaddr_reg:x3; val_offset:2565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2565*FLEN/8, x4, x1, x2)

inst_856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097882 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d2845 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x28c910 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f097882; op2val:0x3f9d2845;
op3val:0x7f28c910; valaddr_reg:x3; val_offset:2568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2568*FLEN/8, x4, x1, x2)

inst_857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097882 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d2845 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x28c910 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f097882; op2val:0x3f9d2845;
op3val:0x7f28c910; valaddr_reg:x3; val_offset:2571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2571*FLEN/8, x4, x1, x2)

inst_858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097882 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d2845 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x28c910 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f097882; op2val:0x3f9d2845;
op3val:0x7f28c910; valaddr_reg:x3; val_offset:2574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2574*FLEN/8, x4, x1, x2)

inst_859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097882 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d2845 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x28c910 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f097882; op2val:0x3f9d2845;
op3val:0x7f28c910; valaddr_reg:x3; val_offset:2577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2577*FLEN/8, x4, x1, x2)

inst_860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aa728 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x5d031f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x6f67fd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aa728; op2val:0x3cdd031f;
op3val:0x7c6f67fd; valaddr_reg:x3; val_offset:2580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2580*FLEN/8, x4, x1, x2)

inst_861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aa728 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x5d031f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x6f67fd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aa728; op2val:0x3cdd031f;
op3val:0x7c6f67fd; valaddr_reg:x3; val_offset:2583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2583*FLEN/8, x4, x1, x2)

inst_862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aa728 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x5d031f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x6f67fd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aa728; op2val:0x3cdd031f;
op3val:0x7c6f67fd; valaddr_reg:x3; val_offset:2586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2586*FLEN/8, x4, x1, x2)

inst_863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aa728 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x5d031f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x6f67fd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aa728; op2val:0x3cdd031f;
op3val:0x7c6f67fd; valaddr_reg:x3; val_offset:2589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2589*FLEN/8, x4, x1, x2)

inst_864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aa728 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x5d031f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x6f67fd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0aa728; op2val:0x3cdd031f;
op3val:0x7c6f67fd; valaddr_reg:x3; val_offset:2592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2592*FLEN/8, x4, x1, x2)

inst_865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b09b4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x636346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76ff0a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b09b4; op2val:0x3f636346;
op3val:0x7ef6ff0a; valaddr_reg:x3; val_offset:2595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2595*FLEN/8, x4, x1, x2)

inst_866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b09b4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x636346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76ff0a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b09b4; op2val:0x3f636346;
op3val:0x7ef6ff0a; valaddr_reg:x3; val_offset:2598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2598*FLEN/8, x4, x1, x2)

inst_867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b09b4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x636346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76ff0a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b09b4; op2val:0x3f636346;
op3val:0x7ef6ff0a; valaddr_reg:x3; val_offset:2601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2601*FLEN/8, x4, x1, x2)

inst_868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b09b4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x636346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76ff0a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b09b4; op2val:0x3f636346;
op3val:0x7ef6ff0a; valaddr_reg:x3; val_offset:2604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2604*FLEN/8, x4, x1, x2)

inst_869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b09b4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x636346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76ff0a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b09b4; op2val:0x3f636346;
op3val:0x7ef6ff0a; valaddr_reg:x3; val_offset:2607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2607*FLEN/8, x4, x1, x2)

inst_870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b294d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x702ea5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x029014 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b294d; op2val:0x3e702ea5;
op3val:0x7e029014; valaddr_reg:x3; val_offset:2610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2610*FLEN/8, x4, x1, x2)

inst_871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b294d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x702ea5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x029014 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b294d; op2val:0x3e702ea5;
op3val:0x7e029014; valaddr_reg:x3; val_offset:2613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2613*FLEN/8, x4, x1, x2)

inst_872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b294d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x702ea5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x029014 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b294d; op2val:0x3e702ea5;
op3val:0x7e029014; valaddr_reg:x3; val_offset:2616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2616*FLEN/8, x4, x1, x2)

inst_873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b294d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x702ea5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x029014 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b294d; op2val:0x3e702ea5;
op3val:0x7e029014; valaddr_reg:x3; val_offset:2619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2619*FLEN/8, x4, x1, x2)

inst_874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b294d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x702ea5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x029014 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b294d; op2val:0x3e702ea5;
op3val:0x7e029014; valaddr_reg:x3; val_offset:2622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2622*FLEN/8, x4, x1, x2)

inst_875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3cb2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4470eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x55afc7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b3cb2; op2val:0x3f4470eb;
op3val:0x7ed5afc7; valaddr_reg:x3; val_offset:2625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2625*FLEN/8, x4, x1, x2)

inst_876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3cb2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4470eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x55afc7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b3cb2; op2val:0x3f4470eb;
op3val:0x7ed5afc7; valaddr_reg:x3; val_offset:2628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2628*FLEN/8, x4, x1, x2)

inst_877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3cb2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4470eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x55afc7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b3cb2; op2val:0x3f4470eb;
op3val:0x7ed5afc7; valaddr_reg:x3; val_offset:2631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2631*FLEN/8, x4, x1, x2)

inst_878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3cb2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4470eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x55afc7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b3cb2; op2val:0x3f4470eb;
op3val:0x7ed5afc7; valaddr_reg:x3; val_offset:2634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2634*FLEN/8, x4, x1, x2)

inst_879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3cb2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4470eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x55afc7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0b3cb2; op2val:0x3f4470eb;
op3val:0x7ed5afc7; valaddr_reg:x3; val_offset:2637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2637*FLEN/8, x4, x1, x2)

inst_880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a1abc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c0db1; op2val:0x3eca1abc;
op3val:0x7e5d22dd; valaddr_reg:x3; val_offset:2640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2640*FLEN/8, x4, x1, x2)

inst_881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a1abc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c0db1; op2val:0x3eca1abc;
op3val:0x7e5d22dd; valaddr_reg:x3; val_offset:2643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2643*FLEN/8, x4, x1, x2)

inst_882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a1abc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c0db1; op2val:0x3eca1abc;
op3val:0x7e5d22dd; valaddr_reg:x3; val_offset:2646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2646*FLEN/8, x4, x1, x2)

inst_883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a1abc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c0db1; op2val:0x3eca1abc;
op3val:0x7e5d22dd; valaddr_reg:x3; val_offset:2649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2649*FLEN/8, x4, x1, x2)

inst_884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a1abc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0c0db1; op2val:0x3eca1abc;
op3val:0x7e5d22dd; valaddr_reg:x3; val_offset:2652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2652*FLEN/8, x4, x1, x2)

inst_885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cc05d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x406ebf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x539a54 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cc05d; op2val:0x3f406ebf;
op3val:0x7ed39a54; valaddr_reg:x3; val_offset:2655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2655*FLEN/8, x4, x1, x2)

inst_886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cc05d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x406ebf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x539a54 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cc05d; op2val:0x3f406ebf;
op3val:0x7ed39a54; valaddr_reg:x3; val_offset:2658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2658*FLEN/8, x4, x1, x2)

inst_887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cc05d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x406ebf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x539a54 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cc05d; op2val:0x3f406ebf;
op3val:0x7ed39a54; valaddr_reg:x3; val_offset:2661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2661*FLEN/8, x4, x1, x2)

inst_888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cc05d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x406ebf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x539a54 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cc05d; op2val:0x3f406ebf;
op3val:0x7ed39a54; valaddr_reg:x3; val_offset:2664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2664*FLEN/8, x4, x1, x2)

inst_889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cc05d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x406ebf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x539a54 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f0cc05d; op2val:0x3f406ebf;
op3val:0x7ed39a54; valaddr_reg:x3; val_offset:2667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2667*FLEN/8, x4, x1, x2)

inst_890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1006e7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x232351 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x379087 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1006e7; op2val:0x3f232351;
op3val:0x7eb79087; valaddr_reg:x3; val_offset:2670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2670*FLEN/8, x4, x1, x2)

inst_891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1006e7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x232351 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x379087 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1006e7; op2val:0x3f232351;
op3val:0x7eb79087; valaddr_reg:x3; val_offset:2673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2673*FLEN/8, x4, x1, x2)

inst_892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1006e7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x232351 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x379087 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1006e7; op2val:0x3f232351;
op3val:0x7eb79087; valaddr_reg:x3; val_offset:2676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2676*FLEN/8, x4, x1, x2)

inst_893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1006e7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x232351 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x379087 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1006e7; op2val:0x3f232351;
op3val:0x7eb79087; valaddr_reg:x3; val_offset:2679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2679*FLEN/8, x4, x1, x2)

inst_894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1006e7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x232351 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x379087 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1006e7; op2val:0x3f232351;
op3val:0x7eb79087; valaddr_reg:x3; val_offset:2682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2682*FLEN/8, x4, x1, x2)

inst_895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x101a92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6047a7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c7f2b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f101a92; op2val:0x3f6047a7;
op3val:0x7efc7f2b; valaddr_reg:x3; val_offset:2685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2685*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_8)

inst_896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x101a92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6047a7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c7f2b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f101a92; op2val:0x3f6047a7;
op3val:0x7efc7f2b; valaddr_reg:x3; val_offset:2688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2688*FLEN/8, x4, x1, x2)

inst_897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x101a92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6047a7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c7f2b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f101a92; op2val:0x3f6047a7;
op3val:0x7efc7f2b; valaddr_reg:x3; val_offset:2691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2691*FLEN/8, x4, x1, x2)

inst_898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x101a92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6047a7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c7f2b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f101a92; op2val:0x3f6047a7;
op3val:0x7efc7f2b; valaddr_reg:x3; val_offset:2694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2694*FLEN/8, x4, x1, x2)

inst_899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x101a92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6047a7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c7f2b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f101a92; op2val:0x3f6047a7;
op3val:0x7efc7f2b; valaddr_reg:x3; val_offset:2697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2697*FLEN/8, x4, x1, x2)

inst_900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d2db and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437898 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5eb09e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d2db; op2val:0x3ec37898;
op3val:0x7e5eb09e; valaddr_reg:x3; val_offset:2700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2700*FLEN/8, x4, x1, x2)

inst_901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d2db and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437898 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5eb09e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d2db; op2val:0x3ec37898;
op3val:0x7e5eb09e; valaddr_reg:x3; val_offset:2703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2703*FLEN/8, x4, x1, x2)

inst_902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d2db and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437898 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5eb09e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d2db; op2val:0x3ec37898;
op3val:0x7e5eb09e; valaddr_reg:x3; val_offset:2706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2706*FLEN/8, x4, x1, x2)

inst_903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d2db and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437898 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5eb09e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d2db; op2val:0x3ec37898;
op3val:0x7e5eb09e; valaddr_reg:x3; val_offset:2709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2709*FLEN/8, x4, x1, x2)

inst_904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11d2db and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437898 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5eb09e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f11d2db; op2val:0x3ec37898;
op3val:0x7e5eb09e; valaddr_reg:x3; val_offset:2712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2712*FLEN/8, x4, x1, x2)

inst_905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12cc2f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3fdd86 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c0abd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f12cc2f; op2val:0x3f3fdd86;
op3val:0x7edc0abd; valaddr_reg:x3; val_offset:2715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2715*FLEN/8, x4, x1, x2)

inst_906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12cc2f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3fdd86 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c0abd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f12cc2f; op2val:0x3f3fdd86;
op3val:0x7edc0abd; valaddr_reg:x3; val_offset:2718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2718*FLEN/8, x4, x1, x2)

inst_907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12cc2f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3fdd86 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c0abd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f12cc2f; op2val:0x3f3fdd86;
op3val:0x7edc0abd; valaddr_reg:x3; val_offset:2721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2721*FLEN/8, x4, x1, x2)

inst_908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12cc2f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3fdd86 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c0abd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f12cc2f; op2val:0x3f3fdd86;
op3val:0x7edc0abd; valaddr_reg:x3; val_offset:2724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2724*FLEN/8, x4, x1, x2)

inst_909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12cc2f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3fdd86 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c0abd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f12cc2f; op2val:0x3f3fdd86;
op3val:0x7edc0abd; valaddr_reg:x3; val_offset:2727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2727*FLEN/8, x4, x1, x2)

inst_910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14462d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x284ddf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42f650 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f14462d; op2val:0x3f284ddf;
op3val:0x7ec2f650; valaddr_reg:x3; val_offset:2730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2730*FLEN/8, x4, x1, x2)

inst_911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14462d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x284ddf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42f650 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f14462d; op2val:0x3f284ddf;
op3val:0x7ec2f650; valaddr_reg:x3; val_offset:2733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2733*FLEN/8, x4, x1, x2)

inst_912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14462d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x284ddf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42f650 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f14462d; op2val:0x3f284ddf;
op3val:0x7ec2f650; valaddr_reg:x3; val_offset:2736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2736*FLEN/8, x4, x1, x2)

inst_913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14462d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x284ddf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42f650 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f14462d; op2val:0x3f284ddf;
op3val:0x7ec2f650; valaddr_reg:x3; val_offset:2739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2739*FLEN/8, x4, x1, x2)

inst_914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14462d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x284ddf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42f650 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f14462d; op2val:0x3f284ddf;
op3val:0x7ec2f650; valaddr_reg:x3; val_offset:2742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2742*FLEN/8, x4, x1, x2)

inst_915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x12771a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2c3aa4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168405; op2val:0x3f92771a;
op3val:0x7f2c3aa4; valaddr_reg:x3; val_offset:2745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2745*FLEN/8, x4, x1, x2)

inst_916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x12771a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2c3aa4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168405; op2val:0x3f92771a;
op3val:0x7f2c3aa4; valaddr_reg:x3; val_offset:2748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2748*FLEN/8, x4, x1, x2)

inst_917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x12771a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2c3aa4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168405; op2val:0x3f92771a;
op3val:0x7f2c3aa4; valaddr_reg:x3; val_offset:2751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2751*FLEN/8, x4, x1, x2)

inst_918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x12771a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2c3aa4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168405; op2val:0x3f92771a;
op3val:0x7f2c3aa4; valaddr_reg:x3; val_offset:2754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2754*FLEN/8, x4, x1, x2)

inst_919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x12771a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2c3aa4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f168405; op2val:0x3f92771a;
op3val:0x7f2c3aa4; valaddr_reg:x3; val_offset:2757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2757*FLEN/8, x4, x1, x2)

inst_920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175d9e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dc428 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a90cc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175d9e; op2val:0x3f9dc428;
op3val:0x7f3a90cc; valaddr_reg:x3; val_offset:2760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2760*FLEN/8, x4, x1, x2)

inst_921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175d9e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dc428 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a90cc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175d9e; op2val:0x3f9dc428;
op3val:0x7f3a90cc; valaddr_reg:x3; val_offset:2763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2763*FLEN/8, x4, x1, x2)

inst_922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175d9e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dc428 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a90cc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175d9e; op2val:0x3f9dc428;
op3val:0x7f3a90cc; valaddr_reg:x3; val_offset:2766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2766*FLEN/8, x4, x1, x2)

inst_923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175d9e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dc428 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a90cc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175d9e; op2val:0x3f9dc428;
op3val:0x7f3a90cc; valaddr_reg:x3; val_offset:2769*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2769*FLEN/8, x4, x1, x2)

inst_924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x175d9e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dc428 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a90cc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f175d9e; op2val:0x3f9dc428;
op3val:0x7f3a90cc; valaddr_reg:x3; val_offset:2772*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2772*FLEN/8, x4, x1, x2)

inst_925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6142c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f188556; op2val:0x3f6142c5;
op3val:0x7f0634f9; valaddr_reg:x3; val_offset:2775*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2775*FLEN/8, x4, x1, x2)

inst_926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6142c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f188556; op2val:0x3f6142c5;
op3val:0x7f0634f9; valaddr_reg:x3; val_offset:2778*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2778*FLEN/8, x4, x1, x2)

inst_927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6142c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f188556; op2val:0x3f6142c5;
op3val:0x7f0634f9; valaddr_reg:x3; val_offset:2781*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2781*FLEN/8, x4, x1, x2)

inst_928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6142c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f188556; op2val:0x3f6142c5;
op3val:0x7f0634f9; valaddr_reg:x3; val_offset:2784*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2784*FLEN/8, x4, x1, x2)

inst_929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6142c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f188556; op2val:0x3f6142c5;
op3val:0x7f0634f9; valaddr_reg:x3; val_offset:2787*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2787*FLEN/8, x4, x1, x2)

inst_930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bcf66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b5a50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d1b15 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bcf66; op2val:0x3f9b5a50;
op3val:0x7f3d1b15; valaddr_reg:x3; val_offset:2790*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2790*FLEN/8, x4, x1, x2)

inst_931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bcf66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b5a50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d1b15 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bcf66; op2val:0x3f9b5a50;
op3val:0x7f3d1b15; valaddr_reg:x3; val_offset:2793*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2793*FLEN/8, x4, x1, x2)

inst_932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bcf66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b5a50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d1b15 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bcf66; op2val:0x3f9b5a50;
op3val:0x7f3d1b15; valaddr_reg:x3; val_offset:2796*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2796*FLEN/8, x4, x1, x2)

inst_933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bcf66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b5a50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d1b15 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bcf66; op2val:0x3f9b5a50;
op3val:0x7f3d1b15; valaddr_reg:x3; val_offset:2799*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2799*FLEN/8, x4, x1, x2)

inst_934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bcf66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b5a50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d1b15 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1bcf66; op2val:0x3f9b5a50;
op3val:0x7f3d1b15; valaddr_reg:x3; val_offset:2802*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2802*FLEN/8, x4, x1, x2)

inst_935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d1eb3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x67748e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e0e3c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d1eb3; op2val:0x3f67748e;
op3val:0x7f0e0e3c; valaddr_reg:x3; val_offset:2805*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2805*FLEN/8, x4, x1, x2)

inst_936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d1eb3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x67748e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e0e3c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d1eb3; op2val:0x3f67748e;
op3val:0x7f0e0e3c; valaddr_reg:x3; val_offset:2808*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2808*FLEN/8, x4, x1, x2)

inst_937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d1eb3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x67748e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e0e3c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d1eb3; op2val:0x3f67748e;
op3val:0x7f0e0e3c; valaddr_reg:x3; val_offset:2811*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2811*FLEN/8, x4, x1, x2)

inst_938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d1eb3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x67748e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e0e3c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d1eb3; op2val:0x3f67748e;
op3val:0x7f0e0e3c; valaddr_reg:x3; val_offset:2814*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2814*FLEN/8, x4, x1, x2)

inst_939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d1eb3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x67748e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e0e3c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d1eb3; op2val:0x3f67748e;
op3val:0x7f0e0e3c; valaddr_reg:x3; val_offset:2817*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2817*FLEN/8, x4, x1, x2)

inst_940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3b8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x071a05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25f4c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3b8f; op2val:0x3f071a05;
op3val:0x7ea5f4c8; valaddr_reg:x3; val_offset:2820*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2820*FLEN/8, x4, x1, x2)

inst_941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3b8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x071a05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25f4c8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3b8f; op2val:0x3f071a05;
op3val:0x7ea5f4c8; valaddr_reg:x3; val_offset:2823*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2823*FLEN/8, x4, x1, x2)

inst_942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3b8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x071a05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25f4c8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3b8f; op2val:0x3f071a05;
op3val:0x7ea5f4c8; valaddr_reg:x3; val_offset:2826*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2826*FLEN/8, x4, x1, x2)

inst_943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3b8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x071a05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25f4c8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3b8f; op2val:0x3f071a05;
op3val:0x7ea5f4c8; valaddr_reg:x3; val_offset:2829*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2829*FLEN/8, x4, x1, x2)

inst_944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3b8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x071a05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25f4c8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3b8f; op2val:0x3f071a05;
op3val:0x7ea5f4c8; valaddr_reg:x3; val_offset:2832*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2832*FLEN/8, x4, x1, x2)

inst_945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3e74 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x21ac9b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x469c99 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3e74; op2val:0x3ea1ac9b;
op3val:0x7e469c99; valaddr_reg:x3; val_offset:2835*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2835*FLEN/8, x4, x1, x2)

inst_946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3e74 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x21ac9b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x469c99 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3e74; op2val:0x3ea1ac9b;
op3val:0x7e469c99; valaddr_reg:x3; val_offset:2838*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2838*FLEN/8, x4, x1, x2)

inst_947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3e74 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x21ac9b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x469c99 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3e74; op2val:0x3ea1ac9b;
op3val:0x7e469c99; valaddr_reg:x3; val_offset:2841*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2841*FLEN/8, x4, x1, x2)

inst_948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3e74 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x21ac9b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x469c99 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3e74; op2val:0x3ea1ac9b;
op3val:0x7e469c99; valaddr_reg:x3; val_offset:2844*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2844*FLEN/8, x4, x1, x2)

inst_949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d3e74 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x21ac9b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x469c99 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d3e74; op2val:0x3ea1ac9b;
op3val:0x7e469c99; valaddr_reg:x3; val_offset:2847*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2847*FLEN/8, x4, x1, x2)

inst_950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d4d3d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06fc02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25e290 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d4d3d; op2val:0x3f86fc02;
op3val:0x7f25e290; valaddr_reg:x3; val_offset:2850*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2850*FLEN/8, x4, x1, x2)

inst_951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d4d3d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06fc02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25e290 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d4d3d; op2val:0x3f86fc02;
op3val:0x7f25e290; valaddr_reg:x3; val_offset:2853*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2853*FLEN/8, x4, x1, x2)

inst_952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d4d3d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06fc02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25e290 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d4d3d; op2val:0x3f86fc02;
op3val:0x7f25e290; valaddr_reg:x3; val_offset:2856*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2856*FLEN/8, x4, x1, x2)

inst_953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d4d3d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06fc02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25e290 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d4d3d; op2val:0x3f86fc02;
op3val:0x7f25e290; valaddr_reg:x3; val_offset:2859*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2859*FLEN/8, x4, x1, x2)

inst_954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d4d3d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06fc02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25e290 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1d4d3d; op2val:0x3f86fc02;
op3val:0x7f25e290; valaddr_reg:x3; val_offset:2862*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2862*FLEN/8, x4, x1, x2)

inst_955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dcf3e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x314854 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5a91c1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dcf3e; op2val:0x3eb14854;
op3val:0x7e5a91c1; valaddr_reg:x3; val_offset:2865*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2865*FLEN/8, x4, x1, x2)

inst_956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dcf3e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x314854 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5a91c1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dcf3e; op2val:0x3eb14854;
op3val:0x7e5a91c1; valaddr_reg:x3; val_offset:2868*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2868*FLEN/8, x4, x1, x2)

inst_957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dcf3e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x314854 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5a91c1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dcf3e; op2val:0x3eb14854;
op3val:0x7e5a91c1; valaddr_reg:x3; val_offset:2871*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2871*FLEN/8, x4, x1, x2)

inst_958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dcf3e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x314854 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5a91c1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dcf3e; op2val:0x3eb14854;
op3val:0x7e5a91c1; valaddr_reg:x3; val_offset:2874*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2874*FLEN/8, x4, x1, x2)

inst_959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dcf3e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x314854 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5a91c1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1dcf3e; op2val:0x3eb14854;
op3val:0x7e5a91c1; valaddr_reg:x3; val_offset:2877*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2877*FLEN/8, x4, x1, x2)

inst_960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e9f2e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02ca7f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22149c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e9f2e; op2val:0x3e82ca7f;
op3val:0x7e22149c; valaddr_reg:x3; val_offset:2880*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2880*FLEN/8, x4, x1, x2)

inst_961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e9f2e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02ca7f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22149c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e9f2e; op2val:0x3e82ca7f;
op3val:0x7e22149c; valaddr_reg:x3; val_offset:2883*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2883*FLEN/8, x4, x1, x2)

inst_962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e9f2e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02ca7f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22149c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e9f2e; op2val:0x3e82ca7f;
op3val:0x7e22149c; valaddr_reg:x3; val_offset:2886*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2886*FLEN/8, x4, x1, x2)

inst_963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e9f2e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02ca7f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22149c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e9f2e; op2val:0x3e82ca7f;
op3val:0x7e22149c; valaddr_reg:x3; val_offset:2889*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2889*FLEN/8, x4, x1, x2)

inst_964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e9f2e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02ca7f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22149c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1e9f2e; op2val:0x3e82ca7f;
op3val:0x7e22149c; valaddr_reg:x3; val_offset:2892*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2892*FLEN/8, x4, x1, x2)

inst_965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f23e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x47728f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77f83d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1f23e5; op2val:0x3e47728f;
op3val:0x7df7f83d; valaddr_reg:x3; val_offset:2895*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2895*FLEN/8, x4, x1, x2)

inst_966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f23e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x47728f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77f83d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1f23e5; op2val:0x3e47728f;
op3val:0x7df7f83d; valaddr_reg:x3; val_offset:2898*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2898*FLEN/8, x4, x1, x2)

inst_967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f23e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x47728f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77f83d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1f23e5; op2val:0x3e47728f;
op3val:0x7df7f83d; valaddr_reg:x3; val_offset:2901*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2901*FLEN/8, x4, x1, x2)

inst_968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f23e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x47728f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77f83d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1f23e5; op2val:0x3e47728f;
op3val:0x7df7f83d; valaddr_reg:x3; val_offset:2904*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2904*FLEN/8, x4, x1, x2)

inst_969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f23e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x47728f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77f83d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f1f23e5; op2val:0x3e47728f;
op3val:0x7df7f83d; valaddr_reg:x3; val_offset:2907*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2907*FLEN/8, x4, x1, x2)

inst_970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x214618 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ff4f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3560f6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f214618; op2val:0x3f8ff4f9;
op3val:0x7f3560f6; valaddr_reg:x3; val_offset:2910*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2910*FLEN/8, x4, x1, x2)

inst_971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x214618 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ff4f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3560f6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f214618; op2val:0x3f8ff4f9;
op3val:0x7f3560f6; valaddr_reg:x3; val_offset:2913*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2913*FLEN/8, x4, x1, x2)

inst_972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x214618 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ff4f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3560f6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f214618; op2val:0x3f8ff4f9;
op3val:0x7f3560f6; valaddr_reg:x3; val_offset:2916*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2916*FLEN/8, x4, x1, x2)

inst_973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x214618 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ff4f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3560f6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f214618; op2val:0x3f8ff4f9;
op3val:0x7f3560f6; valaddr_reg:x3; val_offset:2919*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2919*FLEN/8, x4, x1, x2)

inst_974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x214618 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ff4f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3560f6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f214618; op2val:0x3f8ff4f9;
op3val:0x7f3560f6; valaddr_reg:x3; val_offset:2922*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2922*FLEN/8, x4, x1, x2)

inst_975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2147aa and fs2 == 0 and fe2 == 0x7c and fm2 == 0x272c67 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x52a373 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2147aa; op2val:0x3e272c67;
op3val:0x7dd2a373; valaddr_reg:x3; val_offset:2925*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2925*FLEN/8, x4, x1, x2)

inst_976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2147aa and fs2 == 0 and fe2 == 0x7c and fm2 == 0x272c67 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x52a373 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2147aa; op2val:0x3e272c67;
op3val:0x7dd2a373; valaddr_reg:x3; val_offset:2928*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2928*FLEN/8, x4, x1, x2)

inst_977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2147aa and fs2 == 0 and fe2 == 0x7c and fm2 == 0x272c67 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x52a373 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2147aa; op2val:0x3e272c67;
op3val:0x7dd2a373; valaddr_reg:x3; val_offset:2931*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2931*FLEN/8, x4, x1, x2)

inst_978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2147aa and fs2 == 0 and fe2 == 0x7c and fm2 == 0x272c67 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x52a373 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2147aa; op2val:0x3e272c67;
op3val:0x7dd2a373; valaddr_reg:x3; val_offset:2934*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2934*FLEN/8, x4, x1, x2)

inst_979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2147aa and fs2 == 0 and fe2 == 0x7c and fm2 == 0x272c67 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x52a373 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2147aa; op2val:0x3e272c67;
op3val:0x7dd2a373; valaddr_reg:x3; val_offset:2937*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2937*FLEN/8, x4, x1, x2)

inst_980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x215d15 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x120cac and fs3 == 0 and fe3 == 0xfd and fm3 == 0x381e27 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f215d15; op2val:0x3f120cac;
op3val:0x7eb81e27; valaddr_reg:x3; val_offset:2940*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2940*FLEN/8, x4, x1, x2)

inst_981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x215d15 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x120cac and fs3 == 0 and fe3 == 0xfd and fm3 == 0x381e27 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f215d15; op2val:0x3f120cac;
op3val:0x7eb81e27; valaddr_reg:x3; val_offset:2943*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2943*FLEN/8, x4, x1, x2)

inst_982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x215d15 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x120cac and fs3 == 0 and fe3 == 0xfd and fm3 == 0x381e27 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f215d15; op2val:0x3f120cac;
op3val:0x7eb81e27; valaddr_reg:x3; val_offset:2946*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2946*FLEN/8, x4, x1, x2)

inst_983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x215d15 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x120cac and fs3 == 0 and fe3 == 0xfd and fm3 == 0x381e27 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f215d15; op2val:0x3f120cac;
op3val:0x7eb81e27; valaddr_reg:x3; val_offset:2949*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2949*FLEN/8, x4, x1, x2)

inst_984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x215d15 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x120cac and fs3 == 0 and fe3 == 0xfd and fm3 == 0x381e27 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f215d15; op2val:0x3f120cac;
op3val:0x7eb81e27; valaddr_reg:x3; val_offset:2952*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2952*FLEN/8, x4, x1, x2)

inst_985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22fef2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15bca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eacfb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f22fef2; op2val:0x3f95bca2;
op3val:0x7f3eacfb; valaddr_reg:x3; val_offset:2955*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2955*FLEN/8, x4, x1, x2)

inst_986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22fef2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15bca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eacfb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f22fef2; op2val:0x3f95bca2;
op3val:0x7f3eacfb; valaddr_reg:x3; val_offset:2958*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2958*FLEN/8, x4, x1, x2)

inst_987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22fef2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15bca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eacfb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f22fef2; op2val:0x3f95bca2;
op3val:0x7f3eacfb; valaddr_reg:x3; val_offset:2961*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2961*FLEN/8, x4, x1, x2)

inst_988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22fef2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15bca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eacfb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f22fef2; op2val:0x3f95bca2;
op3val:0x7f3eacfb; valaddr_reg:x3; val_offset:2964*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2964*FLEN/8, x4, x1, x2)

inst_989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22fef2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15bca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eacfb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f22fef2; op2val:0x3f95bca2;
op3val:0x7f3eacfb; valaddr_reg:x3; val_offset:2967*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2967*FLEN/8, x4, x1, x2)

inst_990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23b468 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7205fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ac45f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23b468; op2val:0x3f7205fd;
op3val:0x7f1ac45f; valaddr_reg:x3; val_offset:2970*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2970*FLEN/8, x4, x1, x2)

inst_991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23b468 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7205fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ac45f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23b468; op2val:0x3f7205fd;
op3val:0x7f1ac45f; valaddr_reg:x3; val_offset:2973*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2973*FLEN/8, x4, x1, x2)

inst_992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23b468 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7205fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ac45f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23b468; op2val:0x3f7205fd;
op3val:0x7f1ac45f; valaddr_reg:x3; val_offset:2976*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2976*FLEN/8, x4, x1, x2)

inst_993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23b468 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7205fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ac45f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23b468; op2val:0x3f7205fd;
op3val:0x7f1ac45f; valaddr_reg:x3; val_offset:2979*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2979*FLEN/8, x4, x1, x2)

inst_994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23b468 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7205fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ac45f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f23b468; op2val:0x3f7205fd;
op3val:0x7f1ac45f; valaddr_reg:x3; val_offset:2982*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2982*FLEN/8, x4, x1, x2)

inst_995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb9e5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24d370; op2val:0x3eacb9e5;
op3val:0x7e5e6b80; valaddr_reg:x3; val_offset:2985*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2985*FLEN/8, x4, x1, x2)

inst_996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb9e5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24d370; op2val:0x3eacb9e5;
op3val:0x7e5e6b80; valaddr_reg:x3; val_offset:2988*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 2988*FLEN/8, x4, x1, x2)

inst_997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb9e5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24d370; op2val:0x3eacb9e5;
op3val:0x7e5e6b80; valaddr_reg:x3; val_offset:2991*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 2991*FLEN/8, x4, x1, x2)

inst_998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb9e5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24d370; op2val:0x3eacb9e5;
op3val:0x7e5e6b80; valaddr_reg:x3; val_offset:2994*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 2994*FLEN/8, x4, x1, x2)

inst_999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb9e5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f24d370; op2val:0x3eacb9e5;
op3val:0x7e5e6b80; valaddr_reg:x3; val_offset:2997*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 2997*FLEN/8, x4, x1, x2)

inst_1000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x25c226 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e711a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ab76 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f25c226; op2val:0x3f4e711a;
op3val:0x7f05ab76; valaddr_reg:x3; val_offset:3000*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3000*FLEN/8, x4, x1, x2)

inst_1001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x25c226 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e711a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ab76 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f25c226; op2val:0x3f4e711a;
op3val:0x7f05ab76; valaddr_reg:x3; val_offset:3003*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3003*FLEN/8, x4, x1, x2)

inst_1002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x25c226 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e711a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ab76 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f25c226; op2val:0x3f4e711a;
op3val:0x7f05ab76; valaddr_reg:x3; val_offset:3006*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3006*FLEN/8, x4, x1, x2)

inst_1003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x25c226 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e711a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ab76 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f25c226; op2val:0x3f4e711a;
op3val:0x7f05ab76; valaddr_reg:x3; val_offset:3009*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3009*FLEN/8, x4, x1, x2)

inst_1004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x25c226 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e711a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ab76 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f25c226; op2val:0x3f4e711a;
op3val:0x7f05ab76; valaddr_reg:x3; val_offset:3012*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3012*FLEN/8, x4, x1, x2)

inst_1005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2724ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x452ff9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00be8a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2724ac; op2val:0x3f452ff9;
op3val:0x7f00be8a; valaddr_reg:x3; val_offset:3015*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3015*FLEN/8, x4, x1, x2)

inst_1006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2724ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x452ff9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00be8a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2724ac; op2val:0x3f452ff9;
op3val:0x7f00be8a; valaddr_reg:x3; val_offset:3018*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3018*FLEN/8, x4, x1, x2)

inst_1007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2724ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x452ff9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00be8a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2724ac; op2val:0x3f452ff9;
op3val:0x7f00be8a; valaddr_reg:x3; val_offset:3021*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3021*FLEN/8, x4, x1, x2)

inst_1008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2724ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x452ff9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00be8a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2724ac; op2val:0x3f452ff9;
op3val:0x7f00be8a; valaddr_reg:x3; val_offset:3024*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3024*FLEN/8, x4, x1, x2)

inst_1009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2724ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x452ff9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00be8a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2724ac; op2val:0x3f452ff9;
op3val:0x7f00be8a; valaddr_reg:x3; val_offset:3027*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3027*FLEN/8, x4, x1, x2)

inst_1010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e812 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x699098 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19310e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e812; op2val:0x3f699098;
op3val:0x7f19310e; valaddr_reg:x3; val_offset:3030*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3030*FLEN/8, x4, x1, x2)

inst_1011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e812 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x699098 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19310e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e812; op2val:0x3f699098;
op3val:0x7f19310e; valaddr_reg:x3; val_offset:3033*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3033*FLEN/8, x4, x1, x2)

inst_1012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e812 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x699098 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19310e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e812; op2val:0x3f699098;
op3val:0x7f19310e; valaddr_reg:x3; val_offset:3036*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3036*FLEN/8, x4, x1, x2)

inst_1013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e812 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x699098 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19310e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e812; op2val:0x3f699098;
op3val:0x7f19310e; valaddr_reg:x3; val_offset:3039*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3039*FLEN/8, x4, x1, x2)

inst_1014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e812 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x699098 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19310e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f27e812; op2val:0x3f699098;
op3val:0x7f19310e; valaddr_reg:x3; val_offset:3042*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3042*FLEN/8, x4, x1, x2)

inst_1015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28177b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x377ca6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x70f544 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28177b; op2val:0x3eb77ca6;
op3val:0x7e70f544; valaddr_reg:x3; val_offset:3045*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3045*FLEN/8, x4, x1, x2)

inst_1016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28177b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x377ca6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x70f544 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28177b; op2val:0x3eb77ca6;
op3val:0x7e70f544; valaddr_reg:x3; val_offset:3048*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3048*FLEN/8, x4, x1, x2)

inst_1017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28177b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x377ca6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x70f544 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28177b; op2val:0x3eb77ca6;
op3val:0x7e70f544; valaddr_reg:x3; val_offset:3051*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3051*FLEN/8, x4, x1, x2)

inst_1018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28177b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x377ca6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x70f544 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28177b; op2val:0x3eb77ca6;
op3val:0x7e70f544; valaddr_reg:x3; val_offset:3054*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3054*FLEN/8, x4, x1, x2)

inst_1019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28177b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x377ca6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x70f544 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28177b; op2val:0x3eb77ca6;
op3val:0x7e70f544; valaddr_reg:x3; val_offset:3057*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3057*FLEN/8, x4, x1, x2)

inst_1020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2980ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c483e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39c4c2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2980ff; op2val:0x3f8c483e;
op3val:0x7f39c4c2; valaddr_reg:x3; val_offset:3060*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3060*FLEN/8, x4, x1, x2)

inst_1021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2980ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c483e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39c4c2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2980ff; op2val:0x3f8c483e;
op3val:0x7f39c4c2; valaddr_reg:x3; val_offset:3063*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3063*FLEN/8, x4, x1, x2)

inst_1022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2980ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c483e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39c4c2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2980ff; op2val:0x3f8c483e;
op3val:0x7f39c4c2; valaddr_reg:x3; val_offset:3066*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3066*FLEN/8, x4, x1, x2)

inst_1023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2980ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c483e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39c4c2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2980ff; op2val:0x3f8c483e;
op3val:0x7f39c4c2; valaddr_reg:x3; val_offset:3069*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3069*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_9)

inst_1024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2980ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c483e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39c4c2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2980ff; op2val:0x3f8c483e;
op3val:0x7f39c4c2; valaddr_reg:x3; val_offset:3072*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3072*FLEN/8, x4, x1, x2)

inst_1025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cb5d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5df921 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15c10f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cb5d8; op2val:0x3f5df921;
op3val:0x7f15c10f; valaddr_reg:x3; val_offset:3075*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3075*FLEN/8, x4, x1, x2)

inst_1026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cb5d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5df921 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15c10f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cb5d8; op2val:0x3f5df921;
op3val:0x7f15c10f; valaddr_reg:x3; val_offset:3078*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3078*FLEN/8, x4, x1, x2)

inst_1027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cb5d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5df921 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15c10f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cb5d8; op2val:0x3f5df921;
op3val:0x7f15c10f; valaddr_reg:x3; val_offset:3081*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3081*FLEN/8, x4, x1, x2)

inst_1028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cb5d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5df921 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15c10f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cb5d8; op2val:0x3f5df921;
op3val:0x7f15c10f; valaddr_reg:x3; val_offset:3084*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3084*FLEN/8, x4, x1, x2)

inst_1029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cb5d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5df921 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15c10f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cb5d8; op2val:0x3f5df921;
op3val:0x7f15c10f; valaddr_reg:x3; val_offset:3087*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3087*FLEN/8, x4, x1, x2)

inst_1030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dbb49 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x642cc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ad92f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2dbb49; op2val:0x3f642cc4;
op3val:0x7f1ad92f; valaddr_reg:x3; val_offset:3090*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3090*FLEN/8, x4, x1, x2)

inst_1031:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dbb49 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x642cc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ad92f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2dbb49; op2val:0x3f642cc4;
op3val:0x7f1ad92f; valaddr_reg:x3; val_offset:3093*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3093*FLEN/8, x4, x1, x2)

inst_1032:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dbb49 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x642cc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ad92f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2dbb49; op2val:0x3f642cc4;
op3val:0x7f1ad92f; valaddr_reg:x3; val_offset:3096*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3096*FLEN/8, x4, x1, x2)

inst_1033:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dbb49 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x642cc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ad92f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2dbb49; op2val:0x3f642cc4;
op3val:0x7f1ad92f; valaddr_reg:x3; val_offset:3099*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3099*FLEN/8, x4, x1, x2)

inst_1034:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dbb49 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x642cc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ad92f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2dbb49; op2val:0x3f642cc4;
op3val:0x7f1ad92f; valaddr_reg:x3; val_offset:3102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3102*FLEN/8, x4, x1, x2)

inst_1035:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ead5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c215d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1633bf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ead5d; op2val:0x3f5c215d;
op3val:0x7f1633bf; valaddr_reg:x3; val_offset:3105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3105*FLEN/8, x4, x1, x2)

inst_1036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ead5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c215d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1633bf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ead5d; op2val:0x3f5c215d;
op3val:0x7f1633bf; valaddr_reg:x3; val_offset:3108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3108*FLEN/8, x4, x1, x2)

inst_1037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ead5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c215d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1633bf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ead5d; op2val:0x3f5c215d;
op3val:0x7f1633bf; valaddr_reg:x3; val_offset:3111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3111*FLEN/8, x4, x1, x2)

inst_1038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ead5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c215d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1633bf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ead5d; op2val:0x3f5c215d;
op3val:0x7f1633bf; valaddr_reg:x3; val_offset:3114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3114*FLEN/8, x4, x1, x2)

inst_1039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ead5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c215d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1633bf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ead5d; op2val:0x3f5c215d;
op3val:0x7f1633bf; valaddr_reg:x3; val_offset:3117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3117*FLEN/8, x4, x1, x2)

inst_1040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f329c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78b546 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2a3516 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2f329c; op2val:0x3ef8b546;
op3val:0x7eaa3516; valaddr_reg:x3; val_offset:3120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3120*FLEN/8, x4, x1, x2)

inst_1041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f329c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78b546 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2a3516 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2f329c; op2val:0x3ef8b546;
op3val:0x7eaa3516; valaddr_reg:x3; val_offset:3123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3123*FLEN/8, x4, x1, x2)

inst_1042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f329c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78b546 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2a3516 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2f329c; op2val:0x3ef8b546;
op3val:0x7eaa3516; valaddr_reg:x3; val_offset:3126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3126*FLEN/8, x4, x1, x2)

inst_1043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f329c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78b546 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2a3516 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2f329c; op2val:0x3ef8b546;
op3val:0x7eaa3516; valaddr_reg:x3; val_offset:3129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3129*FLEN/8, x4, x1, x2)

inst_1044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f329c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78b546 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2a3516 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2f329c; op2val:0x3ef8b546;
op3val:0x7eaa3516; valaddr_reg:x3; val_offset:3132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3132*FLEN/8, x4, x1, x2)

inst_1045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337390 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x68e288 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x233f86 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337390; op2val:0x3de8e288;
op3val:0x7da33f86; valaddr_reg:x3; val_offset:3135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3135*FLEN/8, x4, x1, x2)

inst_1046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337390 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x68e288 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x233f86 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337390; op2val:0x3de8e288;
op3val:0x7da33f86; valaddr_reg:x3; val_offset:3138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3138*FLEN/8, x4, x1, x2)

inst_1047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337390 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x68e288 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x233f86 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337390; op2val:0x3de8e288;
op3val:0x7da33f86; valaddr_reg:x3; val_offset:3141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3141*FLEN/8, x4, x1, x2)

inst_1048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337390 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x68e288 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x233f86 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337390; op2val:0x3de8e288;
op3val:0x7da33f86; valaddr_reg:x3; val_offset:3144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3144*FLEN/8, x4, x1, x2)

inst_1049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x337390 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x68e288 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x233f86 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f337390; op2val:0x3de8e288;
op3val:0x7da33f86; valaddr_reg:x3; val_offset:3147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3147*FLEN/8, x4, x1, x2)

inst_1050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33e876 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06f814 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3db40b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33e876; op2val:0x3f86f814;
op3val:0x7f3db40b; valaddr_reg:x3; val_offset:3150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3150*FLEN/8, x4, x1, x2)

inst_1051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33e876 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06f814 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3db40b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33e876; op2val:0x3f86f814;
op3val:0x7f3db40b; valaddr_reg:x3; val_offset:3153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3153*FLEN/8, x4, x1, x2)

inst_1052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33e876 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06f814 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3db40b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33e876; op2val:0x3f86f814;
op3val:0x7f3db40b; valaddr_reg:x3; val_offset:3156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3156*FLEN/8, x4, x1, x2)

inst_1053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33e876 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06f814 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3db40b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33e876; op2val:0x3f86f814;
op3val:0x7f3db40b; valaddr_reg:x3; val_offset:3159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3159*FLEN/8, x4, x1, x2)

inst_1054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33e876 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06f814 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3db40b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f33e876; op2val:0x3f86f814;
op3val:0x7f3db40b; valaddr_reg:x3; val_offset:3162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3162*FLEN/8, x4, x1, x2)

inst_1055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34e60e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0d1155 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x475deb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f34e60e; op2val:0x3e8d1155;
op3val:0x7e475deb; valaddr_reg:x3; val_offset:3165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3165*FLEN/8, x4, x1, x2)

inst_1056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34e60e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0d1155 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x475deb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f34e60e; op2val:0x3e8d1155;
op3val:0x7e475deb; valaddr_reg:x3; val_offset:3168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3168*FLEN/8, x4, x1, x2)

inst_1057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34e60e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0d1155 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x475deb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f34e60e; op2val:0x3e8d1155;
op3val:0x7e475deb; valaddr_reg:x3; val_offset:3171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3171*FLEN/8, x4, x1, x2)

inst_1058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34e60e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0d1155 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x475deb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f34e60e; op2val:0x3e8d1155;
op3val:0x7e475deb; valaddr_reg:x3; val_offset:3174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3174*FLEN/8, x4, x1, x2)

inst_1059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34e60e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0d1155 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x475deb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f34e60e; op2val:0x3e8d1155;
op3val:0x7e475deb; valaddr_reg:x3; val_offset:3177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3177*FLEN/8, x4, x1, x2)

inst_1060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36feaa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x39770f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x049324 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f36feaa; op2val:0x3f39770f;
op3val:0x7f049324; valaddr_reg:x3; val_offset:3180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3180*FLEN/8, x4, x1, x2)

inst_1061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36feaa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x39770f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x049324 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f36feaa; op2val:0x3f39770f;
op3val:0x7f049324; valaddr_reg:x3; val_offset:3183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3183*FLEN/8, x4, x1, x2)

inst_1062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36feaa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x39770f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x049324 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f36feaa; op2val:0x3f39770f;
op3val:0x7f049324; valaddr_reg:x3; val_offset:3186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3186*FLEN/8, x4, x1, x2)

inst_1063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36feaa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x39770f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x049324 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f36feaa; op2val:0x3f39770f;
op3val:0x7f049324; valaddr_reg:x3; val_offset:3189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3189*FLEN/8, x4, x1, x2)

inst_1064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36feaa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x39770f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x049324 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f36feaa; op2val:0x3f39770f;
op3val:0x7f049324; valaddr_reg:x3; val_offset:3192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3192*FLEN/8, x4, x1, x2)

inst_1065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x375c30 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437d92 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c052a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f375c30; op2val:0x3ec37d92;
op3val:0x7e8c052a; valaddr_reg:x3; val_offset:3195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3195*FLEN/8, x4, x1, x2)

inst_1066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x375c30 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437d92 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c052a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f375c30; op2val:0x3ec37d92;
op3val:0x7e8c052a; valaddr_reg:x3; val_offset:3198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3198*FLEN/8, x4, x1, x2)

inst_1067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x375c30 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437d92 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c052a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f375c30; op2val:0x3ec37d92;
op3val:0x7e8c052a; valaddr_reg:x3; val_offset:3201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3201*FLEN/8, x4, x1, x2)

inst_1068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x375c30 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437d92 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c052a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f375c30; op2val:0x3ec37d92;
op3val:0x7e8c052a; valaddr_reg:x3; val_offset:3204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3204*FLEN/8, x4, x1, x2)

inst_1069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x375c30 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437d92 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c052a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f375c30; op2val:0x3ec37d92;
op3val:0x7e8c052a; valaddr_reg:x3; val_offset:3207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3207*FLEN/8, x4, x1, x2)

inst_1070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37a6a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6f63f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bbc44 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37a6a0; op2val:0x3eef63f4;
op3val:0x7eabbc44; valaddr_reg:x3; val_offset:3210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3210*FLEN/8, x4, x1, x2)

inst_1071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37a6a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6f63f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bbc44 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37a6a0; op2val:0x3eef63f4;
op3val:0x7eabbc44; valaddr_reg:x3; val_offset:3213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3213*FLEN/8, x4, x1, x2)

inst_1072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37a6a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6f63f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bbc44 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37a6a0; op2val:0x3eef63f4;
op3val:0x7eabbc44; valaddr_reg:x3; val_offset:3216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3216*FLEN/8, x4, x1, x2)

inst_1073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37a6a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6f63f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bbc44 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37a6a0; op2val:0x3eef63f4;
op3val:0x7eabbc44; valaddr_reg:x3; val_offset:3219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3219*FLEN/8, x4, x1, x2)

inst_1074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37a6a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6f63f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bbc44 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37a6a0; op2val:0x3eef63f4;
op3val:0x7eabbc44; valaddr_reg:x3; val_offset:3222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3222*FLEN/8, x4, x1, x2)

inst_1075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37e266 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x215d18 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67d083 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37e266; op2val:0x3e215d18;
op3val:0x7de7d083; valaddr_reg:x3; val_offset:3225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3225*FLEN/8, x4, x1, x2)

inst_1076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37e266 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x215d18 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67d083 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37e266; op2val:0x3e215d18;
op3val:0x7de7d083; valaddr_reg:x3; val_offset:3228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3228*FLEN/8, x4, x1, x2)

inst_1077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37e266 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x215d18 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67d083 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37e266; op2val:0x3e215d18;
op3val:0x7de7d083; valaddr_reg:x3; val_offset:3231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3231*FLEN/8, x4, x1, x2)

inst_1078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37e266 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x215d18 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67d083 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37e266; op2val:0x3e215d18;
op3val:0x7de7d083; valaddr_reg:x3; val_offset:3234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3234*FLEN/8, x4, x1, x2)

inst_1079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37e266 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x215d18 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67d083 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f37e266; op2val:0x3e215d18;
op3val:0x7de7d083; valaddr_reg:x3; val_offset:3237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3237*FLEN/8, x4, x1, x2)

inst_1080:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a6931 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b4da6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79799d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a6931; op2val:0x3f2b4da6;
op3val:0x7ef9799d; valaddr_reg:x3; val_offset:3240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3240*FLEN/8, x4, x1, x2)

inst_1081:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a6931 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b4da6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79799d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a6931; op2val:0x3f2b4da6;
op3val:0x7ef9799d; valaddr_reg:x3; val_offset:3243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3243*FLEN/8, x4, x1, x2)

inst_1082:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a6931 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b4da6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79799d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a6931; op2val:0x3f2b4da6;
op3val:0x7ef9799d; valaddr_reg:x3; val_offset:3246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3246*FLEN/8, x4, x1, x2)

inst_1083:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a6931 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b4da6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79799d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a6931; op2val:0x3f2b4da6;
op3val:0x7ef9799d; valaddr_reg:x3; val_offset:3249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3249*FLEN/8, x4, x1, x2)

inst_1084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a6931 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b4da6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79799d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a6931; op2val:0x3f2b4da6;
op3val:0x7ef9799d; valaddr_reg:x3; val_offset:3252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3252*FLEN/8, x4, x1, x2)

inst_1085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8ee5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5094c0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x180081 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a8ee5; op2val:0x3ed094c0;
op3val:0x7e980081; valaddr_reg:x3; val_offset:3255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3255*FLEN/8, x4, x1, x2)

inst_1086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8ee5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5094c0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x180081 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a8ee5; op2val:0x3ed094c0;
op3val:0x7e980081; valaddr_reg:x3; val_offset:3258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3258*FLEN/8, x4, x1, x2)

inst_1087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8ee5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5094c0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x180081 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a8ee5; op2val:0x3ed094c0;
op3val:0x7e980081; valaddr_reg:x3; val_offset:3261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3261*FLEN/8, x4, x1, x2)

inst_1088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8ee5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5094c0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x180081 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a8ee5; op2val:0x3ed094c0;
op3val:0x7e980081; valaddr_reg:x3; val_offset:3264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3264*FLEN/8, x4, x1, x2)

inst_1089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8ee5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5094c0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x180081 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3a8ee5; op2val:0x3ed094c0;
op3val:0x7e980081; valaddr_reg:x3; val_offset:3267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3267*FLEN/8, x4, x1, x2)

inst_1090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3abe5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ffe2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52137f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3abe5d; op2val:0x3f0ffe2d;
op3val:0x7ed2137f; valaddr_reg:x3; val_offset:3270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3270*FLEN/8, x4, x1, x2)

inst_1091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3abe5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ffe2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52137f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3abe5d; op2val:0x3f0ffe2d;
op3val:0x7ed2137f; valaddr_reg:x3; val_offset:3273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3273*FLEN/8, x4, x1, x2)

inst_1092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3abe5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ffe2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52137f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3abe5d; op2val:0x3f0ffe2d;
op3val:0x7ed2137f; valaddr_reg:x3; val_offset:3276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3276*FLEN/8, x4, x1, x2)

inst_1093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3abe5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ffe2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52137f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3abe5d; op2val:0x3f0ffe2d;
op3val:0x7ed2137f; valaddr_reg:x3; val_offset:3279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3279*FLEN/8, x4, x1, x2)

inst_1094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3abe5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ffe2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52137f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3abe5d; op2val:0x3f0ffe2d;
op3val:0x7ed2137f; valaddr_reg:x3; val_offset:3282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3282*FLEN/8, x4, x1, x2)

inst_1095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x437185 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3b70e3; op2val:0x3d437185;
op3val:0x7d0f1a1b; valaddr_reg:x3; val_offset:3285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3285*FLEN/8, x4, x1, x2)

inst_1096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x437185 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3b70e3; op2val:0x3d437185;
op3val:0x7d0f1a1b; valaddr_reg:x3; val_offset:3288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3288*FLEN/8, x4, x1, x2)

inst_1097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x437185 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3b70e3; op2val:0x3d437185;
op3val:0x7d0f1a1b; valaddr_reg:x3; val_offset:3291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3291*FLEN/8, x4, x1, x2)

inst_1098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x437185 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3b70e3; op2val:0x3d437185;
op3val:0x7d0f1a1b; valaddr_reg:x3; val_offset:3294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3294*FLEN/8, x4, x1, x2)

inst_1099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x437185 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3b70e3; op2val:0x3d437185;
op3val:0x7d0f1a1b; valaddr_reg:x3; val_offset:3297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3297*FLEN/8, x4, x1, x2)

inst_1100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x76b07a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c318d; op2val:0x3df6b07a;
op3val:0x7db55959; valaddr_reg:x3; val_offset:3300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3300*FLEN/8, x4, x1, x2)

inst_1101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x76b07a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c318d; op2val:0x3df6b07a;
op3val:0x7db55959; valaddr_reg:x3; val_offset:3303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3303*FLEN/8, x4, x1, x2)

inst_1102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x76b07a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c318d; op2val:0x3df6b07a;
op3val:0x7db55959; valaddr_reg:x3; val_offset:3306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3306*FLEN/8, x4, x1, x2)

inst_1103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x76b07a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c318d; op2val:0x3df6b07a;
op3val:0x7db55959; valaddr_reg:x3; val_offset:3309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3309*FLEN/8, x4, x1, x2)

inst_1104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x76b07a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c318d; op2val:0x3df6b07a;
op3val:0x7db55959; valaddr_reg:x3; val_offset:3312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3312*FLEN/8, x4, x1, x2)

inst_1105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c37fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ba417 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c6419 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c37fe; op2val:0x3f2ba417;
op3val:0x7efc6419; valaddr_reg:x3; val_offset:3315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3315*FLEN/8, x4, x1, x2)

inst_1106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c37fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ba417 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c6419 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c37fe; op2val:0x3f2ba417;
op3val:0x7efc6419; valaddr_reg:x3; val_offset:3318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3318*FLEN/8, x4, x1, x2)

inst_1107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c37fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ba417 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c6419 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c37fe; op2val:0x3f2ba417;
op3val:0x7efc6419; valaddr_reg:x3; val_offset:3321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3321*FLEN/8, x4, x1, x2)

inst_1108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c37fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ba417 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c6419 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c37fe; op2val:0x3f2ba417;
op3val:0x7efc6419; valaddr_reg:x3; val_offset:3324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3324*FLEN/8, x4, x1, x2)

inst_1109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c37fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ba417 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c6419 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3c37fe; op2val:0x3f2ba417;
op3val:0x7efc6419; valaddr_reg:x3; val_offset:3327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3327*FLEN/8, x4, x1, x2)

inst_1110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1166 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1b6c79 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x65934c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1166; op2val:0x3e1b6c79;
op3val:0x7de5934c; valaddr_reg:x3; val_offset:3330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3330*FLEN/8, x4, x1, x2)

inst_1111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1166 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1b6c79 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x65934c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1166; op2val:0x3e1b6c79;
op3val:0x7de5934c; valaddr_reg:x3; val_offset:3333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3333*FLEN/8, x4, x1, x2)

inst_1112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1166 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1b6c79 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x65934c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1166; op2val:0x3e1b6c79;
op3val:0x7de5934c; valaddr_reg:x3; val_offset:3336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3336*FLEN/8, x4, x1, x2)

inst_1113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1166 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1b6c79 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x65934c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1166; op2val:0x3e1b6c79;
op3val:0x7de5934c; valaddr_reg:x3; val_offset:3339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3339*FLEN/8, x4, x1, x2)

inst_1114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d1166 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1b6c79 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x65934c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3d1166; op2val:0x3e1b6c79;
op3val:0x7de5934c; valaddr_reg:x3; val_offset:3342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3342*FLEN/8, x4, x1, x2)

inst_1115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e0e28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57494f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fd451 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3e0e28; op2val:0x3f57494f;
op3val:0x7f1fd451; valaddr_reg:x3; val_offset:3345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3345*FLEN/8, x4, x1, x2)

inst_1116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e0e28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57494f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fd451 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3e0e28; op2val:0x3f57494f;
op3val:0x7f1fd451; valaddr_reg:x3; val_offset:3348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3348*FLEN/8, x4, x1, x2)

inst_1117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e0e28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57494f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fd451 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3e0e28; op2val:0x3f57494f;
op3val:0x7f1fd451; valaddr_reg:x3; val_offset:3351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3351*FLEN/8, x4, x1, x2)

inst_1118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e0e28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57494f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fd451 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3e0e28; op2val:0x3f57494f;
op3val:0x7f1fd451; valaddr_reg:x3; val_offset:3354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3354*FLEN/8, x4, x1, x2)

inst_1119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e0e28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57494f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fd451 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f3e0e28; op2val:0x3f57494f;
op3val:0x7f1fd451; valaddr_reg:x3; val_offset:3357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3357*FLEN/8, x4, x1, x2)

inst_1120:
// fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x793775d9; op2val:0x44221af5;
op3val:0x7de857ca; valaddr_reg:x3; val_offset:3360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3360*FLEN/8, x4, x1, x2)

inst_1121:
// fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x793775d9; op2val:0x44221af5;
op3val:0x7de857ca; valaddr_reg:x3; val_offset:3363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3363*FLEN/8, x4, x1, x2)

inst_1122:
// fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x793775d9; op2val:0x44221af5;
op3val:0x7de857ca; valaddr_reg:x3; val_offset:3366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3366*FLEN/8, x4, x1, x2)

inst_1123:
// fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x793775d9; op2val:0x44221af5;
op3val:0x7de857ca; valaddr_reg:x3; val_offset:3369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3369*FLEN/8, x4, x1, x2)

inst_1124:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7a52283f; op2val:0x43b282de;
op3val:0x7e928b6b; valaddr_reg:x3; val_offset:3372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3372*FLEN/8, x4, x1, x2)

inst_1125:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7a52283f; op2val:0x43b282de;
op3val:0x7e928b6b; valaddr_reg:x3; val_offset:3375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3375*FLEN/8, x4, x1, x2)

inst_1126:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7a52283f; op2val:0x43b282de;
op3val:0x7e928b6b; valaddr_reg:x3; val_offset:3378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 64, 0, x3, 3378*FLEN/8, x4, x1, x2)

inst_1127:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7a52283f; op2val:0x43b282de;
op3val:0x7e928b6b; valaddr_reg:x3; val_offset:3381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 96, 0, x3, 3381*FLEN/8, x4, x1, x2)

inst_1128:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x52283f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x3282de and fs3 == 0 and fe3 == 0xfd and fm3 == 0x128b6b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7a52283f; op2val:0x43b282de;
op3val:0x7e928b6b; valaddr_reg:x3; val_offset:3384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 128, 0, x3, 3384*FLEN/8, x4, x1, x2)

inst_1129:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x414a12 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x4b3911 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1970d3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b414a12; op2val:0x434b3911;
op3val:0x7f1970d3; valaddr_reg:x3; val_offset:3387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 3387*FLEN/8, x4, x1, x2)

inst_1130:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x414a12 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x4b3911 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1970d3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b414a12; op2val:0x434b3911;
op3val:0x7f1970d3; valaddr_reg:x3; val_offset:3390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 32, 0, x3, 3390*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(1143085813,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(1143085813,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(1143085813,32,FLEN)
NAN_BOXED(2112378826,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(1143085813,32,FLEN)
NAN_BOXED(2112378826,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(2123533163,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(2123533163,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(2132373715,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(2132373715,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(1129003281,32,FLEN)
NAN_BOXED(2132373715,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(1129003281,32,FLEN)
NAN_BOXED(2132373715,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(1129003281,32,FLEN)
NAN_BOXED(2132373715,32,FLEN)
NAN_BOXED(2068395378,32,FLEN)
NAN_BOXED(1120710392,32,FLEN)
NAN_BOXED(2124472349,32,FLEN)
NAN_BOXED(2068395378,32,FLEN)
NAN_BOXED(1120710392,32,FLEN)
NAN_BOXED(2124472349,32,FLEN)
NAN_BOXED(2068395378,32,FLEN)
NAN_BOXED(1120710392,32,FLEN)
NAN_BOXED(2124472349,32,FLEN)
NAN_BOXED(2068395378,32,FLEN)
NAN_BOXED(1120710392,32,FLEN)
NAN_BOXED(2124472349,32,FLEN)
NAN_BOXED(2068395378,32,FLEN)
NAN_BOXED(1120710392,32,FLEN)
NAN_BOXED(2124472349,32,FLEN)
NAN_BOXED(2071155737,32,FLEN)
NAN_BOXED(1112896092,32,FLEN)
NAN_BOXED(2118836652,32,FLEN)
NAN_BOXED(2071155737,32,FLEN)
NAN_BOXED(1112896092,32,FLEN)
NAN_BOXED(2118836652,32,FLEN)
NAN_BOXED(2071155737,32,FLEN)
NAN_BOXED(1112896092,32,FLEN)
NAN_BOXED(2118836652,32,FLEN)
NAN_BOXED(2071155737,32,FLEN)
NAN_BOXED(1112896092,32,FLEN)
NAN_BOXED(2118836652,32,FLEN)
NAN_BOXED(2071155737,32,FLEN)
NAN_BOXED(1112896092,32,FLEN)
NAN_BOXED(2118836652,32,FLEN)
NAN_BOXED(2086547709,32,FLEN)
NAN_BOXED(1100130839,32,FLEN)
NAN_BOXED(2122225442,32,FLEN)
NAN_BOXED(2086547709,32,FLEN)
NAN_BOXED(1100130839,32,FLEN)
NAN_BOXED(2122225442,32,FLEN)
NAN_BOXED(2086547709,32,FLEN)
NAN_BOXED(1100130839,32,FLEN)
NAN_BOXED(2122225442,32,FLEN)
NAN_BOXED(2086547709,32,FLEN)
NAN_BOXED(1100130839,32,FLEN)
NAN_BOXED(2122225442,32,FLEN)
NAN_BOXED(2086547709,32,FLEN)
NAN_BOXED(1100130839,32,FLEN)
NAN_BOXED(2122225442,32,FLEN)
NAN_BOXED(2089459818,32,FLEN)
NAN_BOXED(1101247315,32,FLEN)
NAN_BOXED(2125548157,32,FLEN)
NAN_BOXED(2089459818,32,FLEN)
NAN_BOXED(1101247315,32,FLEN)
NAN_BOXED(2125548157,32,FLEN)
NAN_BOXED(2089459818,32,FLEN)
NAN_BOXED(1101247315,32,FLEN)
NAN_BOXED(2125548157,32,FLEN)
NAN_BOXED(2089459818,32,FLEN)
NAN_BOXED(1101247315,32,FLEN)
NAN_BOXED(2125548157,32,FLEN)
NAN_BOXED(2089459818,32,FLEN)
NAN_BOXED(1101247315,32,FLEN)
NAN_BOXED(2125548157,32,FLEN)
NAN_BOXED(2089674349,32,FLEN)
NAN_BOXED(1109701645,32,FLEN)
NAN_BOXED(2134283991,32,FLEN)
NAN_BOXED(2089674349,32,FLEN)
NAN_BOXED(1109701645,32,FLEN)
NAN_BOXED(2134283991,32,FLEN)
NAN_BOXED(2089674349,32,FLEN)
NAN_BOXED(1109701645,32,FLEN)
NAN_BOXED(2134283991,32,FLEN)
NAN_BOXED(2089674349,32,FLEN)
NAN_BOXED(1109701645,32,FLEN)
NAN_BOXED(2134283991,32,FLEN)
NAN_BOXED(2089674349,32,FLEN)
NAN_BOXED(1109701645,32,FLEN)
NAN_BOXED(2134283991,32,FLEN)
NAN_BOXED(2090642796,32,FLEN)
NAN_BOXED(1107895609,32,FLEN)
NAN_BOXED(2133319470,32,FLEN)
NAN_BOXED(2090642796,32,FLEN)
NAN_BOXED(1107895609,32,FLEN)
NAN_BOXED(2133319470,32,FLEN)
NAN_BOXED(2090642796,32,FLEN)
NAN_BOXED(1107895609,32,FLEN)
NAN_BOXED(2133319470,32,FLEN)
NAN_BOXED(2090642796,32,FLEN)
NAN_BOXED(1107895609,32,FLEN)
NAN_BOXED(2133319470,32,FLEN)
NAN_BOXED(2090642796,32,FLEN)
NAN_BOXED(1107895609,32,FLEN)
NAN_BOXED(2133319470,32,FLEN)
NAN_BOXED(2091623735,32,FLEN)
NAN_BOXED(1092617985,32,FLEN)
NAN_BOXED(2119604202,32,FLEN)
NAN_BOXED(2091623735,32,FLEN)
NAN_BOXED(1092617985,32,FLEN)
NAN_BOXED(2119604202,32,FLEN)
NAN_BOXED(2091623735,32,FLEN)
NAN_BOXED(1092617985,32,FLEN)
NAN_BOXED(2119604202,32,FLEN)
NAN_BOXED(2091623735,32,FLEN)
NAN_BOXED(1092617985,32,FLEN)
NAN_BOXED(2119604202,32,FLEN)
NAN_BOXED(2091623735,32,FLEN)
NAN_BOXED(1092617985,32,FLEN)
NAN_BOXED(2119604202,32,FLEN)
NAN_BOXED(2095472529,32,FLEN)
NAN_BOXED(1094257448,32,FLEN)
NAN_BOXED(2124842266,32,FLEN)
NAN_BOXED(2095472529,32,FLEN)
NAN_BOXED(1094257448,32,FLEN)
NAN_BOXED(2124842266,32,FLEN)
NAN_BOXED(2095472529,32,FLEN)
NAN_BOXED(1094257448,32,FLEN)
NAN_BOXED(2124842266,32,FLEN)
NAN_BOXED(2095472529,32,FLEN)
NAN_BOXED(1094257448,32,FLEN)
NAN_BOXED(2124842266,32,FLEN)
NAN_BOXED(2095472529,32,FLEN)
NAN_BOXED(1094257448,32,FLEN)
NAN_BOXED(2124842266,32,FLEN)
NAN_BOXED(2096161710,32,FLEN)
NAN_BOXED(1099454568,32,FLEN)
NAN_BOXED(2130725924,32,FLEN)
NAN_BOXED(2096161710,32,FLEN)
NAN_BOXED(1099454568,32,FLEN)
NAN_BOXED(2130725924,32,FLEN)
NAN_BOXED(2096161710,32,FLEN)
NAN_BOXED(1099454568,32,FLEN)
NAN_BOXED(2130725924,32,FLEN)
NAN_BOXED(2096161710,32,FLEN)
NAN_BOXED(1099454568,32,FLEN)
NAN_BOXED(2130725924,32,FLEN)
NAN_BOXED(2096161710,32,FLEN)
NAN_BOXED(1099454568,32,FLEN)
NAN_BOXED(2130725924,32,FLEN)
NAN_BOXED(2096315094,32,FLEN)
NAN_BOXED(1100835728,32,FLEN)
NAN_BOXED(2132119879,32,FLEN)
NAN_BOXED(2096315094,32,FLEN)
NAN_BOXED(1100835728,32,FLEN)
NAN_BOXED(2132119879,32,FLEN)
NAN_BOXED(2096315094,32,FLEN)
NAN_BOXED(1100835728,32,FLEN)
NAN_BOXED(2132119879,32,FLEN)
NAN_BOXED(2096315094,32,FLEN)
NAN_BOXED(1100835728,32,FLEN)
NAN_BOXED(2132119879,32,FLEN)
NAN_BOXED(2096315094,32,FLEN)
NAN_BOXED(1100835728,32,FLEN)
NAN_BOXED(2132119879,32,FLEN)
NAN_BOXED(2097152058,32,FLEN)
NAN_BOXED(1057633276,32,FLEN)
NAN_BOXED(2089432123,32,FLEN)
NAN_BOXED(2097152058,32,FLEN)
NAN_BOXED(1057633276,32,FLEN)
NAN_BOXED(2089432123,32,FLEN)
NAN_BOXED(2097152058,32,FLEN)
NAN_BOXED(1057633276,32,FLEN)
NAN_BOXED(2089432123,32,FLEN)
NAN_BOXED(2097152058,32,FLEN)
NAN_BOXED(1057633276,32,FLEN)
NAN_BOXED(2089432123,32,FLEN)
NAN_BOXED(2097152058,32,FLEN)
NAN_BOXED(1057633276,32,FLEN)
NAN_BOXED(2089432123,32,FLEN)
NAN_BOXED(2098906168,32,FLEN)
NAN_BOXED(1082140812,32,FLEN)
NAN_BOXED(2115695936,32,FLEN)
NAN_BOXED(2098906168,32,FLEN)
NAN_BOXED(1082140812,32,FLEN)
NAN_BOXED(2115695936,32,FLEN)
NAN_BOXED(2098906168,32,FLEN)
NAN_BOXED(1082140812,32,FLEN)
NAN_BOXED(2115695936,32,FLEN)
NAN_BOXED(2098906168,32,FLEN)
NAN_BOXED(1082140812,32,FLEN)
NAN_BOXED(2115695936,32,FLEN)
NAN_BOXED(2098906168,32,FLEN)
NAN_BOXED(1082140812,32,FLEN)
NAN_BOXED(2115695936,32,FLEN)
NAN_BOXED(2099713250,32,FLEN)
NAN_BOXED(1075364490,32,FLEN)
NAN_BOXED(2110219965,32,FLEN)
NAN_BOXED(2099713250,32,FLEN)
NAN_BOXED(1075364490,32,FLEN)
NAN_BOXED(2110219965,32,FLEN)
NAN_BOXED(2099713250,32,FLEN)
NAN_BOXED(1075364490,32,FLEN)
NAN_BOXED(2110219965,32,FLEN)
NAN_BOXED(2099713250,32,FLEN)
NAN_BOXED(1075364490,32,FLEN)
NAN_BOXED(2110219965,32,FLEN)
NAN_BOXED(2099713250,32,FLEN)
NAN_BOXED(1075364490,32,FLEN)
NAN_BOXED(2110219965,32,FLEN)
NAN_BOXED(2100440117,32,FLEN)
NAN_BOXED(1091304480,32,FLEN)
NAN_BOXED(2126699253,32,FLEN)
NAN_BOXED(2100440117,32,FLEN)
NAN_BOXED(1091304480,32,FLEN)
NAN_BOXED(2126699253,32,FLEN)
NAN_BOXED(2100440117,32,FLEN)
NAN_BOXED(1091304480,32,FLEN)
NAN_BOXED(2126699253,32,FLEN)
NAN_BOXED(2100440117,32,FLEN)
NAN_BOXED(1091304480,32,FLEN)
NAN_BOXED(2126699253,32,FLEN)
NAN_BOXED(2100440117,32,FLEN)
NAN_BOXED(1091304480,32,FLEN)
NAN_BOXED(2126699253,32,FLEN)
NAN_BOXED(2100632483,32,FLEN)
NAN_BOXED(1095794389,32,FLEN)
NAN_BOXED(2131984431,32,FLEN)
NAN_BOXED(2100632483,32,FLEN)
NAN_BOXED(1095794389,32,FLEN)
NAN_BOXED(2131984431,32,FLEN)
NAN_BOXED(2100632483,32,FLEN)
NAN_BOXED(1095794389,32,FLEN)
NAN_BOXED(2131984431,32,FLEN)
NAN_BOXED(2100632483,32,FLEN)
NAN_BOXED(1095794389,32,FLEN)
NAN_BOXED(2131984431,32,FLEN)
NAN_BOXED(2100632483,32,FLEN)
NAN_BOXED(1095794389,32,FLEN)
NAN_BOXED(2131984431,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(1079847116,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(1079847116,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(1079847116,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(1079847116,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(1079847116,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2100977760,32,FLEN)
NAN_BOXED(1094254622,32,FLEN)
NAN_BOXED(2131144636,32,FLEN)
NAN_BOXED(2100977760,32,FLEN)
NAN_BOXED(1094254622,32,FLEN)
NAN_BOXED(2131144636,32,FLEN)
NAN_BOXED(2100977760,32,FLEN)
NAN_BOXED(1094254622,32,FLEN)
NAN_BOXED(2131144636,32,FLEN)
NAN_BOXED(2100977760,32,FLEN)
NAN_BOXED(1094254622,32,FLEN)
NAN_BOXED(2131144636,32,FLEN)
NAN_BOXED(2100977760,32,FLEN)
NAN_BOXED(1094254622,32,FLEN)
NAN_BOXED(2131144636,32,FLEN)
NAN_BOXED(2101295533,32,FLEN)
NAN_BOXED(1066040471,32,FLEN)
NAN_BOXED(2102322257,32,FLEN)
NAN_BOXED(2101295533,32,FLEN)
NAN_BOXED(1066040471,32,FLEN)
NAN_BOXED(2102322257,32,FLEN)
NAN_BOXED(2101295533,32,FLEN)
NAN_BOXED(1066040471,32,FLEN)
NAN_BOXED(2102322257,32,FLEN)
NAN_BOXED(2101295533,32,FLEN)
NAN_BOXED(1066040471,32,FLEN)
NAN_BOXED(2102322257,32,FLEN)
NAN_BOXED(2101295533,32,FLEN)
NAN_BOXED(1066040471,32,FLEN)
NAN_BOXED(2102322257,32,FLEN)
NAN_BOXED(2101706837,32,FLEN)
NAN_BOXED(1098197035,32,FLEN)
NAN_BOXED(2134713039,32,FLEN)
NAN_BOXED(2101706837,32,FLEN)
NAN_BOXED(1098197035,32,FLEN)
NAN_BOXED(2134713039,32,FLEN)
NAN_BOXED(2101706837,32,FLEN)
NAN_BOXED(1098197035,32,FLEN)
NAN_BOXED(2134713039,32,FLEN)
NAN_BOXED(2101706837,32,FLEN)
NAN_BOXED(1098197035,32,FLEN)
NAN_BOXED(2134713039,32,FLEN)
NAN_BOXED(2101706837,32,FLEN)
NAN_BOXED(1098197035,32,FLEN)
NAN_BOXED(2134713039,32,FLEN)
NAN_BOXED(2102176279,32,FLEN)
NAN_BOXED(1095709698,32,FLEN)
NAN_BOXED(2133174045,32,FLEN)
NAN_BOXED(2102176279,32,FLEN)
NAN_BOXED(1095709698,32,FLEN)
NAN_BOXED(2133174045,32,FLEN)
NAN_BOXED(2102176279,32,FLEN)
NAN_BOXED(1095709698,32,FLEN)
NAN_BOXED(2133174045,32,FLEN)
NAN_BOXED(2102176279,32,FLEN)
NAN_BOXED(1095709698,32,FLEN)
NAN_BOXED(2133174045,32,FLEN)
NAN_BOXED(2102176279,32,FLEN)
NAN_BOXED(1095709698,32,FLEN)
NAN_BOXED(2133174045,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1067857905,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1067857905,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1067857905,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1067857905,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1067857905,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2103001774,32,FLEN)
NAN_BOXED(1093115269,32,FLEN)
NAN_BOXED(2131640367,32,FLEN)
NAN_BOXED(2103001774,32,FLEN)
NAN_BOXED(1093115269,32,FLEN)
NAN_BOXED(2131640367,32,FLEN)
NAN_BOXED(2103001774,32,FLEN)
NAN_BOXED(1093115269,32,FLEN)
NAN_BOXED(2131640367,32,FLEN)
NAN_BOXED(2103001774,32,FLEN)
NAN_BOXED(1093115269,32,FLEN)
NAN_BOXED(2131640367,32,FLEN)
NAN_BOXED(2103001774,32,FLEN)
NAN_BOXED(1093115269,32,FLEN)
NAN_BOXED(2131640367,32,FLEN)
NAN_BOXED(2103342274,32,FLEN)
NAN_BOXED(1095717993,32,FLEN)
NAN_BOXED(2134124995,32,FLEN)
NAN_BOXED(2103342274,32,FLEN)
NAN_BOXED(1095717993,32,FLEN)
NAN_BOXED(2134124995,32,FLEN)
NAN_BOXED(2103342274,32,FLEN)
NAN_BOXED(1095717993,32,FLEN)
NAN_BOXED(2134124995,32,FLEN)
NAN_BOXED(2103342274,32,FLEN)
NAN_BOXED(1095717993,32,FLEN)
NAN_BOXED(2134124995,32,FLEN)
NAN_BOXED(2103342274,32,FLEN)
NAN_BOXED(1095717993,32,FLEN)
NAN_BOXED(2134124995,32,FLEN)
NAN_BOXED(2103368850,32,FLEN)
NAN_BOXED(1079265915,32,FLEN)
NAN_BOXED(2117652352,32,FLEN)
NAN_BOXED(2103368850,32,FLEN)
NAN_BOXED(1079265915,32,FLEN)
NAN_BOXED(2117652352,32,FLEN)
NAN_BOXED(2103368850,32,FLEN)
NAN_BOXED(1079265915,32,FLEN)
NAN_BOXED(2117652352,32,FLEN)
NAN_BOXED(2103368850,32,FLEN)
NAN_BOXED(1079265915,32,FLEN)
NAN_BOXED(2117652352,32,FLEN)
NAN_BOXED(2103368850,32,FLEN)
NAN_BOXED(1079265915,32,FLEN)
NAN_BOXED(2117652352,32,FLEN)
NAN_BOXED(2103484546,32,FLEN)
NAN_BOXED(1091730884,32,FLEN)
NAN_BOXED(2130741732,32,FLEN)
NAN_BOXED(2103484546,32,FLEN)
NAN_BOXED(1091730884,32,FLEN)
NAN_BOXED(2130741732,32,FLEN)
NAN_BOXED(2103484546,32,FLEN)
NAN_BOXED(1091730884,32,FLEN)
NAN_BOXED(2130741732,32,FLEN)
NAN_BOXED(2103484546,32,FLEN)
NAN_BOXED(1091730884,32,FLEN)
NAN_BOXED(2130741732,32,FLEN)
NAN_BOXED(2103484546,32,FLEN)
NAN_BOXED(1091730884,32,FLEN)
NAN_BOXED(2130741732,32,FLEN)
NAN_BOXED(2104986550,32,FLEN)
NAN_BOXED(1085432057,32,FLEN)
NAN_BOXED(2125233386,32,FLEN)
NAN_BOXED(2104986550,32,FLEN)
NAN_BOXED(1085432057,32,FLEN)
NAN_BOXED(2125233386,32,FLEN)
NAN_BOXED(2104986550,32,FLEN)
NAN_BOXED(1085432057,32,FLEN)
NAN_BOXED(2125233386,32,FLEN)
NAN_BOXED(2104986550,32,FLEN)
NAN_BOXED(1085432057,32,FLEN)
NAN_BOXED(2125233386,32,FLEN)
NAN_BOXED(2104986550,32,FLEN)
NAN_BOXED(1085432057,32,FLEN)
NAN_BOXED(2125233386,32,FLEN)
NAN_BOXED(2105581798,32,FLEN)
NAN_BOXED(1092851637,32,FLEN)
NAN_BOXED(2133091673,32,FLEN)
NAN_BOXED(2105581798,32,FLEN)
NAN_BOXED(1092851637,32,FLEN)
NAN_BOXED(2133091673,32,FLEN)
NAN_BOXED(2105581798,32,FLEN)
NAN_BOXED(1092851637,32,FLEN)
NAN_BOXED(2133091673,32,FLEN)
NAN_BOXED(2105581798,32,FLEN)
NAN_BOXED(1092851637,32,FLEN)
NAN_BOXED(2133091673,32,FLEN)
NAN_BOXED(2105581798,32,FLEN)
NAN_BOXED(1092851637,32,FLEN)
NAN_BOXED(2133091673,32,FLEN)
NAN_BOXED(2105656525,32,FLEN)
NAN_BOXED(1092571762,32,FLEN)
NAN_BOXED(2132903437,32,FLEN)
NAN_BOXED(2105656525,32,FLEN)
NAN_BOXED(1092571762,32,FLEN)
NAN_BOXED(2132903437,32,FLEN)
NAN_BOXED(2105656525,32,FLEN)
NAN_BOXED(1092571762,32,FLEN)
NAN_BOXED(2132903437,32,FLEN)
NAN_BOXED(2105656525,32,FLEN)
NAN_BOXED(1092571762,32,FLEN)
NAN_BOXED(2132903437,32,FLEN)
NAN_BOXED(2105656525,32,FLEN)
NAN_BOXED(1092571762,32,FLEN)
NAN_BOXED(2132903437,32,FLEN)
NAN_BOXED(2105686081,32,FLEN)
NAN_BOXED(1090082626,32,FLEN)
NAN_BOXED(2130553397,32,FLEN)
NAN_BOXED(2105686081,32,FLEN)
NAN_BOXED(1090082626,32,FLEN)
NAN_BOXED(2130553397,32,FLEN)
NAN_BOXED(2105686081,32,FLEN)
NAN_BOXED(1090082626,32,FLEN)
NAN_BOXED(2130553397,32,FLEN)
NAN_BOXED(2105686081,32,FLEN)
NAN_BOXED(1090082626,32,FLEN)
NAN_BOXED(2130553397,32,FLEN)
NAN_BOXED(2105686081,32,FLEN)
NAN_BOXED(1090082626,32,FLEN)
NAN_BOXED(2130553397,32,FLEN)
NAN_BOXED(2105797432,32,FLEN)
NAN_BOXED(1066945573,32,FLEN)
NAN_BOXED(2107438541,32,FLEN)
NAN_BOXED(2105797432,32,FLEN)
NAN_BOXED(1066945573,32,FLEN)
NAN_BOXED(2107438541,32,FLEN)
NAN_BOXED(2105797432,32,FLEN)
NAN_BOXED(1066945573,32,FLEN)
NAN_BOXED(2107438541,32,FLEN)
NAN_BOXED(2105797432,32,FLEN)
NAN_BOXED(1066945573,32,FLEN)
NAN_BOXED(2107438541,32,FLEN)
NAN_BOXED(2105797432,32,FLEN)
NAN_BOXED(1066945573,32,FLEN)
NAN_BOXED(2107438541,32,FLEN)
NAN_BOXED(2106157560,32,FLEN)
NAN_BOXED(1059364183,32,FLEN)
NAN_BOXED(2100345008,32,FLEN)
NAN_BOXED(2106157560,32,FLEN)
NAN_BOXED(1059364183,32,FLEN)
NAN_BOXED(2100345008,32,FLEN)
NAN_BOXED(2106157560,32,FLEN)
NAN_BOXED(1059364183,32,FLEN)
NAN_BOXED(2100345008,32,FLEN)
NAN_BOXED(2106157560,32,FLEN)
NAN_BOXED(1059364183,32,FLEN)
NAN_BOXED(2100345008,32,FLEN)
NAN_BOXED(2106157560,32,FLEN)
NAN_BOXED(1059364183,32,FLEN)
NAN_BOXED(2100345008,32,FLEN)
NAN_BOXED(2106186872,32,FLEN)
NAN_BOXED(1083076686,32,FLEN)
NAN_BOXED(2123983243,32,FLEN)
NAN_BOXED(2106186872,32,FLEN)
NAN_BOXED(1083076686,32,FLEN)
NAN_BOXED(2123983243,32,FLEN)
NAN_BOXED(2106186872,32,FLEN)
NAN_BOXED(1083076686,32,FLEN)
NAN_BOXED(2123983243,32,FLEN)
NAN_BOXED(2106186872,32,FLEN)
NAN_BOXED(1083076686,32,FLEN)
NAN_BOXED(2123983243,32,FLEN)
NAN_BOXED(2106186872,32,FLEN)
NAN_BOXED(1083076686,32,FLEN)
NAN_BOXED(2123983243,32,FLEN)
NAN_BOXED(2107365737,32,FLEN)
NAN_BOXED(1080384015,32,FLEN)
NAN_BOXED(2123079758,32,FLEN)
NAN_BOXED(2107365737,32,FLEN)
NAN_BOXED(1080384015,32,FLEN)
NAN_BOXED(2123079758,32,FLEN)
NAN_BOXED(2107365737,32,FLEN)
NAN_BOXED(1080384015,32,FLEN)
NAN_BOXED(2123079758,32,FLEN)
NAN_BOXED(2107365737,32,FLEN)
NAN_BOXED(1080384015,32,FLEN)
NAN_BOXED(2123079758,32,FLEN)
NAN_BOXED(2107365737,32,FLEN)
NAN_BOXED(1080384015,32,FLEN)
NAN_BOXED(2123079758,32,FLEN)
NAN_BOXED(2107574384,32,FLEN)
NAN_BOXED(1086589409,32,FLEN)
NAN_BOXED(2129891634,32,FLEN)
NAN_BOXED(2107574384,32,FLEN)
NAN_BOXED(1086589409,32,FLEN)
NAN_BOXED(2129891634,32,FLEN)
NAN_BOXED(2107574384,32,FLEN)
NAN_BOXED(1086589409,32,FLEN)
NAN_BOXED(2129891634,32,FLEN)
NAN_BOXED(2107574384,32,FLEN)
NAN_BOXED(1086589409,32,FLEN)
NAN_BOXED(2129891634,32,FLEN)
NAN_BOXED(2107574384,32,FLEN)
NAN_BOXED(1086589409,32,FLEN)
NAN_BOXED(2129891634,32,FLEN)
NAN_BOXED(2107699458,32,FLEN)
NAN_BOXED(1075983695,32,FLEN)
NAN_BOXED(2118906894,32,FLEN)
NAN_BOXED(2107699458,32,FLEN)
NAN_BOXED(1075983695,32,FLEN)
NAN_BOXED(2118906894,32,FLEN)
NAN_BOXED(2107699458,32,FLEN)
NAN_BOXED(1075983695,32,FLEN)
NAN_BOXED(2118906894,32,FLEN)
NAN_BOXED(2107699458,32,FLEN)
NAN_BOXED(1075983695,32,FLEN)
NAN_BOXED(2118906894,32,FLEN)
NAN_BOXED(2107699458,32,FLEN)
NAN_BOXED(1075983695,32,FLEN)
NAN_BOXED(2118906894,32,FLEN)
NAN_BOXED(2107833323,32,FLEN)
NAN_BOXED(1084815545,32,FLEN)
NAN_BOXED(2128029529,32,FLEN)
NAN_BOXED(2107833323,32,FLEN)
NAN_BOXED(1084815545,32,FLEN)
NAN_BOXED(2128029529,32,FLEN)
NAN_BOXED(2107833323,32,FLEN)
NAN_BOXED(1084815545,32,FLEN)
NAN_BOXED(2128029529,32,FLEN)
NAN_BOXED(2107833323,32,FLEN)
NAN_BOXED(1084815545,32,FLEN)
NAN_BOXED(2128029529,32,FLEN)
NAN_BOXED(2107833323,32,FLEN)
NAN_BOXED(1084815545,32,FLEN)
NAN_BOXED(2128029529,32,FLEN)
NAN_BOXED(2108169744,32,FLEN)
NAN_BOXED(1069338431,32,FLEN)
NAN_BOXED(2113403997,32,FLEN)
NAN_BOXED(2108169744,32,FLEN)
NAN_BOXED(1069338431,32,FLEN)
NAN_BOXED(2113403997,32,FLEN)
NAN_BOXED(2108169744,32,FLEN)
NAN_BOXED(1069338431,32,FLEN)
NAN_BOXED(2113403997,32,FLEN)
NAN_BOXED(2108169744,32,FLEN)
NAN_BOXED(1069338431,32,FLEN)
NAN_BOXED(2113403997,32,FLEN)
NAN_BOXED(2108169744,32,FLEN)
NAN_BOXED(1069338431,32,FLEN)
NAN_BOXED(2113403997,32,FLEN)
NAN_BOXED(2109394866,32,FLEN)
NAN_BOXED(1080600279,32,FLEN)
NAN_BOXED(2125055481,32,FLEN)
NAN_BOXED(2109394866,32,FLEN)
NAN_BOXED(1080600279,32,FLEN)
NAN_BOXED(2125055481,32,FLEN)
NAN_BOXED(2109394866,32,FLEN)
NAN_BOXED(1080600279,32,FLEN)
NAN_BOXED(2125055481,32,FLEN)
NAN_BOXED(2109394866,32,FLEN)
NAN_BOXED(1080600279,32,FLEN)
NAN_BOXED(2125055481,32,FLEN)
NAN_BOXED(2109394866,32,FLEN)
NAN_BOXED(1080600279,32,FLEN)
NAN_BOXED(2125055481,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1072090896,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1072090896,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1072090896,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1072090896,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1072090896,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2109940100,32,FLEN)
NAN_BOXED(1066945403,32,FLEN)
NAN_BOXED(2112367327,32,FLEN)
NAN_BOXED(2109940100,32,FLEN)
NAN_BOXED(1066945403,32,FLEN)
NAN_BOXED(2112367327,32,FLEN)
NAN_BOXED(2109940100,32,FLEN)
NAN_BOXED(1066945403,32,FLEN)
NAN_BOXED(2112367327,32,FLEN)
NAN_BOXED(2109940100,32,FLEN)
NAN_BOXED(1066945403,32,FLEN)
NAN_BOXED(2112367327,32,FLEN)
NAN_BOXED(2109940100,32,FLEN)
NAN_BOXED(1066945403,32,FLEN)
NAN_BOXED(2112367327,32,FLEN)
NAN_BOXED(2110171812,32,FLEN)
NAN_BOXED(1073024142,32,FLEN)
NAN_BOXED(2118003470,32,FLEN)
NAN_BOXED(2110171812,32,FLEN)
NAN_BOXED(1073024142,32,FLEN)
NAN_BOXED(2118003470,32,FLEN)
NAN_BOXED(2110171812,32,FLEN)
NAN_BOXED(1073024142,32,FLEN)
NAN_BOXED(2118003470,32,FLEN)
NAN_BOXED(2110171812,32,FLEN)
NAN_BOXED(1073024142,32,FLEN)
NAN_BOXED(2118003470,32,FLEN)
NAN_BOXED(2110171812,32,FLEN)
NAN_BOXED(1073024142,32,FLEN)
NAN_BOXED(2118003470,32,FLEN)
NAN_BOXED(2110337265,32,FLEN)
NAN_BOXED(1038004759,32,FLEN)
NAN_BOXED(2083456104,32,FLEN)
NAN_BOXED(2110337265,32,FLEN)
NAN_BOXED(1038004759,32,FLEN)
NAN_BOXED(2083456104,32,FLEN)
NAN_BOXED(2110337265,32,FLEN)
NAN_BOXED(1038004759,32,FLEN)
NAN_BOXED(2083456104,32,FLEN)
NAN_BOXED(2110337265,32,FLEN)
NAN_BOXED(1038004759,32,FLEN)
NAN_BOXED(2083456104,32,FLEN)
NAN_BOXED(2110337265,32,FLEN)
NAN_BOXED(1038004759,32,FLEN)
NAN_BOXED(2083456104,32,FLEN)
NAN_BOXED(2110346307,32,FLEN)
NAN_BOXED(1088301910,32,FLEN)
NAN_BOXED(2133768488,32,FLEN)
NAN_BOXED(2110346307,32,FLEN)
NAN_BOXED(1088301910,32,FLEN)
NAN_BOXED(2133768488,32,FLEN)
NAN_BOXED(2110346307,32,FLEN)
NAN_BOXED(1088301910,32,FLEN)
NAN_BOXED(2133768488,32,FLEN)
NAN_BOXED(2110346307,32,FLEN)
NAN_BOXED(1088301910,32,FLEN)
NAN_BOXED(2133768488,32,FLEN)
NAN_BOXED(2110346307,32,FLEN)
NAN_BOXED(1088301910,32,FLEN)
NAN_BOXED(2133768488,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1062275522,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1062275522,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1062275522,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1062275522,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1062275522,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2111866387,32,FLEN)
NAN_BOXED(1085599708,32,FLEN)
NAN_BOXED(2132717732,32,FLEN)
NAN_BOXED(2111866387,32,FLEN)
NAN_BOXED(1085599708,32,FLEN)
NAN_BOXED(2132717732,32,FLEN)
NAN_BOXED(2111866387,32,FLEN)
NAN_BOXED(1085599708,32,FLEN)
NAN_BOXED(2132717732,32,FLEN)
NAN_BOXED(2111866387,32,FLEN)
NAN_BOXED(1085599708,32,FLEN)
NAN_BOXED(2132717732,32,FLEN)
NAN_BOXED(2111866387,32,FLEN)
NAN_BOXED(1085599708,32,FLEN)
NAN_BOXED(2132717732,32,FLEN)
NAN_BOXED(2112187869,32,FLEN)
NAN_BOXED(1086647152,32,FLEN)
NAN_BOXED(2133883677,32,FLEN)
NAN_BOXED(2112187869,32,FLEN)
NAN_BOXED(1086647152,32,FLEN)
NAN_BOXED(2133883677,32,FLEN)
NAN_BOXED(2112187869,32,FLEN)
NAN_BOXED(1086647152,32,FLEN)
NAN_BOXED(2133883677,32,FLEN)
NAN_BOXED(2112187869,32,FLEN)
NAN_BOXED(1086647152,32,FLEN)
NAN_BOXED(2133883677,32,FLEN)
NAN_BOXED(2112187869,32,FLEN)
NAN_BOXED(1086647152,32,FLEN)
NAN_BOXED(2133883677,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(1078847088,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(1078847088,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(1078847088,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(1078847088,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(1078847088,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2112699105,32,FLEN)
NAN_BOXED(1083465650,32,FLEN)
NAN_BOXED(2131328697,32,FLEN)
NAN_BOXED(2112699105,32,FLEN)
NAN_BOXED(1083465650,32,FLEN)
NAN_BOXED(2131328697,32,FLEN)
NAN_BOXED(2112699105,32,FLEN)
NAN_BOXED(1083465650,32,FLEN)
NAN_BOXED(2131328697,32,FLEN)
NAN_BOXED(2112699105,32,FLEN)
NAN_BOXED(1083465650,32,FLEN)
NAN_BOXED(2131328697,32,FLEN)
NAN_BOXED(2112699105,32,FLEN)
NAN_BOXED(1083465650,32,FLEN)
NAN_BOXED(2131328697,32,FLEN)
NAN_BOXED(2113009784,32,FLEN)
NAN_BOXED(1077223266,32,FLEN)
NAN_BOXED(2125148759,32,FLEN)
NAN_BOXED(2113009784,32,FLEN)
NAN_BOXED(1077223266,32,FLEN)
NAN_BOXED(2125148759,32,FLEN)
NAN_BOXED(2113009784,32,FLEN)
NAN_BOXED(1077223266,32,FLEN)
NAN_BOXED(2125148759,32,FLEN)
NAN_BOXED(2113009784,32,FLEN)
NAN_BOXED(1077223266,32,FLEN)
NAN_BOXED(2125148759,32,FLEN)
NAN_BOXED(2113009784,32,FLEN)
NAN_BOXED(1077223266,32,FLEN)
NAN_BOXED(2125148759,32,FLEN)
NAN_BOXED(2113405705,32,FLEN)
NAN_BOXED(1076562591,32,FLEN)
NAN_BOXED(2124788817,32,FLEN)
NAN_BOXED(2113405705,32,FLEN)
NAN_BOXED(1076562591,32,FLEN)
NAN_BOXED(2124788817,32,FLEN)
NAN_BOXED(2113405705,32,FLEN)
NAN_BOXED(1076562591,32,FLEN)
NAN_BOXED(2124788817,32,FLEN)
NAN_BOXED(2113405705,32,FLEN)
NAN_BOXED(1076562591,32,FLEN)
NAN_BOXED(2124788817,32,FLEN)
NAN_BOXED(2113405705,32,FLEN)
NAN_BOXED(1076562591,32,FLEN)
NAN_BOXED(2124788817,32,FLEN)
NAN_BOXED(2113948108,32,FLEN)
NAN_BOXED(1083433223,32,FLEN)
NAN_BOXED(2132031050,32,FLEN)
NAN_BOXED(2113948108,32,FLEN)
NAN_BOXED(1083433223,32,FLEN)
NAN_BOXED(2132031050,32,FLEN)
NAN_BOXED(2113948108,32,FLEN)
NAN_BOXED(1083433223,32,FLEN)
NAN_BOXED(2132031050,32,FLEN)
NAN_BOXED(2113948108,32,FLEN)
NAN_BOXED(1083433223,32,FLEN)
NAN_BOXED(2132031050,32,FLEN)
NAN_BOXED(2113948108,32,FLEN)
NAN_BOXED(1083433223,32,FLEN)
NAN_BOXED(2132031050,32,FLEN)
NAN_BOXED(2113998759,32,FLEN)
NAN_BOXED(1060266332,32,FLEN)
NAN_BOXED(2108939248,32,FLEN)
NAN_BOXED(2113998759,32,FLEN)
NAN_BOXED(1060266332,32,FLEN)
NAN_BOXED(2108939248,32,FLEN)
NAN_BOXED(2113998759,32,FLEN)
NAN_BOXED(1060266332,32,FLEN)
NAN_BOXED(2108939248,32,FLEN)
NAN_BOXED(2113998759,32,FLEN)
NAN_BOXED(1060266332,32,FLEN)
NAN_BOXED(2108939248,32,FLEN)
NAN_BOXED(2113998759,32,FLEN)
NAN_BOXED(1060266332,32,FLEN)
NAN_BOXED(2108939248,32,FLEN)
NAN_BOXED(2114215101,32,FLEN)
NAN_BOXED(1076876344,32,FLEN)
NAN_BOXED(2125845055,32,FLEN)
NAN_BOXED(2114215101,32,FLEN)
NAN_BOXED(1076876344,32,FLEN)
NAN_BOXED(2125845055,32,FLEN)
NAN_BOXED(2114215101,32,FLEN)
NAN_BOXED(1076876344,32,FLEN)
NAN_BOXED(2125845055,32,FLEN)
NAN_BOXED(2114215101,32,FLEN)
NAN_BOXED(1076876344,32,FLEN)
NAN_BOXED(2125845055,32,FLEN)
NAN_BOXED(2114215101,32,FLEN)
NAN_BOXED(1076876344,32,FLEN)
NAN_BOXED(2125845055,32,FLEN)
NAN_BOXED(2114409936,32,FLEN)
NAN_BOXED(1068006602,32,FLEN)
NAN_BOXED(2117215378,32,FLEN)
NAN_BOXED(2114409936,32,FLEN)
NAN_BOXED(1068006602,32,FLEN)
NAN_BOXED(2117215378,32,FLEN)
NAN_BOXED(2114409936,32,FLEN)
NAN_BOXED(1068006602,32,FLEN)
NAN_BOXED(2117215378,32,FLEN)
NAN_BOXED(2114409936,32,FLEN)
NAN_BOXED(1068006602,32,FLEN)
NAN_BOXED(2117215378,32,FLEN)
NAN_BOXED(2114409936,32,FLEN)
NAN_BOXED(1068006602,32,FLEN)
NAN_BOXED(2117215378,32,FLEN)
NAN_BOXED(2114525899,32,FLEN)
NAN_BOXED(1083012051,32,FLEN)
NAN_BOXED(2132247445,32,FLEN)
NAN_BOXED(2114525899,32,FLEN)
NAN_BOXED(1083012051,32,FLEN)
NAN_BOXED(2132247445,32,FLEN)
NAN_BOXED(2114525899,32,FLEN)
NAN_BOXED(1083012051,32,FLEN)
NAN_BOXED(2132247445,32,FLEN)
NAN_BOXED(2114525899,32,FLEN)
NAN_BOXED(1083012051,32,FLEN)
NAN_BOXED(2132247445,32,FLEN)
NAN_BOXED(2114525899,32,FLEN)
NAN_BOXED(1083012051,32,FLEN)
NAN_BOXED(2132247445,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1078851012,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1078851012,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1078851012,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1078851012,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1078851012,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2115076265,32,FLEN)
NAN_BOXED(1075863757,32,FLEN)
NAN_BOXED(2125876958,32,FLEN)
NAN_BOXED(2115076265,32,FLEN)
NAN_BOXED(1075863757,32,FLEN)
NAN_BOXED(2125876958,32,FLEN)
NAN_BOXED(2115076265,32,FLEN)
NAN_BOXED(1075863757,32,FLEN)
NAN_BOXED(2125876958,32,FLEN)
NAN_BOXED(2115076265,32,FLEN)
NAN_BOXED(1075863757,32,FLEN)
NAN_BOXED(2125876958,32,FLEN)
NAN_BOXED(2115076265,32,FLEN)
NAN_BOXED(1075863757,32,FLEN)
NAN_BOXED(2125876958,32,FLEN)
NAN_BOXED(2115392759,32,FLEN)
NAN_BOXED(1070614972,32,FLEN)
NAN_BOXED(2121572524,32,FLEN)
NAN_BOXED(2115392759,32,FLEN)
NAN_BOXED(1070614972,32,FLEN)
NAN_BOXED(2121572524,32,FLEN)
NAN_BOXED(2115392759,32,FLEN)
NAN_BOXED(1070614972,32,FLEN)
NAN_BOXED(2121572524,32,FLEN)
NAN_BOXED(2115392759,32,FLEN)
NAN_BOXED(1070614972,32,FLEN)
NAN_BOXED(2121572524,32,FLEN)
NAN_BOXED(2115392759,32,FLEN)
NAN_BOXED(1070614972,32,FLEN)
NAN_BOXED(2121572524,32,FLEN)
NAN_BOXED(2115441152,32,FLEN)
NAN_BOXED(1065680186,32,FLEN)
NAN_BOXED(2115827055,32,FLEN)
NAN_BOXED(2115441152,32,FLEN)
NAN_BOXED(1065680186,32,FLEN)
NAN_BOXED(2115827055,32,FLEN)
NAN_BOXED(2115441152,32,FLEN)
NAN_BOXED(1065680186,32,FLEN)
NAN_BOXED(2115827055,32,FLEN)
NAN_BOXED(2115441152,32,FLEN)
NAN_BOXED(1065680186,32,FLEN)
NAN_BOXED(2115827055,32,FLEN)
NAN_BOXED(2115441152,32,FLEN)
NAN_BOXED(1065680186,32,FLEN)
NAN_BOXED(2115827055,32,FLEN)
NAN_BOXED(2115656264,32,FLEN)
NAN_BOXED(1075886672,32,FLEN)
NAN_BOXED(2126631303,32,FLEN)
NAN_BOXED(2115656264,32,FLEN)
NAN_BOXED(1075886672,32,FLEN)
NAN_BOXED(2126631303,32,FLEN)
NAN_BOXED(2115656264,32,FLEN)
NAN_BOXED(1075886672,32,FLEN)
NAN_BOXED(2126631303,32,FLEN)
NAN_BOXED(2115656264,32,FLEN)
NAN_BOXED(1075886672,32,FLEN)
NAN_BOXED(2126631303,32,FLEN)
NAN_BOXED(2115656264,32,FLEN)
NAN_BOXED(1075886672,32,FLEN)
NAN_BOXED(2126631303,32,FLEN)
NAN_BOXED(2116048002,32,FLEN)
NAN_BOXED(1061619466,32,FLEN)
NAN_BOXED(2113489973,32,FLEN)
NAN_BOXED(2116048002,32,FLEN)
NAN_BOXED(1061619466,32,FLEN)
NAN_BOXED(2113489973,32,FLEN)
NAN_BOXED(2116048002,32,FLEN)
NAN_BOXED(1061619466,32,FLEN)
NAN_BOXED(2113489973,32,FLEN)
NAN_BOXED(2116048002,32,FLEN)
NAN_BOXED(1061619466,32,FLEN)
NAN_BOXED(2113489973,32,FLEN)
NAN_BOXED(2116048002,32,FLEN)
NAN_BOXED(1061619466,32,FLEN)
NAN_BOXED(2113489973,32,FLEN)
NAN_BOXED(2116592824,32,FLEN)
NAN_BOXED(1082838621,32,FLEN)
NAN_BOXED(2134303099,32,FLEN)
NAN_BOXED(2116592824,32,FLEN)
NAN_BOXED(1082838621,32,FLEN)
NAN_BOXED(2134303099,32,FLEN)
NAN_BOXED(2116592824,32,FLEN)
NAN_BOXED(1082838621,32,FLEN)
NAN_BOXED(2134303099,32,FLEN)
NAN_BOXED(2116592824,32,FLEN)
NAN_BOXED(1082838621,32,FLEN)
NAN_BOXED(2134303099,32,FLEN)
NAN_BOXED(2116592824,32,FLEN)
NAN_BOXED(1082838621,32,FLEN)
NAN_BOXED(2134303099,32,FLEN)
NAN_BOXED(2116636839,32,FLEN)
NAN_BOXED(1065596108,32,FLEN)
NAN_BOXED(2116958131,32,FLEN)
NAN_BOXED(2116636839,32,FLEN)
NAN_BOXED(1065596108,32,FLEN)
NAN_BOXED(2116958131,32,FLEN)
NAN_BOXED(2116636839,32,FLEN)
NAN_BOXED(1065596108,32,FLEN)
NAN_BOXED(2116958131,32,FLEN)
NAN_BOXED(2116636839,32,FLEN)
NAN_BOXED(1065596108,32,FLEN)
NAN_BOXED(2116958131,32,FLEN)
NAN_BOXED(2116636839,32,FLEN)
NAN_BOXED(1065596108,32,FLEN)
NAN_BOXED(2116958131,32,FLEN)
NAN_BOXED(2116952779,32,FLEN)
NAN_BOXED(1074928672,32,FLEN)
NAN_BOXED(2126956020,32,FLEN)
NAN_BOXED(2116952779,32,FLEN)
NAN_BOXED(1074928672,32,FLEN)
NAN_BOXED(2126956020,32,FLEN)
NAN_BOXED(2116952779,32,FLEN)
NAN_BOXED(1074928672,32,FLEN)
NAN_BOXED(2126956020,32,FLEN)
NAN_BOXED(2116952779,32,FLEN)
NAN_BOXED(1074928672,32,FLEN)
NAN_BOXED(2126956020,32,FLEN)
NAN_BOXED(2116952779,32,FLEN)
NAN_BOXED(1074928672,32,FLEN)
NAN_BOXED(2126956020,32,FLEN)
NAN_BOXED(2117284797,32,FLEN)
NAN_BOXED(1074070603,32,FLEN)
NAN_BOXED(2126133702,32,FLEN)
NAN_BOXED(2117284797,32,FLEN)
NAN_BOXED(1074070603,32,FLEN)
NAN_BOXED(2126133702,32,FLEN)
NAN_BOXED(2117284797,32,FLEN)
NAN_BOXED(1074070603,32,FLEN)
NAN_BOXED(2126133702,32,FLEN)
NAN_BOXED(2117284797,32,FLEN)
NAN_BOXED(1074070603,32,FLEN)
NAN_BOXED(2126133702,32,FLEN)
NAN_BOXED(2117284797,32,FLEN)
NAN_BOXED(1074070603,32,FLEN)
NAN_BOXED(2126133702,32,FLEN)
NAN_BOXED(2117647351,32,FLEN)
NAN_BOXED(1075578966,32,FLEN)
NAN_BOXED(2128687389,32,FLEN)
NAN_BOXED(2117647351,32,FLEN)
NAN_BOXED(1075578966,32,FLEN)
NAN_BOXED(2128687389,32,FLEN)
NAN_BOXED(2117647351,32,FLEN)
NAN_BOXED(1075578966,32,FLEN)
NAN_BOXED(2128687389,32,FLEN)
NAN_BOXED(2117647351,32,FLEN)
NAN_BOXED(1075578966,32,FLEN)
NAN_BOXED(2128687389,32,FLEN)
NAN_BOXED(2117647351,32,FLEN)
NAN_BOXED(1075578966,32,FLEN)
NAN_BOXED(2128687389,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1075223523,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1075223523,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1075223523,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1075223523,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1075223523,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2117844002,32,FLEN)
NAN_BOXED(1081922486,32,FLEN)
NAN_BOXED(2134468723,32,FLEN)
NAN_BOXED(2117844002,32,FLEN)
NAN_BOXED(1081922486,32,FLEN)
NAN_BOXED(2134468723,32,FLEN)
NAN_BOXED(2117844002,32,FLEN)
NAN_BOXED(1081922486,32,FLEN)
NAN_BOXED(2134468723,32,FLEN)
NAN_BOXED(2117844002,32,FLEN)
NAN_BOXED(1081922486,32,FLEN)
NAN_BOXED(2134468723,32,FLEN)
NAN_BOXED(2117844002,32,FLEN)
NAN_BOXED(1081922486,32,FLEN)
NAN_BOXED(2134468723,32,FLEN)
NAN_BOXED(2118047736,32,FLEN)
NAN_BOXED(1066312703,32,FLEN)
NAN_BOXED(2119478299,32,FLEN)
NAN_BOXED(2118047736,32,FLEN)
NAN_BOXED(1066312703,32,FLEN)
NAN_BOXED(2119478299,32,FLEN)
NAN_BOXED(2118047736,32,FLEN)
NAN_BOXED(1066312703,32,FLEN)
NAN_BOXED(2119478299,32,FLEN)
NAN_BOXED(2118047736,32,FLEN)
NAN_BOXED(1066312703,32,FLEN)
NAN_BOXED(2119478299,32,FLEN)
NAN_BOXED(2118047736,32,FLEN)
NAN_BOXED(1066312703,32,FLEN)
NAN_BOXED(2119478299,32,FLEN)
NAN_BOXED(2118146106,32,FLEN)
NAN_BOXED(1031469811,32,FLEN)
NAN_BOXED(2084344501,32,FLEN)
NAN_BOXED(2118146106,32,FLEN)
NAN_BOXED(1031469811,32,FLEN)
NAN_BOXED(2084344501,32,FLEN)
NAN_BOXED(2118146106,32,FLEN)
NAN_BOXED(1031469811,32,FLEN)
NAN_BOXED(2084344501,32,FLEN)
NAN_BOXED(2118146106,32,FLEN)
NAN_BOXED(1031469811,32,FLEN)
NAN_BOXED(2084344501,32,FLEN)
NAN_BOXED(2118146106,32,FLEN)
NAN_BOXED(1031469811,32,FLEN)
NAN_BOXED(2084344501,32,FLEN)
NAN_BOXED(2118215868,32,FLEN)
NAN_BOXED(1066723316,32,FLEN)
NAN_BOXED(2120286101,32,FLEN)
NAN_BOXED(2118215868,32,FLEN)
NAN_BOXED(1066723316,32,FLEN)
NAN_BOXED(2120286101,32,FLEN)
NAN_BOXED(2118215868,32,FLEN)
NAN_BOXED(1066723316,32,FLEN)
NAN_BOXED(2120286101,32,FLEN)
NAN_BOXED(2118215868,32,FLEN)
NAN_BOXED(1066723316,32,FLEN)
NAN_BOXED(2120286101,32,FLEN)
NAN_BOXED(2118215868,32,FLEN)
NAN_BOXED(1066723316,32,FLEN)
NAN_BOXED(2120286101,32,FLEN)
NAN_BOXED(2118237156,32,FLEN)
NAN_BOXED(1068516739,32,FLEN)
NAN_BOXED(2122671559,32,FLEN)
NAN_BOXED(2118237156,32,FLEN)
NAN_BOXED(1068516739,32,FLEN)
NAN_BOXED(2122671559,32,FLEN)
NAN_BOXED(2118237156,32,FLEN)
NAN_BOXED(1068516739,32,FLEN)
NAN_BOXED(2122671559,32,FLEN)
NAN_BOXED(2118237156,32,FLEN)
NAN_BOXED(1068516739,32,FLEN)
NAN_BOXED(2122671559,32,FLEN)
NAN_BOXED(2118237156,32,FLEN)
NAN_BOXED(1068516739,32,FLEN)
NAN_BOXED(2122671559,32,FLEN)
NAN_BOXED(2118405068,32,FLEN)
NAN_BOXED(1059291523,32,FLEN)
NAN_BOXED(2113584932,32,FLEN)
NAN_BOXED(2118405068,32,FLEN)
NAN_BOXED(1059291523,32,FLEN)
NAN_BOXED(2113584932,32,FLEN)
NAN_BOXED(2118405068,32,FLEN)
NAN_BOXED(1059291523,32,FLEN)
NAN_BOXED(2113584932,32,FLEN)
NAN_BOXED(2118405068,32,FLEN)
NAN_BOXED(1059291523,32,FLEN)
NAN_BOXED(2113584932,32,FLEN)
NAN_BOXED(2118405068,32,FLEN)
NAN_BOXED(1059291523,32,FLEN)
NAN_BOXED(2113584932,32,FLEN)
NAN_BOXED(2118585280,32,FLEN)
NAN_BOXED(1076560526,32,FLEN)
NAN_BOXED(2131031766,32,FLEN)
NAN_BOXED(2118585280,32,FLEN)
NAN_BOXED(1076560526,32,FLEN)
NAN_BOXED(2131031766,32,FLEN)
NAN_BOXED(2118585280,32,FLEN)
NAN_BOXED(1076560526,32,FLEN)
NAN_BOXED(2131031766,32,FLEN)
NAN_BOXED(2118585280,32,FLEN)
NAN_BOXED(1076560526,32,FLEN)
NAN_BOXED(2131031766,32,FLEN)
NAN_BOXED(2118585280,32,FLEN)
NAN_BOXED(1076560526,32,FLEN)
NAN_BOXED(2131031766,32,FLEN)
NAN_BOXED(2118594865,32,FLEN)
NAN_BOXED(1070516686,32,FLEN)
NAN_BOXED(2124474011,32,FLEN)
NAN_BOXED(2118594865,32,FLEN)
NAN_BOXED(1070516686,32,FLEN)
NAN_BOXED(2124474011,32,FLEN)
NAN_BOXED(2118594865,32,FLEN)
NAN_BOXED(1070516686,32,FLEN)
NAN_BOXED(2124474011,32,FLEN)
NAN_BOXED(2118594865,32,FLEN)
NAN_BOXED(1070516686,32,FLEN)
NAN_BOXED(2124474011,32,FLEN)
NAN_BOXED(2118594865,32,FLEN)
NAN_BOXED(1070516686,32,FLEN)
NAN_BOXED(2124474011,32,FLEN)
NAN_BOXED(2118682965,32,FLEN)
NAN_BOXED(1068745235,32,FLEN)
NAN_BOXED(2123157518,32,FLEN)
NAN_BOXED(2118682965,32,FLEN)
NAN_BOXED(1068745235,32,FLEN)
NAN_BOXED(2123157518,32,FLEN)
NAN_BOXED(2118682965,32,FLEN)
NAN_BOXED(1068745235,32,FLEN)
NAN_BOXED(2123157518,32,FLEN)
NAN_BOXED(2118682965,32,FLEN)
NAN_BOXED(1068745235,32,FLEN)
NAN_BOXED(2123157518,32,FLEN)
NAN_BOXED(2118682965,32,FLEN)
NAN_BOXED(1068745235,32,FLEN)
NAN_BOXED(2123157518,32,FLEN)
NAN_BOXED(2118790064,32,FLEN)
NAN_BOXED(1080677551,32,FLEN)
NAN_BOXED(2134419898,32,FLEN)
NAN_BOXED(2118790064,32,FLEN)
NAN_BOXED(1080677551,32,FLEN)
NAN_BOXED(2134419898,32,FLEN)
NAN_BOXED(2118790064,32,FLEN)
NAN_BOXED(1080677551,32,FLEN)
NAN_BOXED(2134419898,32,FLEN)
NAN_BOXED(2118790064,32,FLEN)
NAN_BOXED(1080677551,32,FLEN)
NAN_BOXED(2134419898,32,FLEN)
NAN_BOXED(2118790064,32,FLEN)
NAN_BOXED(1080677551,32,FLEN)
NAN_BOXED(2134419898,32,FLEN)
NAN_BOXED(2119022429,32,FLEN)
NAN_BOXED(1056375209,32,FLEN)
NAN_BOXED(2110160193,32,FLEN)
NAN_BOXED(2119022429,32,FLEN)
NAN_BOXED(1056375209,32,FLEN)
NAN_BOXED(2110160193,32,FLEN)
NAN_BOXED(2119022429,32,FLEN)
NAN_BOXED(1056375209,32,FLEN)
NAN_BOXED(2110160193,32,FLEN)
NAN_BOXED(2119022429,32,FLEN)
NAN_BOXED(1056375209,32,FLEN)
NAN_BOXED(2110160193,32,FLEN)
NAN_BOXED(2119022429,32,FLEN)
NAN_BOXED(1056375209,32,FLEN)
NAN_BOXED(2110160193,32,FLEN)
NAN_BOXED(2119152605,32,FLEN)
NAN_BOXED(1056261438,32,FLEN)
NAN_BOXED(2110193489,32,FLEN)
NAN_BOXED(2119152605,32,FLEN)
NAN_BOXED(1056261438,32,FLEN)
NAN_BOXED(2110193489,32,FLEN)
NAN_BOXED(2119152605,32,FLEN)
NAN_BOXED(1056261438,32,FLEN)
NAN_BOXED(2110193489,32,FLEN)
NAN_BOXED(2119152605,32,FLEN)
NAN_BOXED(1056261438,32,FLEN)
NAN_BOXED(2110193489,32,FLEN)
NAN_BOXED(2119152605,32,FLEN)
NAN_BOXED(1056261438,32,FLEN)
NAN_BOXED(2110193489,32,FLEN)
NAN_BOXED(2119553998,32,FLEN)
NAN_BOXED(1069477165,32,FLEN)
NAN_BOXED(2124380494,32,FLEN)
NAN_BOXED(2119553998,32,FLEN)
NAN_BOXED(1069477165,32,FLEN)
NAN_BOXED(2124380494,32,FLEN)
NAN_BOXED(2119553998,32,FLEN)
NAN_BOXED(1069477165,32,FLEN)
NAN_BOXED(2124380494,32,FLEN)
NAN_BOXED(2119553998,32,FLEN)
NAN_BOXED(1069477165,32,FLEN)
NAN_BOXED(2124380494,32,FLEN)
NAN_BOXED(2119553998,32,FLEN)
NAN_BOXED(1069477165,32,FLEN)
NAN_BOXED(2124380494,32,FLEN)
NAN_BOXED(2119730774,32,FLEN)
NAN_BOXED(1062989547,32,FLEN)
NAN_BOXED(2117731583,32,FLEN)
NAN_BOXED(2119730774,32,FLEN)
NAN_BOXED(1062989547,32,FLEN)
NAN_BOXED(2117731583,32,FLEN)
NAN_BOXED(2119730774,32,FLEN)
NAN_BOXED(1062989547,32,FLEN)
NAN_BOXED(2117731583,32,FLEN)
NAN_BOXED(2119730774,32,FLEN)
NAN_BOXED(1062989547,32,FLEN)
NAN_BOXED(2117731583,32,FLEN)
NAN_BOXED(2119730774,32,FLEN)
NAN_BOXED(1062989547,32,FLEN)
NAN_BOXED(2117731583,32,FLEN)
NAN_BOXED(2120290724,32,FLEN)
NAN_BOXED(1070116148,32,FLEN)
NAN_BOXED(2125491727,32,FLEN)
NAN_BOXED(2120290724,32,FLEN)
NAN_BOXED(1070116148,32,FLEN)
NAN_BOXED(2125491727,32,FLEN)
NAN_BOXED(2120290724,32,FLEN)
NAN_BOXED(1070116148,32,FLEN)
NAN_BOXED(2125491727,32,FLEN)
NAN_BOXED(2120290724,32,FLEN)
NAN_BOXED(1070116148,32,FLEN)
NAN_BOXED(2125491727,32,FLEN)
NAN_BOXED(2120290724,32,FLEN)
NAN_BOXED(1070116148,32,FLEN)
NAN_BOXED(2125491727,32,FLEN)
NAN_BOXED(2120853737,32,FLEN)
NAN_BOXED(1061414015,32,FLEN)
NAN_BOXED(2117258296,32,FLEN)
NAN_BOXED(2120853737,32,FLEN)
NAN_BOXED(1061414015,32,FLEN)
NAN_BOXED(2117258296,32,FLEN)
NAN_BOXED(2120853737,32,FLEN)
NAN_BOXED(1061414015,32,FLEN)
NAN_BOXED(2117258296,32,FLEN)
NAN_BOXED(2120853737,32,FLEN)
NAN_BOXED(1061414015,32,FLEN)
NAN_BOXED(2117258296,32,FLEN)
NAN_BOXED(2120853737,32,FLEN)
NAN_BOXED(1061414015,32,FLEN)
NAN_BOXED(2117258296,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1076449759,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1076449759,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1076449759,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1076449759,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1076449759,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2121120664,32,FLEN)
NAN_BOXED(1066627870,32,FLEN)
NAN_BOXED(2122902943,32,FLEN)
NAN_BOXED(2121120664,32,FLEN)
NAN_BOXED(1066627870,32,FLEN)
NAN_BOXED(2122902943,32,FLEN)
NAN_BOXED(2121120664,32,FLEN)
NAN_BOXED(1066627870,32,FLEN)
NAN_BOXED(2122902943,32,FLEN)
NAN_BOXED(2121120664,32,FLEN)
NAN_BOXED(1066627870,32,FLEN)
NAN_BOXED(2122902943,32,FLEN)
NAN_BOXED(2121120664,32,FLEN)
NAN_BOXED(1066627870,32,FLEN)
NAN_BOXED(2122902943,32,FLEN)
NAN_BOXED(2121243699,32,FLEN)
NAN_BOXED(1064977493,32,FLEN)
NAN_BOXED(2120892031,32,FLEN)
NAN_BOXED(2121243699,32,FLEN)
NAN_BOXED(1064977493,32,FLEN)
NAN_BOXED(2120892031,32,FLEN)
NAN_BOXED(2121243699,32,FLEN)
NAN_BOXED(1064977493,32,FLEN)
NAN_BOXED(2120892031,32,FLEN)
NAN_BOXED(2121243699,32,FLEN)
NAN_BOXED(1064977493,32,FLEN)
NAN_BOXED(2120892031,32,FLEN)
NAN_BOXED(2121243699,32,FLEN)
NAN_BOXED(1064977493,32,FLEN)
NAN_BOXED(2120892031,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1072600747,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1072600747,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1072600747,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1072600747,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1072600747,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2121839644,32,FLEN)
NAN_BOXED(1055817862,32,FLEN)
NAN_BOXED(2112336974,32,FLEN)
NAN_BOXED(2121839644,32,FLEN)
NAN_BOXED(1055817862,32,FLEN)
NAN_BOXED(2112336974,32,FLEN)
NAN_BOXED(2121839644,32,FLEN)
NAN_BOXED(1055817862,32,FLEN)
NAN_BOXED(2112336974,32,FLEN)
NAN_BOXED(2121839644,32,FLEN)
NAN_BOXED(1055817862,32,FLEN)
NAN_BOXED(2112336974,32,FLEN)
NAN_BOXED(2121839644,32,FLEN)
NAN_BOXED(1055817862,32,FLEN)
NAN_BOXED(2112336974,32,FLEN)
NAN_BOXED(2121947826,32,FLEN)
NAN_BOXED(1070303449,32,FLEN)
NAN_BOXED(2126973887,32,FLEN)
NAN_BOXED(2121947826,32,FLEN)
NAN_BOXED(1070303449,32,FLEN)
NAN_BOXED(2126973887,32,FLEN)
NAN_BOXED(2121947826,32,FLEN)
NAN_BOXED(1070303449,32,FLEN)
NAN_BOXED(2126973887,32,FLEN)
NAN_BOXED(2121947826,32,FLEN)
NAN_BOXED(1070303449,32,FLEN)
NAN_BOXED(2126973887,32,FLEN)
NAN_BOXED(2121947826,32,FLEN)
NAN_BOXED(1070303449,32,FLEN)
NAN_BOXED(2126973887,32,FLEN)
NAN_BOXED(2122133189,32,FLEN)
NAN_BOXED(1059926972,32,FLEN)
NAN_BOXED(2116766662,32,FLEN)
NAN_BOXED(2122133189,32,FLEN)
NAN_BOXED(1059926972,32,FLEN)
NAN_BOXED(2116766662,32,FLEN)
NAN_BOXED(2122133189,32,FLEN)
NAN_BOXED(1059926972,32,FLEN)
NAN_BOXED(2116766662,32,FLEN)
NAN_BOXED(2122133189,32,FLEN)
NAN_BOXED(1059926972,32,FLEN)
NAN_BOXED(2116766662,32,FLEN)
NAN_BOXED(2122133189,32,FLEN)
NAN_BOXED(1059926972,32,FLEN)
NAN_BOXED(2116766662,32,FLEN)
NAN_BOXED(2122276745,32,FLEN)
NAN_BOXED(1075454640,32,FLEN)
NAN_BOXED(2132394516,32,FLEN)
NAN_BOXED(2122276745,32,FLEN)
NAN_BOXED(1075454640,32,FLEN)
NAN_BOXED(2132394516,32,FLEN)
NAN_BOXED(2122276745,32,FLEN)
NAN_BOXED(1075454640,32,FLEN)
NAN_BOXED(2132394516,32,FLEN)
NAN_BOXED(2122276745,32,FLEN)
NAN_BOXED(1075454640,32,FLEN)
NAN_BOXED(2132394516,32,FLEN)
NAN_BOXED(2122276745,32,FLEN)
NAN_BOXED(1075454640,32,FLEN)
NAN_BOXED(2132394516,32,FLEN)
NAN_BOXED(2122486946,32,FLEN)
NAN_BOXED(1042174467,32,FLEN)
NAN_BOXED(2099348258,32,FLEN)
NAN_BOXED(2122486946,32,FLEN)
NAN_BOXED(1042174467,32,FLEN)
NAN_BOXED(2099348258,32,FLEN)
NAN_BOXED(2122486946,32,FLEN)
NAN_BOXED(1042174467,32,FLEN)
NAN_BOXED(2099348258,32,FLEN)
NAN_BOXED(2122486946,32,FLEN)
NAN_BOXED(1042174467,32,FLEN)
NAN_BOXED(2099348258,32,FLEN)
NAN_BOXED(2122486946,32,FLEN)
NAN_BOXED(1042174467,32,FLEN)
NAN_BOXED(2099348258,32,FLEN)
NAN_BOXED(2122551928,32,FLEN)
NAN_BOXED(1061539861,32,FLEN)
NAN_BOXED(2118866258,32,FLEN)
NAN_BOXED(2122551928,32,FLEN)
NAN_BOXED(1061539861,32,FLEN)
NAN_BOXED(2118866258,32,FLEN)
NAN_BOXED(2122551928,32,FLEN)
NAN_BOXED(1061539861,32,FLEN)
NAN_BOXED(2118866258,32,FLEN)
NAN_BOXED(2122551928,32,FLEN)
NAN_BOXED(1061539861,32,FLEN)
NAN_BOXED(2118866258,32,FLEN)
NAN_BOXED(2122551928,32,FLEN)
NAN_BOXED(1061539861,32,FLEN)
NAN_BOXED(2118866258,32,FLEN)
NAN_BOXED(2122553659,32,FLEN)
NAN_BOXED(1075539430,32,FLEN)
NAN_BOXED(2132790411,32,FLEN)
NAN_BOXED(2122553659,32,FLEN)
NAN_BOXED(1075539430,32,FLEN)
NAN_BOXED(2132790411,32,FLEN)
NAN_BOXED(2122553659,32,FLEN)
NAN_BOXED(1075539430,32,FLEN)
NAN_BOXED(2132790411,32,FLEN)
NAN_BOXED(2122553659,32,FLEN)
NAN_BOXED(1075539430,32,FLEN)
NAN_BOXED(2132790411,32,FLEN)
NAN_BOXED(2122553659,32,FLEN)
NAN_BOXED(1075539430,32,FLEN)
NAN_BOXED(2132790411,32,FLEN)
NAN_BOXED(2122661782,32,FLEN)
NAN_BOXED(1029072310,32,FLEN)
NAN_BOXED(2086613041,32,FLEN)
NAN_BOXED(2122661782,32,FLEN)
NAN_BOXED(1029072310,32,FLEN)
NAN_BOXED(2086613041,32,FLEN)
NAN_BOXED(2122661782,32,FLEN)
NAN_BOXED(1029072310,32,FLEN)
NAN_BOXED(2086613041,32,FLEN)
NAN_BOXED(2122661782,32,FLEN)
NAN_BOXED(1029072310,32,FLEN)
NAN_BOXED(2086613041,32,FLEN)
NAN_BOXED(2122661782,32,FLEN)
NAN_BOXED(1029072310,32,FLEN)
NAN_BOXED(2086613041,32,FLEN)
NAN_BOXED(2122747509,32,FLEN)
NAN_BOXED(1070099297,32,FLEN)
NAN_BOXED(2127736697,32,FLEN)
NAN_BOXED(2122747509,32,FLEN)
NAN_BOXED(1070099297,32,FLEN)
NAN_BOXED(2127736697,32,FLEN)
NAN_BOXED(2122747509,32,FLEN)
NAN_BOXED(1070099297,32,FLEN)
NAN_BOXED(2127736697,32,FLEN)
NAN_BOXED(2122747509,32,FLEN)
NAN_BOXED(1070099297,32,FLEN)
NAN_BOXED(2127736697,32,FLEN)
NAN_BOXED(2122747509,32,FLEN)
NAN_BOXED(1070099297,32,FLEN)
NAN_BOXED(2127736697,32,FLEN)
NAN_BOXED(2122832482,32,FLEN)
NAN_BOXED(1067828108,32,FLEN)
NAN_BOXED(2125459214,32,FLEN)
NAN_BOXED(2122832482,32,FLEN)
NAN_BOXED(1067828108,32,FLEN)
NAN_BOXED(2125459214,32,FLEN)
NAN_BOXED(2122832482,32,FLEN)
NAN_BOXED(1067828108,32,FLEN)
NAN_BOXED(2125459214,32,FLEN)
NAN_BOXED(2122832482,32,FLEN)
NAN_BOXED(1067828108,32,FLEN)
NAN_BOXED(2125459214,32,FLEN)
NAN_BOXED(2122832482,32,FLEN)
NAN_BOXED(1067828108,32,FLEN)
NAN_BOXED(2125459214,32,FLEN)
NAN_BOXED(2122877240,32,FLEN)
NAN_BOXED(1034349601,32,FLEN)
NAN_BOXED(2092043733,32,FLEN)
NAN_BOXED(2122877240,32,FLEN)
NAN_BOXED(1034349601,32,FLEN)
NAN_BOXED(2092043733,32,FLEN)
NAN_BOXED(2122877240,32,FLEN)
NAN_BOXED(1034349601,32,FLEN)
NAN_BOXED(2092043733,32,FLEN)
NAN_BOXED(2122877240,32,FLEN)
NAN_BOXED(1034349601,32,FLEN)
NAN_BOXED(2092043733,32,FLEN)
NAN_BOXED(2122877240,32,FLEN)
NAN_BOXED(1034349601,32,FLEN)
NAN_BOXED(2092043733,32,FLEN)
NAN_BOXED(2122957987,32,FLEN)
NAN_BOXED(1075690093,32,FLEN)
NAN_BOXED(2133443544,32,FLEN)
NAN_BOXED(2122957987,32,FLEN)
NAN_BOXED(1075690093,32,FLEN)
NAN_BOXED(2133443544,32,FLEN)
NAN_BOXED(2122957987,32,FLEN)
NAN_BOXED(1075690093,32,FLEN)
NAN_BOXED(2133443544,32,FLEN)
NAN_BOXED(2122957987,32,FLEN)
NAN_BOXED(1075690093,32,FLEN)
NAN_BOXED(2133443544,32,FLEN)
NAN_BOXED(2122957987,32,FLEN)
NAN_BOXED(1075690093,32,FLEN)
NAN_BOXED(2133443544,32,FLEN)
NAN_BOXED(2123093688,32,FLEN)
NAN_BOXED(1051506214,32,FLEN)
NAN_BOXED(2109517703,32,FLEN)
NAN_BOXED(2123093688,32,FLEN)
NAN_BOXED(1051506214,32,FLEN)
NAN_BOXED(2109517703,32,FLEN)
NAN_BOXED(2123093688,32,FLEN)
NAN_BOXED(1051506214,32,FLEN)
NAN_BOXED(2109517703,32,FLEN)
NAN_BOXED(2123093688,32,FLEN)
NAN_BOXED(1051506214,32,FLEN)
NAN_BOXED(2109517703,32,FLEN)
NAN_BOXED(2123093688,32,FLEN)
NAN_BOXED(1051506214,32,FLEN)
NAN_BOXED(2109517703,32,FLEN)
NAN_BOXED(2123221786,32,FLEN)
NAN_BOXED(1069830602,32,FLEN)
NAN_BOXED(2128181658,32,FLEN)
NAN_BOXED(2123221786,32,FLEN)
NAN_BOXED(1069830602,32,FLEN)
NAN_BOXED(2128181658,32,FLEN)
NAN_BOXED(2123221786,32,FLEN)
NAN_BOXED(1069830602,32,FLEN)
NAN_BOXED(2128181658,32,FLEN)
NAN_BOXED(2123221786,32,FLEN)
NAN_BOXED(1069830602,32,FLEN)
NAN_BOXED(2128181658,32,FLEN)
NAN_BOXED(2123221786,32,FLEN)
NAN_BOXED(1069830602,32,FLEN)
NAN_BOXED(2128181658,32,FLEN)
NAN_BOXED(2123637975,32,FLEN)
NAN_BOXED(1071503721,32,FLEN)
NAN_BOXED(2130731421,32,FLEN)
NAN_BOXED(2123637975,32,FLEN)
NAN_BOXED(1071503721,32,FLEN)
NAN_BOXED(2130731421,32,FLEN)
NAN_BOXED(2123637975,32,FLEN)
NAN_BOXED(1071503721,32,FLEN)
NAN_BOXED(2130731421,32,FLEN)
NAN_BOXED(2123637975,32,FLEN)
NAN_BOXED(1071503721,32,FLEN)
NAN_BOXED(2130731421,32,FLEN)
NAN_BOXED(2123637975,32,FLEN)
NAN_BOXED(1071503721,32,FLEN)
NAN_BOXED(2130731421,32,FLEN)
NAN_BOXED(2123731718,32,FLEN)
NAN_BOXED(1062623244,32,FLEN)
NAN_BOXED(2121955506,32,FLEN)
NAN_BOXED(2123731718,32,FLEN)
NAN_BOXED(1062623244,32,FLEN)
NAN_BOXED(2121955506,32,FLEN)
NAN_BOXED(2123731718,32,FLEN)
NAN_BOXED(1062623244,32,FLEN)
NAN_BOXED(2121955506,32,FLEN)
NAN_BOXED(2123731718,32,FLEN)
NAN_BOXED(1062623244,32,FLEN)
NAN_BOXED(2121955506,32,FLEN)
NAN_BOXED(2123731718,32,FLEN)
NAN_BOXED(1062623244,32,FLEN)
NAN_BOXED(2121955506,32,FLEN)
NAN_BOXED(2123767787,32,FLEN)
NAN_BOXED(1074702266,32,FLEN)
NAN_BOXED(2133282849,32,FLEN)
NAN_BOXED(2123767787,32,FLEN)
NAN_BOXED(1074702266,32,FLEN)
NAN_BOXED(2133282849,32,FLEN)
NAN_BOXED(2123767787,32,FLEN)
NAN_BOXED(1074702266,32,FLEN)
NAN_BOXED(2133282849,32,FLEN)
NAN_BOXED(2123767787,32,FLEN)
NAN_BOXED(1074702266,32,FLEN)
NAN_BOXED(2133282849,32,FLEN)
NAN_BOXED(2123767787,32,FLEN)
NAN_BOXED(1074702266,32,FLEN)
NAN_BOXED(2133282849,32,FLEN)
NAN_BOXED(2123803754,32,FLEN)
NAN_BOXED(1065494314,32,FLEN)
NAN_BOXED(2123969846,32,FLEN)
NAN_BOXED(2123803754,32,FLEN)
NAN_BOXED(1065494314,32,FLEN)
NAN_BOXED(2123969846,32,FLEN)
NAN_BOXED(2123803754,32,FLEN)
NAN_BOXED(1065494314,32,FLEN)
NAN_BOXED(2123969846,32,FLEN)
NAN_BOXED(2123803754,32,FLEN)
NAN_BOXED(1065494314,32,FLEN)
NAN_BOXED(2123969846,32,FLEN)
NAN_BOXED(2123803754,32,FLEN)
NAN_BOXED(1065494314,32,FLEN)
NAN_BOXED(2123969846,32,FLEN)
NAN_BOXED(2123821550,32,FLEN)
NAN_BOXED(1067777481,32,FLEN)
NAN_BOXED(2126680384,32,FLEN)
NAN_BOXED(2123821550,32,FLEN)
NAN_BOXED(1067777481,32,FLEN)
NAN_BOXED(2126680384,32,FLEN)
NAN_BOXED(2123821550,32,FLEN)
NAN_BOXED(1067777481,32,FLEN)
NAN_BOXED(2126680384,32,FLEN)
NAN_BOXED(2123821550,32,FLEN)
NAN_BOXED(1067777481,32,FLEN)
NAN_BOXED(2126680384,32,FLEN)
NAN_BOXED(2123821550,32,FLEN)
NAN_BOXED(1067777481,32,FLEN)
NAN_BOXED(2126680384,32,FLEN)
NAN_BOXED(2123951678,32,FLEN)
NAN_BOXED(1067227932,32,FLEN)
NAN_BOXED(2126191534,32,FLEN)
NAN_BOXED(2123951678,32,FLEN)
NAN_BOXED(1067227932,32,FLEN)
NAN_BOXED(2126191534,32,FLEN)
NAN_BOXED(2123951678,32,FLEN)
NAN_BOXED(1067227932,32,FLEN)
NAN_BOXED(2126191534,32,FLEN)
NAN_BOXED(2123951678,32,FLEN)
NAN_BOXED(1067227932,32,FLEN)
NAN_BOXED(2126191534,32,FLEN)
NAN_BOXED(2123951678,32,FLEN)
NAN_BOXED(1067227932,32,FLEN)
NAN_BOXED(2126191534,32,FLEN)
NAN_BOXED(2124030445,32,FLEN)
NAN_BOXED(1075246800,32,FLEN)
NAN_BOXED(2134231286,32,FLEN)
NAN_BOXED(2124030445,32,FLEN)
NAN_BOXED(1075246800,32,FLEN)
NAN_BOXED(2134231286,32,FLEN)
NAN_BOXED(2124030445,32,FLEN)
NAN_BOXED(1075246800,32,FLEN)
NAN_BOXED(2134231286,32,FLEN)
NAN_BOXED(2124030445,32,FLEN)
NAN_BOXED(1075246800,32,FLEN)
NAN_BOXED(2134231286,32,FLEN)
NAN_BOXED(2124030445,32,FLEN)
NAN_BOXED(1075246800,32,FLEN)
NAN_BOXED(2134231286,32,FLEN)
NAN_BOXED(2124113766,32,FLEN)
NAN_BOXED(1062984181,32,FLEN)
NAN_BOXED(2122675652,32,FLEN)
NAN_BOXED(2124113766,32,FLEN)
NAN_BOXED(1062984181,32,FLEN)
NAN_BOXED(2122675652,32,FLEN)
NAN_BOXED(2124113766,32,FLEN)
NAN_BOXED(1062984181,32,FLEN)
NAN_BOXED(2122675652,32,FLEN)
NAN_BOXED(2124113766,32,FLEN)
NAN_BOXED(1062984181,32,FLEN)
NAN_BOXED(2122675652,32,FLEN)
NAN_BOXED(2124113766,32,FLEN)
NAN_BOXED(1062984181,32,FLEN)
NAN_BOXED(2122675652,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1072154782,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1072154782,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1072154782,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1072154782,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1072154782,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2124514672,32,FLEN)
NAN_BOXED(1074504291,32,FLEN)
NAN_BOXED(2133865427,32,FLEN)
NAN_BOXED(2124514672,32,FLEN)
NAN_BOXED(1074504291,32,FLEN)
NAN_BOXED(2133865427,32,FLEN)
NAN_BOXED(2124514672,32,FLEN)
NAN_BOXED(1074504291,32,FLEN)
NAN_BOXED(2133865427,32,FLEN)
NAN_BOXED(2124514672,32,FLEN)
NAN_BOXED(1074504291,32,FLEN)
NAN_BOXED(2133865427,32,FLEN)
NAN_BOXED(2124514672,32,FLEN)
NAN_BOXED(1074504291,32,FLEN)
NAN_BOXED(2133865427,32,FLEN)
NAN_BOXED(2124555589,32,FLEN)
NAN_BOXED(1074406404,32,FLEN)
NAN_BOXED(2133786063,32,FLEN)
NAN_BOXED(2124555589,32,FLEN)
NAN_BOXED(1074406404,32,FLEN)
NAN_BOXED(2133786063,32,FLEN)
NAN_BOXED(2124555589,32,FLEN)
NAN_BOXED(1074406404,32,FLEN)
NAN_BOXED(2133786063,32,FLEN)
NAN_BOXED(2124555589,32,FLEN)
NAN_BOXED(1074406404,32,FLEN)
NAN_BOXED(2133786063,32,FLEN)
NAN_BOXED(2124555589,32,FLEN)
NAN_BOXED(1074406404,32,FLEN)
NAN_BOXED(2133786063,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1073303417,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1073303417,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1073303417,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1073303417,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1073303417,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2124846387,32,FLEN)
NAN_BOXED(1073781697,32,FLEN)
NAN_BOXED(2133286888,32,FLEN)
NAN_BOXED(2124846387,32,FLEN)
NAN_BOXED(1073781697,32,FLEN)
NAN_BOXED(2133286888,32,FLEN)
NAN_BOXED(2124846387,32,FLEN)
NAN_BOXED(1073781697,32,FLEN)
NAN_BOXED(2133286888,32,FLEN)
NAN_BOXED(2124846387,32,FLEN)
NAN_BOXED(1073781697,32,FLEN)
NAN_BOXED(2133286888,32,FLEN)
NAN_BOXED(2124846387,32,FLEN)
NAN_BOXED(1073781697,32,FLEN)
NAN_BOXED(2133286888,32,FLEN)
NAN_BOXED(2125005321,32,FLEN)
NAN_BOXED(1054147249,32,FLEN)
NAN_BOXED(2114756729,32,FLEN)
NAN_BOXED(2125005321,32,FLEN)
NAN_BOXED(1054147249,32,FLEN)
NAN_BOXED(2114756729,32,FLEN)
NAN_BOXED(2125005321,32,FLEN)
NAN_BOXED(1054147249,32,FLEN)
NAN_BOXED(2114756729,32,FLEN)
NAN_BOXED(2125005321,32,FLEN)
NAN_BOXED(1054147249,32,FLEN)
NAN_BOXED(2114756729,32,FLEN)
NAN_BOXED(2125005321,32,FLEN)
NAN_BOXED(1054147249,32,FLEN)
NAN_BOXED(2114756729,32,FLEN)
NAN_BOXED(2125312870,32,FLEN)
NAN_BOXED(1066854215,32,FLEN)
NAN_BOXED(2127349782,32,FLEN)
NAN_BOXED(2125312870,32,FLEN)
NAN_BOXED(1066854215,32,FLEN)
NAN_BOXED(2127349782,32,FLEN)
NAN_BOXED(2125312870,32,FLEN)
NAN_BOXED(1066854215,32,FLEN)
NAN_BOXED(2127349782,32,FLEN)
NAN_BOXED(2125312870,32,FLEN)
NAN_BOXED(1066854215,32,FLEN)
NAN_BOXED(2127349782,32,FLEN)
NAN_BOXED(2125312870,32,FLEN)
NAN_BOXED(1066854215,32,FLEN)
NAN_BOXED(2127349782,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1059673592,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1059673592,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1059673592,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1059673592,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1059673592,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2125348800,32,FLEN)
NAN_BOXED(1061115344,32,FLEN)
NAN_BOXED(2122464249,32,FLEN)
NAN_BOXED(2125348800,32,FLEN)
NAN_BOXED(1061115344,32,FLEN)
NAN_BOXED(2122464249,32,FLEN)
NAN_BOXED(2125348800,32,FLEN)
NAN_BOXED(1061115344,32,FLEN)
NAN_BOXED(2122464249,32,FLEN)
NAN_BOXED(2125348800,32,FLEN)
NAN_BOXED(1061115344,32,FLEN)
NAN_BOXED(2122464249,32,FLEN)
NAN_BOXED(2125348800,32,FLEN)
NAN_BOXED(1061115344,32,FLEN)
NAN_BOXED(2122464249,32,FLEN)
NAN_BOXED(2125656224,32,FLEN)
NAN_BOXED(1065674460,32,FLEN)
NAN_BOXED(2126105313,32,FLEN)
NAN_BOXED(2125656224,32,FLEN)
NAN_BOXED(1065674460,32,FLEN)
NAN_BOXED(2126105313,32,FLEN)
NAN_BOXED(2125656224,32,FLEN)
NAN_BOXED(1065674460,32,FLEN)
NAN_BOXED(2126105313,32,FLEN)
NAN_BOXED(2125656224,32,FLEN)
NAN_BOXED(1065674460,32,FLEN)
NAN_BOXED(2126105313,32,FLEN)
NAN_BOXED(2125656224,32,FLEN)
NAN_BOXED(1065674460,32,FLEN)
NAN_BOXED(2126105313,32,FLEN)
NAN_BOXED(2125860290,32,FLEN)
NAN_BOXED(1068715993,32,FLEN)
NAN_BOXED(2130643152,32,FLEN)
NAN_BOXED(2125860290,32,FLEN)
NAN_BOXED(1068715993,32,FLEN)
NAN_BOXED(2130643152,32,FLEN)
NAN_BOXED(2125860290,32,FLEN)
NAN_BOXED(1068715993,32,FLEN)
NAN_BOXED(2130643152,32,FLEN)
NAN_BOXED(2125860290,32,FLEN)
NAN_BOXED(1068715993,32,FLEN)
NAN_BOXED(2130643152,32,FLEN)
NAN_BOXED(2125860290,32,FLEN)
NAN_BOXED(1068715993,32,FLEN)
NAN_BOXED(2130643152,32,FLEN)
NAN_BOXED(2125874013,32,FLEN)
NAN_BOXED(1065850201,32,FLEN)
NAN_BOXED(2126581685,32,FLEN)
NAN_BOXED(2125874013,32,FLEN)
NAN_BOXED(1065850201,32,FLEN)
NAN_BOXED(2126581685,32,FLEN)
NAN_BOXED(2125874013,32,FLEN)
NAN_BOXED(1065850201,32,FLEN)
NAN_BOXED(2126581685,32,FLEN)
NAN_BOXED(2125874013,32,FLEN)
NAN_BOXED(1065850201,32,FLEN)
NAN_BOXED(2126581685,32,FLEN)
NAN_BOXED(2125874013,32,FLEN)
NAN_BOXED(1065850201,32,FLEN)
NAN_BOXED(2126581685,32,FLEN)
NAN_BOXED(2125959393,32,FLEN)
NAN_BOXED(1073486122,32,FLEN)
NAN_BOXED(2134164649,32,FLEN)
NAN_BOXED(2125959393,32,FLEN)
NAN_BOXED(1073486122,32,FLEN)
NAN_BOXED(2134164649,32,FLEN)
NAN_BOXED(2125959393,32,FLEN)
NAN_BOXED(1073486122,32,FLEN)
NAN_BOXED(2134164649,32,FLEN)
NAN_BOXED(2125959393,32,FLEN)
NAN_BOXED(1073486122,32,FLEN)
NAN_BOXED(2134164649,32,FLEN)
NAN_BOXED(2125959393,32,FLEN)
NAN_BOXED(1073486122,32,FLEN)
NAN_BOXED(2134164649,32,FLEN)
NAN_BOXED(2126386337,32,FLEN)
NAN_BOXED(1071108500,32,FLEN)
NAN_BOXED(2132819697,32,FLEN)
NAN_BOXED(2126386337,32,FLEN)
NAN_BOXED(1071108500,32,FLEN)
NAN_BOXED(2132819697,32,FLEN)
NAN_BOXED(2126386337,32,FLEN)
NAN_BOXED(1071108500,32,FLEN)
NAN_BOXED(2132819697,32,FLEN)
NAN_BOXED(2126386337,32,FLEN)
NAN_BOXED(1071108500,32,FLEN)
NAN_BOXED(2132819697,32,FLEN)
NAN_BOXED(2126386337,32,FLEN)
NAN_BOXED(1071108500,32,FLEN)
NAN_BOXED(2132819697,32,FLEN)
NAN_BOXED(2126514357,32,FLEN)
NAN_BOXED(1052123935,32,FLEN)
NAN_BOXED(2114494601,32,FLEN)
NAN_BOXED(2126514357,32,FLEN)
NAN_BOXED(1052123935,32,FLEN)
NAN_BOXED(2114494601,32,FLEN)
NAN_BOXED(2126514357,32,FLEN)
NAN_BOXED(1052123935,32,FLEN)
NAN_BOXED(2114494601,32,FLEN)
NAN_BOXED(2126514357,32,FLEN)
NAN_BOXED(1052123935,32,FLEN)
NAN_BOXED(2114494601,32,FLEN)
NAN_BOXED(2126514357,32,FLEN)
NAN_BOXED(1052123935,32,FLEN)
NAN_BOXED(2114494601,32,FLEN)
NAN_BOXED(2126553624,32,FLEN)
NAN_BOXED(1065857821,32,FLEN)
NAN_BOXED(2127313028,32,FLEN)
NAN_BOXED(2126553624,32,FLEN)
NAN_BOXED(1065857821,32,FLEN)
NAN_BOXED(2127313028,32,FLEN)
NAN_BOXED(2126553624,32,FLEN)
NAN_BOXED(1065857821,32,FLEN)
NAN_BOXED(2127313028,32,FLEN)
NAN_BOXED(2126553624,32,FLEN)
NAN_BOXED(1065857821,32,FLEN)
NAN_BOXED(2127313028,32,FLEN)
NAN_BOXED(2126553624,32,FLEN)
NAN_BOXED(1065857821,32,FLEN)
NAN_BOXED(2127313028,32,FLEN)
NAN_BOXED(2126818180,32,FLEN)
NAN_BOXED(1068310734,32,FLEN)
NAN_BOXED(2131034396,32,FLEN)
NAN_BOXED(2126818180,32,FLEN)
NAN_BOXED(1068310734,32,FLEN)
NAN_BOXED(2131034396,32,FLEN)
NAN_BOXED(2126818180,32,FLEN)
NAN_BOXED(1068310734,32,FLEN)
NAN_BOXED(2131034396,32,FLEN)
NAN_BOXED(2126818180,32,FLEN)
NAN_BOXED(1068310734,32,FLEN)
NAN_BOXED(2131034396,32,FLEN)
NAN_BOXED(2126818180,32,FLEN)
NAN_BOXED(1068310734,32,FLEN)
NAN_BOXED(2131034396,32,FLEN)
NAN_BOXED(2126901982,32,FLEN)
NAN_BOXED(1067014713,32,FLEN)
NAN_BOXED(2129471445,32,FLEN)
NAN_BOXED(2126901982,32,FLEN)
NAN_BOXED(1067014713,32,FLEN)
NAN_BOXED(2129471445,32,FLEN)
NAN_BOXED(2126901982,32,FLEN)
NAN_BOXED(1067014713,32,FLEN)
NAN_BOXED(2129471445,32,FLEN)
NAN_BOXED(2126901982,32,FLEN)
NAN_BOXED(1067014713,32,FLEN)
NAN_BOXED(2129471445,32,FLEN)
NAN_BOXED(2126901982,32,FLEN)
NAN_BOXED(1067014713,32,FLEN)
NAN_BOXED(2129471445,32,FLEN)
NAN_BOXED(2126904841,32,FLEN)
NAN_BOXED(1059610462,32,FLEN)
NAN_BOXED(2122463352,32,FLEN)
NAN_BOXED(2126904841,32,FLEN)
NAN_BOXED(1059610462,32,FLEN)
NAN_BOXED(2122463352,32,FLEN)
NAN_BOXED(2126904841,32,FLEN)
NAN_BOXED(1059610462,32,FLEN)
NAN_BOXED(2122463352,32,FLEN)
NAN_BOXED(2126904841,32,FLEN)
NAN_BOXED(1059610462,32,FLEN)
NAN_BOXED(2122463352,32,FLEN)
NAN_BOXED(2126904841,32,FLEN)
NAN_BOXED(1059610462,32,FLEN)
NAN_BOXED(2122463352,32,FLEN)
NAN_BOXED(2127103690,32,FLEN)
NAN_BOXED(1024612755,32,FLEN)
NAN_BOXED(2087049324,32,FLEN)
NAN_BOXED(2127103690,32,FLEN)
NAN_BOXED(1024612755,32,FLEN)
NAN_BOXED(2087049324,32,FLEN)
NAN_BOXED(2127103690,32,FLEN)
NAN_BOXED(1024612755,32,FLEN)
NAN_BOXED(2087049324,32,FLEN)
NAN_BOXED(2127103690,32,FLEN)
NAN_BOXED(1024612755,32,FLEN)
NAN_BOXED(2087049324,32,FLEN)
NAN_BOXED(2127103690,32,FLEN)
NAN_BOXED(1024612755,32,FLEN)
NAN_BOXED(2087049324,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(1070942586,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(1070942586,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(1070942586,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(1070942586,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(1070942586,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2127181061,32,FLEN)
NAN_BOXED(1071837555,32,FLEN)
NAN_BOXED(2134065542,32,FLEN)
NAN_BOXED(2127181061,32,FLEN)
NAN_BOXED(1071837555,32,FLEN)
NAN_BOXED(2134065542,32,FLEN)
NAN_BOXED(2127181061,32,FLEN)
NAN_BOXED(1071837555,32,FLEN)
NAN_BOXED(2134065542,32,FLEN)
NAN_BOXED(2127181061,32,FLEN)
NAN_BOXED(1071837555,32,FLEN)
NAN_BOXED(2134065542,32,FLEN)
NAN_BOXED(2127181061,32,FLEN)
NAN_BOXED(1071837555,32,FLEN)
NAN_BOXED(2134065542,32,FLEN)
NAN_BOXED(2127189466,32,FLEN)
NAN_BOXED(1055371225,32,FLEN)
NAN_BOXED(2117541492,32,FLEN)
NAN_BOXED(2127189466,32,FLEN)
NAN_BOXED(1055371225,32,FLEN)
NAN_BOXED(2117541492,32,FLEN)
NAN_BOXED(2127189466,32,FLEN)
NAN_BOXED(1055371225,32,FLEN)
NAN_BOXED(2117541492,32,FLEN)
NAN_BOXED(2127189466,32,FLEN)
NAN_BOXED(1055371225,32,FLEN)
NAN_BOXED(2117541492,32,FLEN)
NAN_BOXED(2127189466,32,FLEN)
NAN_BOXED(1055371225,32,FLEN)
NAN_BOXED(2117541492,32,FLEN)
NAN_BOXED(2127219524,32,FLEN)
NAN_BOXED(1072507339,32,FLEN)
NAN_BOXED(2134630218,32,FLEN)
NAN_BOXED(2127219524,32,FLEN)
NAN_BOXED(1072507339,32,FLEN)
NAN_BOXED(2134630218,32,FLEN)
NAN_BOXED(2127219524,32,FLEN)
NAN_BOXED(1072507339,32,FLEN)
NAN_BOXED(2134630218,32,FLEN)
NAN_BOXED(2127219524,32,FLEN)
NAN_BOXED(1072507339,32,FLEN)
NAN_BOXED(2134630218,32,FLEN)
NAN_BOXED(2127219524,32,FLEN)
NAN_BOXED(1072507339,32,FLEN)
NAN_BOXED(2134630218,32,FLEN)
NAN_BOXED(2127223248,32,FLEN)
NAN_BOXED(1049499452,32,FLEN)
NAN_BOXED(2111909494,32,FLEN)
NAN_BOXED(2127223248,32,FLEN)
NAN_BOXED(1049499452,32,FLEN)
NAN_BOXED(2111909494,32,FLEN)
NAN_BOXED(2127223248,32,FLEN)
NAN_BOXED(1049499452,32,FLEN)
NAN_BOXED(2111909494,32,FLEN)
NAN_BOXED(2127223248,32,FLEN)
NAN_BOXED(1049499452,32,FLEN)
NAN_BOXED(2111909494,32,FLEN)
NAN_BOXED(2127223248,32,FLEN)
NAN_BOXED(1049499452,32,FLEN)
NAN_BOXED(2111909494,32,FLEN)
NAN_BOXED(2127332342,32,FLEN)
NAN_BOXED(1069235128,32,FLEN)
NAN_BOXED(2132120602,32,FLEN)
NAN_BOXED(2127332342,32,FLEN)
NAN_BOXED(1069235128,32,FLEN)
NAN_BOXED(2132120602,32,FLEN)
NAN_BOXED(2127332342,32,FLEN)
NAN_BOXED(1069235128,32,FLEN)
NAN_BOXED(2132120602,32,FLEN)
NAN_BOXED(2127332342,32,FLEN)
NAN_BOXED(1069235128,32,FLEN)
NAN_BOXED(2132120602,32,FLEN)
NAN_BOXED(2127332342,32,FLEN)
NAN_BOXED(1069235128,32,FLEN)
NAN_BOXED(2132120602,32,FLEN)
NAN_BOXED(2127415127,32,FLEN)
NAN_BOXED(1060024867,32,FLEN)
NAN_BOXED(2123132078,32,FLEN)
NAN_BOXED(2127415127,32,FLEN)
NAN_BOXED(1060024867,32,FLEN)
NAN_BOXED(2123132078,32,FLEN)
NAN_BOXED(2127415127,32,FLEN)
NAN_BOXED(1060024867,32,FLEN)
NAN_BOXED(2123132078,32,FLEN)
NAN_BOXED(2127415127,32,FLEN)
NAN_BOXED(1060024867,32,FLEN)
NAN_BOXED(2123132078,32,FLEN)
NAN_BOXED(2127415127,32,FLEN)
NAN_BOXED(1060024867,32,FLEN)
NAN_BOXED(2123132078,32,FLEN)
NAN_BOXED(2127598597,32,FLEN)
NAN_BOXED(1028385949,32,FLEN)
NAN_BOXED(2091263528,32,FLEN)
NAN_BOXED(2127598597,32,FLEN)
NAN_BOXED(1028385949,32,FLEN)
NAN_BOXED(2091263528,32,FLEN)
NAN_BOXED(2127598597,32,FLEN)
NAN_BOXED(1028385949,32,FLEN)
NAN_BOXED(2091263528,32,FLEN)
NAN_BOXED(2127598597,32,FLEN)
NAN_BOXED(1028385949,32,FLEN)
NAN_BOXED(2091263528,32,FLEN)
NAN_BOXED(2127598597,32,FLEN)
NAN_BOXED(1028385949,32,FLEN)
NAN_BOXED(2091263528,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1038795805,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1038795805,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1038795805,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1038795805,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1038795805,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2127756323,32,FLEN)
NAN_BOXED(1070451725,32,FLEN)
NAN_BOXED(2133433364,32,FLEN)
NAN_BOXED(2127756323,32,FLEN)
NAN_BOXED(1070451725,32,FLEN)
NAN_BOXED(2133433364,32,FLEN)
NAN_BOXED(2127756323,32,FLEN)
NAN_BOXED(1070451725,32,FLEN)
NAN_BOXED(2133433364,32,FLEN)
NAN_BOXED(2127756323,32,FLEN)
NAN_BOXED(1070451725,32,FLEN)
NAN_BOXED(2133433364,32,FLEN)
NAN_BOXED(2127756323,32,FLEN)
NAN_BOXED(1070451725,32,FLEN)
NAN_BOXED(2133433364,32,FLEN)
NAN_BOXED(2127847529,32,FLEN)
NAN_BOXED(1071019877,32,FLEN)
NAN_BOXED(2133978021,32,FLEN)
NAN_BOXED(2127847529,32,FLEN)
NAN_BOXED(1071019877,32,FLEN)
NAN_BOXED(2133978021,32,FLEN)
NAN_BOXED(2127847529,32,FLEN)
NAN_BOXED(1071019877,32,FLEN)
NAN_BOXED(2133978021,32,FLEN)
NAN_BOXED(2127847529,32,FLEN)
NAN_BOXED(1071019877,32,FLEN)
NAN_BOXED(2133978021,32,FLEN)
NAN_BOXED(2127847529,32,FLEN)
NAN_BOXED(1071019877,32,FLEN)
NAN_BOXED(2133978021,32,FLEN)
NAN_BOXED(2127872346,32,FLEN)
NAN_BOXED(1061913528,32,FLEN)
NAN_BOXED(2125013706,32,FLEN)
NAN_BOXED(2127872346,32,FLEN)
NAN_BOXED(1061913528,32,FLEN)
NAN_BOXED(2125013706,32,FLEN)
NAN_BOXED(2127872346,32,FLEN)
NAN_BOXED(1061913528,32,FLEN)
NAN_BOXED(2125013706,32,FLEN)
NAN_BOXED(2127872346,32,FLEN)
NAN_BOXED(1061913528,32,FLEN)
NAN_BOXED(2125013706,32,FLEN)
NAN_BOXED(2127872346,32,FLEN)
NAN_BOXED(1061913528,32,FLEN)
NAN_BOXED(2125013706,32,FLEN)
NAN_BOXED(2127907367,32,FLEN)
NAN_BOXED(1068809149,32,FLEN)
NAN_BOXED(2132186255,32,FLEN)
NAN_BOXED(2127907367,32,FLEN)
NAN_BOXED(1068809149,32,FLEN)
NAN_BOXED(2132186255,32,FLEN)
NAN_BOXED(2127907367,32,FLEN)
NAN_BOXED(1068809149,32,FLEN)
NAN_BOXED(2132186255,32,FLEN)
NAN_BOXED(2127907367,32,FLEN)
NAN_BOXED(1068809149,32,FLEN)
NAN_BOXED(2132186255,32,FLEN)
NAN_BOXED(2127907367,32,FLEN)
NAN_BOXED(1068809149,32,FLEN)
NAN_BOXED(2132186255,32,FLEN)
NAN_BOXED(2128009841,32,FLEN)
NAN_BOXED(1071106702,32,FLEN)
NAN_BOXED(2134186869,32,FLEN)
NAN_BOXED(2128009841,32,FLEN)
NAN_BOXED(1071106702,32,FLEN)
NAN_BOXED(2134186869,32,FLEN)
NAN_BOXED(2128009841,32,FLEN)
NAN_BOXED(1071106702,32,FLEN)
NAN_BOXED(2134186869,32,FLEN)
NAN_BOXED(2128009841,32,FLEN)
NAN_BOXED(1071106702,32,FLEN)
NAN_BOXED(2134186869,32,FLEN)
NAN_BOXED(2128009841,32,FLEN)
NAN_BOXED(1071106702,32,FLEN)
NAN_BOXED(2134186869,32,FLEN)
NAN_BOXED(2128065598,32,FLEN)
NAN_BOXED(1068313995,32,FLEN)
NAN_BOXED(2131880750,32,FLEN)
NAN_BOXED(2128065598,32,FLEN)
NAN_BOXED(1068313995,32,FLEN)
NAN_BOXED(2131880750,32,FLEN)
NAN_BOXED(2128065598,32,FLEN)
NAN_BOXED(1068313995,32,FLEN)
NAN_BOXED(2131880750,32,FLEN)
NAN_BOXED(2128065598,32,FLEN)
NAN_BOXED(1068313995,32,FLEN)
NAN_BOXED(2131880750,32,FLEN)
NAN_BOXED(2128065598,32,FLEN)
NAN_BOXED(1068313995,32,FLEN)
NAN_BOXED(2131880750,32,FLEN)
NAN_BOXED(2128288706,32,FLEN)
NAN_BOXED(1067261803,32,FLEN)
NAN_BOXED(2131131114,32,FLEN)
NAN_BOXED(2128288706,32,FLEN)
NAN_BOXED(1067261803,32,FLEN)
NAN_BOXED(2131131114,32,FLEN)
NAN_BOXED(2128288706,32,FLEN)
NAN_BOXED(1067261803,32,FLEN)
NAN_BOXED(2131131114,32,FLEN)
NAN_BOXED(2128288706,32,FLEN)
NAN_BOXED(1067261803,32,FLEN)
NAN_BOXED(2131131114,32,FLEN)
NAN_BOXED(2128288706,32,FLEN)
NAN_BOXED(1067261803,32,FLEN)
NAN_BOXED(2131131114,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1060108074,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1060108074,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1060108074,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1060108074,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1060108074,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2128522756,32,FLEN)
NAN_BOXED(1061774687,32,FLEN)
NAN_BOXED(2125409998,32,FLEN)
NAN_BOXED(2128522756,32,FLEN)
NAN_BOXED(1061774687,32,FLEN)
NAN_BOXED(2125409998,32,FLEN)
NAN_BOXED(2128522756,32,FLEN)
NAN_BOXED(1061774687,32,FLEN)
NAN_BOXED(2125409998,32,FLEN)
NAN_BOXED(2128522756,32,FLEN)
NAN_BOXED(1061774687,32,FLEN)
NAN_BOXED(2125409998,32,FLEN)
NAN_BOXED(2128522756,32,FLEN)
NAN_BOXED(1061774687,32,FLEN)
NAN_BOXED(2125409998,32,FLEN)
NAN_BOXED(2128609667,32,FLEN)
NAN_BOXED(1069968477,32,FLEN)
NAN_BOXED(2133696510,32,FLEN)
NAN_BOXED(2128609667,32,FLEN)
NAN_BOXED(1069968477,32,FLEN)
NAN_BOXED(2133696510,32,FLEN)
NAN_BOXED(2128609667,32,FLEN)
NAN_BOXED(1069968477,32,FLEN)
NAN_BOXED(2133696510,32,FLEN)
NAN_BOXED(2128609667,32,FLEN)
NAN_BOXED(1069968477,32,FLEN)
NAN_BOXED(2133696510,32,FLEN)
NAN_BOXED(2128609667,32,FLEN)
NAN_BOXED(1069968477,32,FLEN)
NAN_BOXED(2133696510,32,FLEN)
NAN_BOXED(2128665901,32,FLEN)
NAN_BOXED(1063737510,32,FLEN)
NAN_BOXED(2127246706,32,FLEN)
NAN_BOXED(2128665901,32,FLEN)
NAN_BOXED(1063737510,32,FLEN)
NAN_BOXED(2127246706,32,FLEN)
NAN_BOXED(2128665901,32,FLEN)
NAN_BOXED(1063737510,32,FLEN)
NAN_BOXED(2127246706,32,FLEN)
NAN_BOXED(2128665901,32,FLEN)
NAN_BOXED(1063737510,32,FLEN)
NAN_BOXED(2127246706,32,FLEN)
NAN_BOXED(2128665901,32,FLEN)
NAN_BOXED(1063737510,32,FLEN)
NAN_BOXED(2127246706,32,FLEN)
NAN_BOXED(2128754993,32,FLEN)
NAN_BOXED(1055152528,32,FLEN)
NAN_BOXED(2118765077,32,FLEN)
NAN_BOXED(2128754993,32,FLEN)
NAN_BOXED(1055152528,32,FLEN)
NAN_BOXED(2118765077,32,FLEN)
NAN_BOXED(2128754993,32,FLEN)
NAN_BOXED(1055152528,32,FLEN)
NAN_BOXED(2118765077,32,FLEN)
NAN_BOXED(2128754993,32,FLEN)
NAN_BOXED(1055152528,32,FLEN)
NAN_BOXED(2118765077,32,FLEN)
NAN_BOXED(2128754993,32,FLEN)
NAN_BOXED(1055152528,32,FLEN)
NAN_BOXED(2118765077,32,FLEN)
NAN_BOXED(2129343984,32,FLEN)
NAN_BOXED(1062423164,32,FLEN)
NAN_BOXED(2126651876,32,FLEN)
NAN_BOXED(2129343984,32,FLEN)
NAN_BOXED(1062423164,32,FLEN)
NAN_BOXED(2126651876,32,FLEN)
NAN_BOXED(2129343984,32,FLEN)
NAN_BOXED(1062423164,32,FLEN)
NAN_BOXED(2126651876,32,FLEN)
NAN_BOXED(2129343984,32,FLEN)
NAN_BOXED(1062423164,32,FLEN)
NAN_BOXED(2126651876,32,FLEN)
NAN_BOXED(2129343984,32,FLEN)
NAN_BOXED(1062423164,32,FLEN)
NAN_BOXED(2126651876,32,FLEN)
NAN_BOXED(2129382767,32,FLEN)
NAN_BOXED(1048033204,32,FLEN)
NAN_BOXED(2112105580,32,FLEN)
NAN_BOXED(2129382767,32,FLEN)
NAN_BOXED(1048033204,32,FLEN)
NAN_BOXED(2112105580,32,FLEN)
NAN_BOXED(2129382767,32,FLEN)
NAN_BOXED(1048033204,32,FLEN)
NAN_BOXED(2112105580,32,FLEN)
NAN_BOXED(2129382767,32,FLEN)
NAN_BOXED(1048033204,32,FLEN)
NAN_BOXED(2112105580,32,FLEN)
NAN_BOXED(2129382767,32,FLEN)
NAN_BOXED(1048033204,32,FLEN)
NAN_BOXED(2112105580,32,FLEN)
NAN_BOXED(2129630854,32,FLEN)
NAN_BOXED(1062350582,32,FLEN)
NAN_BOXED(2126820717,32,FLEN)
NAN_BOXED(2129630854,32,FLEN)
NAN_BOXED(1062350582,32,FLEN)
NAN_BOXED(2126820717,32,FLEN)
NAN_BOXED(2129630854,32,FLEN)
NAN_BOXED(1062350582,32,FLEN)
NAN_BOXED(2126820717,32,FLEN)
NAN_BOXED(2129630854,32,FLEN)
NAN_BOXED(1062350582,32,FLEN)
NAN_BOXED(2126820717,32,FLEN)
NAN_BOXED(2129630854,32,FLEN)
NAN_BOXED(1062350582,32,FLEN)
NAN_BOXED(2126820717,32,FLEN)
NAN_BOXED(2129634360,32,FLEN)
NAN_BOXED(1069066419,32,FLEN)
NAN_BOXED(2133646324,32,FLEN)
NAN_BOXED(2129634360,32,FLEN)
NAN_BOXED(1069066419,32,FLEN)
NAN_BOXED(2133646324,32,FLEN)
NAN_BOXED(2129634360,32,FLEN)
NAN_BOXED(1069066419,32,FLEN)
NAN_BOXED(2133646324,32,FLEN)
NAN_BOXED(2129634360,32,FLEN)
NAN_BOXED(1069066419,32,FLEN)
NAN_BOXED(2133646324,32,FLEN)
NAN_BOXED(2129634360,32,FLEN)
NAN_BOXED(1069066419,32,FLEN)
NAN_BOXED(2133646324,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1069635213,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1069635213,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1069635213,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1069635213,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1069635213,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2129895408,32,FLEN)
NAN_BOXED(1067563802,32,FLEN)
NAN_BOXED(2132404645,32,FLEN)
NAN_BOXED(2129895408,32,FLEN)
NAN_BOXED(1067563802,32,FLEN)
NAN_BOXED(2132404645,32,FLEN)
NAN_BOXED(2129895408,32,FLEN)
NAN_BOXED(1067563802,32,FLEN)
NAN_BOXED(2132404645,32,FLEN)
NAN_BOXED(2129895408,32,FLEN)
NAN_BOXED(1067563802,32,FLEN)
NAN_BOXED(2132404645,32,FLEN)
NAN_BOXED(2129895408,32,FLEN)
NAN_BOXED(1067563802,32,FLEN)
NAN_BOXED(2132404645,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1058354779,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1058354779,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1058354779,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1058354779,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1058354779,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2130214746,32,FLEN)
NAN_BOXED(1069837921,32,FLEN)
NAN_BOXED(2134813862,32,FLEN)
NAN_BOXED(2130214746,32,FLEN)
NAN_BOXED(1069837921,32,FLEN)
NAN_BOXED(2134813862,32,FLEN)
NAN_BOXED(2130214746,32,FLEN)
NAN_BOXED(1069837921,32,FLEN)
NAN_BOXED(2134813862,32,FLEN)
NAN_BOXED(2130214746,32,FLEN)
NAN_BOXED(1069837921,32,FLEN)
NAN_BOXED(2134813862,32,FLEN)
NAN_BOXED(2130214746,32,FLEN)
NAN_BOXED(1069837921,32,FLEN)
NAN_BOXED(2134813862,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1038345986,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1038345986,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1038345986,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1038345986,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1038345986,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2130361945,32,FLEN)
NAN_BOXED(1067237385,32,FLEN)
NAN_BOXED(2132379670,32,FLEN)
NAN_BOXED(2130361945,32,FLEN)
NAN_BOXED(1067237385,32,FLEN)
NAN_BOXED(2132379670,32,FLEN)
NAN_BOXED(2130361945,32,FLEN)
NAN_BOXED(1067237385,32,FLEN)
NAN_BOXED(2132379670,32,FLEN)
NAN_BOXED(2130361945,32,FLEN)
NAN_BOXED(1067237385,32,FLEN)
NAN_BOXED(2132379670,32,FLEN)
NAN_BOXED(2130361945,32,FLEN)
NAN_BOXED(1067237385,32,FLEN)
NAN_BOXED(2132379670,32,FLEN)
NAN_BOXED(2130545114,32,FLEN)
NAN_BOXED(1046331254,32,FLEN)
NAN_BOXED(2111544736,32,FLEN)
NAN_BOXED(2130545114,32,FLEN)
NAN_BOXED(1046331254,32,FLEN)
NAN_BOXED(2111544736,32,FLEN)
NAN_BOXED(2130545114,32,FLEN)
NAN_BOXED(1046331254,32,FLEN)
NAN_BOXED(2111544736,32,FLEN)
NAN_BOXED(2130545114,32,FLEN)
NAN_BOXED(1046331254,32,FLEN)
NAN_BOXED(2111544736,32,FLEN)
NAN_BOXED(2130545114,32,FLEN)
NAN_BOXED(1046331254,32,FLEN)
NAN_BOXED(2111544736,32,FLEN)
NAN_BOXED(2130826389,32,FLEN)
NAN_BOXED(1034127127,32,FLEN)
NAN_BOXED(2099633596,32,FLEN)
NAN_BOXED(2130826389,32,FLEN)
NAN_BOXED(1034127127,32,FLEN)
NAN_BOXED(2099633596,32,FLEN)
NAN_BOXED(2130826389,32,FLEN)
NAN_BOXED(1034127127,32,FLEN)
NAN_BOXED(2099633596,32,FLEN)
NAN_BOXED(2130826389,32,FLEN)
NAN_BOXED(1034127127,32,FLEN)
NAN_BOXED(2099633596,32,FLEN)
NAN_BOXED(2130826389,32,FLEN)
NAN_BOXED(1034127127,32,FLEN)
NAN_BOXED(2099633596,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1059119516,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1059119516,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1059119516,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1059119516,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1059119516,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2130971617,32,FLEN)
NAN_BOXED(1068947752,32,FLEN)
NAN_BOXED(2134679786,32,FLEN)
NAN_BOXED(2130971617,32,FLEN)
NAN_BOXED(1068947752,32,FLEN)
NAN_BOXED(2134679786,32,FLEN)
NAN_BOXED(2130971617,32,FLEN)
NAN_BOXED(1068947752,32,FLEN)
NAN_BOXED(2134679786,32,FLEN)
NAN_BOXED(2130971617,32,FLEN)
NAN_BOXED(1068947752,32,FLEN)
NAN_BOXED(2134679786,32,FLEN)
NAN_BOXED(2130971617,32,FLEN)
NAN_BOXED(1068947752,32,FLEN)
NAN_BOXED(2134679786,32,FLEN)
NAN_BOXED(2130977453,32,FLEN)
NAN_BOXED(1058944465,32,FLEN)
NAN_BOXED(2124632669,32,FLEN)
NAN_BOXED(2130977453,32,FLEN)
NAN_BOXED(1058944465,32,FLEN)
NAN_BOXED(2124632669,32,FLEN)
NAN_BOXED(2130977453,32,FLEN)
NAN_BOXED(1058944465,32,FLEN)
NAN_BOXED(2124632669,32,FLEN)
NAN_BOXED(2130977453,32,FLEN)
NAN_BOXED(1058944465,32,FLEN)
NAN_BOXED(2124632669,32,FLEN)
NAN_BOXED(2130977453,32,FLEN)
NAN_BOXED(1058944465,32,FLEN)
NAN_BOXED(2124632669,32,FLEN)
NAN_BOXED(2131066664,32,FLEN)
NAN_BOXED(1062917921,32,FLEN)
NAN_BOXED(2128887023,32,FLEN)
NAN_BOXED(2131066664,32,FLEN)
NAN_BOXED(1062917921,32,FLEN)
NAN_BOXED(2128887023,32,FLEN)
NAN_BOXED(2131066664,32,FLEN)
NAN_BOXED(1062917921,32,FLEN)
NAN_BOXED(2128887023,32,FLEN)
NAN_BOXED(2131066664,32,FLEN)
NAN_BOXED(1062917921,32,FLEN)
NAN_BOXED(2128887023,32,FLEN)
NAN_BOXED(2131066664,32,FLEN)
NAN_BOXED(1062917921,32,FLEN)
NAN_BOXED(2128887023,32,FLEN)
NAN_BOXED(2131116020,32,FLEN)
NAN_BOXED(1067480518,32,FLEN)
NAN_BOXED(2133347192,32,FLEN)
NAN_BOXED(2131116020,32,FLEN)
NAN_BOXED(1067480518,32,FLEN)
NAN_BOXED(2133347192,32,FLEN)
NAN_BOXED(2131116020,32,FLEN)
NAN_BOXED(1067480518,32,FLEN)
NAN_BOXED(2133347192,32,FLEN)
NAN_BOXED(2131116020,32,FLEN)
NAN_BOXED(1067480518,32,FLEN)
NAN_BOXED(2133347192,32,FLEN)
NAN_BOXED(2131116020,32,FLEN)
NAN_BOXED(1067480518,32,FLEN)
NAN_BOXED(2133347192,32,FLEN)
NAN_BOXED(2131210487,32,FLEN)
NAN_BOXED(1063673692,32,FLEN)
NAN_BOXED(2129934099,32,FLEN)
NAN_BOXED(2131210487,32,FLEN)
NAN_BOXED(1063673692,32,FLEN)
NAN_BOXED(2129934099,32,FLEN)
NAN_BOXED(2131210487,32,FLEN)
NAN_BOXED(1063673692,32,FLEN)
NAN_BOXED(2129934099,32,FLEN)
NAN_BOXED(2131210487,32,FLEN)
NAN_BOXED(1063673692,32,FLEN)
NAN_BOXED(2129934099,32,FLEN)
NAN_BOXED(2131210487,32,FLEN)
NAN_BOXED(1063673692,32,FLEN)
NAN_BOXED(2129934099,32,FLEN)
NAN_BOXED(2131327106,32,FLEN)
NAN_BOXED(1067264069,32,FLEN)
NAN_BOXED(2133379344,32,FLEN)
NAN_BOXED(2131327106,32,FLEN)
NAN_BOXED(1067264069,32,FLEN)
NAN_BOXED(2133379344,32,FLEN)
NAN_BOXED(2131327106,32,FLEN)
NAN_BOXED(1067264069,32,FLEN)
NAN_BOXED(2133379344,32,FLEN)
NAN_BOXED(2131327106,32,FLEN)
NAN_BOXED(1067264069,32,FLEN)
NAN_BOXED(2133379344,32,FLEN)
NAN_BOXED(2131327106,32,FLEN)
NAN_BOXED(1067264069,32,FLEN)
NAN_BOXED(2133379344,32,FLEN)
NAN_BOXED(2131404584,32,FLEN)
NAN_BOXED(1021117215,32,FLEN)
NAN_BOXED(2087675901,32,FLEN)
NAN_BOXED(2131404584,32,FLEN)
NAN_BOXED(1021117215,32,FLEN)
NAN_BOXED(2087675901,32,FLEN)
NAN_BOXED(2131404584,32,FLEN)
NAN_BOXED(1021117215,32,FLEN)
NAN_BOXED(2087675901,32,FLEN)
NAN_BOXED(2131404584,32,FLEN)
NAN_BOXED(1021117215,32,FLEN)
NAN_BOXED(2087675901,32,FLEN)
NAN_BOXED(2131404584,32,FLEN)
NAN_BOXED(1021117215,32,FLEN)
NAN_BOXED(2087675901,32,FLEN)
NAN_BOXED(2131429812,32,FLEN)
NAN_BOXED(1063478086,32,FLEN)
NAN_BOXED(2130116362,32,FLEN)
NAN_BOXED(2131429812,32,FLEN)
NAN_BOXED(1063478086,32,FLEN)
NAN_BOXED(2130116362,32,FLEN)
NAN_BOXED(2131429812,32,FLEN)
NAN_BOXED(1063478086,32,FLEN)
NAN_BOXED(2130116362,32,FLEN)
NAN_BOXED(2131429812,32,FLEN)
NAN_BOXED(1063478086,32,FLEN)
NAN_BOXED(2130116362,32,FLEN)
NAN_BOXED(2131429812,32,FLEN)
NAN_BOXED(1063478086,32,FLEN)
NAN_BOXED(2130116362,32,FLEN)
NAN_BOXED(2131437901,32,FLEN)
NAN_BOXED(1047539365,32,FLEN)
NAN_BOXED(2114097172,32,FLEN)
NAN_BOXED(2131437901,32,FLEN)
NAN_BOXED(1047539365,32,FLEN)
NAN_BOXED(2114097172,32,FLEN)
NAN_BOXED(2131437901,32,FLEN)
NAN_BOXED(1047539365,32,FLEN)
NAN_BOXED(2114097172,32,FLEN)
NAN_BOXED(2131437901,32,FLEN)
NAN_BOXED(1047539365,32,FLEN)
NAN_BOXED(2114097172,32,FLEN)
NAN_BOXED(2131437901,32,FLEN)
NAN_BOXED(1047539365,32,FLEN)
NAN_BOXED(2114097172,32,FLEN)
NAN_BOXED(2131442866,32,FLEN)
NAN_BOXED(1061449963,32,FLEN)
NAN_BOXED(2127933383,32,FLEN)
NAN_BOXED(2131442866,32,FLEN)
NAN_BOXED(1061449963,32,FLEN)
NAN_BOXED(2127933383,32,FLEN)
NAN_BOXED(2131442866,32,FLEN)
NAN_BOXED(1061449963,32,FLEN)
NAN_BOXED(2127933383,32,FLEN)
NAN_BOXED(2131442866,32,FLEN)
NAN_BOXED(1061449963,32,FLEN)
NAN_BOXED(2127933383,32,FLEN)
NAN_BOXED(2131442866,32,FLEN)
NAN_BOXED(1061449963,32,FLEN)
NAN_BOXED(2127933383,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1053432508,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1053432508,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1053432508,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1053432508,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1053432508,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2131542109,32,FLEN)
NAN_BOXED(1061187263,32,FLEN)
NAN_BOXED(2127796820,32,FLEN)
NAN_BOXED(2131542109,32,FLEN)
NAN_BOXED(1061187263,32,FLEN)
NAN_BOXED(2127796820,32,FLEN)
NAN_BOXED(2131542109,32,FLEN)
NAN_BOXED(1061187263,32,FLEN)
NAN_BOXED(2127796820,32,FLEN)
NAN_BOXED(2131542109,32,FLEN)
NAN_BOXED(1061187263,32,FLEN)
NAN_BOXED(2127796820,32,FLEN)
NAN_BOXED(2131542109,32,FLEN)
NAN_BOXED(1061187263,32,FLEN)
NAN_BOXED(2127796820,32,FLEN)
NAN_BOXED(2131756775,32,FLEN)
NAN_BOXED(1059267409,32,FLEN)
NAN_BOXED(2125959303,32,FLEN)
NAN_BOXED(2131756775,32,FLEN)
NAN_BOXED(1059267409,32,FLEN)
NAN_BOXED(2125959303,32,FLEN)
NAN_BOXED(2131756775,32,FLEN)
NAN_BOXED(1059267409,32,FLEN)
NAN_BOXED(2125959303,32,FLEN)
NAN_BOXED(2131756775,32,FLEN)
NAN_BOXED(1059267409,32,FLEN)
NAN_BOXED(2125959303,32,FLEN)
NAN_BOXED(2131756775,32,FLEN)
NAN_BOXED(1059267409,32,FLEN)
NAN_BOXED(2125959303,32,FLEN)
NAN_BOXED(2131761810,32,FLEN)
NAN_BOXED(1063274407,32,FLEN)
NAN_BOXED(2130476843,32,FLEN)
NAN_BOXED(2131761810,32,FLEN)
NAN_BOXED(1063274407,32,FLEN)
NAN_BOXED(2130476843,32,FLEN)
NAN_BOXED(2131761810,32,FLEN)
NAN_BOXED(1063274407,32,FLEN)
NAN_BOXED(2130476843,32,FLEN)
NAN_BOXED(2131761810,32,FLEN)
NAN_BOXED(1063274407,32,FLEN)
NAN_BOXED(2130476843,32,FLEN)
NAN_BOXED(2131761810,32,FLEN)
NAN_BOXED(1063274407,32,FLEN)
NAN_BOXED(2130476843,32,FLEN)
NAN_BOXED(2131874523,32,FLEN)
NAN_BOXED(1052997784,32,FLEN)
NAN_BOXED(2120134814,32,FLEN)
NAN_BOXED(2131874523,32,FLEN)
NAN_BOXED(1052997784,32,FLEN)
NAN_BOXED(2120134814,32,FLEN)
NAN_BOXED(2131874523,32,FLEN)
NAN_BOXED(1052997784,32,FLEN)
NAN_BOXED(2120134814,32,FLEN)
NAN_BOXED(2131874523,32,FLEN)
NAN_BOXED(1052997784,32,FLEN)
NAN_BOXED(2120134814,32,FLEN)
NAN_BOXED(2131874523,32,FLEN)
NAN_BOXED(1052997784,32,FLEN)
NAN_BOXED(2120134814,32,FLEN)
NAN_BOXED(2131938351,32,FLEN)
NAN_BOXED(1061150086,32,FLEN)
NAN_BOXED(2128349885,32,FLEN)
NAN_BOXED(2131938351,32,FLEN)
NAN_BOXED(1061150086,32,FLEN)
NAN_BOXED(2128349885,32,FLEN)
NAN_BOXED(2131938351,32,FLEN)
NAN_BOXED(1061150086,32,FLEN)
NAN_BOXED(2128349885,32,FLEN)
NAN_BOXED(2131938351,32,FLEN)
NAN_BOXED(1061150086,32,FLEN)
NAN_BOXED(2128349885,32,FLEN)
NAN_BOXED(2131938351,32,FLEN)
NAN_BOXED(1061150086,32,FLEN)
NAN_BOXED(2128349885,32,FLEN)
NAN_BOXED(2132035117,32,FLEN)
NAN_BOXED(1059605983,32,FLEN)
NAN_BOXED(2126706256,32,FLEN)
NAN_BOXED(2132035117,32,FLEN)
NAN_BOXED(1059605983,32,FLEN)
NAN_BOXED(2126706256,32,FLEN)
NAN_BOXED(2132035117,32,FLEN)
NAN_BOXED(1059605983,32,FLEN)
NAN_BOXED(2126706256,32,FLEN)
NAN_BOXED(2132035117,32,FLEN)
NAN_BOXED(1059605983,32,FLEN)
NAN_BOXED(2126706256,32,FLEN)
NAN_BOXED(2132035117,32,FLEN)
NAN_BOXED(1059605983,32,FLEN)
NAN_BOXED(2126706256,32,FLEN)
NAN_BOXED(2132182021,32,FLEN)
NAN_BOXED(1066563354,32,FLEN)
NAN_BOXED(2133605028,32,FLEN)
NAN_BOXED(2132182021,32,FLEN)
NAN_BOXED(1066563354,32,FLEN)
NAN_BOXED(2133605028,32,FLEN)
NAN_BOXED(2132182021,32,FLEN)
NAN_BOXED(1066563354,32,FLEN)
NAN_BOXED(2133605028,32,FLEN)
NAN_BOXED(2132182021,32,FLEN)
NAN_BOXED(1066563354,32,FLEN)
NAN_BOXED(2133605028,32,FLEN)
NAN_BOXED(2132182021,32,FLEN)
NAN_BOXED(1066563354,32,FLEN)
NAN_BOXED(2133605028,32,FLEN)
NAN_BOXED(2132237726,32,FLEN)
NAN_BOXED(1067303976,32,FLEN)
NAN_BOXED(2134544588,32,FLEN)
NAN_BOXED(2132237726,32,FLEN)
NAN_BOXED(1067303976,32,FLEN)
NAN_BOXED(2134544588,32,FLEN)
NAN_BOXED(2132237726,32,FLEN)
NAN_BOXED(1067303976,32,FLEN)
NAN_BOXED(2134544588,32,FLEN)
NAN_BOXED(2132237726,32,FLEN)
NAN_BOXED(1067303976,32,FLEN)
NAN_BOXED(2134544588,32,FLEN)
NAN_BOXED(2132237726,32,FLEN)
NAN_BOXED(1067303976,32,FLEN)
NAN_BOXED(2134544588,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(1063338693,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(1063338693,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(1063338693,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(1063338693,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(1063338693,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2132528998,32,FLEN)
NAN_BOXED(1067145808,32,FLEN)
NAN_BOXED(2134711061,32,FLEN)
NAN_BOXED(2132528998,32,FLEN)
NAN_BOXED(1067145808,32,FLEN)
NAN_BOXED(2134711061,32,FLEN)
NAN_BOXED(2132528998,32,FLEN)
NAN_BOXED(1067145808,32,FLEN)
NAN_BOXED(2134711061,32,FLEN)
NAN_BOXED(2132528998,32,FLEN)
NAN_BOXED(1067145808,32,FLEN)
NAN_BOXED(2134711061,32,FLEN)
NAN_BOXED(2132528998,32,FLEN)
NAN_BOXED(1067145808,32,FLEN)
NAN_BOXED(2134711061,32,FLEN)
NAN_BOXED(2132614835,32,FLEN)
NAN_BOXED(1063744654,32,FLEN)
NAN_BOXED(2131627580,32,FLEN)
NAN_BOXED(2132614835,32,FLEN)
NAN_BOXED(1063744654,32,FLEN)
NAN_BOXED(2131627580,32,FLEN)
NAN_BOXED(2132614835,32,FLEN)
NAN_BOXED(1063744654,32,FLEN)
NAN_BOXED(2131627580,32,FLEN)
NAN_BOXED(2132614835,32,FLEN)
NAN_BOXED(1063744654,32,FLEN)
NAN_BOXED(2131627580,32,FLEN)
NAN_BOXED(2132614835,32,FLEN)
NAN_BOXED(1063744654,32,FLEN)
NAN_BOXED(2131627580,32,FLEN)
NAN_BOXED(2132622223,32,FLEN)
NAN_BOXED(1057430021,32,FLEN)
NAN_BOXED(2124805320,32,FLEN)
NAN_BOXED(2132622223,32,FLEN)
NAN_BOXED(1057430021,32,FLEN)
NAN_BOXED(2124805320,32,FLEN)
NAN_BOXED(2132622223,32,FLEN)
NAN_BOXED(1057430021,32,FLEN)
NAN_BOXED(2124805320,32,FLEN)
NAN_BOXED(2132622223,32,FLEN)
NAN_BOXED(1057430021,32,FLEN)
NAN_BOXED(2124805320,32,FLEN)
NAN_BOXED(2132622223,32,FLEN)
NAN_BOXED(1057430021,32,FLEN)
NAN_BOXED(2124805320,32,FLEN)
NAN_BOXED(2132622964,32,FLEN)
NAN_BOXED(1050782875,32,FLEN)
NAN_BOXED(2118556825,32,FLEN)
NAN_BOXED(2132622964,32,FLEN)
NAN_BOXED(1050782875,32,FLEN)
NAN_BOXED(2118556825,32,FLEN)
NAN_BOXED(2132622964,32,FLEN)
NAN_BOXED(1050782875,32,FLEN)
NAN_BOXED(2118556825,32,FLEN)
NAN_BOXED(2132622964,32,FLEN)
NAN_BOXED(1050782875,32,FLEN)
NAN_BOXED(2118556825,32,FLEN)
NAN_BOXED(2132622964,32,FLEN)
NAN_BOXED(1050782875,32,FLEN)
NAN_BOXED(2118556825,32,FLEN)
NAN_BOXED(2132626749,32,FLEN)
NAN_BOXED(1065810946,32,FLEN)
NAN_BOXED(2133189264,32,FLEN)
NAN_BOXED(2132626749,32,FLEN)
NAN_BOXED(1065810946,32,FLEN)
NAN_BOXED(2133189264,32,FLEN)
NAN_BOXED(2132626749,32,FLEN)
NAN_BOXED(1065810946,32,FLEN)
NAN_BOXED(2133189264,32,FLEN)
NAN_BOXED(2132626749,32,FLEN)
NAN_BOXED(1065810946,32,FLEN)
NAN_BOXED(2133189264,32,FLEN)
NAN_BOXED(2132626749,32,FLEN)
NAN_BOXED(1065810946,32,FLEN)
NAN_BOXED(2133189264,32,FLEN)
NAN_BOXED(2132660030,32,FLEN)
NAN_BOXED(1051805780,32,FLEN)
NAN_BOXED(2119864769,32,FLEN)
NAN_BOXED(2132660030,32,FLEN)
NAN_BOXED(1051805780,32,FLEN)
NAN_BOXED(2119864769,32,FLEN)
NAN_BOXED(2132660030,32,FLEN)
NAN_BOXED(1051805780,32,FLEN)
NAN_BOXED(2119864769,32,FLEN)
NAN_BOXED(2132660030,32,FLEN)
NAN_BOXED(1051805780,32,FLEN)
NAN_BOXED(2119864769,32,FLEN)
NAN_BOXED(2132660030,32,FLEN)
NAN_BOXED(1051805780,32,FLEN)
NAN_BOXED(2119864769,32,FLEN)
NAN_BOXED(2132713262,32,FLEN)
NAN_BOXED(1048758911,32,FLEN)
NAN_BOXED(2116162716,32,FLEN)
NAN_BOXED(2132713262,32,FLEN)
NAN_BOXED(1048758911,32,FLEN)
NAN_BOXED(2116162716,32,FLEN)
NAN_BOXED(2132713262,32,FLEN)
NAN_BOXED(1048758911,32,FLEN)
NAN_BOXED(2116162716,32,FLEN)
NAN_BOXED(2132713262,32,FLEN)
NAN_BOXED(1048758911,32,FLEN)
NAN_BOXED(2116162716,32,FLEN)
NAN_BOXED(2132713262,32,FLEN)
NAN_BOXED(1048758911,32,FLEN)
NAN_BOXED(2116162716,32,FLEN)
NAN_BOXED(2132747237,32,FLEN)
NAN_BOXED(1044869775,32,FLEN)
NAN_BOXED(2113402941,32,FLEN)
NAN_BOXED(2132747237,32,FLEN)
NAN_BOXED(1044869775,32,FLEN)
NAN_BOXED(2113402941,32,FLEN)
NAN_BOXED(2132747237,32,FLEN)
NAN_BOXED(1044869775,32,FLEN)
NAN_BOXED(2113402941,32,FLEN)
NAN_BOXED(2132747237,32,FLEN)
NAN_BOXED(1044869775,32,FLEN)
NAN_BOXED(2113402941,32,FLEN)
NAN_BOXED(2132747237,32,FLEN)
NAN_BOXED(1044869775,32,FLEN)
NAN_BOXED(2113402941,32,FLEN)
NAN_BOXED(2132887064,32,FLEN)
NAN_BOXED(1066398969,32,FLEN)
NAN_BOXED(2134204662,32,FLEN)
NAN_BOXED(2132887064,32,FLEN)
NAN_BOXED(1066398969,32,FLEN)
NAN_BOXED(2134204662,32,FLEN)
NAN_BOXED(2132887064,32,FLEN)
NAN_BOXED(1066398969,32,FLEN)
NAN_BOXED(2134204662,32,FLEN)
NAN_BOXED(2132887064,32,FLEN)
NAN_BOXED(1066398969,32,FLEN)
NAN_BOXED(2134204662,32,FLEN)
NAN_BOXED(2132887064,32,FLEN)
NAN_BOXED(1066398969,32,FLEN)
NAN_BOXED(2134204662,32,FLEN)
NAN_BOXED(2132887466,32,FLEN)
NAN_BOXED(1042754663,32,FLEN)
NAN_BOXED(2110956403,32,FLEN)
NAN_BOXED(2132887466,32,FLEN)
NAN_BOXED(1042754663,32,FLEN)
NAN_BOXED(2110956403,32,FLEN)
NAN_BOXED(2132887466,32,FLEN)
NAN_BOXED(1042754663,32,FLEN)
NAN_BOXED(2110956403,32,FLEN)
NAN_BOXED(2132887466,32,FLEN)
NAN_BOXED(1042754663,32,FLEN)
NAN_BOXED(2110956403,32,FLEN)
NAN_BOXED(2132887466,32,FLEN)
NAN_BOXED(1042754663,32,FLEN)
NAN_BOXED(2110956403,32,FLEN)
NAN_BOXED(2132892949,32,FLEN)
NAN_BOXED(1058147500,32,FLEN)
NAN_BOXED(2125995559,32,FLEN)
NAN_BOXED(2132892949,32,FLEN)
NAN_BOXED(1058147500,32,FLEN)
NAN_BOXED(2125995559,32,FLEN)
NAN_BOXED(2132892949,32,FLEN)
NAN_BOXED(1058147500,32,FLEN)
NAN_BOXED(2125995559,32,FLEN)
NAN_BOXED(2132892949,32,FLEN)
NAN_BOXED(1058147500,32,FLEN)
NAN_BOXED(2125995559,32,FLEN)
NAN_BOXED(2132892949,32,FLEN)
NAN_BOXED(1058147500,32,FLEN)
NAN_BOXED(2125995559,32,FLEN)
NAN_BOXED(2132999922,32,FLEN)
NAN_BOXED(1066777762,32,FLEN)
NAN_BOXED(2134813947,32,FLEN)
NAN_BOXED(2132999922,32,FLEN)
NAN_BOXED(1066777762,32,FLEN)
NAN_BOXED(2134813947,32,FLEN)
NAN_BOXED(2132999922,32,FLEN)
NAN_BOXED(1066777762,32,FLEN)
NAN_BOXED(2134813947,32,FLEN)
NAN_BOXED(2132999922,32,FLEN)
NAN_BOXED(1066777762,32,FLEN)
NAN_BOXED(2134813947,32,FLEN)
NAN_BOXED(2132999922,32,FLEN)
NAN_BOXED(1066777762,32,FLEN)
NAN_BOXED(2134813947,32,FLEN)
NAN_BOXED(2133046376,32,FLEN)
NAN_BOXED(1064437245,32,FLEN)
NAN_BOXED(2132460639,32,FLEN)
NAN_BOXED(2133046376,32,FLEN)
NAN_BOXED(1064437245,32,FLEN)
NAN_BOXED(2132460639,32,FLEN)
NAN_BOXED(2133046376,32,FLEN)
NAN_BOXED(1064437245,32,FLEN)
NAN_BOXED(2132460639,32,FLEN)
NAN_BOXED(2133046376,32,FLEN)
NAN_BOXED(1064437245,32,FLEN)
NAN_BOXED(2132460639,32,FLEN)
NAN_BOXED(2133046376,32,FLEN)
NAN_BOXED(1064437245,32,FLEN)
NAN_BOXED(2132460639,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1051507173,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1051507173,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1051507173,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1051507173,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1051507173,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2133180966,32,FLEN)
NAN_BOXED(1062105370,32,FLEN)
NAN_BOXED(2131078006,32,FLEN)
NAN_BOXED(2133180966,32,FLEN)
NAN_BOXED(1062105370,32,FLEN)
NAN_BOXED(2131078006,32,FLEN)
NAN_BOXED(2133180966,32,FLEN)
NAN_BOXED(1062105370,32,FLEN)
NAN_BOXED(2131078006,32,FLEN)
NAN_BOXED(2133180966,32,FLEN)
NAN_BOXED(1062105370,32,FLEN)
NAN_BOXED(2131078006,32,FLEN)
NAN_BOXED(2133180966,32,FLEN)
NAN_BOXED(1062105370,32,FLEN)
NAN_BOXED(2131078006,32,FLEN)
NAN_BOXED(2133271724,32,FLEN)
NAN_BOXED(1061498873,32,FLEN)
NAN_BOXED(2130755210,32,FLEN)
NAN_BOXED(2133271724,32,FLEN)
NAN_BOXED(1061498873,32,FLEN)
NAN_BOXED(2130755210,32,FLEN)
NAN_BOXED(2133271724,32,FLEN)
NAN_BOXED(1061498873,32,FLEN)
NAN_BOXED(2130755210,32,FLEN)
NAN_BOXED(2133271724,32,FLEN)
NAN_BOXED(1061498873,32,FLEN)
NAN_BOXED(2130755210,32,FLEN)
NAN_BOXED(2133271724,32,FLEN)
NAN_BOXED(1061498873,32,FLEN)
NAN_BOXED(2130755210,32,FLEN)
NAN_BOXED(2133321746,32,FLEN)
NAN_BOXED(1063882904,32,FLEN)
NAN_BOXED(2132357390,32,FLEN)
NAN_BOXED(2133321746,32,FLEN)
NAN_BOXED(1063882904,32,FLEN)
NAN_BOXED(2132357390,32,FLEN)
NAN_BOXED(2133321746,32,FLEN)
NAN_BOXED(1063882904,32,FLEN)
NAN_BOXED(2132357390,32,FLEN)
NAN_BOXED(2133321746,32,FLEN)
NAN_BOXED(1063882904,32,FLEN)
NAN_BOXED(2132357390,32,FLEN)
NAN_BOXED(2133321746,32,FLEN)
NAN_BOXED(1063882904,32,FLEN)
NAN_BOXED(2132357390,32,FLEN)
NAN_BOXED(2133333883,32,FLEN)
NAN_BOXED(1052212390,32,FLEN)
NAN_BOXED(2121332036,32,FLEN)
NAN_BOXED(2133333883,32,FLEN)
NAN_BOXED(1052212390,32,FLEN)
NAN_BOXED(2121332036,32,FLEN)
NAN_BOXED(2133333883,32,FLEN)
NAN_BOXED(1052212390,32,FLEN)
NAN_BOXED(2121332036,32,FLEN)
NAN_BOXED(2133333883,32,FLEN)
NAN_BOXED(1052212390,32,FLEN)
NAN_BOXED(2121332036,32,FLEN)
NAN_BOXED(2133333883,32,FLEN)
NAN_BOXED(1052212390,32,FLEN)
NAN_BOXED(2121332036,32,FLEN)
NAN_BOXED(2133426431,32,FLEN)
NAN_BOXED(1066158142,32,FLEN)
NAN_BOXED(2134492354,32,FLEN)
NAN_BOXED(2133426431,32,FLEN)
NAN_BOXED(1066158142,32,FLEN)
NAN_BOXED(2134492354,32,FLEN)
NAN_BOXED(2133426431,32,FLEN)
NAN_BOXED(1066158142,32,FLEN)
NAN_BOXED(2134492354,32,FLEN)
NAN_BOXED(2133426431,32,FLEN)
NAN_BOXED(1066158142,32,FLEN)
NAN_BOXED(2134492354,32,FLEN)
NAN_BOXED(2133426431,32,FLEN)
NAN_BOXED(1066158142,32,FLEN)
NAN_BOXED(2134492354,32,FLEN)
NAN_BOXED(2133636568,32,FLEN)
NAN_BOXED(1063123233,32,FLEN)
NAN_BOXED(2132132111,32,FLEN)
NAN_BOXED(2133636568,32,FLEN)
NAN_BOXED(1063123233,32,FLEN)
NAN_BOXED(2132132111,32,FLEN)
NAN_BOXED(2133636568,32,FLEN)
NAN_BOXED(1063123233,32,FLEN)
NAN_BOXED(2132132111,32,FLEN)
NAN_BOXED(2133636568,32,FLEN)
NAN_BOXED(1063123233,32,FLEN)
NAN_BOXED(2132132111,32,FLEN)
NAN_BOXED(2133636568,32,FLEN)
NAN_BOXED(1063123233,32,FLEN)
NAN_BOXED(2132132111,32,FLEN)
NAN_BOXED(2133703497,32,FLEN)
NAN_BOXED(1063529668,32,FLEN)
NAN_BOXED(2132465967,32,FLEN)
NAN_BOXED(2133703497,32,FLEN)
NAN_BOXED(1063529668,32,FLEN)
NAN_BOXED(2132465967,32,FLEN)
NAN_BOXED(2133703497,32,FLEN)
NAN_BOXED(1063529668,32,FLEN)
NAN_BOXED(2132465967,32,FLEN)
NAN_BOXED(2133703497,32,FLEN)
NAN_BOXED(1063529668,32,FLEN)
NAN_BOXED(2132465967,32,FLEN)
NAN_BOXED(2133703497,32,FLEN)
NAN_BOXED(1063529668,32,FLEN)
NAN_BOXED(2132465967,32,FLEN)
NAN_BOXED(2133765469,32,FLEN)
NAN_BOXED(1063002461,32,FLEN)
NAN_BOXED(2132161471,32,FLEN)
NAN_BOXED(2133765469,32,FLEN)
NAN_BOXED(1063002461,32,FLEN)
NAN_BOXED(2132161471,32,FLEN)
NAN_BOXED(2133765469,32,FLEN)
NAN_BOXED(1063002461,32,FLEN)
NAN_BOXED(2132161471,32,FLEN)
NAN_BOXED(2133765469,32,FLEN)
NAN_BOXED(1063002461,32,FLEN)
NAN_BOXED(2132161471,32,FLEN)
NAN_BOXED(2133765469,32,FLEN)
NAN_BOXED(1063002461,32,FLEN)
NAN_BOXED(2132161471,32,FLEN)
NAN_BOXED(2133799580,32,FLEN)
NAN_BOXED(1056486726,32,FLEN)
NAN_BOXED(2125083926,32,FLEN)
NAN_BOXED(2133799580,32,FLEN)
NAN_BOXED(1056486726,32,FLEN)
NAN_BOXED(2125083926,32,FLEN)
NAN_BOXED(2133799580,32,FLEN)
NAN_BOXED(1056486726,32,FLEN)
NAN_BOXED(2125083926,32,FLEN)
NAN_BOXED(2133799580,32,FLEN)
NAN_BOXED(1056486726,32,FLEN)
NAN_BOXED(2125083926,32,FLEN)
NAN_BOXED(2133799580,32,FLEN)
NAN_BOXED(1056486726,32,FLEN)
NAN_BOXED(2125083926,32,FLEN)
NAN_BOXED(2134078352,32,FLEN)
NAN_BOXED(1038672520,32,FLEN)
NAN_BOXED(2107850630,32,FLEN)
NAN_BOXED(2134078352,32,FLEN)
NAN_BOXED(1038672520,32,FLEN)
NAN_BOXED(2107850630,32,FLEN)
NAN_BOXED(2134078352,32,FLEN)
NAN_BOXED(1038672520,32,FLEN)
NAN_BOXED(2107850630,32,FLEN)
NAN_BOXED(2134078352,32,FLEN)
NAN_BOXED(1038672520,32,FLEN)
NAN_BOXED(2107850630,32,FLEN)
NAN_BOXED(2134078352,32,FLEN)
NAN_BOXED(1038672520,32,FLEN)
NAN_BOXED(2107850630,32,FLEN)
NAN_BOXED(2134108278,32,FLEN)
NAN_BOXED(1065809940,32,FLEN)
NAN_BOXED(2134750219,32,FLEN)
NAN_BOXED(2134108278,32,FLEN)
NAN_BOXED(1065809940,32,FLEN)
NAN_BOXED(2134750219,32,FLEN)
NAN_BOXED(2134108278,32,FLEN)
NAN_BOXED(1065809940,32,FLEN)
NAN_BOXED(2134750219,32,FLEN)
NAN_BOXED(2134108278,32,FLEN)
NAN_BOXED(1065809940,32,FLEN)
NAN_BOXED(2134750219,32,FLEN)
NAN_BOXED(2134108278,32,FLEN)
NAN_BOXED(1065809940,32,FLEN)
NAN_BOXED(2134750219,32,FLEN)
NAN_BOXED(2134173198,32,FLEN)
NAN_BOXED(1049432405,32,FLEN)
NAN_BOXED(2118606315,32,FLEN)
NAN_BOXED(2134173198,32,FLEN)
NAN_BOXED(1049432405,32,FLEN)
NAN_BOXED(2118606315,32,FLEN)
NAN_BOXED(2134173198,32,FLEN)
NAN_BOXED(1049432405,32,FLEN)
NAN_BOXED(2118606315,32,FLEN)
NAN_BOXED(2134173198,32,FLEN)
NAN_BOXED(1049432405,32,FLEN)
NAN_BOXED(2118606315,32,FLEN)
NAN_BOXED(2134173198,32,FLEN)
NAN_BOXED(1049432405,32,FLEN)
NAN_BOXED(2118606315,32,FLEN)
NAN_BOXED(2134310570,32,FLEN)
NAN_BOXED(1060730639,32,FLEN)
NAN_BOXED(2131006244,32,FLEN)
NAN_BOXED(2134310570,32,FLEN)
NAN_BOXED(1060730639,32,FLEN)
NAN_BOXED(2131006244,32,FLEN)
NAN_BOXED(2134310570,32,FLEN)
NAN_BOXED(1060730639,32,FLEN)
NAN_BOXED(2131006244,32,FLEN)
NAN_BOXED(2134310570,32,FLEN)
NAN_BOXED(1060730639,32,FLEN)
NAN_BOXED(2131006244,32,FLEN)
NAN_BOXED(2134310570,32,FLEN)
NAN_BOXED(1060730639,32,FLEN)
NAN_BOXED(2131006244,32,FLEN)
NAN_BOXED(2134334512,32,FLEN)
NAN_BOXED(1052999058,32,FLEN)
NAN_BOXED(2123105578,32,FLEN)
NAN_BOXED(2134334512,32,FLEN)
NAN_BOXED(1052999058,32,FLEN)
NAN_BOXED(2123105578,32,FLEN)
NAN_BOXED(2134334512,32,FLEN)
NAN_BOXED(1052999058,32,FLEN)
NAN_BOXED(2123105578,32,FLEN)
NAN_BOXED(2134334512,32,FLEN)
NAN_BOXED(1052999058,32,FLEN)
NAN_BOXED(2123105578,32,FLEN)
NAN_BOXED(2134334512,32,FLEN)
NAN_BOXED(1052999058,32,FLEN)
NAN_BOXED(2123105578,32,FLEN)
NAN_BOXED(2134353568,32,FLEN)
NAN_BOXED(1055876084,32,FLEN)
NAN_BOXED(2125184068,32,FLEN)
NAN_BOXED(2134353568,32,FLEN)
NAN_BOXED(1055876084,32,FLEN)
NAN_BOXED(2125184068,32,FLEN)
NAN_BOXED(2134353568,32,FLEN)
NAN_BOXED(1055876084,32,FLEN)
NAN_BOXED(2125184068,32,FLEN)
NAN_BOXED(2134353568,32,FLEN)
NAN_BOXED(1055876084,32,FLEN)
NAN_BOXED(2125184068,32,FLEN)
NAN_BOXED(2134353568,32,FLEN)
NAN_BOXED(1055876084,32,FLEN)
NAN_BOXED(2125184068,32,FLEN)
NAN_BOXED(2134368870,32,FLEN)
NAN_BOXED(1042373912,32,FLEN)
NAN_BOXED(2112344195,32,FLEN)
NAN_BOXED(2134368870,32,FLEN)
NAN_BOXED(1042373912,32,FLEN)
NAN_BOXED(2112344195,32,FLEN)
NAN_BOXED(2134368870,32,FLEN)
NAN_BOXED(1042373912,32,FLEN)
NAN_BOXED(2112344195,32,FLEN)
NAN_BOXED(2134368870,32,FLEN)
NAN_BOXED(1042373912,32,FLEN)
NAN_BOXED(2112344195,32,FLEN)
NAN_BOXED(2134368870,32,FLEN)
NAN_BOXED(1042373912,32,FLEN)
NAN_BOXED(2112344195,32,FLEN)
NAN_BOXED(2134534449,32,FLEN)
NAN_BOXED(1059802534,32,FLEN)
NAN_BOXED(2130278813,32,FLEN)
NAN_BOXED(2134534449,32,FLEN)
NAN_BOXED(1059802534,32,FLEN)
NAN_BOXED(2130278813,32,FLEN)
NAN_BOXED(2134534449,32,FLEN)
NAN_BOXED(1059802534,32,FLEN)
NAN_BOXED(2130278813,32,FLEN)
NAN_BOXED(2134534449,32,FLEN)
NAN_BOXED(1059802534,32,FLEN)
NAN_BOXED(2130278813,32,FLEN)
NAN_BOXED(2134534449,32,FLEN)
NAN_BOXED(1059802534,32,FLEN)
NAN_BOXED(2130278813,32,FLEN)
NAN_BOXED(2134544101,32,FLEN)
NAN_BOXED(1053856960,32,FLEN)
NAN_BOXED(2123890817,32,FLEN)
NAN_BOXED(2134544101,32,FLEN)
NAN_BOXED(1053856960,32,FLEN)
NAN_BOXED(2123890817,32,FLEN)
NAN_BOXED(2134544101,32,FLEN)
NAN_BOXED(1053856960,32,FLEN)
NAN_BOXED(2123890817,32,FLEN)
NAN_BOXED(2134544101,32,FLEN)
NAN_BOXED(1053856960,32,FLEN)
NAN_BOXED(2123890817,32,FLEN)
NAN_BOXED(2134544101,32,FLEN)
NAN_BOXED(1053856960,32,FLEN)
NAN_BOXED(2123890817,32,FLEN)
NAN_BOXED(2134556253,32,FLEN)
NAN_BOXED(1058012717,32,FLEN)
NAN_BOXED(2127696767,32,FLEN)
NAN_BOXED(2134556253,32,FLEN)
NAN_BOXED(1058012717,32,FLEN)
NAN_BOXED(2127696767,32,FLEN)
NAN_BOXED(2134556253,32,FLEN)
NAN_BOXED(1058012717,32,FLEN)
NAN_BOXED(2127696767,32,FLEN)
NAN_BOXED(2134556253,32,FLEN)
NAN_BOXED(1058012717,32,FLEN)
NAN_BOXED(2127696767,32,FLEN)
NAN_BOXED(2134556253,32,FLEN)
NAN_BOXED(1058012717,32,FLEN)
NAN_BOXED(2127696767,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1027830149,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1027830149,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1027830149,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1027830149,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1027830149,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(1039577210,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(1039577210,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(1039577210,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(1039577210,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(1039577210,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2134652926,32,FLEN)
NAN_BOXED(1059824663,32,FLEN)
NAN_BOXED(2130469913,32,FLEN)
NAN_BOXED(2134652926,32,FLEN)
NAN_BOXED(1059824663,32,FLEN)
NAN_BOXED(2130469913,32,FLEN)
NAN_BOXED(2134652926,32,FLEN)
NAN_BOXED(1059824663,32,FLEN)
NAN_BOXED(2130469913,32,FLEN)
NAN_BOXED(2134652926,32,FLEN)
NAN_BOXED(1059824663,32,FLEN)
NAN_BOXED(2130469913,32,FLEN)
NAN_BOXED(2134652926,32,FLEN)
NAN_BOXED(1059824663,32,FLEN)
NAN_BOXED(2130469913,32,FLEN)
NAN_BOXED(2134708582,32,FLEN)
NAN_BOXED(1041984633,32,FLEN)
NAN_BOXED(2112197452,32,FLEN)
NAN_BOXED(2134708582,32,FLEN)
NAN_BOXED(1041984633,32,FLEN)
NAN_BOXED(2112197452,32,FLEN)
NAN_BOXED(2134708582,32,FLEN)
NAN_BOXED(1041984633,32,FLEN)
NAN_BOXED(2112197452,32,FLEN)
NAN_BOXED(2134708582,32,FLEN)
NAN_BOXED(1041984633,32,FLEN)
NAN_BOXED(2112197452,32,FLEN)
NAN_BOXED(2134708582,32,FLEN)
NAN_BOXED(1041984633,32,FLEN)
NAN_BOXED(2112197452,32,FLEN)
NAN_BOXED(2134773288,32,FLEN)
NAN_BOXED(1062685007,32,FLEN)
NAN_BOXED(2132792401,32,FLEN)
NAN_BOXED(2134773288,32,FLEN)
NAN_BOXED(1062685007,32,FLEN)
NAN_BOXED(2132792401,32,FLEN)
NAN_BOXED(2134773288,32,FLEN)
NAN_BOXED(1062685007,32,FLEN)
NAN_BOXED(2132792401,32,FLEN)
NAN_BOXED(2134773288,32,FLEN)
NAN_BOXED(1062685007,32,FLEN)
NAN_BOXED(2132792401,32,FLEN)
NAN_BOXED(2134773288,32,FLEN)
NAN_BOXED(1062685007,32,FLEN)
NAN_BOXED(2132792401,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(1143085813,32,FLEN)
NAN_BOXED(2112378826,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(1143085813,32,FLEN)
NAN_BOXED(2112378826,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(1143085813,32,FLEN)
NAN_BOXED(2112378826,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(1143085813,32,FLEN)
NAN_BOXED(2112378826,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(2123533163,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(2123533163,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(2123533163,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(2123533163,32,FLEN)
NAN_BOXED(2052204607,32,FLEN)
NAN_BOXED(1135772382,32,FLEN)
NAN_BOXED(2123533163,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(1129003281,32,FLEN)
NAN_BOXED(2132373715,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(1129003281,32,FLEN)
NAN_BOXED(2132373715,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_9:
    .fill 214*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
