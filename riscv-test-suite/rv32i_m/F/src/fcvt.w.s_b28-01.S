
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:03:26 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fcvt.w.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fcvt.w.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fcvt.w.s_b28 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fcvt.w.s_b28)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x13,test_dataset_0)
RVTEST_SIGBASE(x3,signature_x3_1)

inst_0:// rs1==f2, rd==x9,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f2; dest:x9; op1val:0x0; valaddr_reg:x13;
val_offset:0*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x9, f2, dyn, 0, 0, x13, 0*FLEN/8, x18, x3, x5,FLREG)

inst_1:// rs1==f7, rd==x28,fs1 == 0 and fe1 == 0x7e and fm1 == 0x124770 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f7; dest:x28; op1val:0x3f124770; valaddr_reg:x13;
val_offset:1*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x28, f7, dyn, 0, 0, x13, 1*FLEN/8, x18, x3, x5,FLREG)

inst_2:// rs1==f0, rd==x6,fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f0; dest:x6; op1val:0x3f800000; valaddr_reg:x13;
val_offset:2*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x6, f0, dyn, 0, 0, x13, 2*FLEN/8, x18, x3, x5,FLREG)

inst_3:// rs1==f30, rd==x14,fs1 == 0 and fe1 == 0x7f and fm1 == 0x200000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f30; dest:x14; op1val:0x3fa00000; valaddr_reg:x13;
val_offset:3*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x14, f30, dyn, 0, 0, x13, 3*FLEN/8, x18, x3, x5,FLREG)

inst_4:// rs1==f27, rd==x15,fs1 == 0 and fe1 == 0x7f and fm1 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f27; dest:x15; op1val:0x3fc00000; valaddr_reg:x13;
val_offset:4*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x15, f27, dyn, 0, 0, x13, 4*FLEN/8, x18, x3, x5,FLREG)

inst_5:// rs1==f6, rd==x29,fs1 == 0 and fe1 == 0x7f and fm1 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f6; dest:x29; op1val:0x3fe00000; valaddr_reg:x13;
val_offset:5*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x29, f6, dyn, 0, 0, x13, 5*FLEN/8, x18, x3, x5,FLREG)

inst_6:// rs1==f4, rd==x24,fs1 == 0 and fe1 == 0x80 and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f4; dest:x24; op1val:0x40000000; valaddr_reg:x13;
val_offset:6*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x24, f4, dyn, 0, 0, x13, 6*FLEN/8, x18, x3, x5,FLREG)

inst_7:// rs1==f18, rd==x11,fs1 == 0 and fe1 == 0x80 and fm1 == 0x100000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f18; dest:x11; op1val:0x40100000; valaddr_reg:x13;
val_offset:7*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x11, f18, dyn, 0, 0, x13, 7*FLEN/8, x18, x3, x5,FLREG)

inst_8:// rs1==f28, rd==x27,fs1 == 0 and fe1 == 0x80 and fm1 == 0x200000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f28; dest:x27; op1val:0x40200000; valaddr_reg:x13;
val_offset:8*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x27, f28, dyn, 0, 0, x13, 8*FLEN/8, x18, x3, x5,FLREG)

inst_9:// rs1==f20, rd==x17,fs1 == 0 and fe1 == 0x80 and fm1 == 0x300000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f20; dest:x17; op1val:0x40300000; valaddr_reg:x13;
val_offset:9*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x17, f20, dyn, 0, 0, x13, 9*FLEN/8, x18, x3, x5,FLREG)

inst_10:// rs1==f17, rd==x16,fs1 == 0 and fe1 == 0x9c and fm1 == 0x5b9758 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f17; dest:x16; op1val:0x4e5b9758; valaddr_reg:x13;
val_offset:10*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x16, f17, dyn, 0, 0, x13, 10*FLEN/8, x18, x3, x5,FLREG)

inst_11:// rs1==f13, rd==x12,fs1 == 0 and fe1 == 0x9d and fm1 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f13; dest:x12; op1val:0x4effffff; valaddr_reg:x13;
val_offset:11*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x12, f13, dyn, 0, 0, x13, 11*FLEN/8, x18, x3, x5,FLREG)

inst_12:// rs1==f21, rd==x19,fs1 == 0 and fe1 == 0xff and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f21; dest:x19; op1val:0x7f800000; valaddr_reg:x13;
val_offset:12*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x19, f21, dyn, 0, 0, x13, 12*FLEN/8, x18, x3, x5,FLREG)

inst_13:// rs1==f19, rd==x31,fs1 == 0 and fe1 == 0xff and fm1 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f19; dest:x31; op1val:0x7f800001; valaddr_reg:x13;
val_offset:13*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x31, f19, dyn, 0, 0, x13, 13*FLEN/8, x18, x3, x5,FLREG)

inst_14:// rs1==f29, rd==x8,fs1 == 0 and fe1 == 0xff and fm1 == 0x400001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f29; dest:x8; op1val:0x7fc00001; valaddr_reg:x13;
val_offset:14*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x8, f29, dyn, 0, 0, x13, 14*FLEN/8, x18, x3, x5,FLREG)

inst_15:// rs1==f31, rd==x10,fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f31; dest:x10; op1val:0x80000000; valaddr_reg:x13;
val_offset:15*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x10, f31, dyn, 0, 0, x13, 15*FLEN/8, x18, x3, x5,FLREG)

inst_16:// rs1==f10, rd==x21,fs1 == 1 and fe1 == 0x7d and fm1 == 0x58046a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f10; dest:x21; op1val:0xbed8046a; valaddr_reg:x13;
val_offset:16*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x21, f10, dyn, 0, 0, x13, 16*FLEN/8, x18, x3, x5,FLREG)

inst_17:// rs1==f1, rd==x2,fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f1; dest:x2; op1val:0xbf800000; valaddr_reg:x13;
val_offset:17*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x2, f1, dyn, 0, 0, x13, 17*FLEN/8, x18, x3, x5,FLREG)

inst_18:// rs1==f24, rd==x7,fs1 == 1 and fe1 == 0x7f and fm1 == 0x200000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f24; dest:x7; op1val:0xbfa00000; valaddr_reg:x13;
val_offset:18*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x7, f24, dyn, 0, 0, x13, 18*FLEN/8, x18, x3, x5,FLREG)

inst_19:// rs1==f5, rd==x30,fs1 == 1 and fe1 == 0x7f and fm1 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f5; dest:x30; op1val:0xbfc00000; valaddr_reg:x13;
val_offset:19*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x30, f5, dyn, 0, 0, x13, 19*FLEN/8, x18, x3, x5,FLREG)

inst_20:// rs1==f3, rd==x23,fs1 == 1 and fe1 == 0x7f and fm1 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f3; dest:x23; op1val:0xbfe00000; valaddr_reg:x13;
val_offset:20*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x23, f3, dyn, 0, 0, x13, 20*FLEN/8, x18, x3, x5,FLREG)

inst_21:// rs1==f26, rd==x26,fs1 == 1 and fe1 == 0x80 and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f26; dest:x26; op1val:0xc0000000; valaddr_reg:x13;
val_offset:21*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x26, f26, dyn, 0, 0, x13, 21*FLEN/8, x18, x3, x5,FLREG)

inst_22:// rs1==f16, rd==x4,fs1 == 1 and fe1 == 0x80 and fm1 == 0x100000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f16; dest:x4; op1val:0xc0100000; valaddr_reg:x13;
val_offset:22*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x4, f16, dyn, 0, 0, x13, 22*FLEN/8, x18, x3, x5,FLREG)

inst_23:// rs1==f9, rd==x1,fs1 == 1 and fe1 == 0x80 and fm1 == 0x200000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f9; dest:x1; op1val:0xc0200000; valaddr_reg:x13;
val_offset:23*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x1, f9, dyn, 0, 0, x13, 23*FLEN/8, x18, x3, x5,FLREG)
RVTEST_VALBASEUPD(x4,test_dataset_1)

inst_24:// rs1==f23, rd==x13,fs1 == 1 and fe1 == 0x80 and fm1 == 0x300000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f23; dest:x13; op1val:0xc0300000; valaddr_reg:x4;
val_offset:0*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x13, f23, dyn, 0, 0, x4, 0*FLEN/8, x6, x3, x5,FLREG)

inst_25:// rs1==f11, rd==x25,fs1 == 1 and fe1 == 0x9d and fm1 == 0x4b3d25 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f11; dest:x25; op1val:0xcecb3d25; valaddr_reg:x4;
val_offset:1*FLEN/8; rmval:dyn; correctval:0; testreg:x5;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x25, f11, dyn, 0, 0, x4, 1*FLEN/8, x6, x3, x5,FLREG)

inst_26:// rs1==f15, rd==x18,fs1 == 1 and fe1 == 0x9e and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f15; dest:x18; op1val:0xcf000000; valaddr_reg:x4;
val_offset:2*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x18, f15, dyn, 0, 0, x4, 2*FLEN/8, x6, x3, x2,FLREG)
RVTEST_SIGBASE(x1,signature_x1_0)

inst_27:// rs1==f12, rd==x20,fs1 == 1 and fe1 == 0xff and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.s ; op1:f12; dest:x20; op1val:0xff800000; valaddr_reg:x4;
val_offset:3*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x20, f12, dyn, 0, 0, x4, 3*FLEN/8, x6, x1, x2,FLREG)

inst_28:// rs1==f8, rd==x3,
/* opcode: fcvt.w.s ; op1:f8; dest:x3; op1val:0x0; valaddr_reg:x4;
val_offset:4*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x3, f8, dyn, 0, 0, x4, 4*FLEN/8, x6, x1, x2,FLREG)

inst_29:// rs1==f14, rd==x22,
/* opcode: fcvt.w.s ; op1:f14; dest:x22; op1val:0x0; valaddr_reg:x4;
val_offset:5*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x22, f14, dyn, 0, 0, x4, 5*FLEN/8, x6, x1, x2,FLREG)

inst_30:// rs1==f25, rd==x0,
/* opcode: fcvt.w.s ; op1:f25; dest:x0; op1val:0x0; valaddr_reg:x4;
val_offset:6*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x0, f25, dyn, 0, 0, x4, 6*FLEN/8, x6, x1, x2,FLREG)

inst_31:// rs1==f22, rd==x5,
/* opcode: fcvt.w.s ; op1:f22; dest:x5; op1val:0x0; valaddr_reg:x4;
val_offset:7*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x5, f22, dyn, 0, 0, x4, 7*FLEN/8, x6, x1, x2,FLREG)

inst_32:// 
/* opcode: fcvt.w.s ; op1:f31; dest:x31; op1val:0x0; valaddr_reg:x4;
val_offset:8*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.w.s, x31, f31, dyn, 0, 0, x4, 8*FLEN/8, x6, x1, x2,FLREG)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1058162544,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(1067450368,32,FLEN)
NAN_BOXED(1069547520,32,FLEN)
NAN_BOXED(1071644672,32,FLEN)
NAN_BOXED(1073741824,32,FLEN)
NAN_BOXED(1074790400,32,FLEN)
NAN_BOXED(1075838976,32,FLEN)
NAN_BOXED(1076887552,32,FLEN)
NAN_BOXED(1314625368,32,FLEN)
NAN_BOXED(1325400063,32,FLEN)
NAN_BOXED(2139095040,32,FLEN)
NAN_BOXED(2139095041,32,FLEN)
NAN_BOXED(2143289345,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3201827946,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3214934016,32,FLEN)
NAN_BOXED(3217031168,32,FLEN)
NAN_BOXED(3219128320,32,FLEN)
NAN_BOXED(3221225472,32,FLEN)
NAN_BOXED(3222274048,32,FLEN)
NAN_BOXED(3223322624,32,FLEN)
test_dataset_1:
NAN_BOXED(3224371200,32,FLEN)
NAN_BOXED(3469425957,32,FLEN)
NAN_BOXED(3472883712,32,FLEN)
NAN_BOXED(4286578688,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x3_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x3_1:
    .fill 54*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_0:
    .fill 12*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
