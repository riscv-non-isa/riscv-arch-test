
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:09 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_19968:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1807fff; valaddr_reg:x3; val_offset:59904*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59904*0 + 3*0*FLEN/8, x4, x1, x2)

inst_19969:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb180ffff; valaddr_reg:x3; val_offset:59907*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59907*0 + 3*1*FLEN/8, x4, x1, x2)

inst_19970:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb181ffff; valaddr_reg:x3; val_offset:59910*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59910*0 + 3*2*FLEN/8, x4, x1, x2)

inst_19971:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb183ffff; valaddr_reg:x3; val_offset:59913*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59913*0 + 3*3*FLEN/8, x4, x1, x2)

inst_19972:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb187ffff; valaddr_reg:x3; val_offset:59916*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59916*0 + 3*4*FLEN/8, x4, x1, x2)

inst_19973:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb18fffff; valaddr_reg:x3; val_offset:59919*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59919*0 + 3*5*FLEN/8, x4, x1, x2)

inst_19974:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb19fffff; valaddr_reg:x3; val_offset:59922*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59922*0 + 3*6*FLEN/8, x4, x1, x2)

inst_19975:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1bfffff; valaddr_reg:x3; val_offset:59925*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59925*0 + 3*7*FLEN/8, x4, x1, x2)

inst_19976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1c00000; valaddr_reg:x3; val_offset:59928*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59928*0 + 3*8*FLEN/8, x4, x1, x2)

inst_19977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1e00000; valaddr_reg:x3; val_offset:59931*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59931*0 + 3*9*FLEN/8, x4, x1, x2)

inst_19978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1f00000; valaddr_reg:x3; val_offset:59934*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59934*0 + 3*10*FLEN/8, x4, x1, x2)

inst_19979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1f80000; valaddr_reg:x3; val_offset:59937*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59937*0 + 3*11*FLEN/8, x4, x1, x2)

inst_19980:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fc0000; valaddr_reg:x3; val_offset:59940*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59940*0 + 3*12*FLEN/8, x4, x1, x2)

inst_19981:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fe0000; valaddr_reg:x3; val_offset:59943*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59943*0 + 3*13*FLEN/8, x4, x1, x2)

inst_19982:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1ff0000; valaddr_reg:x3; val_offset:59946*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59946*0 + 3*14*FLEN/8, x4, x1, x2)

inst_19983:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1ff8000; valaddr_reg:x3; val_offset:59949*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59949*0 + 3*15*FLEN/8, x4, x1, x2)

inst_19984:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1ffc000; valaddr_reg:x3; val_offset:59952*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59952*0 + 3*16*FLEN/8, x4, x1, x2)

inst_19985:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1ffe000; valaddr_reg:x3; val_offset:59955*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59955*0 + 3*17*FLEN/8, x4, x1, x2)

inst_19986:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fff000; valaddr_reg:x3; val_offset:59958*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59958*0 + 3*18*FLEN/8, x4, x1, x2)

inst_19987:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fff800; valaddr_reg:x3; val_offset:59961*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59961*0 + 3*19*FLEN/8, x4, x1, x2)

inst_19988:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fffc00; valaddr_reg:x3; val_offset:59964*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59964*0 + 3*20*FLEN/8, x4, x1, x2)

inst_19989:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fffe00; valaddr_reg:x3; val_offset:59967*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59967*0 + 3*21*FLEN/8, x4, x1, x2)

inst_19990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1ffff00; valaddr_reg:x3; val_offset:59970*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59970*0 + 3*22*FLEN/8, x4, x1, x2)

inst_19991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1ffff80; valaddr_reg:x3; val_offset:59973*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59973*0 + 3*23*FLEN/8, x4, x1, x2)

inst_19992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1ffffc0; valaddr_reg:x3; val_offset:59976*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59976*0 + 3*24*FLEN/8, x4, x1, x2)

inst_19993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1ffffe0; valaddr_reg:x3; val_offset:59979*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59979*0 + 3*25*FLEN/8, x4, x1, x2)

inst_19994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fffff0; valaddr_reg:x3; val_offset:59982*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59982*0 + 3*26*FLEN/8, x4, x1, x2)

inst_19995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fffff8; valaddr_reg:x3; val_offset:59985*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59985*0 + 3*27*FLEN/8, x4, x1, x2)

inst_19996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fffffc; valaddr_reg:x3; val_offset:59988*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59988*0 + 3*28*FLEN/8, x4, x1, x2)

inst_19997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1fffffe; valaddr_reg:x3; val_offset:59991*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59991*0 + 3*29*FLEN/8, x4, x1, x2)

inst_19998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x63 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xb1ffffff; valaddr_reg:x3; val_offset:59994*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59994*0 + 3*30*FLEN/8, x4, x1, x2)

inst_19999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbf800001; valaddr_reg:x3; val_offset:59997*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 59997*0 + 3*31*FLEN/8, x4, x1, x2)

inst_20000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbf800003; valaddr_reg:x3; val_offset:60000*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60000*0 + 3*32*FLEN/8, x4, x1, x2)

inst_20001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbf800007; valaddr_reg:x3; val_offset:60003*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60003*0 + 3*33*FLEN/8, x4, x1, x2)

inst_20002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbf999999; valaddr_reg:x3; val_offset:60006*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60006*0 + 3*34*FLEN/8, x4, x1, x2)

inst_20003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:60009*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60009*0 + 3*35*FLEN/8, x4, x1, x2)

inst_20004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:60012*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60012*0 + 3*36*FLEN/8, x4, x1, x2)

inst_20005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:60015*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60015*0 + 3*37*FLEN/8, x4, x1, x2)

inst_20006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:60018*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60018*0 + 3*38*FLEN/8, x4, x1, x2)

inst_20007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:60021*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60021*0 + 3*39*FLEN/8, x4, x1, x2)

inst_20008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:60024*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60024*0 + 3*40*FLEN/8, x4, x1, x2)

inst_20009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:60027*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60027*0 + 3*41*FLEN/8, x4, x1, x2)

inst_20010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:60030*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60030*0 + 3*42*FLEN/8, x4, x1, x2)

inst_20011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:60033*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60033*0 + 3*43*FLEN/8, x4, x1, x2)

inst_20012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:60036*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60036*0 + 3*44*FLEN/8, x4, x1, x2)

inst_20013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:60039*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60039*0 + 3*45*FLEN/8, x4, x1, x2)

inst_20014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5249e0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4de977 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed249e0; op2val:0x804de977;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:60042*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60042*0 + 3*46*FLEN/8, x4, x1, x2)

inst_20015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23000000; valaddr_reg:x3; val_offset:60045*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60045*0 + 3*47*FLEN/8, x4, x1, x2)

inst_20016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23000001; valaddr_reg:x3; val_offset:60048*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60048*0 + 3*48*FLEN/8, x4, x1, x2)

inst_20017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23000003; valaddr_reg:x3; val_offset:60051*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60051*0 + 3*49*FLEN/8, x4, x1, x2)

inst_20018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23000007; valaddr_reg:x3; val_offset:60054*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60054*0 + 3*50*FLEN/8, x4, x1, x2)

inst_20019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x2300000f; valaddr_reg:x3; val_offset:60057*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60057*0 + 3*51*FLEN/8, x4, x1, x2)

inst_20020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x2300001f; valaddr_reg:x3; val_offset:60060*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60060*0 + 3*52*FLEN/8, x4, x1, x2)

inst_20021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x2300003f; valaddr_reg:x3; val_offset:60063*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60063*0 + 3*53*FLEN/8, x4, x1, x2)

inst_20022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x2300007f; valaddr_reg:x3; val_offset:60066*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60066*0 + 3*54*FLEN/8, x4, x1, x2)

inst_20023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x230000ff; valaddr_reg:x3; val_offset:60069*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60069*0 + 3*55*FLEN/8, x4, x1, x2)

inst_20024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x230001ff; valaddr_reg:x3; val_offset:60072*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60072*0 + 3*56*FLEN/8, x4, x1, x2)

inst_20025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x230003ff; valaddr_reg:x3; val_offset:60075*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60075*0 + 3*57*FLEN/8, x4, x1, x2)

inst_20026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x230007ff; valaddr_reg:x3; val_offset:60078*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60078*0 + 3*58*FLEN/8, x4, x1, x2)

inst_20027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23000fff; valaddr_reg:x3; val_offset:60081*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60081*0 + 3*59*FLEN/8, x4, x1, x2)

inst_20028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23001fff; valaddr_reg:x3; val_offset:60084*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60084*0 + 3*60*FLEN/8, x4, x1, x2)

inst_20029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23003fff; valaddr_reg:x3; val_offset:60087*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60087*0 + 3*61*FLEN/8, x4, x1, x2)

inst_20030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23007fff; valaddr_reg:x3; val_offset:60090*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60090*0 + 3*62*FLEN/8, x4, x1, x2)

inst_20031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x2300ffff; valaddr_reg:x3; val_offset:60093*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60093*0 + 3*63*FLEN/8, x4, x1, x2)

inst_20032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x2301ffff; valaddr_reg:x3; val_offset:60096*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60096*0 + 3*64*FLEN/8, x4, x1, x2)

inst_20033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x2303ffff; valaddr_reg:x3; val_offset:60099*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60099*0 + 3*65*FLEN/8, x4, x1, x2)

inst_20034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x2307ffff; valaddr_reg:x3; val_offset:60102*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60102*0 + 3*66*FLEN/8, x4, x1, x2)

inst_20035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x230fffff; valaddr_reg:x3; val_offset:60105*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60105*0 + 3*67*FLEN/8, x4, x1, x2)

inst_20036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x231fffff; valaddr_reg:x3; val_offset:60108*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60108*0 + 3*68*FLEN/8, x4, x1, x2)

inst_20037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x233fffff; valaddr_reg:x3; val_offset:60111*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60111*0 + 3*69*FLEN/8, x4, x1, x2)

inst_20038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23400000; valaddr_reg:x3; val_offset:60114*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60114*0 + 3*70*FLEN/8, x4, x1, x2)

inst_20039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23600000; valaddr_reg:x3; val_offset:60117*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60117*0 + 3*71*FLEN/8, x4, x1, x2)

inst_20040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23700000; valaddr_reg:x3; val_offset:60120*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60120*0 + 3*72*FLEN/8, x4, x1, x2)

inst_20041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x23780000; valaddr_reg:x3; val_offset:60123*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60123*0 + 3*73*FLEN/8, x4, x1, x2)

inst_20042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237c0000; valaddr_reg:x3; val_offset:60126*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60126*0 + 3*74*FLEN/8, x4, x1, x2)

inst_20043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237e0000; valaddr_reg:x3; val_offset:60129*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60129*0 + 3*75*FLEN/8, x4, x1, x2)

inst_20044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237f0000; valaddr_reg:x3; val_offset:60132*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60132*0 + 3*76*FLEN/8, x4, x1, x2)

inst_20045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237f8000; valaddr_reg:x3; val_offset:60135*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60135*0 + 3*77*FLEN/8, x4, x1, x2)

inst_20046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237fc000; valaddr_reg:x3; val_offset:60138*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60138*0 + 3*78*FLEN/8, x4, x1, x2)

inst_20047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237fe000; valaddr_reg:x3; val_offset:60141*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60141*0 + 3*79*FLEN/8, x4, x1, x2)

inst_20048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237ff000; valaddr_reg:x3; val_offset:60144*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60144*0 + 3*80*FLEN/8, x4, x1, x2)

inst_20049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237ff800; valaddr_reg:x3; val_offset:60147*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60147*0 + 3*81*FLEN/8, x4, x1, x2)

inst_20050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237ffc00; valaddr_reg:x3; val_offset:60150*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60150*0 + 3*82*FLEN/8, x4, x1, x2)

inst_20051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237ffe00; valaddr_reg:x3; val_offset:60153*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60153*0 + 3*83*FLEN/8, x4, x1, x2)

inst_20052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237fff00; valaddr_reg:x3; val_offset:60156*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60156*0 + 3*84*FLEN/8, x4, x1, x2)

inst_20053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237fff80; valaddr_reg:x3; val_offset:60159*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60159*0 + 3*85*FLEN/8, x4, x1, x2)

inst_20054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237fffc0; valaddr_reg:x3; val_offset:60162*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60162*0 + 3*86*FLEN/8, x4, x1, x2)

inst_20055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237fffe0; valaddr_reg:x3; val_offset:60165*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60165*0 + 3*87*FLEN/8, x4, x1, x2)

inst_20056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237ffff0; valaddr_reg:x3; val_offset:60168*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60168*0 + 3*88*FLEN/8, x4, x1, x2)

inst_20057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237ffff8; valaddr_reg:x3; val_offset:60171*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60171*0 + 3*89*FLEN/8, x4, x1, x2)

inst_20058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237ffffc; valaddr_reg:x3; val_offset:60174*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60174*0 + 3*90*FLEN/8, x4, x1, x2)

inst_20059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237ffffe; valaddr_reg:x3; val_offset:60177*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60177*0 + 3*91*FLEN/8, x4, x1, x2)

inst_20060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x46 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x237fffff; valaddr_reg:x3; val_offset:60180*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60180*0 + 3*92*FLEN/8, x4, x1, x2)

inst_20061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3f800001; valaddr_reg:x3; val_offset:60183*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60183*0 + 3*93*FLEN/8, x4, x1, x2)

inst_20062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3f800003; valaddr_reg:x3; val_offset:60186*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60186*0 + 3*94*FLEN/8, x4, x1, x2)

inst_20063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3f800007; valaddr_reg:x3; val_offset:60189*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60189*0 + 3*95*FLEN/8, x4, x1, x2)

inst_20064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3f999999; valaddr_reg:x3; val_offset:60192*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60192*0 + 3*96*FLEN/8, x4, x1, x2)

inst_20065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:60195*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60195*0 + 3*97*FLEN/8, x4, x1, x2)

inst_20066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:60198*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60198*0 + 3*98*FLEN/8, x4, x1, x2)

inst_20067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:60201*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60201*0 + 3*99*FLEN/8, x4, x1, x2)

inst_20068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:60204*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60204*0 + 3*100*FLEN/8, x4, x1, x2)

inst_20069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:60207*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60207*0 + 3*101*FLEN/8, x4, x1, x2)

inst_20070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:60210*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60210*0 + 3*102*FLEN/8, x4, x1, x2)

inst_20071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:60213*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60213*0 + 3*103*FLEN/8, x4, x1, x2)

inst_20072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:60216*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60216*0 + 3*104*FLEN/8, x4, x1, x2)

inst_20073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:60219*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60219*0 + 3*105*FLEN/8, x4, x1, x2)

inst_20074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:60222*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60222*0 + 3*106*FLEN/8, x4, x1, x2)

inst_20075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:60225*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60225*0 + 3*107*FLEN/8, x4, x1, x2)

inst_20076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x528fdc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4dcf92 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed28fdc; op2val:0x4dcf92;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:60228*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60228*0 + 3*108*FLEN/8, x4, x1, x2)

inst_20077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:60231*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60231*0 + 3*109*FLEN/8, x4, x1, x2)

inst_20078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:60234*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60234*0 + 3*110*FLEN/8, x4, x1, x2)

inst_20079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:60237*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60237*0 + 3*111*FLEN/8, x4, x1, x2)

inst_20080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:60240*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60240*0 + 3*112*FLEN/8, x4, x1, x2)

inst_20081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:60243*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60243*0 + 3*113*FLEN/8, x4, x1, x2)

inst_20082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:60246*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60246*0 + 3*114*FLEN/8, x4, x1, x2)

inst_20083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:60249*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60249*0 + 3*115*FLEN/8, x4, x1, x2)

inst_20084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:60252*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60252*0 + 3*116*FLEN/8, x4, x1, x2)

inst_20085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:60255*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60255*0 + 3*117*FLEN/8, x4, x1, x2)

inst_20086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:60258*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60258*0 + 3*118*FLEN/8, x4, x1, x2)

inst_20087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:60261*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60261*0 + 3*119*FLEN/8, x4, x1, x2)

inst_20088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:60264*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60264*0 + 3*120*FLEN/8, x4, x1, x2)

inst_20089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:60267*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60267*0 + 3*121*FLEN/8, x4, x1, x2)

inst_20090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:60270*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60270*0 + 3*122*FLEN/8, x4, x1, x2)

inst_20091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:60273*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60273*0 + 3*123*FLEN/8, x4, x1, x2)

inst_20092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:60276*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60276*0 + 3*124*FLEN/8, x4, x1, x2)

inst_20093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9800000; valaddr_reg:x3; val_offset:60279*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60279*0 + 3*125*FLEN/8, x4, x1, x2)

inst_20094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9800001; valaddr_reg:x3; val_offset:60282*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60282*0 + 3*126*FLEN/8, x4, x1, x2)

inst_20095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9800003; valaddr_reg:x3; val_offset:60285*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60285*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_20096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9800007; valaddr_reg:x3; val_offset:60288*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60288*0 + 3*128*FLEN/8, x4, x1, x2)

inst_20097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x980000f; valaddr_reg:x3; val_offset:60291*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60291*0 + 3*129*FLEN/8, x4, x1, x2)

inst_20098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x980001f; valaddr_reg:x3; val_offset:60294*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60294*0 + 3*130*FLEN/8, x4, x1, x2)

inst_20099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x980003f; valaddr_reg:x3; val_offset:60297*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60297*0 + 3*131*FLEN/8, x4, x1, x2)

inst_20100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x980007f; valaddr_reg:x3; val_offset:60300*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60300*0 + 3*132*FLEN/8, x4, x1, x2)

inst_20101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x98000ff; valaddr_reg:x3; val_offset:60303*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60303*0 + 3*133*FLEN/8, x4, x1, x2)

inst_20102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x98001ff; valaddr_reg:x3; val_offset:60306*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60306*0 + 3*134*FLEN/8, x4, x1, x2)

inst_20103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x98003ff; valaddr_reg:x3; val_offset:60309*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60309*0 + 3*135*FLEN/8, x4, x1, x2)

inst_20104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x98007ff; valaddr_reg:x3; val_offset:60312*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60312*0 + 3*136*FLEN/8, x4, x1, x2)

inst_20105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9800fff; valaddr_reg:x3; val_offset:60315*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60315*0 + 3*137*FLEN/8, x4, x1, x2)

inst_20106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9801fff; valaddr_reg:x3; val_offset:60318*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60318*0 + 3*138*FLEN/8, x4, x1, x2)

inst_20107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9803fff; valaddr_reg:x3; val_offset:60321*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60321*0 + 3*139*FLEN/8, x4, x1, x2)

inst_20108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9807fff; valaddr_reg:x3; val_offset:60324*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60324*0 + 3*140*FLEN/8, x4, x1, x2)

inst_20109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x980ffff; valaddr_reg:x3; val_offset:60327*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60327*0 + 3*141*FLEN/8, x4, x1, x2)

inst_20110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x981ffff; valaddr_reg:x3; val_offset:60330*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60330*0 + 3*142*FLEN/8, x4, x1, x2)

inst_20111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x983ffff; valaddr_reg:x3; val_offset:60333*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60333*0 + 3*143*FLEN/8, x4, x1, x2)

inst_20112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x987ffff; valaddr_reg:x3; val_offset:60336*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60336*0 + 3*144*FLEN/8, x4, x1, x2)

inst_20113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x98fffff; valaddr_reg:x3; val_offset:60339*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60339*0 + 3*145*FLEN/8, x4, x1, x2)

inst_20114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x99fffff; valaddr_reg:x3; val_offset:60342*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60342*0 + 3*146*FLEN/8, x4, x1, x2)

inst_20115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9bfffff; valaddr_reg:x3; val_offset:60345*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60345*0 + 3*147*FLEN/8, x4, x1, x2)

inst_20116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9c00000; valaddr_reg:x3; val_offset:60348*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60348*0 + 3*148*FLEN/8, x4, x1, x2)

inst_20117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9e00000; valaddr_reg:x3; val_offset:60351*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60351*0 + 3*149*FLEN/8, x4, x1, x2)

inst_20118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9f00000; valaddr_reg:x3; val_offset:60354*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60354*0 + 3*150*FLEN/8, x4, x1, x2)

inst_20119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9f80000; valaddr_reg:x3; val_offset:60357*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60357*0 + 3*151*FLEN/8, x4, x1, x2)

inst_20120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fc0000; valaddr_reg:x3; val_offset:60360*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60360*0 + 3*152*FLEN/8, x4, x1, x2)

inst_20121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fe0000; valaddr_reg:x3; val_offset:60363*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60363*0 + 3*153*FLEN/8, x4, x1, x2)

inst_20122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9ff0000; valaddr_reg:x3; val_offset:60366*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60366*0 + 3*154*FLEN/8, x4, x1, x2)

inst_20123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9ff8000; valaddr_reg:x3; val_offset:60369*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60369*0 + 3*155*FLEN/8, x4, x1, x2)

inst_20124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9ffc000; valaddr_reg:x3; val_offset:60372*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60372*0 + 3*156*FLEN/8, x4, x1, x2)

inst_20125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9ffe000; valaddr_reg:x3; val_offset:60375*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60375*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fff000; valaddr_reg:x3; val_offset:60378*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60378*0 + 3*158*FLEN/8, x4, x1, x2)

inst_20127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fff800; valaddr_reg:x3; val_offset:60381*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60381*0 + 3*159*FLEN/8, x4, x1, x2)

inst_20128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fffc00; valaddr_reg:x3; val_offset:60384*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60384*0 + 3*160*FLEN/8, x4, x1, x2)

inst_20129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fffe00; valaddr_reg:x3; val_offset:60387*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60387*0 + 3*161*FLEN/8, x4, x1, x2)

inst_20130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9ffff00; valaddr_reg:x3; val_offset:60390*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60390*0 + 3*162*FLEN/8, x4, x1, x2)

inst_20131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9ffff80; valaddr_reg:x3; val_offset:60393*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60393*0 + 3*163*FLEN/8, x4, x1, x2)

inst_20132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9ffffc0; valaddr_reg:x3; val_offset:60396*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60396*0 + 3*164*FLEN/8, x4, x1, x2)

inst_20133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9ffffe0; valaddr_reg:x3; val_offset:60399*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60399*0 + 3*165*FLEN/8, x4, x1, x2)

inst_20134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fffff0; valaddr_reg:x3; val_offset:60402*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60402*0 + 3*166*FLEN/8, x4, x1, x2)

inst_20135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fffff8; valaddr_reg:x3; val_offset:60405*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60405*0 + 3*167*FLEN/8, x4, x1, x2)

inst_20136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fffffc; valaddr_reg:x3; val_offset:60408*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60408*0 + 3*168*FLEN/8, x4, x1, x2)

inst_20137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9fffffe; valaddr_reg:x3; val_offset:60411*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60411*0 + 3*169*FLEN/8, x4, x1, x2)

inst_20138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52eb6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x13 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed2eb6d; op2val:0x0;
op3val:0x9ffffff; valaddr_reg:x3; val_offset:60414*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60414*0 + 3*170*FLEN/8, x4, x1, x2)

inst_20139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbf800001; valaddr_reg:x3; val_offset:60417*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60417*0 + 3*171*FLEN/8, x4, x1, x2)

inst_20140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbf800003; valaddr_reg:x3; val_offset:60420*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60420*0 + 3*172*FLEN/8, x4, x1, x2)

inst_20141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbf800007; valaddr_reg:x3; val_offset:60423*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60423*0 + 3*173*FLEN/8, x4, x1, x2)

inst_20142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbf999999; valaddr_reg:x3; val_offset:60426*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60426*0 + 3*174*FLEN/8, x4, x1, x2)

inst_20143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:60429*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60429*0 + 3*175*FLEN/8, x4, x1, x2)

inst_20144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:60432*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60432*0 + 3*176*FLEN/8, x4, x1, x2)

inst_20145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:60435*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60435*0 + 3*177*FLEN/8, x4, x1, x2)

inst_20146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:60438*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60438*0 + 3*178*FLEN/8, x4, x1, x2)

inst_20147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:60441*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60441*0 + 3*179*FLEN/8, x4, x1, x2)

inst_20148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:60444*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60444*0 + 3*180*FLEN/8, x4, x1, x2)

inst_20149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:60447*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60447*0 + 3*181*FLEN/8, x4, x1, x2)

inst_20150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:60450*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60450*0 + 3*182*FLEN/8, x4, x1, x2)

inst_20151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:60453*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60453*0 + 3*183*FLEN/8, x4, x1, x2)

inst_20152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:60456*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60456*0 + 3*184*FLEN/8, x4, x1, x2)

inst_20153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:60459*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60459*0 + 3*185*FLEN/8, x4, x1, x2)

inst_20154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:60462*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60462*0 + 3*186*FLEN/8, x4, x1, x2)

inst_20155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2800000; valaddr_reg:x3; val_offset:60465*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60465*0 + 3*187*FLEN/8, x4, x1, x2)

inst_20156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2800001; valaddr_reg:x3; val_offset:60468*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60468*0 + 3*188*FLEN/8, x4, x1, x2)

inst_20157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2800003; valaddr_reg:x3; val_offset:60471*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60471*0 + 3*189*FLEN/8, x4, x1, x2)

inst_20158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2800007; valaddr_reg:x3; val_offset:60474*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60474*0 + 3*190*FLEN/8, x4, x1, x2)

inst_20159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc280000f; valaddr_reg:x3; val_offset:60477*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60477*0 + 3*191*FLEN/8, x4, x1, x2)

inst_20160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc280001f; valaddr_reg:x3; val_offset:60480*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60480*0 + 3*192*FLEN/8, x4, x1, x2)

inst_20161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc280003f; valaddr_reg:x3; val_offset:60483*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60483*0 + 3*193*FLEN/8, x4, x1, x2)

inst_20162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc280007f; valaddr_reg:x3; val_offset:60486*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60486*0 + 3*194*FLEN/8, x4, x1, x2)

inst_20163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc28000ff; valaddr_reg:x3; val_offset:60489*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60489*0 + 3*195*FLEN/8, x4, x1, x2)

inst_20164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc28001ff; valaddr_reg:x3; val_offset:60492*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60492*0 + 3*196*FLEN/8, x4, x1, x2)

inst_20165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc28003ff; valaddr_reg:x3; val_offset:60495*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60495*0 + 3*197*FLEN/8, x4, x1, x2)

inst_20166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc28007ff; valaddr_reg:x3; val_offset:60498*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60498*0 + 3*198*FLEN/8, x4, x1, x2)

inst_20167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2800fff; valaddr_reg:x3; val_offset:60501*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60501*0 + 3*199*FLEN/8, x4, x1, x2)

inst_20168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2801fff; valaddr_reg:x3; val_offset:60504*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60504*0 + 3*200*FLEN/8, x4, x1, x2)

inst_20169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2803fff; valaddr_reg:x3; val_offset:60507*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60507*0 + 3*201*FLEN/8, x4, x1, x2)

inst_20170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2807fff; valaddr_reg:x3; val_offset:60510*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60510*0 + 3*202*FLEN/8, x4, x1, x2)

inst_20171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc280ffff; valaddr_reg:x3; val_offset:60513*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60513*0 + 3*203*FLEN/8, x4, x1, x2)

inst_20172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc281ffff; valaddr_reg:x3; val_offset:60516*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60516*0 + 3*204*FLEN/8, x4, x1, x2)

inst_20173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc283ffff; valaddr_reg:x3; val_offset:60519*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60519*0 + 3*205*FLEN/8, x4, x1, x2)

inst_20174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc287ffff; valaddr_reg:x3; val_offset:60522*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60522*0 + 3*206*FLEN/8, x4, x1, x2)

inst_20175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc28fffff; valaddr_reg:x3; val_offset:60525*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60525*0 + 3*207*FLEN/8, x4, x1, x2)

inst_20176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc29fffff; valaddr_reg:x3; val_offset:60528*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60528*0 + 3*208*FLEN/8, x4, x1, x2)

inst_20177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2bfffff; valaddr_reg:x3; val_offset:60531*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60531*0 + 3*209*FLEN/8, x4, x1, x2)

inst_20178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2c00000; valaddr_reg:x3; val_offset:60534*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60534*0 + 3*210*FLEN/8, x4, x1, x2)

inst_20179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2e00000; valaddr_reg:x3; val_offset:60537*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60537*0 + 3*211*FLEN/8, x4, x1, x2)

inst_20180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2f00000; valaddr_reg:x3; val_offset:60540*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60540*0 + 3*212*FLEN/8, x4, x1, x2)

inst_20181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2f80000; valaddr_reg:x3; val_offset:60543*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60543*0 + 3*213*FLEN/8, x4, x1, x2)

inst_20182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fc0000; valaddr_reg:x3; val_offset:60546*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60546*0 + 3*214*FLEN/8, x4, x1, x2)

inst_20183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fe0000; valaddr_reg:x3; val_offset:60549*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60549*0 + 3*215*FLEN/8, x4, x1, x2)

inst_20184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2ff0000; valaddr_reg:x3; val_offset:60552*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60552*0 + 3*216*FLEN/8, x4, x1, x2)

inst_20185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2ff8000; valaddr_reg:x3; val_offset:60555*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60555*0 + 3*217*FLEN/8, x4, x1, x2)

inst_20186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2ffc000; valaddr_reg:x3; val_offset:60558*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60558*0 + 3*218*FLEN/8, x4, x1, x2)

inst_20187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2ffe000; valaddr_reg:x3; val_offset:60561*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60561*0 + 3*219*FLEN/8, x4, x1, x2)

inst_20188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fff000; valaddr_reg:x3; val_offset:60564*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60564*0 + 3*220*FLEN/8, x4, x1, x2)

inst_20189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fff800; valaddr_reg:x3; val_offset:60567*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60567*0 + 3*221*FLEN/8, x4, x1, x2)

inst_20190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fffc00; valaddr_reg:x3; val_offset:60570*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60570*0 + 3*222*FLEN/8, x4, x1, x2)

inst_20191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fffe00; valaddr_reg:x3; val_offset:60573*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60573*0 + 3*223*FLEN/8, x4, x1, x2)

inst_20192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2ffff00; valaddr_reg:x3; val_offset:60576*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60576*0 + 3*224*FLEN/8, x4, x1, x2)

inst_20193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2ffff80; valaddr_reg:x3; val_offset:60579*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60579*0 + 3*225*FLEN/8, x4, x1, x2)

inst_20194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2ffffc0; valaddr_reg:x3; val_offset:60582*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60582*0 + 3*226*FLEN/8, x4, x1, x2)

inst_20195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2ffffe0; valaddr_reg:x3; val_offset:60585*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60585*0 + 3*227*FLEN/8, x4, x1, x2)

inst_20196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fffff0; valaddr_reg:x3; val_offset:60588*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60588*0 + 3*228*FLEN/8, x4, x1, x2)

inst_20197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fffff8; valaddr_reg:x3; val_offset:60591*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60591*0 + 3*229*FLEN/8, x4, x1, x2)

inst_20198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fffffc; valaddr_reg:x3; val_offset:60594*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60594*0 + 3*230*FLEN/8, x4, x1, x2)

inst_20199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2fffffe; valaddr_reg:x3; val_offset:60597*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60597*0 + 3*231*FLEN/8, x4, x1, x2)

inst_20200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x534e35 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4d897a and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed34e35; op2val:0x804d897a;
op3val:0xc2ffffff; valaddr_reg:x3; val_offset:60600*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60600*0 + 3*232*FLEN/8, x4, x1, x2)

inst_20201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33000000; valaddr_reg:x3; val_offset:60603*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60603*0 + 3*233*FLEN/8, x4, x1, x2)

inst_20202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33000001; valaddr_reg:x3; val_offset:60606*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60606*0 + 3*234*FLEN/8, x4, x1, x2)

inst_20203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33000003; valaddr_reg:x3; val_offset:60609*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60609*0 + 3*235*FLEN/8, x4, x1, x2)

inst_20204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33000007; valaddr_reg:x3; val_offset:60612*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60612*0 + 3*236*FLEN/8, x4, x1, x2)

inst_20205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3300000f; valaddr_reg:x3; val_offset:60615*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60615*0 + 3*237*FLEN/8, x4, x1, x2)

inst_20206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3300001f; valaddr_reg:x3; val_offset:60618*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60618*0 + 3*238*FLEN/8, x4, x1, x2)

inst_20207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3300003f; valaddr_reg:x3; val_offset:60621*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60621*0 + 3*239*FLEN/8, x4, x1, x2)

inst_20208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3300007f; valaddr_reg:x3; val_offset:60624*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60624*0 + 3*240*FLEN/8, x4, x1, x2)

inst_20209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x330000ff; valaddr_reg:x3; val_offset:60627*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60627*0 + 3*241*FLEN/8, x4, x1, x2)

inst_20210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x330001ff; valaddr_reg:x3; val_offset:60630*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60630*0 + 3*242*FLEN/8, x4, x1, x2)

inst_20211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x330003ff; valaddr_reg:x3; val_offset:60633*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60633*0 + 3*243*FLEN/8, x4, x1, x2)

inst_20212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x330007ff; valaddr_reg:x3; val_offset:60636*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60636*0 + 3*244*FLEN/8, x4, x1, x2)

inst_20213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33000fff; valaddr_reg:x3; val_offset:60639*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60639*0 + 3*245*FLEN/8, x4, x1, x2)

inst_20214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33001fff; valaddr_reg:x3; val_offset:60642*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60642*0 + 3*246*FLEN/8, x4, x1, x2)

inst_20215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33003fff; valaddr_reg:x3; val_offset:60645*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60645*0 + 3*247*FLEN/8, x4, x1, x2)

inst_20216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33007fff; valaddr_reg:x3; val_offset:60648*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60648*0 + 3*248*FLEN/8, x4, x1, x2)

inst_20217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3300ffff; valaddr_reg:x3; val_offset:60651*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60651*0 + 3*249*FLEN/8, x4, x1, x2)

inst_20218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3301ffff; valaddr_reg:x3; val_offset:60654*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60654*0 + 3*250*FLEN/8, x4, x1, x2)

inst_20219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3303ffff; valaddr_reg:x3; val_offset:60657*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60657*0 + 3*251*FLEN/8, x4, x1, x2)

inst_20220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3307ffff; valaddr_reg:x3; val_offset:60660*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60660*0 + 3*252*FLEN/8, x4, x1, x2)

inst_20221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x330fffff; valaddr_reg:x3; val_offset:60663*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60663*0 + 3*253*FLEN/8, x4, x1, x2)

inst_20222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x331fffff; valaddr_reg:x3; val_offset:60666*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60666*0 + 3*254*FLEN/8, x4, x1, x2)

inst_20223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x333fffff; valaddr_reg:x3; val_offset:60669*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60669*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_20224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33400000; valaddr_reg:x3; val_offset:60672*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60672*0 + 3*256*FLEN/8, x4, x1, x2)

inst_20225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33600000; valaddr_reg:x3; val_offset:60675*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60675*0 + 3*257*FLEN/8, x4, x1, x2)

inst_20226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33700000; valaddr_reg:x3; val_offset:60678*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60678*0 + 3*258*FLEN/8, x4, x1, x2)

inst_20227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x33780000; valaddr_reg:x3; val_offset:60681*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60681*0 + 3*259*FLEN/8, x4, x1, x2)

inst_20228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337c0000; valaddr_reg:x3; val_offset:60684*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60684*0 + 3*260*FLEN/8, x4, x1, x2)

inst_20229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337e0000; valaddr_reg:x3; val_offset:60687*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60687*0 + 3*261*FLEN/8, x4, x1, x2)

inst_20230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337f0000; valaddr_reg:x3; val_offset:60690*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60690*0 + 3*262*FLEN/8, x4, x1, x2)

inst_20231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337f8000; valaddr_reg:x3; val_offset:60693*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60693*0 + 3*263*FLEN/8, x4, x1, x2)

inst_20232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337fc000; valaddr_reg:x3; val_offset:60696*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60696*0 + 3*264*FLEN/8, x4, x1, x2)

inst_20233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337fe000; valaddr_reg:x3; val_offset:60699*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60699*0 + 3*265*FLEN/8, x4, x1, x2)

inst_20234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337ff000; valaddr_reg:x3; val_offset:60702*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60702*0 + 3*266*FLEN/8, x4, x1, x2)

inst_20235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337ff800; valaddr_reg:x3; val_offset:60705*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60705*0 + 3*267*FLEN/8, x4, x1, x2)

inst_20236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337ffc00; valaddr_reg:x3; val_offset:60708*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60708*0 + 3*268*FLEN/8, x4, x1, x2)

inst_20237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337ffe00; valaddr_reg:x3; val_offset:60711*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60711*0 + 3*269*FLEN/8, x4, x1, x2)

inst_20238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337fff00; valaddr_reg:x3; val_offset:60714*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60714*0 + 3*270*FLEN/8, x4, x1, x2)

inst_20239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337fff80; valaddr_reg:x3; val_offset:60717*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60717*0 + 3*271*FLEN/8, x4, x1, x2)

inst_20240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337fffc0; valaddr_reg:x3; val_offset:60720*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60720*0 + 3*272*FLEN/8, x4, x1, x2)

inst_20241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337fffe0; valaddr_reg:x3; val_offset:60723*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60723*0 + 3*273*FLEN/8, x4, x1, x2)

inst_20242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337ffff0; valaddr_reg:x3; val_offset:60726*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60726*0 + 3*274*FLEN/8, x4, x1, x2)

inst_20243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337ffff8; valaddr_reg:x3; val_offset:60729*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60729*0 + 3*275*FLEN/8, x4, x1, x2)

inst_20244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337ffffc; valaddr_reg:x3; val_offset:60732*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60732*0 + 3*276*FLEN/8, x4, x1, x2)

inst_20245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337ffffe; valaddr_reg:x3; val_offset:60735*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60735*0 + 3*277*FLEN/8, x4, x1, x2)

inst_20246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x66 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x337fffff; valaddr_reg:x3; val_offset:60738*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60738*0 + 3*278*FLEN/8, x4, x1, x2)

inst_20247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3f800001; valaddr_reg:x3; val_offset:60741*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60741*0 + 3*279*FLEN/8, x4, x1, x2)

inst_20248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3f800003; valaddr_reg:x3; val_offset:60744*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60744*0 + 3*280*FLEN/8, x4, x1, x2)

inst_20249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3f800007; valaddr_reg:x3; val_offset:60747*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60747*0 + 3*281*FLEN/8, x4, x1, x2)

inst_20250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3f999999; valaddr_reg:x3; val_offset:60750*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60750*0 + 3*282*FLEN/8, x4, x1, x2)

inst_20251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:60753*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60753*0 + 3*283*FLEN/8, x4, x1, x2)

inst_20252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:60756*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60756*0 + 3*284*FLEN/8, x4, x1, x2)

inst_20253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:60759*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60759*0 + 3*285*FLEN/8, x4, x1, x2)

inst_20254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:60762*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60762*0 + 3*286*FLEN/8, x4, x1, x2)

inst_20255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:60765*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60765*0 + 3*287*FLEN/8, x4, x1, x2)

inst_20256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:60768*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60768*0 + 3*288*FLEN/8, x4, x1, x2)

inst_20257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:60771*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60771*0 + 3*289*FLEN/8, x4, x1, x2)

inst_20258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:60774*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60774*0 + 3*290*FLEN/8, x4, x1, x2)

inst_20259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:60777*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60777*0 + 3*291*FLEN/8, x4, x1, x2)

inst_20260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:60780*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60780*0 + 3*292*FLEN/8, x4, x1, x2)

inst_20261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:60783*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60783*0 + 3*293*FLEN/8, x4, x1, x2)

inst_20262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x537d8a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d7820 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed37d8a; op2val:0x4d7820;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:60786*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60786*0 + 3*294*FLEN/8, x4, x1, x2)

inst_20263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34800000; valaddr_reg:x3; val_offset:60789*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60789*0 + 3*295*FLEN/8, x4, x1, x2)

inst_20264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34800001; valaddr_reg:x3; val_offset:60792*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60792*0 + 3*296*FLEN/8, x4, x1, x2)

inst_20265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34800003; valaddr_reg:x3; val_offset:60795*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60795*0 + 3*297*FLEN/8, x4, x1, x2)

inst_20266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34800007; valaddr_reg:x3; val_offset:60798*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60798*0 + 3*298*FLEN/8, x4, x1, x2)

inst_20267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3480000f; valaddr_reg:x3; val_offset:60801*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60801*0 + 3*299*FLEN/8, x4, x1, x2)

inst_20268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3480001f; valaddr_reg:x3; val_offset:60804*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60804*0 + 3*300*FLEN/8, x4, x1, x2)

inst_20269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3480003f; valaddr_reg:x3; val_offset:60807*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60807*0 + 3*301*FLEN/8, x4, x1, x2)

inst_20270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3480007f; valaddr_reg:x3; val_offset:60810*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60810*0 + 3*302*FLEN/8, x4, x1, x2)

inst_20271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x348000ff; valaddr_reg:x3; val_offset:60813*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60813*0 + 3*303*FLEN/8, x4, x1, x2)

inst_20272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x348001ff; valaddr_reg:x3; val_offset:60816*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60816*0 + 3*304*FLEN/8, x4, x1, x2)

inst_20273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x348003ff; valaddr_reg:x3; val_offset:60819*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60819*0 + 3*305*FLEN/8, x4, x1, x2)

inst_20274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x348007ff; valaddr_reg:x3; val_offset:60822*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60822*0 + 3*306*FLEN/8, x4, x1, x2)

inst_20275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34800fff; valaddr_reg:x3; val_offset:60825*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60825*0 + 3*307*FLEN/8, x4, x1, x2)

inst_20276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34801fff; valaddr_reg:x3; val_offset:60828*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60828*0 + 3*308*FLEN/8, x4, x1, x2)

inst_20277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34803fff; valaddr_reg:x3; val_offset:60831*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60831*0 + 3*309*FLEN/8, x4, x1, x2)

inst_20278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34807fff; valaddr_reg:x3; val_offset:60834*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60834*0 + 3*310*FLEN/8, x4, x1, x2)

inst_20279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3480ffff; valaddr_reg:x3; val_offset:60837*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60837*0 + 3*311*FLEN/8, x4, x1, x2)

inst_20280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3481ffff; valaddr_reg:x3; val_offset:60840*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60840*0 + 3*312*FLEN/8, x4, x1, x2)

inst_20281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3483ffff; valaddr_reg:x3; val_offset:60843*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60843*0 + 3*313*FLEN/8, x4, x1, x2)

inst_20282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3487ffff; valaddr_reg:x3; val_offset:60846*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60846*0 + 3*314*FLEN/8, x4, x1, x2)

inst_20283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x348fffff; valaddr_reg:x3; val_offset:60849*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60849*0 + 3*315*FLEN/8, x4, x1, x2)

inst_20284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x349fffff; valaddr_reg:x3; val_offset:60852*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60852*0 + 3*316*FLEN/8, x4, x1, x2)

inst_20285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34bfffff; valaddr_reg:x3; val_offset:60855*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60855*0 + 3*317*FLEN/8, x4, x1, x2)

inst_20286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34c00000; valaddr_reg:x3; val_offset:60858*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60858*0 + 3*318*FLEN/8, x4, x1, x2)

inst_20287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34e00000; valaddr_reg:x3; val_offset:60861*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60861*0 + 3*319*FLEN/8, x4, x1, x2)

inst_20288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34f00000; valaddr_reg:x3; val_offset:60864*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60864*0 + 3*320*FLEN/8, x4, x1, x2)

inst_20289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34f80000; valaddr_reg:x3; val_offset:60867*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60867*0 + 3*321*FLEN/8, x4, x1, x2)

inst_20290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fc0000; valaddr_reg:x3; val_offset:60870*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60870*0 + 3*322*FLEN/8, x4, x1, x2)

inst_20291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fe0000; valaddr_reg:x3; val_offset:60873*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60873*0 + 3*323*FLEN/8, x4, x1, x2)

inst_20292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34ff0000; valaddr_reg:x3; val_offset:60876*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60876*0 + 3*324*FLEN/8, x4, x1, x2)

inst_20293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34ff8000; valaddr_reg:x3; val_offset:60879*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60879*0 + 3*325*FLEN/8, x4, x1, x2)

inst_20294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34ffc000; valaddr_reg:x3; val_offset:60882*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60882*0 + 3*326*FLEN/8, x4, x1, x2)

inst_20295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34ffe000; valaddr_reg:x3; val_offset:60885*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60885*0 + 3*327*FLEN/8, x4, x1, x2)

inst_20296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fff000; valaddr_reg:x3; val_offset:60888*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60888*0 + 3*328*FLEN/8, x4, x1, x2)

inst_20297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fff800; valaddr_reg:x3; val_offset:60891*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60891*0 + 3*329*FLEN/8, x4, x1, x2)

inst_20298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fffc00; valaddr_reg:x3; val_offset:60894*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60894*0 + 3*330*FLEN/8, x4, x1, x2)

inst_20299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fffe00; valaddr_reg:x3; val_offset:60897*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60897*0 + 3*331*FLEN/8, x4, x1, x2)

inst_20300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34ffff00; valaddr_reg:x3; val_offset:60900*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60900*0 + 3*332*FLEN/8, x4, x1, x2)

inst_20301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34ffff80; valaddr_reg:x3; val_offset:60903*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60903*0 + 3*333*FLEN/8, x4, x1, x2)

inst_20302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34ffffc0; valaddr_reg:x3; val_offset:60906*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60906*0 + 3*334*FLEN/8, x4, x1, x2)

inst_20303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34ffffe0; valaddr_reg:x3; val_offset:60909*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60909*0 + 3*335*FLEN/8, x4, x1, x2)

inst_20304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fffff0; valaddr_reg:x3; val_offset:60912*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60912*0 + 3*336*FLEN/8, x4, x1, x2)

inst_20305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fffff8; valaddr_reg:x3; val_offset:60915*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60915*0 + 3*337*FLEN/8, x4, x1, x2)

inst_20306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fffffc; valaddr_reg:x3; val_offset:60918*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60918*0 + 3*338*FLEN/8, x4, x1, x2)

inst_20307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34fffffe; valaddr_reg:x3; val_offset:60921*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60921*0 + 3*339*FLEN/8, x4, x1, x2)

inst_20308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x69 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x34ffffff; valaddr_reg:x3; val_offset:60924*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60924*0 + 3*340*FLEN/8, x4, x1, x2)

inst_20309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3f800001; valaddr_reg:x3; val_offset:60927*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60927*0 + 3*341*FLEN/8, x4, x1, x2)

inst_20310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3f800003; valaddr_reg:x3; val_offset:60930*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60930*0 + 3*342*FLEN/8, x4, x1, x2)

inst_20311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3f800007; valaddr_reg:x3; val_offset:60933*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60933*0 + 3*343*FLEN/8, x4, x1, x2)

inst_20312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3f999999; valaddr_reg:x3; val_offset:60936*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60936*0 + 3*344*FLEN/8, x4, x1, x2)

inst_20313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:60939*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60939*0 + 3*345*FLEN/8, x4, x1, x2)

inst_20314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:60942*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60942*0 + 3*346*FLEN/8, x4, x1, x2)

inst_20315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:60945*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60945*0 + 3*347*FLEN/8, x4, x1, x2)

inst_20316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:60948*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60948*0 + 3*348*FLEN/8, x4, x1, x2)

inst_20317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:60951*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60951*0 + 3*349*FLEN/8, x4, x1, x2)

inst_20318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:60954*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60954*0 + 3*350*FLEN/8, x4, x1, x2)

inst_20319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:60957*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60957*0 + 3*351*FLEN/8, x4, x1, x2)

inst_20320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:60960*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60960*0 + 3*352*FLEN/8, x4, x1, x2)

inst_20321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:60963*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60963*0 + 3*353*FLEN/8, x4, x1, x2)

inst_20322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:60966*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60966*0 + 3*354*FLEN/8, x4, x1, x2)

inst_20323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:60969*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60969*0 + 3*355*FLEN/8, x4, x1, x2)

inst_20324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53985d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4d6e4d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed3985d; op2val:0x4d6e4d;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:60972*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60972*0 + 3*356*FLEN/8, x4, x1, x2)

inst_20325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:60975*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60975*0 + 3*357*FLEN/8, x4, x1, x2)

inst_20326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:60978*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60978*0 + 3*358*FLEN/8, x4, x1, x2)

inst_20327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:60981*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60981*0 + 3*359*FLEN/8, x4, x1, x2)

inst_20328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:60984*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60984*0 + 3*360*FLEN/8, x4, x1, x2)

inst_20329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:60987*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60987*0 + 3*361*FLEN/8, x4, x1, x2)

inst_20330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:60990*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60990*0 + 3*362*FLEN/8, x4, x1, x2)

inst_20331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:60993*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60993*0 + 3*363*FLEN/8, x4, x1, x2)

inst_20332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:60996*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60996*0 + 3*364*FLEN/8, x4, x1, x2)

inst_20333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:60999*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 60999*0 + 3*365*FLEN/8, x4, x1, x2)

inst_20334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:61002*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61002*0 + 3*366*FLEN/8, x4, x1, x2)

inst_20335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:61005*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61005*0 + 3*367*FLEN/8, x4, x1, x2)

inst_20336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:61008*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61008*0 + 3*368*FLEN/8, x4, x1, x2)

inst_20337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:61011*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61011*0 + 3*369*FLEN/8, x4, x1, x2)

inst_20338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:61014*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61014*0 + 3*370*FLEN/8, x4, x1, x2)

inst_20339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:61017*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61017*0 + 3*371*FLEN/8, x4, x1, x2)

inst_20340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:61020*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61020*0 + 3*372*FLEN/8, x4, x1, x2)

inst_20341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f800000; valaddr_reg:x3; val_offset:61023*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61023*0 + 3*373*FLEN/8, x4, x1, x2)

inst_20342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f800001; valaddr_reg:x3; val_offset:61026*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61026*0 + 3*374*FLEN/8, x4, x1, x2)

inst_20343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f800003; valaddr_reg:x3; val_offset:61029*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61029*0 + 3*375*FLEN/8, x4, x1, x2)

inst_20344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f800007; valaddr_reg:x3; val_offset:61032*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61032*0 + 3*376*FLEN/8, x4, x1, x2)

inst_20345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f80000f; valaddr_reg:x3; val_offset:61035*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61035*0 + 3*377*FLEN/8, x4, x1, x2)

inst_20346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f80001f; valaddr_reg:x3; val_offset:61038*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61038*0 + 3*378*FLEN/8, x4, x1, x2)

inst_20347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f80003f; valaddr_reg:x3; val_offset:61041*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61041*0 + 3*379*FLEN/8, x4, x1, x2)

inst_20348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f80007f; valaddr_reg:x3; val_offset:61044*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61044*0 + 3*380*FLEN/8, x4, x1, x2)

inst_20349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f8000ff; valaddr_reg:x3; val_offset:61047*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61047*0 + 3*381*FLEN/8, x4, x1, x2)

inst_20350:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f8001ff; valaddr_reg:x3; val_offset:61050*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61050*0 + 3*382*FLEN/8, x4, x1, x2)

inst_20351:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f8003ff; valaddr_reg:x3; val_offset:61053*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61053*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_20352:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f8007ff; valaddr_reg:x3; val_offset:61056*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61056*0 + 3*384*FLEN/8, x4, x1, x2)

inst_20353:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f800fff; valaddr_reg:x3; val_offset:61059*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61059*0 + 3*385*FLEN/8, x4, x1, x2)

inst_20354:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f801fff; valaddr_reg:x3; val_offset:61062*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61062*0 + 3*386*FLEN/8, x4, x1, x2)

inst_20355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f803fff; valaddr_reg:x3; val_offset:61065*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61065*0 + 3*387*FLEN/8, x4, x1, x2)

inst_20356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f807fff; valaddr_reg:x3; val_offset:61068*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61068*0 + 3*388*FLEN/8, x4, x1, x2)

inst_20357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f80ffff; valaddr_reg:x3; val_offset:61071*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61071*0 + 3*389*FLEN/8, x4, x1, x2)

inst_20358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f81ffff; valaddr_reg:x3; val_offset:61074*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61074*0 + 3*390*FLEN/8, x4, x1, x2)

inst_20359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f83ffff; valaddr_reg:x3; val_offset:61077*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61077*0 + 3*391*FLEN/8, x4, x1, x2)

inst_20360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f87ffff; valaddr_reg:x3; val_offset:61080*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61080*0 + 3*392*FLEN/8, x4, x1, x2)

inst_20361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f8fffff; valaddr_reg:x3; val_offset:61083*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61083*0 + 3*393*FLEN/8, x4, x1, x2)

inst_20362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8f9fffff; valaddr_reg:x3; val_offset:61086*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61086*0 + 3*394*FLEN/8, x4, x1, x2)

inst_20363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fbfffff; valaddr_reg:x3; val_offset:61089*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61089*0 + 3*395*FLEN/8, x4, x1, x2)

inst_20364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fc00000; valaddr_reg:x3; val_offset:61092*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61092*0 + 3*396*FLEN/8, x4, x1, x2)

inst_20365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fe00000; valaddr_reg:x3; val_offset:61095*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61095*0 + 3*397*FLEN/8, x4, x1, x2)

inst_20366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ff00000; valaddr_reg:x3; val_offset:61098*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61098*0 + 3*398*FLEN/8, x4, x1, x2)

inst_20367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ff80000; valaddr_reg:x3; val_offset:61101*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61101*0 + 3*399*FLEN/8, x4, x1, x2)

inst_20368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffc0000; valaddr_reg:x3; val_offset:61104*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61104*0 + 3*400*FLEN/8, x4, x1, x2)

inst_20369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffe0000; valaddr_reg:x3; val_offset:61107*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61107*0 + 3*401*FLEN/8, x4, x1, x2)

inst_20370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fff0000; valaddr_reg:x3; val_offset:61110*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61110*0 + 3*402*FLEN/8, x4, x1, x2)

inst_20371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fff8000; valaddr_reg:x3; val_offset:61113*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61113*0 + 3*403*FLEN/8, x4, x1, x2)

inst_20372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fffc000; valaddr_reg:x3; val_offset:61116*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61116*0 + 3*404*FLEN/8, x4, x1, x2)

inst_20373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fffe000; valaddr_reg:x3; val_offset:61119*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61119*0 + 3*405*FLEN/8, x4, x1, x2)

inst_20374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffff000; valaddr_reg:x3; val_offset:61122*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61122*0 + 3*406*FLEN/8, x4, x1, x2)

inst_20375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffff800; valaddr_reg:x3; val_offset:61125*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61125*0 + 3*407*FLEN/8, x4, x1, x2)

inst_20376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffffc00; valaddr_reg:x3; val_offset:61128*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61128*0 + 3*408*FLEN/8, x4, x1, x2)

inst_20377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffffe00; valaddr_reg:x3; val_offset:61131*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61131*0 + 3*409*FLEN/8, x4, x1, x2)

inst_20378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fffff00; valaddr_reg:x3; val_offset:61134*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61134*0 + 3*410*FLEN/8, x4, x1, x2)

inst_20379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fffff80; valaddr_reg:x3; val_offset:61137*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61137*0 + 3*411*FLEN/8, x4, x1, x2)

inst_20380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fffffc0; valaddr_reg:x3; val_offset:61140*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61140*0 + 3*412*FLEN/8, x4, x1, x2)

inst_20381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fffffe0; valaddr_reg:x3; val_offset:61143*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61143*0 + 3*413*FLEN/8, x4, x1, x2)

inst_20382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffffff0; valaddr_reg:x3; val_offset:61146*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61146*0 + 3*414*FLEN/8, x4, x1, x2)

inst_20383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffffff8; valaddr_reg:x3; val_offset:61149*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61149*0 + 3*415*FLEN/8, x4, x1, x2)

inst_20384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffffffc; valaddr_reg:x3; val_offset:61152*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61152*0 + 3*416*FLEN/8, x4, x1, x2)

inst_20385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8ffffffe; valaddr_reg:x3; val_offset:61155*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61155*0 + 3*417*FLEN/8, x4, x1, x2)

inst_20386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4170c; op2val:0x80000000;
op3val:0x8fffffff; valaddr_reg:x3; val_offset:61158*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61158*0 + 3*418*FLEN/8, x4, x1, x2)

inst_20387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:61161*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61161*0 + 3*419*FLEN/8, x4, x1, x2)

inst_20388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:61164*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61164*0 + 3*420*FLEN/8, x4, x1, x2)

inst_20389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:61167*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61167*0 + 3*421*FLEN/8, x4, x1, x2)

inst_20390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:61170*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61170*0 + 3*422*FLEN/8, x4, x1, x2)

inst_20391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:61173*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61173*0 + 3*423*FLEN/8, x4, x1, x2)

inst_20392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:61176*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61176*0 + 3*424*FLEN/8, x4, x1, x2)

inst_20393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:61179*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61179*0 + 3*425*FLEN/8, x4, x1, x2)

inst_20394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:61182*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61182*0 + 3*426*FLEN/8, x4, x1, x2)

inst_20395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:61185*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61185*0 + 3*427*FLEN/8, x4, x1, x2)

inst_20396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:61188*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61188*0 + 3*428*FLEN/8, x4, x1, x2)

inst_20397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:61191*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61191*0 + 3*429*FLEN/8, x4, x1, x2)

inst_20398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:61194*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61194*0 + 3*430*FLEN/8, x4, x1, x2)

inst_20399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:61197*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61197*0 + 3*431*FLEN/8, x4, x1, x2)

inst_20400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:61200*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61200*0 + 3*432*FLEN/8, x4, x1, x2)

inst_20401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:61203*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61203*0 + 3*433*FLEN/8, x4, x1, x2)

inst_20402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:61206*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61206*0 + 3*434*FLEN/8, x4, x1, x2)

inst_20403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd800000; valaddr_reg:x3; val_offset:61209*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61209*0 + 3*435*FLEN/8, x4, x1, x2)

inst_20404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd800001; valaddr_reg:x3; val_offset:61212*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61212*0 + 3*436*FLEN/8, x4, x1, x2)

inst_20405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd800003; valaddr_reg:x3; val_offset:61215*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61215*0 + 3*437*FLEN/8, x4, x1, x2)

inst_20406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd800007; valaddr_reg:x3; val_offset:61218*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61218*0 + 3*438*FLEN/8, x4, x1, x2)

inst_20407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd80000f; valaddr_reg:x3; val_offset:61221*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61221*0 + 3*439*FLEN/8, x4, x1, x2)

inst_20408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd80001f; valaddr_reg:x3; val_offset:61224*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61224*0 + 3*440*FLEN/8, x4, x1, x2)

inst_20409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd80003f; valaddr_reg:x3; val_offset:61227*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61227*0 + 3*441*FLEN/8, x4, x1, x2)

inst_20410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd80007f; valaddr_reg:x3; val_offset:61230*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61230*0 + 3*442*FLEN/8, x4, x1, x2)

inst_20411:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd8000ff; valaddr_reg:x3; val_offset:61233*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61233*0 + 3*443*FLEN/8, x4, x1, x2)

inst_20412:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd8001ff; valaddr_reg:x3; val_offset:61236*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61236*0 + 3*444*FLEN/8, x4, x1, x2)

inst_20413:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd8003ff; valaddr_reg:x3; val_offset:61239*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61239*0 + 3*445*FLEN/8, x4, x1, x2)

inst_20414:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd8007ff; valaddr_reg:x3; val_offset:61242*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61242*0 + 3*446*FLEN/8, x4, x1, x2)

inst_20415:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd800fff; valaddr_reg:x3; val_offset:61245*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61245*0 + 3*447*FLEN/8, x4, x1, x2)

inst_20416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd801fff; valaddr_reg:x3; val_offset:61248*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61248*0 + 3*448*FLEN/8, x4, x1, x2)

inst_20417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd803fff; valaddr_reg:x3; val_offset:61251*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61251*0 + 3*449*FLEN/8, x4, x1, x2)

inst_20418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd807fff; valaddr_reg:x3; val_offset:61254*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61254*0 + 3*450*FLEN/8, x4, x1, x2)

inst_20419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd80ffff; valaddr_reg:x3; val_offset:61257*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61257*0 + 3*451*FLEN/8, x4, x1, x2)

inst_20420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd81ffff; valaddr_reg:x3; val_offset:61260*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61260*0 + 3*452*FLEN/8, x4, x1, x2)

inst_20421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd83ffff; valaddr_reg:x3; val_offset:61263*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61263*0 + 3*453*FLEN/8, x4, x1, x2)

inst_20422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd87ffff; valaddr_reg:x3; val_offset:61266*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61266*0 + 3*454*FLEN/8, x4, x1, x2)

inst_20423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd8fffff; valaddr_reg:x3; val_offset:61269*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61269*0 + 3*455*FLEN/8, x4, x1, x2)

inst_20424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xd9fffff; valaddr_reg:x3; val_offset:61272*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61272*0 + 3*456*FLEN/8, x4, x1, x2)

inst_20425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdbfffff; valaddr_reg:x3; val_offset:61275*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61275*0 + 3*457*FLEN/8, x4, x1, x2)

inst_20426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdc00000; valaddr_reg:x3; val_offset:61278*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61278*0 + 3*458*FLEN/8, x4, x1, x2)

inst_20427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xde00000; valaddr_reg:x3; val_offset:61281*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61281*0 + 3*459*FLEN/8, x4, x1, x2)

inst_20428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdf00000; valaddr_reg:x3; val_offset:61284*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61284*0 + 3*460*FLEN/8, x4, x1, x2)

inst_20429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdf80000; valaddr_reg:x3; val_offset:61287*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61287*0 + 3*461*FLEN/8, x4, x1, x2)

inst_20430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfc0000; valaddr_reg:x3; val_offset:61290*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61290*0 + 3*462*FLEN/8, x4, x1, x2)

inst_20431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfe0000; valaddr_reg:x3; val_offset:61293*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61293*0 + 3*463*FLEN/8, x4, x1, x2)

inst_20432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdff0000; valaddr_reg:x3; val_offset:61296*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61296*0 + 3*464*FLEN/8, x4, x1, x2)

inst_20433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdff8000; valaddr_reg:x3; val_offset:61299*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61299*0 + 3*465*FLEN/8, x4, x1, x2)

inst_20434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdffc000; valaddr_reg:x3; val_offset:61302*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61302*0 + 3*466*FLEN/8, x4, x1, x2)

inst_20435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdffe000; valaddr_reg:x3; val_offset:61305*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61305*0 + 3*467*FLEN/8, x4, x1, x2)

inst_20436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfff000; valaddr_reg:x3; val_offset:61308*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61308*0 + 3*468*FLEN/8, x4, x1, x2)

inst_20437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfff800; valaddr_reg:x3; val_offset:61311*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61311*0 + 3*469*FLEN/8, x4, x1, x2)

inst_20438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfffc00; valaddr_reg:x3; val_offset:61314*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61314*0 + 3*470*FLEN/8, x4, x1, x2)

inst_20439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfffe00; valaddr_reg:x3; val_offset:61317*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61317*0 + 3*471*FLEN/8, x4, x1, x2)

inst_20440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdffff00; valaddr_reg:x3; val_offset:61320*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61320*0 + 3*472*FLEN/8, x4, x1, x2)

inst_20441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdffff80; valaddr_reg:x3; val_offset:61323*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61323*0 + 3*473*FLEN/8, x4, x1, x2)

inst_20442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdffffc0; valaddr_reg:x3; val_offset:61326*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61326*0 + 3*474*FLEN/8, x4, x1, x2)

inst_20443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdffffe0; valaddr_reg:x3; val_offset:61329*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61329*0 + 3*475*FLEN/8, x4, x1, x2)

inst_20444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfffff0; valaddr_reg:x3; val_offset:61332*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61332*0 + 3*476*FLEN/8, x4, x1, x2)

inst_20445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfffff8; valaddr_reg:x3; val_offset:61335*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61335*0 + 3*477*FLEN/8, x4, x1, x2)

inst_20446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfffffc; valaddr_reg:x3; val_offset:61338*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61338*0 + 3*478*FLEN/8, x4, x1, x2)

inst_20447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdfffffe; valaddr_reg:x3; val_offset:61341*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61341*0 + 3*479*FLEN/8, x4, x1, x2)

inst_20448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x544c4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed44c4e; op2val:0x0;
op3val:0xdffffff; valaddr_reg:x3; val_offset:61344*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61344*0 + 3*480*FLEN/8, x4, x1, x2)

inst_20449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d000000; valaddr_reg:x3; val_offset:61347*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61347*0 + 3*481*FLEN/8, x4, x1, x2)

inst_20450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d000001; valaddr_reg:x3; val_offset:61350*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61350*0 + 3*482*FLEN/8, x4, x1, x2)

inst_20451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d000003; valaddr_reg:x3; val_offset:61353*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61353*0 + 3*483*FLEN/8, x4, x1, x2)

inst_20452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d000007; valaddr_reg:x3; val_offset:61356*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61356*0 + 3*484*FLEN/8, x4, x1, x2)

inst_20453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d00000f; valaddr_reg:x3; val_offset:61359*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61359*0 + 3*485*FLEN/8, x4, x1, x2)

inst_20454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d00001f; valaddr_reg:x3; val_offset:61362*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61362*0 + 3*486*FLEN/8, x4, x1, x2)

inst_20455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d00003f; valaddr_reg:x3; val_offset:61365*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61365*0 + 3*487*FLEN/8, x4, x1, x2)

inst_20456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d00007f; valaddr_reg:x3; val_offset:61368*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61368*0 + 3*488*FLEN/8, x4, x1, x2)

inst_20457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d0000ff; valaddr_reg:x3; val_offset:61371*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61371*0 + 3*489*FLEN/8, x4, x1, x2)

inst_20458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d0001ff; valaddr_reg:x3; val_offset:61374*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61374*0 + 3*490*FLEN/8, x4, x1, x2)

inst_20459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d0003ff; valaddr_reg:x3; val_offset:61377*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61377*0 + 3*491*FLEN/8, x4, x1, x2)

inst_20460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d0007ff; valaddr_reg:x3; val_offset:61380*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61380*0 + 3*492*FLEN/8, x4, x1, x2)

inst_20461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d000fff; valaddr_reg:x3; val_offset:61383*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61383*0 + 3*493*FLEN/8, x4, x1, x2)

inst_20462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d001fff; valaddr_reg:x3; val_offset:61386*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61386*0 + 3*494*FLEN/8, x4, x1, x2)

inst_20463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d003fff; valaddr_reg:x3; val_offset:61389*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61389*0 + 3*495*FLEN/8, x4, x1, x2)

inst_20464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d007fff; valaddr_reg:x3; val_offset:61392*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61392*0 + 3*496*FLEN/8, x4, x1, x2)

inst_20465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d00ffff; valaddr_reg:x3; val_offset:61395*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61395*0 + 3*497*FLEN/8, x4, x1, x2)

inst_20466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d01ffff; valaddr_reg:x3; val_offset:61398*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61398*0 + 3*498*FLEN/8, x4, x1, x2)

inst_20467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d03ffff; valaddr_reg:x3; val_offset:61401*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61401*0 + 3*499*FLEN/8, x4, x1, x2)

inst_20468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d07ffff; valaddr_reg:x3; val_offset:61404*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61404*0 + 3*500*FLEN/8, x4, x1, x2)

inst_20469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d0fffff; valaddr_reg:x3; val_offset:61407*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61407*0 + 3*501*FLEN/8, x4, x1, x2)

inst_20470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d1fffff; valaddr_reg:x3; val_offset:61410*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61410*0 + 3*502*FLEN/8, x4, x1, x2)

inst_20471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d3fffff; valaddr_reg:x3; val_offset:61413*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61413*0 + 3*503*FLEN/8, x4, x1, x2)

inst_20472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d400000; valaddr_reg:x3; val_offset:61416*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61416*0 + 3*504*FLEN/8, x4, x1, x2)

inst_20473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d600000; valaddr_reg:x3; val_offset:61419*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61419*0 + 3*505*FLEN/8, x4, x1, x2)

inst_20474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d700000; valaddr_reg:x3; val_offset:61422*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61422*0 + 3*506*FLEN/8, x4, x1, x2)

inst_20475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d780000; valaddr_reg:x3; val_offset:61425*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61425*0 + 3*507*FLEN/8, x4, x1, x2)

inst_20476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7c0000; valaddr_reg:x3; val_offset:61428*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61428*0 + 3*508*FLEN/8, x4, x1, x2)

inst_20477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7e0000; valaddr_reg:x3; val_offset:61431*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61431*0 + 3*509*FLEN/8, x4, x1, x2)

inst_20478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7f0000; valaddr_reg:x3; val_offset:61434*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61434*0 + 3*510*FLEN/8, x4, x1, x2)

inst_20479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7f8000; valaddr_reg:x3; val_offset:61437*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61437*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_20480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7fc000; valaddr_reg:x3; val_offset:61440*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61440*0 + 3*512*FLEN/8, x4, x1, x2)

inst_20481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7fe000; valaddr_reg:x3; val_offset:61443*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61443*0 + 3*513*FLEN/8, x4, x1, x2)

inst_20482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7ff000; valaddr_reg:x3; val_offset:61446*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61446*0 + 3*514*FLEN/8, x4, x1, x2)

inst_20483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7ff800; valaddr_reg:x3; val_offset:61449*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61449*0 + 3*515*FLEN/8, x4, x1, x2)

inst_20484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7ffc00; valaddr_reg:x3; val_offset:61452*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61452*0 + 3*516*FLEN/8, x4, x1, x2)

inst_20485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7ffe00; valaddr_reg:x3; val_offset:61455*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61455*0 + 3*517*FLEN/8, x4, x1, x2)

inst_20486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7fff00; valaddr_reg:x3; val_offset:61458*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61458*0 + 3*518*FLEN/8, x4, x1, x2)

inst_20487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7fff80; valaddr_reg:x3; val_offset:61461*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61461*0 + 3*519*FLEN/8, x4, x1, x2)

inst_20488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7fffc0; valaddr_reg:x3; val_offset:61464*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61464*0 + 3*520*FLEN/8, x4, x1, x2)

inst_20489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7fffe0; valaddr_reg:x3; val_offset:61467*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61467*0 + 3*521*FLEN/8, x4, x1, x2)

inst_20490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7ffff0; valaddr_reg:x3; val_offset:61470*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61470*0 + 3*522*FLEN/8, x4, x1, x2)

inst_20491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7ffff8; valaddr_reg:x3; val_offset:61473*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61473*0 + 3*523*FLEN/8, x4, x1, x2)

inst_20492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7ffffc; valaddr_reg:x3; val_offset:61476*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61476*0 + 3*524*FLEN/8, x4, x1, x2)

inst_20493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7ffffe; valaddr_reg:x3; val_offset:61479*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61479*0 + 3*525*FLEN/8, x4, x1, x2)

inst_20494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x5a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x2d7fffff; valaddr_reg:x3; val_offset:61482*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61482*0 + 3*526*FLEN/8, x4, x1, x2)

inst_20495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3f800001; valaddr_reg:x3; val_offset:61485*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61485*0 + 3*527*FLEN/8, x4, x1, x2)

inst_20496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3f800003; valaddr_reg:x3; val_offset:61488*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61488*0 + 3*528*FLEN/8, x4, x1, x2)

inst_20497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3f800007; valaddr_reg:x3; val_offset:61491*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61491*0 + 3*529*FLEN/8, x4, x1, x2)

inst_20498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3f999999; valaddr_reg:x3; val_offset:61494*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61494*0 + 3*530*FLEN/8, x4, x1, x2)

inst_20499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:61497*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61497*0 + 3*531*FLEN/8, x4, x1, x2)

inst_20500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:61500*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61500*0 + 3*532*FLEN/8, x4, x1, x2)

inst_20501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:61503*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61503*0 + 3*533*FLEN/8, x4, x1, x2)

inst_20502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:61506*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61506*0 + 3*534*FLEN/8, x4, x1, x2)

inst_20503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:61509*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61509*0 + 3*535*FLEN/8, x4, x1, x2)

inst_20504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:61512*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61512*0 + 3*536*FLEN/8, x4, x1, x2)

inst_20505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:61515*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61515*0 + 3*537*FLEN/8, x4, x1, x2)

inst_20506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:61518*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61518*0 + 3*538*FLEN/8, x4, x1, x2)

inst_20507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:61521*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61521*0 + 3*539*FLEN/8, x4, x1, x2)

inst_20508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:61524*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61524*0 + 3*540*FLEN/8, x4, x1, x2)

inst_20509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:61527*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61527*0 + 3*541*FLEN/8, x4, x1, x2)

inst_20510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x54e3da and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4cf5bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed4e3da; op2val:0x4cf5bc;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:61530*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61530*0 + 3*542*FLEN/8, x4, x1, x2)

inst_20511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed000000; valaddr_reg:x3; val_offset:61533*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61533*0 + 3*543*FLEN/8, x4, x1, x2)

inst_20512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed000001; valaddr_reg:x3; val_offset:61536*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61536*0 + 3*544*FLEN/8, x4, x1, x2)

inst_20513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed000003; valaddr_reg:x3; val_offset:61539*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61539*0 + 3*545*FLEN/8, x4, x1, x2)

inst_20514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed000007; valaddr_reg:x3; val_offset:61542*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61542*0 + 3*546*FLEN/8, x4, x1, x2)

inst_20515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed00000f; valaddr_reg:x3; val_offset:61545*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61545*0 + 3*547*FLEN/8, x4, x1, x2)

inst_20516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed00001f; valaddr_reg:x3; val_offset:61548*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61548*0 + 3*548*FLEN/8, x4, x1, x2)

inst_20517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed00003f; valaddr_reg:x3; val_offset:61551*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61551*0 + 3*549*FLEN/8, x4, x1, x2)

inst_20518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed00007f; valaddr_reg:x3; val_offset:61554*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61554*0 + 3*550*FLEN/8, x4, x1, x2)

inst_20519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed0000ff; valaddr_reg:x3; val_offset:61557*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61557*0 + 3*551*FLEN/8, x4, x1, x2)

inst_20520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed0001ff; valaddr_reg:x3; val_offset:61560*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61560*0 + 3*552*FLEN/8, x4, x1, x2)

inst_20521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed0003ff; valaddr_reg:x3; val_offset:61563*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61563*0 + 3*553*FLEN/8, x4, x1, x2)

inst_20522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed0007ff; valaddr_reg:x3; val_offset:61566*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61566*0 + 3*554*FLEN/8, x4, x1, x2)

inst_20523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed000fff; valaddr_reg:x3; val_offset:61569*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61569*0 + 3*555*FLEN/8, x4, x1, x2)

inst_20524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed001fff; valaddr_reg:x3; val_offset:61572*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61572*0 + 3*556*FLEN/8, x4, x1, x2)

inst_20525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed003fff; valaddr_reg:x3; val_offset:61575*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61575*0 + 3*557*FLEN/8, x4, x1, x2)

inst_20526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed007fff; valaddr_reg:x3; val_offset:61578*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61578*0 + 3*558*FLEN/8, x4, x1, x2)

inst_20527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed00ffff; valaddr_reg:x3; val_offset:61581*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61581*0 + 3*559*FLEN/8, x4, x1, x2)

inst_20528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed01ffff; valaddr_reg:x3; val_offset:61584*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61584*0 + 3*560*FLEN/8, x4, x1, x2)

inst_20529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed03ffff; valaddr_reg:x3; val_offset:61587*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61587*0 + 3*561*FLEN/8, x4, x1, x2)

inst_20530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed07ffff; valaddr_reg:x3; val_offset:61590*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61590*0 + 3*562*FLEN/8, x4, x1, x2)

inst_20531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed0fffff; valaddr_reg:x3; val_offset:61593*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61593*0 + 3*563*FLEN/8, x4, x1, x2)

inst_20532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed1fffff; valaddr_reg:x3; val_offset:61596*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61596*0 + 3*564*FLEN/8, x4, x1, x2)

inst_20533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed3fffff; valaddr_reg:x3; val_offset:61599*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61599*0 + 3*565*FLEN/8, x4, x1, x2)

inst_20534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed400000; valaddr_reg:x3; val_offset:61602*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61602*0 + 3*566*FLEN/8, x4, x1, x2)

inst_20535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed600000; valaddr_reg:x3; val_offset:61605*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61605*0 + 3*567*FLEN/8, x4, x1, x2)

inst_20536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed700000; valaddr_reg:x3; val_offset:61608*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61608*0 + 3*568*FLEN/8, x4, x1, x2)

inst_20537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed780000; valaddr_reg:x3; val_offset:61611*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61611*0 + 3*569*FLEN/8, x4, x1, x2)

inst_20538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7c0000; valaddr_reg:x3; val_offset:61614*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61614*0 + 3*570*FLEN/8, x4, x1, x2)

inst_20539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7e0000; valaddr_reg:x3; val_offset:61617*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61617*0 + 3*571*FLEN/8, x4, x1, x2)

inst_20540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7f0000; valaddr_reg:x3; val_offset:61620*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61620*0 + 3*572*FLEN/8, x4, x1, x2)

inst_20541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7f8000; valaddr_reg:x3; val_offset:61623*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61623*0 + 3*573*FLEN/8, x4, x1, x2)

inst_20542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7fc000; valaddr_reg:x3; val_offset:61626*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61626*0 + 3*574*FLEN/8, x4, x1, x2)

inst_20543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7fe000; valaddr_reg:x3; val_offset:61629*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61629*0 + 3*575*FLEN/8, x4, x1, x2)

inst_20544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7ff000; valaddr_reg:x3; val_offset:61632*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61632*0 + 3*576*FLEN/8, x4, x1, x2)

inst_20545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7ff800; valaddr_reg:x3; val_offset:61635*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61635*0 + 3*577*FLEN/8, x4, x1, x2)

inst_20546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7ffc00; valaddr_reg:x3; val_offset:61638*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61638*0 + 3*578*FLEN/8, x4, x1, x2)

inst_20547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7ffe00; valaddr_reg:x3; val_offset:61641*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61641*0 + 3*579*FLEN/8, x4, x1, x2)

inst_20548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7fff00; valaddr_reg:x3; val_offset:61644*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61644*0 + 3*580*FLEN/8, x4, x1, x2)

inst_20549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7fff80; valaddr_reg:x3; val_offset:61647*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61647*0 + 3*581*FLEN/8, x4, x1, x2)

inst_20550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7fffc0; valaddr_reg:x3; val_offset:61650*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61650*0 + 3*582*FLEN/8, x4, x1, x2)

inst_20551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7fffe0; valaddr_reg:x3; val_offset:61653*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61653*0 + 3*583*FLEN/8, x4, x1, x2)

inst_20552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7ffff0; valaddr_reg:x3; val_offset:61656*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61656*0 + 3*584*FLEN/8, x4, x1, x2)

inst_20553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7ffff8; valaddr_reg:x3; val_offset:61659*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61659*0 + 3*585*FLEN/8, x4, x1, x2)

inst_20554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7ffffc; valaddr_reg:x3; val_offset:61662*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61662*0 + 3*586*FLEN/8, x4, x1, x2)

inst_20555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7ffffe; valaddr_reg:x3; val_offset:61665*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61665*0 + 3*587*FLEN/8, x4, x1, x2)

inst_20556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xda and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xed7fffff; valaddr_reg:x3; val_offset:61668*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61668*0 + 3*588*FLEN/8, x4, x1, x2)

inst_20557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff000001; valaddr_reg:x3; val_offset:61671*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61671*0 + 3*589*FLEN/8, x4, x1, x2)

inst_20558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff000003; valaddr_reg:x3; val_offset:61674*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61674*0 + 3*590*FLEN/8, x4, x1, x2)

inst_20559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff000007; valaddr_reg:x3; val_offset:61677*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61677*0 + 3*591*FLEN/8, x4, x1, x2)

inst_20560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff199999; valaddr_reg:x3; val_offset:61680*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61680*0 + 3*592*FLEN/8, x4, x1, x2)

inst_20561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff249249; valaddr_reg:x3; val_offset:61683*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61683*0 + 3*593*FLEN/8, x4, x1, x2)

inst_20562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff333333; valaddr_reg:x3; val_offset:61686*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61686*0 + 3*594*FLEN/8, x4, x1, x2)

inst_20563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:61689*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61689*0 + 3*595*FLEN/8, x4, x1, x2)

inst_20564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:61692*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61692*0 + 3*596*FLEN/8, x4, x1, x2)

inst_20565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff444444; valaddr_reg:x3; val_offset:61695*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61695*0 + 3*597*FLEN/8, x4, x1, x2)

inst_20566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:61698*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61698*0 + 3*598*FLEN/8, x4, x1, x2)

inst_20567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:61701*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61701*0 + 3*599*FLEN/8, x4, x1, x2)

inst_20568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff666666; valaddr_reg:x3; val_offset:61704*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61704*0 + 3*600*FLEN/8, x4, x1, x2)

inst_20569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:61707*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61707*0 + 3*601*FLEN/8, x4, x1, x2)

inst_20570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:61710*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61710*0 + 3*602*FLEN/8, x4, x1, x2)

inst_20571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:61713*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61713*0 + 3*603*FLEN/8, x4, x1, x2)

inst_20572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5598d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x19690d and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed598d6; op2val:0xc019690d;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:61716*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61716*0 + 3*604*FLEN/8, x4, x1, x2)

inst_20573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea800000; valaddr_reg:x3; val_offset:61719*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61719*0 + 3*605*FLEN/8, x4, x1, x2)

inst_20574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea800001; valaddr_reg:x3; val_offset:61722*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61722*0 + 3*606*FLEN/8, x4, x1, x2)

inst_20575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea800003; valaddr_reg:x3; val_offset:61725*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61725*0 + 3*607*FLEN/8, x4, x1, x2)

inst_20576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea800007; valaddr_reg:x3; val_offset:61728*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61728*0 + 3*608*FLEN/8, x4, x1, x2)

inst_20577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea80000f; valaddr_reg:x3; val_offset:61731*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61731*0 + 3*609*FLEN/8, x4, x1, x2)

inst_20578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea80001f; valaddr_reg:x3; val_offset:61734*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61734*0 + 3*610*FLEN/8, x4, x1, x2)

inst_20579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea80003f; valaddr_reg:x3; val_offset:61737*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61737*0 + 3*611*FLEN/8, x4, x1, x2)

inst_20580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea80007f; valaddr_reg:x3; val_offset:61740*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61740*0 + 3*612*FLEN/8, x4, x1, x2)

inst_20581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea8000ff; valaddr_reg:x3; val_offset:61743*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61743*0 + 3*613*FLEN/8, x4, x1, x2)

inst_20582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea8001ff; valaddr_reg:x3; val_offset:61746*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61746*0 + 3*614*FLEN/8, x4, x1, x2)

inst_20583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea8003ff; valaddr_reg:x3; val_offset:61749*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61749*0 + 3*615*FLEN/8, x4, x1, x2)

inst_20584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea8007ff; valaddr_reg:x3; val_offset:61752*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61752*0 + 3*616*FLEN/8, x4, x1, x2)

inst_20585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea800fff; valaddr_reg:x3; val_offset:61755*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61755*0 + 3*617*FLEN/8, x4, x1, x2)

inst_20586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea801fff; valaddr_reg:x3; val_offset:61758*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61758*0 + 3*618*FLEN/8, x4, x1, x2)

inst_20587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea803fff; valaddr_reg:x3; val_offset:61761*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61761*0 + 3*619*FLEN/8, x4, x1, x2)

inst_20588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea807fff; valaddr_reg:x3; val_offset:61764*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61764*0 + 3*620*FLEN/8, x4, x1, x2)

inst_20589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea80ffff; valaddr_reg:x3; val_offset:61767*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61767*0 + 3*621*FLEN/8, x4, x1, x2)

inst_20590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea81ffff; valaddr_reg:x3; val_offset:61770*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61770*0 + 3*622*FLEN/8, x4, x1, x2)

inst_20591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea83ffff; valaddr_reg:x3; val_offset:61773*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61773*0 + 3*623*FLEN/8, x4, x1, x2)

inst_20592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea87ffff; valaddr_reg:x3; val_offset:61776*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61776*0 + 3*624*FLEN/8, x4, x1, x2)

inst_20593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea8fffff; valaddr_reg:x3; val_offset:61779*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61779*0 + 3*625*FLEN/8, x4, x1, x2)

inst_20594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xea9fffff; valaddr_reg:x3; val_offset:61782*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61782*0 + 3*626*FLEN/8, x4, x1, x2)

inst_20595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeabfffff; valaddr_reg:x3; val_offset:61785*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61785*0 + 3*627*FLEN/8, x4, x1, x2)

inst_20596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeac00000; valaddr_reg:x3; val_offset:61788*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61788*0 + 3*628*FLEN/8, x4, x1, x2)

inst_20597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeae00000; valaddr_reg:x3; val_offset:61791*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61791*0 + 3*629*FLEN/8, x4, x1, x2)

inst_20598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaf00000; valaddr_reg:x3; val_offset:61794*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61794*0 + 3*630*FLEN/8, x4, x1, x2)

inst_20599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaf80000; valaddr_reg:x3; val_offset:61797*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61797*0 + 3*631*FLEN/8, x4, x1, x2)

inst_20600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafc0000; valaddr_reg:x3; val_offset:61800*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61800*0 + 3*632*FLEN/8, x4, x1, x2)

inst_20601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafe0000; valaddr_reg:x3; val_offset:61803*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61803*0 + 3*633*FLEN/8, x4, x1, x2)

inst_20602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaff0000; valaddr_reg:x3; val_offset:61806*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61806*0 + 3*634*FLEN/8, x4, x1, x2)

inst_20603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaff8000; valaddr_reg:x3; val_offset:61809*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61809*0 + 3*635*FLEN/8, x4, x1, x2)

inst_20604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaffc000; valaddr_reg:x3; val_offset:61812*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61812*0 + 3*636*FLEN/8, x4, x1, x2)

inst_20605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaffe000; valaddr_reg:x3; val_offset:61815*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61815*0 + 3*637*FLEN/8, x4, x1, x2)

inst_20606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafff000; valaddr_reg:x3; val_offset:61818*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61818*0 + 3*638*FLEN/8, x4, x1, x2)

inst_20607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafff800; valaddr_reg:x3; val_offset:61821*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61821*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_20608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafffc00; valaddr_reg:x3; val_offset:61824*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61824*0 + 3*640*FLEN/8, x4, x1, x2)

inst_20609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafffe00; valaddr_reg:x3; val_offset:61827*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61827*0 + 3*641*FLEN/8, x4, x1, x2)

inst_20610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaffff00; valaddr_reg:x3; val_offset:61830*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61830*0 + 3*642*FLEN/8, x4, x1, x2)

inst_20611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaffff80; valaddr_reg:x3; val_offset:61833*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61833*0 + 3*643*FLEN/8, x4, x1, x2)

inst_20612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaffffc0; valaddr_reg:x3; val_offset:61836*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61836*0 + 3*644*FLEN/8, x4, x1, x2)

inst_20613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaffffe0; valaddr_reg:x3; val_offset:61839*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61839*0 + 3*645*FLEN/8, x4, x1, x2)

inst_20614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafffff0; valaddr_reg:x3; val_offset:61842*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61842*0 + 3*646*FLEN/8, x4, x1, x2)

inst_20615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafffff8; valaddr_reg:x3; val_offset:61845*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61845*0 + 3*647*FLEN/8, x4, x1, x2)

inst_20616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafffffc; valaddr_reg:x3; val_offset:61848*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61848*0 + 3*648*FLEN/8, x4, x1, x2)

inst_20617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeafffffe; valaddr_reg:x3; val_offset:61851*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61851*0 + 3*649*FLEN/8, x4, x1, x2)

inst_20618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xd5 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xeaffffff; valaddr_reg:x3; val_offset:61854*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61854*0 + 3*650*FLEN/8, x4, x1, x2)

inst_20619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff000001; valaddr_reg:x3; val_offset:61857*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61857*0 + 3*651*FLEN/8, x4, x1, x2)

inst_20620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff000003; valaddr_reg:x3; val_offset:61860*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61860*0 + 3*652*FLEN/8, x4, x1, x2)

inst_20621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff000007; valaddr_reg:x3; val_offset:61863*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61863*0 + 3*653*FLEN/8, x4, x1, x2)

inst_20622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff199999; valaddr_reg:x3; val_offset:61866*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61866*0 + 3*654*FLEN/8, x4, x1, x2)

inst_20623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff249249; valaddr_reg:x3; val_offset:61869*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61869*0 + 3*655*FLEN/8, x4, x1, x2)

inst_20624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff333333; valaddr_reg:x3; val_offset:61872*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61872*0 + 3*656*FLEN/8, x4, x1, x2)

inst_20625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:61875*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61875*0 + 3*657*FLEN/8, x4, x1, x2)

inst_20626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:61878*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61878*0 + 3*658*FLEN/8, x4, x1, x2)

inst_20627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff444444; valaddr_reg:x3; val_offset:61881*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61881*0 + 3*659*FLEN/8, x4, x1, x2)

inst_20628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:61884*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61884*0 + 3*660*FLEN/8, x4, x1, x2)

inst_20629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:61887*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61887*0 + 3*661*FLEN/8, x4, x1, x2)

inst_20630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff666666; valaddr_reg:x3; val_offset:61890*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61890*0 + 3*662*FLEN/8, x4, x1, x2)

inst_20631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:61893*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61893*0 + 3*663*FLEN/8, x4, x1, x2)

inst_20632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:61896*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61896*0 + 3*664*FLEN/8, x4, x1, x2)

inst_20633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:61899*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61899*0 + 3*665*FLEN/8, x4, x1, x2)

inst_20634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x562350 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1905d9 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed62350; op2val:0xc01905d9;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:61902*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61902*0 + 3*666*FLEN/8, x4, x1, x2)

inst_20635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:61905*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61905*0 + 3*667*FLEN/8, x4, x1, x2)

inst_20636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:61908*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61908*0 + 3*668*FLEN/8, x4, x1, x2)

inst_20637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:61911*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61911*0 + 3*669*FLEN/8, x4, x1, x2)

inst_20638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:61914*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61914*0 + 3*670*FLEN/8, x4, x1, x2)

inst_20639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:61917*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61917*0 + 3*671*FLEN/8, x4, x1, x2)

inst_20640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:61920*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61920*0 + 3*672*FLEN/8, x4, x1, x2)

inst_20641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:61923*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61923*0 + 3*673*FLEN/8, x4, x1, x2)

inst_20642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:61926*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61926*0 + 3*674*FLEN/8, x4, x1, x2)

inst_20643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:61929*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61929*0 + 3*675*FLEN/8, x4, x1, x2)

inst_20644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:61932*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61932*0 + 3*676*FLEN/8, x4, x1, x2)

inst_20645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:61935*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61935*0 + 3*677*FLEN/8, x4, x1, x2)

inst_20646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:61938*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61938*0 + 3*678*FLEN/8, x4, x1, x2)

inst_20647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:61941*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61941*0 + 3*679*FLEN/8, x4, x1, x2)

inst_20648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:61944*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61944*0 + 3*680*FLEN/8, x4, x1, x2)

inst_20649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:61947*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61947*0 + 3*681*FLEN/8, x4, x1, x2)

inst_20650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:61950*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61950*0 + 3*682*FLEN/8, x4, x1, x2)

inst_20651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84800000; valaddr_reg:x3; val_offset:61953*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61953*0 + 3*683*FLEN/8, x4, x1, x2)

inst_20652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84800001; valaddr_reg:x3; val_offset:61956*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61956*0 + 3*684*FLEN/8, x4, x1, x2)

inst_20653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84800003; valaddr_reg:x3; val_offset:61959*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61959*0 + 3*685*FLEN/8, x4, x1, x2)

inst_20654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84800007; valaddr_reg:x3; val_offset:61962*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61962*0 + 3*686*FLEN/8, x4, x1, x2)

inst_20655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x8480000f; valaddr_reg:x3; val_offset:61965*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61965*0 + 3*687*FLEN/8, x4, x1, x2)

inst_20656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x8480001f; valaddr_reg:x3; val_offset:61968*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61968*0 + 3*688*FLEN/8, x4, x1, x2)

inst_20657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x8480003f; valaddr_reg:x3; val_offset:61971*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61971*0 + 3*689*FLEN/8, x4, x1, x2)

inst_20658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x8480007f; valaddr_reg:x3; val_offset:61974*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61974*0 + 3*690*FLEN/8, x4, x1, x2)

inst_20659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x848000ff; valaddr_reg:x3; val_offset:61977*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61977*0 + 3*691*FLEN/8, x4, x1, x2)

inst_20660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x848001ff; valaddr_reg:x3; val_offset:61980*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61980*0 + 3*692*FLEN/8, x4, x1, x2)

inst_20661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x848003ff; valaddr_reg:x3; val_offset:61983*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61983*0 + 3*693*FLEN/8, x4, x1, x2)

inst_20662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x848007ff; valaddr_reg:x3; val_offset:61986*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61986*0 + 3*694*FLEN/8, x4, x1, x2)

inst_20663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84800fff; valaddr_reg:x3; val_offset:61989*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61989*0 + 3*695*FLEN/8, x4, x1, x2)

inst_20664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84801fff; valaddr_reg:x3; val_offset:61992*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61992*0 + 3*696*FLEN/8, x4, x1, x2)

inst_20665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84803fff; valaddr_reg:x3; val_offset:61995*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61995*0 + 3*697*FLEN/8, x4, x1, x2)

inst_20666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84807fff; valaddr_reg:x3; val_offset:61998*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 61998*0 + 3*698*FLEN/8, x4, x1, x2)

inst_20667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x8480ffff; valaddr_reg:x3; val_offset:62001*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62001*0 + 3*699*FLEN/8, x4, x1, x2)

inst_20668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x8481ffff; valaddr_reg:x3; val_offset:62004*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62004*0 + 3*700*FLEN/8, x4, x1, x2)

inst_20669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x8483ffff; valaddr_reg:x3; val_offset:62007*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62007*0 + 3*701*FLEN/8, x4, x1, x2)

inst_20670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x8487ffff; valaddr_reg:x3; val_offset:62010*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62010*0 + 3*702*FLEN/8, x4, x1, x2)

inst_20671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x848fffff; valaddr_reg:x3; val_offset:62013*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62013*0 + 3*703*FLEN/8, x4, x1, x2)

inst_20672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x849fffff; valaddr_reg:x3; val_offset:62016*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62016*0 + 3*704*FLEN/8, x4, x1, x2)

inst_20673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84bfffff; valaddr_reg:x3; val_offset:62019*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62019*0 + 3*705*FLEN/8, x4, x1, x2)

inst_20674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84c00000; valaddr_reg:x3; val_offset:62022*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62022*0 + 3*706*FLEN/8, x4, x1, x2)

inst_20675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84e00000; valaddr_reg:x3; val_offset:62025*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62025*0 + 3*707*FLEN/8, x4, x1, x2)

inst_20676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84f00000; valaddr_reg:x3; val_offset:62028*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62028*0 + 3*708*FLEN/8, x4, x1, x2)

inst_20677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84f80000; valaddr_reg:x3; val_offset:62031*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62031*0 + 3*709*FLEN/8, x4, x1, x2)

inst_20678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fc0000; valaddr_reg:x3; val_offset:62034*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62034*0 + 3*710*FLEN/8, x4, x1, x2)

inst_20679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fe0000; valaddr_reg:x3; val_offset:62037*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62037*0 + 3*711*FLEN/8, x4, x1, x2)

inst_20680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84ff0000; valaddr_reg:x3; val_offset:62040*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62040*0 + 3*712*FLEN/8, x4, x1, x2)

inst_20681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84ff8000; valaddr_reg:x3; val_offset:62043*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62043*0 + 3*713*FLEN/8, x4, x1, x2)

inst_20682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84ffc000; valaddr_reg:x3; val_offset:62046*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62046*0 + 3*714*FLEN/8, x4, x1, x2)

inst_20683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84ffe000; valaddr_reg:x3; val_offset:62049*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62049*0 + 3*715*FLEN/8, x4, x1, x2)

inst_20684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fff000; valaddr_reg:x3; val_offset:62052*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62052*0 + 3*716*FLEN/8, x4, x1, x2)

inst_20685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fff800; valaddr_reg:x3; val_offset:62055*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62055*0 + 3*717*FLEN/8, x4, x1, x2)

inst_20686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fffc00; valaddr_reg:x3; val_offset:62058*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62058*0 + 3*718*FLEN/8, x4, x1, x2)

inst_20687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fffe00; valaddr_reg:x3; val_offset:62061*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62061*0 + 3*719*FLEN/8, x4, x1, x2)

inst_20688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84ffff00; valaddr_reg:x3; val_offset:62064*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62064*0 + 3*720*FLEN/8, x4, x1, x2)

inst_20689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84ffff80; valaddr_reg:x3; val_offset:62067*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62067*0 + 3*721*FLEN/8, x4, x1, x2)

inst_20690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84ffffc0; valaddr_reg:x3; val_offset:62070*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62070*0 + 3*722*FLEN/8, x4, x1, x2)

inst_20691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84ffffe0; valaddr_reg:x3; val_offset:62073*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62073*0 + 3*723*FLEN/8, x4, x1, x2)

inst_20692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fffff0; valaddr_reg:x3; val_offset:62076*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62076*0 + 3*724*FLEN/8, x4, x1, x2)

inst_20693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fffff8; valaddr_reg:x3; val_offset:62079*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62079*0 + 3*725*FLEN/8, x4, x1, x2)

inst_20694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fffffc; valaddr_reg:x3; val_offset:62082*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62082*0 + 3*726*FLEN/8, x4, x1, x2)

inst_20695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84fffffe; valaddr_reg:x3; val_offset:62085*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62085*0 + 3*727*FLEN/8, x4, x1, x2)

inst_20696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56ccb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed6ccb6; op2val:0x80000000;
op3val:0x84ffffff; valaddr_reg:x3; val_offset:62088*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62088*0 + 3*728*FLEN/8, x4, x1, x2)

inst_20697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000000; valaddr_reg:x3; val_offset:62091*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62091*0 + 3*729*FLEN/8, x4, x1, x2)

inst_20698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000001; valaddr_reg:x3; val_offset:62094*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62094*0 + 3*730*FLEN/8, x4, x1, x2)

inst_20699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000003; valaddr_reg:x3; val_offset:62097*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62097*0 + 3*731*FLEN/8, x4, x1, x2)

inst_20700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000007; valaddr_reg:x3; val_offset:62100*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62100*0 + 3*732*FLEN/8, x4, x1, x2)

inst_20701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100000f; valaddr_reg:x3; val_offset:62103*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62103*0 + 3*733*FLEN/8, x4, x1, x2)

inst_20702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100001f; valaddr_reg:x3; val_offset:62106*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62106*0 + 3*734*FLEN/8, x4, x1, x2)

inst_20703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100003f; valaddr_reg:x3; val_offset:62109*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62109*0 + 3*735*FLEN/8, x4, x1, x2)

inst_20704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100007f; valaddr_reg:x3; val_offset:62112*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62112*0 + 3*736*FLEN/8, x4, x1, x2)

inst_20705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10000ff; valaddr_reg:x3; val_offset:62115*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62115*0 + 3*737*FLEN/8, x4, x1, x2)

inst_20706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10001ff; valaddr_reg:x3; val_offset:62118*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62118*0 + 3*738*FLEN/8, x4, x1, x2)

inst_20707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10003ff; valaddr_reg:x3; val_offset:62121*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62121*0 + 3*739*FLEN/8, x4, x1, x2)

inst_20708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10007ff; valaddr_reg:x3; val_offset:62124*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62124*0 + 3*740*FLEN/8, x4, x1, x2)

inst_20709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000fff; valaddr_reg:x3; val_offset:62127*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62127*0 + 3*741*FLEN/8, x4, x1, x2)

inst_20710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1001fff; valaddr_reg:x3; val_offset:62130*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62130*0 + 3*742*FLEN/8, x4, x1, x2)

inst_20711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1003fff; valaddr_reg:x3; val_offset:62133*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62133*0 + 3*743*FLEN/8, x4, x1, x2)

inst_20712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1007fff; valaddr_reg:x3; val_offset:62136*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62136*0 + 3*744*FLEN/8, x4, x1, x2)

inst_20713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100ffff; valaddr_reg:x3; val_offset:62139*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62139*0 + 3*745*FLEN/8, x4, x1, x2)

inst_20714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa101ffff; valaddr_reg:x3; val_offset:62142*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62142*0 + 3*746*FLEN/8, x4, x1, x2)

inst_20715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa103ffff; valaddr_reg:x3; val_offset:62145*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62145*0 + 3*747*FLEN/8, x4, x1, x2)

inst_20716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa107ffff; valaddr_reg:x3; val_offset:62148*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62148*0 + 3*748*FLEN/8, x4, x1, x2)

inst_20717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10fffff; valaddr_reg:x3; val_offset:62151*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62151*0 + 3*749*FLEN/8, x4, x1, x2)

inst_20718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa11fffff; valaddr_reg:x3; val_offset:62154*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62154*0 + 3*750*FLEN/8, x4, x1, x2)

inst_20719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa13fffff; valaddr_reg:x3; val_offset:62157*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62157*0 + 3*751*FLEN/8, x4, x1, x2)

inst_20720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1400000; valaddr_reg:x3; val_offset:62160*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62160*0 + 3*752*FLEN/8, x4, x1, x2)

inst_20721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1600000; valaddr_reg:x3; val_offset:62163*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62163*0 + 3*753*FLEN/8, x4, x1, x2)

inst_20722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1700000; valaddr_reg:x3; val_offset:62166*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62166*0 + 3*754*FLEN/8, x4, x1, x2)

inst_20723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1780000; valaddr_reg:x3; val_offset:62169*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62169*0 + 3*755*FLEN/8, x4, x1, x2)

inst_20724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17c0000; valaddr_reg:x3; val_offset:62172*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62172*0 + 3*756*FLEN/8, x4, x1, x2)

inst_20725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17e0000; valaddr_reg:x3; val_offset:62175*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62175*0 + 3*757*FLEN/8, x4, x1, x2)

inst_20726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17f0000; valaddr_reg:x3; val_offset:62178*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62178*0 + 3*758*FLEN/8, x4, x1, x2)

inst_20727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17f8000; valaddr_reg:x3; val_offset:62181*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62181*0 + 3*759*FLEN/8, x4, x1, x2)

inst_20728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fc000; valaddr_reg:x3; val_offset:62184*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62184*0 + 3*760*FLEN/8, x4, x1, x2)

inst_20729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fe000; valaddr_reg:x3; val_offset:62187*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62187*0 + 3*761*FLEN/8, x4, x1, x2)

inst_20730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ff000; valaddr_reg:x3; val_offset:62190*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62190*0 + 3*762*FLEN/8, x4, x1, x2)

inst_20731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ff800; valaddr_reg:x3; val_offset:62193*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62193*0 + 3*763*FLEN/8, x4, x1, x2)

inst_20732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ffc00; valaddr_reg:x3; val_offset:62196*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62196*0 + 3*764*FLEN/8, x4, x1, x2)

inst_20733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ffe00; valaddr_reg:x3; val_offset:62199*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62199*0 + 3*765*FLEN/8, x4, x1, x2)

inst_20734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fff00; valaddr_reg:x3; val_offset:62202*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62202*0 + 3*766*FLEN/8, x4, x1, x2)

inst_20735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fff80; valaddr_reg:x3; val_offset:62205*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 62205*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2977988607,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2978021375,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2978086911,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2978217983,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2978480127,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2979004415,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2980052991,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2982150143,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2982150144,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2984247296,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2985295872,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2985820160,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986082304,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986213376,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986278912,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986311680,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986328064,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986336256,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986340352,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986342400,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986343424,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986343936,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986344192,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986344320,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986344384,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986344416,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986344432,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986344440,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986344444,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986344446,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(2986344447,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2127710688,32,FLEN)
NAN_BOXED(2152589687,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587202560,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587202561,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587202563,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587202567,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587202575,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587202591,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587202623,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587202687,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587202815,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587203071,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587203583,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587204607,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587206655,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587210751,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587218943,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587235327,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587268095,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587333631,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587464703,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(587726847,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(588251135,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(589299711,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(591396863,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(591396864,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(593494016,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(594542592,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595066880,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595329024,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595460096,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595525632,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595558400,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595574784,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595582976,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595587072,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595589120,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595590144,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595590656,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595590912,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595591040,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595591104,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595591136,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595591152,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595591160,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595591164,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595591166,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(595591167,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2127728604,32,FLEN)
NAN_BOXED(5099410,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383552,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383553,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383555,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383559,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383567,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383583,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383615,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383679,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159383807,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159384063,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159384575,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159385599,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159387647,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159391743,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159399935,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159416319,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159449087,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159514623,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159645695,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(159907839,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(160432127,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(161480703,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(163577855,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(163577856,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(165675008,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(166723584,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167247872,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167510016,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167641088,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167706624,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167739392,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167755776,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167763968,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167768064,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167770112,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167771136,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167771648,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167771904,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772032,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772096,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772128,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772144,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772152,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772156,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772158,32,FLEN)
NAN_BOXED(2127752045,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(167772159,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263168512,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263168513,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263168515,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263168519,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263168527,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263168543,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263168575,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263168639,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263168767,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263169023,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263169535,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263170559,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263172607,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263176703,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263184895,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263201279,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263234047,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263299583,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263430655,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3263692799,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3264217087,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3265265663,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3267362815,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3267362816,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3269459968,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3270508544,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271032832,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271294976,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271426048,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271491584,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271524352,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271540736,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271548928,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271553024,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271555072,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271556096,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271556608,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271556864,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271556992,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271557056,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271557088,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271557104,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271557112,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271557116,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271557118,32,FLEN)
NAN_BOXED(2127777333,32,FLEN)
NAN_BOXED(2152565114,32,FLEN)
NAN_BOXED(3271557119,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638016,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638017,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638019,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638023,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638031,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638047,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638079,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638143,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638271,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855638527,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855639039,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855640063,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855642111,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855646207,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855654399,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855670783,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855703551,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855769087,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(855900159,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(856162303,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(856686591,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(857735167,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(859832319,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(859832320,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(861929472,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(862978048,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(863502336,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(863764480,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(863895552,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(863961088,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(863993856,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864010240,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864018432,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864022528,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864024576,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864025600,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026112,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026368,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026496,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026560,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026592,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026608,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026616,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026620,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026622,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(864026623,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2127789450,32,FLEN)
NAN_BOXED(5077024,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880803840,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880803841,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880803843,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880803847,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880803855,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880803871,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880803903,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880803967,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880804095,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880804351,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880804863,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880805887,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880807935,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880812031,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880820223,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880836607,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880869375,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(880934911,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(881065983,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(881328127,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(881852415,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(882900991,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(884998143,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(884998144,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(887095296,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(888143872,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(888668160,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(888930304,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889061376,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889126912,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889159680,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889176064,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889184256,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889188352,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889190400,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889191424,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889191936,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889192192,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889192320,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889192384,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889192416,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889192432,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889192440,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889192444,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889192446,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(889192447,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2127796317,32,FLEN)
NAN_BOXED(5074509,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530496,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530497,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530499,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530503,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530511,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530527,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530559,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530623,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530751,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407531007,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407531519,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407532543,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407534591,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407538687,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407546879,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407563263,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407596031,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407661567,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407792639,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2408054783,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2408579071,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2409627647,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2411724799,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2411724800,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2413821952,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2414870528,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415394816,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415656960,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415788032,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415853568,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415886336,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415902720,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415910912,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415915008,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415917056,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918080,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918592,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918848,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415918976,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919040,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919072,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919088,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919096,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919100,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919102,32,FLEN)
NAN_BOXED(2127828748,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919103,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492416,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492417,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492419,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492423,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492431,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492447,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492479,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492543,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492671,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226492927,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226493439,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226494463,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226496511,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226500607,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226508799,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226525183,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226557951,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226623487,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(226754559,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(227016703,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(227540991,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(228589567,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(230686719,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(230686720,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(232783872,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(233832448,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234356736,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234618880,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234749952,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234815488,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234848256,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234864640,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234872832,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234876928,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234878976,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880000,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880512,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880768,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880896,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880960,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234880992,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881008,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881016,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881020,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881022,32,FLEN)
NAN_BOXED(2127842382,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(234881023,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754974720,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754974721,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754974723,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754974727,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754974735,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754974751,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754974783,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754974847,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754974975,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754975231,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754975743,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754976767,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754978815,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754982911,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(754991103,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(755007487,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(755040255,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(755105791,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(755236863,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(755499007,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(756023295,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(757071871,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(759169023,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(759169024,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(761266176,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(762314752,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(762839040,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763101184,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763232256,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763297792,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763330560,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763346944,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763355136,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763359232,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763361280,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763362304,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763362816,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763363072,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763363200,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763363264,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763363296,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763363312,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763363320,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763363324,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763363326,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(763363327,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2127881178,32,FLEN)
NAN_BOXED(5043644,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200192,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200193,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200195,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200199,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200207,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200223,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200255,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200319,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200447,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976200703,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976201215,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976202239,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976204287,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976208383,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976216575,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976232959,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976265727,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976331263,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976462335,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3976724479,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3977248767,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3978297343,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3980394495,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3980394496,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3982491648,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3983540224,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984064512,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984326656,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984457728,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984523264,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984556032,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984572416,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984580608,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984584704,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984586752,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984587776,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588288,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588544,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588672,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588736,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588768,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588784,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588792,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588796,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588798,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(3984588799,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2127927510,32,FLEN)
NAN_BOXED(3222890765,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257152,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257153,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257155,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257159,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257167,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257183,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257215,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257279,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257407,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934257663,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934258175,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934259199,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934261247,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934265343,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934273535,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934289919,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934322687,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934388223,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934519295,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3934781439,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3935305727,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3936354303,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3938451455,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3938451456,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3940548608,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3941597184,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942121472,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942383616,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942514688,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942580224,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942612992,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942629376,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942637568,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942641664,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942643712,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942644736,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645248,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645504,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645632,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645696,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645728,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645744,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645752,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645756,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645758,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(3942645759,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2127962960,32,FLEN)
NAN_BOXED(3222865369,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981120,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981121,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981123,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981127,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981135,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981151,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981183,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981247,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981375,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981631,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222982143,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222983167,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222985215,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222989311,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222997503,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223013887,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223046655,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223112191,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223243263,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223505407,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2224029695,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2225078271,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2227175423,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2227175424,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2229272576,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2230321152,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2230845440,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231107584,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231238656,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231304192,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231336960,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231353344,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231361536,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231365632,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231367680,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231368704,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369216,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369472,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369600,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369664,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369696,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369712,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369720,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369724,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369726,32,FLEN)
NAN_BOXED(2128006326,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369727,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131776,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131777,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131779,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131783,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131791,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131807,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131839,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131903,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701132031,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701132287,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701132799,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701133823,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701135871,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701139967,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701148159,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701164543,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701197311,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701262847,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701393919,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701656063,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2702180351,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2703228927,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2705326079,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2705326080,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2707423232,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2708471808,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2708996096,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709258240,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709389312,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709454848,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709487616,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709504000,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709512192,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709516288,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709518336,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709519360,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709519872,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520128,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520256,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
