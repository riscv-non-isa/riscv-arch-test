
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:09 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmadd.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmadd_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmadd_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_6912:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89800000; valaddr_reg:x3; val_offset:20736*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20736*0 + 3*0*FLEN/8, x4, x1, x2)

inst_6913:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89800001; valaddr_reg:x3; val_offset:20739*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20739*0 + 3*1*FLEN/8, x4, x1, x2)

inst_6914:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89800003; valaddr_reg:x3; val_offset:20742*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20742*0 + 3*2*FLEN/8, x4, x1, x2)

inst_6915:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89800007; valaddr_reg:x3; val_offset:20745*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20745*0 + 3*3*FLEN/8, x4, x1, x2)

inst_6916:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x8980000f; valaddr_reg:x3; val_offset:20748*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20748*0 + 3*4*FLEN/8, x4, x1, x2)

inst_6917:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x8980001f; valaddr_reg:x3; val_offset:20751*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20751*0 + 3*5*FLEN/8, x4, x1, x2)

inst_6918:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x8980003f; valaddr_reg:x3; val_offset:20754*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20754*0 + 3*6*FLEN/8, x4, x1, x2)

inst_6919:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x8980007f; valaddr_reg:x3; val_offset:20757*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20757*0 + 3*7*FLEN/8, x4, x1, x2)

inst_6920:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x898000ff; valaddr_reg:x3; val_offset:20760*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20760*0 + 3*8*FLEN/8, x4, x1, x2)

inst_6921:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x898001ff; valaddr_reg:x3; val_offset:20763*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20763*0 + 3*9*FLEN/8, x4, x1, x2)

inst_6922:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x898003ff; valaddr_reg:x3; val_offset:20766*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20766*0 + 3*10*FLEN/8, x4, x1, x2)

inst_6923:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x898007ff; valaddr_reg:x3; val_offset:20769*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20769*0 + 3*11*FLEN/8, x4, x1, x2)

inst_6924:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89800fff; valaddr_reg:x3; val_offset:20772*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20772*0 + 3*12*FLEN/8, x4, x1, x2)

inst_6925:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89801fff; valaddr_reg:x3; val_offset:20775*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20775*0 + 3*13*FLEN/8, x4, x1, x2)

inst_6926:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89803fff; valaddr_reg:x3; val_offset:20778*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20778*0 + 3*14*FLEN/8, x4, x1, x2)

inst_6927:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89807fff; valaddr_reg:x3; val_offset:20781*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20781*0 + 3*15*FLEN/8, x4, x1, x2)

inst_6928:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x8980ffff; valaddr_reg:x3; val_offset:20784*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20784*0 + 3*16*FLEN/8, x4, x1, x2)

inst_6929:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x8981ffff; valaddr_reg:x3; val_offset:20787*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20787*0 + 3*17*FLEN/8, x4, x1, x2)

inst_6930:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x8983ffff; valaddr_reg:x3; val_offset:20790*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20790*0 + 3*18*FLEN/8, x4, x1, x2)

inst_6931:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x8987ffff; valaddr_reg:x3; val_offset:20793*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20793*0 + 3*19*FLEN/8, x4, x1, x2)

inst_6932:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x898fffff; valaddr_reg:x3; val_offset:20796*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20796*0 + 3*20*FLEN/8, x4, x1, x2)

inst_6933:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x899fffff; valaddr_reg:x3; val_offset:20799*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20799*0 + 3*21*FLEN/8, x4, x1, x2)

inst_6934:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89bfffff; valaddr_reg:x3; val_offset:20802*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20802*0 + 3*22*FLEN/8, x4, x1, x2)

inst_6935:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89c00000; valaddr_reg:x3; val_offset:20805*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20805*0 + 3*23*FLEN/8, x4, x1, x2)

inst_6936:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89e00000; valaddr_reg:x3; val_offset:20808*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20808*0 + 3*24*FLEN/8, x4, x1, x2)

inst_6937:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89f00000; valaddr_reg:x3; val_offset:20811*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20811*0 + 3*25*FLEN/8, x4, x1, x2)

inst_6938:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89f80000; valaddr_reg:x3; val_offset:20814*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20814*0 + 3*26*FLEN/8, x4, x1, x2)

inst_6939:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fc0000; valaddr_reg:x3; val_offset:20817*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20817*0 + 3*27*FLEN/8, x4, x1, x2)

inst_6940:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fe0000; valaddr_reg:x3; val_offset:20820*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20820*0 + 3*28*FLEN/8, x4, x1, x2)

inst_6941:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89ff0000; valaddr_reg:x3; val_offset:20823*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20823*0 + 3*29*FLEN/8, x4, x1, x2)

inst_6942:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89ff8000; valaddr_reg:x3; val_offset:20826*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20826*0 + 3*30*FLEN/8, x4, x1, x2)

inst_6943:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89ffc000; valaddr_reg:x3; val_offset:20829*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20829*0 + 3*31*FLEN/8, x4, x1, x2)

inst_6944:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89ffe000; valaddr_reg:x3; val_offset:20832*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20832*0 + 3*32*FLEN/8, x4, x1, x2)

inst_6945:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fff000; valaddr_reg:x3; val_offset:20835*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20835*0 + 3*33*FLEN/8, x4, x1, x2)

inst_6946:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fff800; valaddr_reg:x3; val_offset:20838*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20838*0 + 3*34*FLEN/8, x4, x1, x2)

inst_6947:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fffc00; valaddr_reg:x3; val_offset:20841*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20841*0 + 3*35*FLEN/8, x4, x1, x2)

inst_6948:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fffe00; valaddr_reg:x3; val_offset:20844*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20844*0 + 3*36*FLEN/8, x4, x1, x2)

inst_6949:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89ffff00; valaddr_reg:x3; val_offset:20847*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20847*0 + 3*37*FLEN/8, x4, x1, x2)

inst_6950:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89ffff80; valaddr_reg:x3; val_offset:20850*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20850*0 + 3*38*FLEN/8, x4, x1, x2)

inst_6951:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89ffffc0; valaddr_reg:x3; val_offset:20853*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20853*0 + 3*39*FLEN/8, x4, x1, x2)

inst_6952:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89ffffe0; valaddr_reg:x3; val_offset:20856*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20856*0 + 3*40*FLEN/8, x4, x1, x2)

inst_6953:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fffff0; valaddr_reg:x3; val_offset:20859*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20859*0 + 3*41*FLEN/8, x4, x1, x2)

inst_6954:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fffff8; valaddr_reg:x3; val_offset:20862*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20862*0 + 3*42*FLEN/8, x4, x1, x2)

inst_6955:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fffffc; valaddr_reg:x3; val_offset:20865*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20865*0 + 3*43*FLEN/8, x4, x1, x2)

inst_6956:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89fffffe; valaddr_reg:x3; val_offset:20868*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20868*0 + 3*44*FLEN/8, x4, x1, x2)

inst_6957:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x19f187 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x13 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e19f187; op2val:0x80000000;
op3val:0x89ffffff; valaddr_reg:x3; val_offset:20871*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20871*0 + 3*45*FLEN/8, x4, x1, x2)

inst_6958:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:20874*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20874*0 + 3*46*FLEN/8, x4, x1, x2)

inst_6959:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:20877*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20877*0 + 3*47*FLEN/8, x4, x1, x2)

inst_6960:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:20880*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20880*0 + 3*48*FLEN/8, x4, x1, x2)

inst_6961:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:20883*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20883*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6962:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:20886*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20886*0 + 3*50*FLEN/8, x4, x1, x2)

inst_6963:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:20889*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20889*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6964:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:20892*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20892*0 + 3*52*FLEN/8, x4, x1, x2)

inst_6965:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:20895*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20895*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6966:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:20898*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20898*0 + 3*54*FLEN/8, x4, x1, x2)

inst_6967:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:20901*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20901*0 + 3*55*FLEN/8, x4, x1, x2)

inst_6968:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:20904*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20904*0 + 3*56*FLEN/8, x4, x1, x2)

inst_6969:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:20907*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20907*0 + 3*57*FLEN/8, x4, x1, x2)

inst_6970:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:20910*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20910*0 + 3*58*FLEN/8, x4, x1, x2)

inst_6971:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:20913*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20913*0 + 3*59*FLEN/8, x4, x1, x2)

inst_6972:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:20916*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20916*0 + 3*60*FLEN/8, x4, x1, x2)

inst_6973:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:20919*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20919*0 + 3*61*FLEN/8, x4, x1, x2)

inst_6974:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e000000; valaddr_reg:x3; val_offset:20922*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20922*0 + 3*62*FLEN/8, x4, x1, x2)

inst_6975:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e000001; valaddr_reg:x3; val_offset:20925*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20925*0 + 3*63*FLEN/8, x4, x1, x2)

inst_6976:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e000003; valaddr_reg:x3; val_offset:20928*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20928*0 + 3*64*FLEN/8, x4, x1, x2)

inst_6977:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e000007; valaddr_reg:x3; val_offset:20931*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20931*0 + 3*65*FLEN/8, x4, x1, x2)

inst_6978:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e00000f; valaddr_reg:x3; val_offset:20934*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20934*0 + 3*66*FLEN/8, x4, x1, x2)

inst_6979:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e00001f; valaddr_reg:x3; val_offset:20937*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20937*0 + 3*67*FLEN/8, x4, x1, x2)

inst_6980:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e00003f; valaddr_reg:x3; val_offset:20940*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20940*0 + 3*68*FLEN/8, x4, x1, x2)

inst_6981:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e00007f; valaddr_reg:x3; val_offset:20943*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20943*0 + 3*69*FLEN/8, x4, x1, x2)

inst_6982:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e0000ff; valaddr_reg:x3; val_offset:20946*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20946*0 + 3*70*FLEN/8, x4, x1, x2)

inst_6983:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e0001ff; valaddr_reg:x3; val_offset:20949*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20949*0 + 3*71*FLEN/8, x4, x1, x2)

inst_6984:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e0003ff; valaddr_reg:x3; val_offset:20952*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20952*0 + 3*72*FLEN/8, x4, x1, x2)

inst_6985:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e0007ff; valaddr_reg:x3; val_offset:20955*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20955*0 + 3*73*FLEN/8, x4, x1, x2)

inst_6986:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e000fff; valaddr_reg:x3; val_offset:20958*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20958*0 + 3*74*FLEN/8, x4, x1, x2)

inst_6987:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e001fff; valaddr_reg:x3; val_offset:20961*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20961*0 + 3*75*FLEN/8, x4, x1, x2)

inst_6988:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e003fff; valaddr_reg:x3; val_offset:20964*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20964*0 + 3*76*FLEN/8, x4, x1, x2)

inst_6989:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e007fff; valaddr_reg:x3; val_offset:20967*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20967*0 + 3*77*FLEN/8, x4, x1, x2)

inst_6990:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e00ffff; valaddr_reg:x3; val_offset:20970*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20970*0 + 3*78*FLEN/8, x4, x1, x2)

inst_6991:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e01ffff; valaddr_reg:x3; val_offset:20973*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20973*0 + 3*79*FLEN/8, x4, x1, x2)

inst_6992:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e03ffff; valaddr_reg:x3; val_offset:20976*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20976*0 + 3*80*FLEN/8, x4, x1, x2)

inst_6993:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e07ffff; valaddr_reg:x3; val_offset:20979*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20979*0 + 3*81*FLEN/8, x4, x1, x2)

inst_6994:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e0fffff; valaddr_reg:x3; val_offset:20982*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20982*0 + 3*82*FLEN/8, x4, x1, x2)

inst_6995:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e1fffff; valaddr_reg:x3; val_offset:20985*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20985*0 + 3*83*FLEN/8, x4, x1, x2)

inst_6996:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e3fffff; valaddr_reg:x3; val_offset:20988*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20988*0 + 3*84*FLEN/8, x4, x1, x2)

inst_6997:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e400000; valaddr_reg:x3; val_offset:20991*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20991*0 + 3*85*FLEN/8, x4, x1, x2)

inst_6998:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e600000; valaddr_reg:x3; val_offset:20994*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20994*0 + 3*86*FLEN/8, x4, x1, x2)

inst_6999:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e700000; valaddr_reg:x3; val_offset:20997*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 20997*0 + 3*87*FLEN/8, x4, x1, x2)

inst_7000:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e780000; valaddr_reg:x3; val_offset:21000*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21000*0 + 3*88*FLEN/8, x4, x1, x2)

inst_7001:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7c0000; valaddr_reg:x3; val_offset:21003*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21003*0 + 3*89*FLEN/8, x4, x1, x2)

inst_7002:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7e0000; valaddr_reg:x3; val_offset:21006*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21006*0 + 3*90*FLEN/8, x4, x1, x2)

inst_7003:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7f0000; valaddr_reg:x3; val_offset:21009*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21009*0 + 3*91*FLEN/8, x4, x1, x2)

inst_7004:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7f8000; valaddr_reg:x3; val_offset:21012*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21012*0 + 3*92*FLEN/8, x4, x1, x2)

inst_7005:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7fc000; valaddr_reg:x3; val_offset:21015*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21015*0 + 3*93*FLEN/8, x4, x1, x2)

inst_7006:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7fe000; valaddr_reg:x3; val_offset:21018*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21018*0 + 3*94*FLEN/8, x4, x1, x2)

inst_7007:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7ff000; valaddr_reg:x3; val_offset:21021*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21021*0 + 3*95*FLEN/8, x4, x1, x2)

inst_7008:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7ff800; valaddr_reg:x3; val_offset:21024*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21024*0 + 3*96*FLEN/8, x4, x1, x2)

inst_7009:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7ffc00; valaddr_reg:x3; val_offset:21027*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21027*0 + 3*97*FLEN/8, x4, x1, x2)

inst_7010:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7ffe00; valaddr_reg:x3; val_offset:21030*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21030*0 + 3*98*FLEN/8, x4, x1, x2)

inst_7011:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7fff00; valaddr_reg:x3; val_offset:21033*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21033*0 + 3*99*FLEN/8, x4, x1, x2)

inst_7012:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7fff80; valaddr_reg:x3; val_offset:21036*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21036*0 + 3*100*FLEN/8, x4, x1, x2)

inst_7013:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7fffc0; valaddr_reg:x3; val_offset:21039*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21039*0 + 3*101*FLEN/8, x4, x1, x2)

inst_7014:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7fffe0; valaddr_reg:x3; val_offset:21042*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21042*0 + 3*102*FLEN/8, x4, x1, x2)

inst_7015:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7ffff0; valaddr_reg:x3; val_offset:21045*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21045*0 + 3*103*FLEN/8, x4, x1, x2)

inst_7016:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7ffff8; valaddr_reg:x3; val_offset:21048*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21048*0 + 3*104*FLEN/8, x4, x1, x2)

inst_7017:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7ffffc; valaddr_reg:x3; val_offset:21051*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21051*0 + 3*105*FLEN/8, x4, x1, x2)

inst_7018:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7ffffe; valaddr_reg:x3; val_offset:21054*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21054*0 + 3*106*FLEN/8, x4, x1, x2)

inst_7019:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c8d67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c8d67; op2val:0x80000000;
op3val:0x8e7fffff; valaddr_reg:x3; val_offset:21057*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21057*0 + 3*107*FLEN/8, x4, x1, x2)

inst_7020:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000000; valaddr_reg:x3; val_offset:21060*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21060*0 + 3*108*FLEN/8, x4, x1, x2)

inst_7021:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000001; valaddr_reg:x3; val_offset:21063*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21063*0 + 3*109*FLEN/8, x4, x1, x2)

inst_7022:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000003; valaddr_reg:x3; val_offset:21066*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21066*0 + 3*110*FLEN/8, x4, x1, x2)

inst_7023:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000007; valaddr_reg:x3; val_offset:21069*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21069*0 + 3*111*FLEN/8, x4, x1, x2)

inst_7024:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900000f; valaddr_reg:x3; val_offset:21072*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21072*0 + 3*112*FLEN/8, x4, x1, x2)

inst_7025:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900001f; valaddr_reg:x3; val_offset:21075*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21075*0 + 3*113*FLEN/8, x4, x1, x2)

inst_7026:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900003f; valaddr_reg:x3; val_offset:21078*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21078*0 + 3*114*FLEN/8, x4, x1, x2)

inst_7027:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900007f; valaddr_reg:x3; val_offset:21081*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21081*0 + 3*115*FLEN/8, x4, x1, x2)

inst_7028:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690000ff; valaddr_reg:x3; val_offset:21084*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21084*0 + 3*116*FLEN/8, x4, x1, x2)

inst_7029:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690001ff; valaddr_reg:x3; val_offset:21087*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21087*0 + 3*117*FLEN/8, x4, x1, x2)

inst_7030:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690003ff; valaddr_reg:x3; val_offset:21090*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21090*0 + 3*118*FLEN/8, x4, x1, x2)

inst_7031:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690007ff; valaddr_reg:x3; val_offset:21093*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21093*0 + 3*119*FLEN/8, x4, x1, x2)

inst_7032:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000fff; valaddr_reg:x3; val_offset:21096*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21096*0 + 3*120*FLEN/8, x4, x1, x2)

inst_7033:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69001fff; valaddr_reg:x3; val_offset:21099*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21099*0 + 3*121*FLEN/8, x4, x1, x2)

inst_7034:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69003fff; valaddr_reg:x3; val_offset:21102*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21102*0 + 3*122*FLEN/8, x4, x1, x2)

inst_7035:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69007fff; valaddr_reg:x3; val_offset:21105*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21105*0 + 3*123*FLEN/8, x4, x1, x2)

inst_7036:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900ffff; valaddr_reg:x3; val_offset:21108*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21108*0 + 3*124*FLEN/8, x4, x1, x2)

inst_7037:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6901ffff; valaddr_reg:x3; val_offset:21111*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21111*0 + 3*125*FLEN/8, x4, x1, x2)

inst_7038:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6903ffff; valaddr_reg:x3; val_offset:21114*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21114*0 + 3*126*FLEN/8, x4, x1, x2)

inst_7039:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6907ffff; valaddr_reg:x3; val_offset:21117*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21117*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_7040:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690fffff; valaddr_reg:x3; val_offset:21120*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21120*0 + 3*128*FLEN/8, x4, x1, x2)

inst_7041:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x691fffff; valaddr_reg:x3; val_offset:21123*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21123*0 + 3*129*FLEN/8, x4, x1, x2)

inst_7042:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x693fffff; valaddr_reg:x3; val_offset:21126*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21126*0 + 3*130*FLEN/8, x4, x1, x2)

inst_7043:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69400000; valaddr_reg:x3; val_offset:21129*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21129*0 + 3*131*FLEN/8, x4, x1, x2)

inst_7044:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69600000; valaddr_reg:x3; val_offset:21132*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21132*0 + 3*132*FLEN/8, x4, x1, x2)

inst_7045:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69700000; valaddr_reg:x3; val_offset:21135*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21135*0 + 3*133*FLEN/8, x4, x1, x2)

inst_7046:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69780000; valaddr_reg:x3; val_offset:21138*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21138*0 + 3*134*FLEN/8, x4, x1, x2)

inst_7047:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697c0000; valaddr_reg:x3; val_offset:21141*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21141*0 + 3*135*FLEN/8, x4, x1, x2)

inst_7048:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697e0000; valaddr_reg:x3; val_offset:21144*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21144*0 + 3*136*FLEN/8, x4, x1, x2)

inst_7049:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697f0000; valaddr_reg:x3; val_offset:21147*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21147*0 + 3*137*FLEN/8, x4, x1, x2)

inst_7050:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697f8000; valaddr_reg:x3; val_offset:21150*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21150*0 + 3*138*FLEN/8, x4, x1, x2)

inst_7051:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fc000; valaddr_reg:x3; val_offset:21153*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21153*0 + 3*139*FLEN/8, x4, x1, x2)

inst_7052:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fe000; valaddr_reg:x3; val_offset:21156*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21156*0 + 3*140*FLEN/8, x4, x1, x2)

inst_7053:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ff000; valaddr_reg:x3; val_offset:21159*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21159*0 + 3*141*FLEN/8, x4, x1, x2)

inst_7054:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ff800; valaddr_reg:x3; val_offset:21162*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21162*0 + 3*142*FLEN/8, x4, x1, x2)

inst_7055:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffc00; valaddr_reg:x3; val_offset:21165*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21165*0 + 3*143*FLEN/8, x4, x1, x2)

inst_7056:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffe00; valaddr_reg:x3; val_offset:21168*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21168*0 + 3*144*FLEN/8, x4, x1, x2)

inst_7057:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fff00; valaddr_reg:x3; val_offset:21171*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21171*0 + 3*145*FLEN/8, x4, x1, x2)

inst_7058:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fff80; valaddr_reg:x3; val_offset:21174*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21174*0 + 3*146*FLEN/8, x4, x1, x2)

inst_7059:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fffc0; valaddr_reg:x3; val_offset:21177*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21177*0 + 3*147*FLEN/8, x4, x1, x2)

inst_7060:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fffe0; valaddr_reg:x3; val_offset:21180*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21180*0 + 3*148*FLEN/8, x4, x1, x2)

inst_7061:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffff0; valaddr_reg:x3; val_offset:21183*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21183*0 + 3*149*FLEN/8, x4, x1, x2)

inst_7062:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffff8; valaddr_reg:x3; val_offset:21186*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21186*0 + 3*150*FLEN/8, x4, x1, x2)

inst_7063:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffffc; valaddr_reg:x3; val_offset:21189*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21189*0 + 3*151*FLEN/8, x4, x1, x2)

inst_7064:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffffe; valaddr_reg:x3; val_offset:21192*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21192*0 + 3*152*FLEN/8, x4, x1, x2)

inst_7065:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fffff; valaddr_reg:x3; val_offset:21195*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21195*0 + 3*153*FLEN/8, x4, x1, x2)

inst_7066:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f000001; valaddr_reg:x3; val_offset:21198*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21198*0 + 3*154*FLEN/8, x4, x1, x2)

inst_7067:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f000003; valaddr_reg:x3; val_offset:21201*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21201*0 + 3*155*FLEN/8, x4, x1, x2)

inst_7068:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f000007; valaddr_reg:x3; val_offset:21204*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21204*0 + 3*156*FLEN/8, x4, x1, x2)

inst_7069:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f199999; valaddr_reg:x3; val_offset:21207*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21207*0 + 3*157*FLEN/8, x4, x1, x2)

inst_7070:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f249249; valaddr_reg:x3; val_offset:21210*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21210*0 + 3*158*FLEN/8, x4, x1, x2)

inst_7071:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f333333; valaddr_reg:x3; val_offset:21213*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21213*0 + 3*159*FLEN/8, x4, x1, x2)

inst_7072:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:21216*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21216*0 + 3*160*FLEN/8, x4, x1, x2)

inst_7073:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:21219*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21219*0 + 3*161*FLEN/8, x4, x1, x2)

inst_7074:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f444444; valaddr_reg:x3; val_offset:21222*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21222*0 + 3*162*FLEN/8, x4, x1, x2)

inst_7075:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:21225*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21225*0 + 3*163*FLEN/8, x4, x1, x2)

inst_7076:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:21228*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21228*0 + 3*164*FLEN/8, x4, x1, x2)

inst_7077:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f666666; valaddr_reg:x3; val_offset:21231*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21231*0 + 3*165*FLEN/8, x4, x1, x2)

inst_7078:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:21234*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21234*0 + 3*166*FLEN/8, x4, x1, x2)

inst_7079:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:21237*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21237*0 + 3*167*FLEN/8, x4, x1, x2)

inst_7080:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:21240*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21240*0 + 3*168*FLEN/8, x4, x1, x2)

inst_7081:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:21243*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21243*0 + 3*169*FLEN/8, x4, x1, x2)

inst_7082:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:21246*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21246*0 + 3*170*FLEN/8, x4, x1, x2)

inst_7083:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:21249*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21249*0 + 3*171*FLEN/8, x4, x1, x2)

inst_7084:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:21252*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21252*0 + 3*172*FLEN/8, x4, x1, x2)

inst_7085:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:21255*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21255*0 + 3*173*FLEN/8, x4, x1, x2)

inst_7086:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:21258*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21258*0 + 3*174*FLEN/8, x4, x1, x2)

inst_7087:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:21261*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21261*0 + 3*175*FLEN/8, x4, x1, x2)

inst_7088:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:21264*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21264*0 + 3*176*FLEN/8, x4, x1, x2)

inst_7089:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:21267*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21267*0 + 3*177*FLEN/8, x4, x1, x2)

inst_7090:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:21270*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21270*0 + 3*178*FLEN/8, x4, x1, x2)

inst_7091:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:21273*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21273*0 + 3*179*FLEN/8, x4, x1, x2)

inst_7092:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:21276*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21276*0 + 3*180*FLEN/8, x4, x1, x2)

inst_7093:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:21279*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21279*0 + 3*181*FLEN/8, x4, x1, x2)

inst_7094:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:21282*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21282*0 + 3*182*FLEN/8, x4, x1, x2)

inst_7095:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:21285*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21285*0 + 3*183*FLEN/8, x4, x1, x2)

inst_7096:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:21288*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21288*0 + 3*184*FLEN/8, x4, x1, x2)

inst_7097:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:21291*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21291*0 + 3*185*FLEN/8, x4, x1, x2)

inst_7098:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90000000; valaddr_reg:x3; val_offset:21294*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21294*0 + 3*186*FLEN/8, x4, x1, x2)

inst_7099:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90000001; valaddr_reg:x3; val_offset:21297*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21297*0 + 3*187*FLEN/8, x4, x1, x2)

inst_7100:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90000003; valaddr_reg:x3; val_offset:21300*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21300*0 + 3*188*FLEN/8, x4, x1, x2)

inst_7101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90000007; valaddr_reg:x3; val_offset:21303*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21303*0 + 3*189*FLEN/8, x4, x1, x2)

inst_7102:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x9000000f; valaddr_reg:x3; val_offset:21306*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21306*0 + 3*190*FLEN/8, x4, x1, x2)

inst_7103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x9000001f; valaddr_reg:x3; val_offset:21309*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21309*0 + 3*191*FLEN/8, x4, x1, x2)

inst_7104:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x9000003f; valaddr_reg:x3; val_offset:21312*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21312*0 + 3*192*FLEN/8, x4, x1, x2)

inst_7105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x9000007f; valaddr_reg:x3; val_offset:21315*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21315*0 + 3*193*FLEN/8, x4, x1, x2)

inst_7106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x900000ff; valaddr_reg:x3; val_offset:21318*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21318*0 + 3*194*FLEN/8, x4, x1, x2)

inst_7107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x900001ff; valaddr_reg:x3; val_offset:21321*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21321*0 + 3*195*FLEN/8, x4, x1, x2)

inst_7108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x900003ff; valaddr_reg:x3; val_offset:21324*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21324*0 + 3*196*FLEN/8, x4, x1, x2)

inst_7109:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x900007ff; valaddr_reg:x3; val_offset:21327*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21327*0 + 3*197*FLEN/8, x4, x1, x2)

inst_7110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90000fff; valaddr_reg:x3; val_offset:21330*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21330*0 + 3*198*FLEN/8, x4, x1, x2)

inst_7111:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90001fff; valaddr_reg:x3; val_offset:21333*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21333*0 + 3*199*FLEN/8, x4, x1, x2)

inst_7112:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90003fff; valaddr_reg:x3; val_offset:21336*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21336*0 + 3*200*FLEN/8, x4, x1, x2)

inst_7113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90007fff; valaddr_reg:x3; val_offset:21339*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21339*0 + 3*201*FLEN/8, x4, x1, x2)

inst_7114:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x9000ffff; valaddr_reg:x3; val_offset:21342*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21342*0 + 3*202*FLEN/8, x4, x1, x2)

inst_7115:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x9001ffff; valaddr_reg:x3; val_offset:21345*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21345*0 + 3*203*FLEN/8, x4, x1, x2)

inst_7116:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x9003ffff; valaddr_reg:x3; val_offset:21348*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21348*0 + 3*204*FLEN/8, x4, x1, x2)

inst_7117:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x9007ffff; valaddr_reg:x3; val_offset:21351*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21351*0 + 3*205*FLEN/8, x4, x1, x2)

inst_7118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x900fffff; valaddr_reg:x3; val_offset:21354*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21354*0 + 3*206*FLEN/8, x4, x1, x2)

inst_7119:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x901fffff; valaddr_reg:x3; val_offset:21357*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21357*0 + 3*207*FLEN/8, x4, x1, x2)

inst_7120:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x903fffff; valaddr_reg:x3; val_offset:21360*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21360*0 + 3*208*FLEN/8, x4, x1, x2)

inst_7121:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90400000; valaddr_reg:x3; val_offset:21363*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21363*0 + 3*209*FLEN/8, x4, x1, x2)

inst_7122:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90600000; valaddr_reg:x3; val_offset:21366*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21366*0 + 3*210*FLEN/8, x4, x1, x2)

inst_7123:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90700000; valaddr_reg:x3; val_offset:21369*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21369*0 + 3*211*FLEN/8, x4, x1, x2)

inst_7124:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x90780000; valaddr_reg:x3; val_offset:21372*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21372*0 + 3*212*FLEN/8, x4, x1, x2)

inst_7125:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907c0000; valaddr_reg:x3; val_offset:21375*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21375*0 + 3*213*FLEN/8, x4, x1, x2)

inst_7126:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907e0000; valaddr_reg:x3; val_offset:21378*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21378*0 + 3*214*FLEN/8, x4, x1, x2)

inst_7127:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907f0000; valaddr_reg:x3; val_offset:21381*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21381*0 + 3*215*FLEN/8, x4, x1, x2)

inst_7128:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907f8000; valaddr_reg:x3; val_offset:21384*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21384*0 + 3*216*FLEN/8, x4, x1, x2)

inst_7129:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907fc000; valaddr_reg:x3; val_offset:21387*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21387*0 + 3*217*FLEN/8, x4, x1, x2)

inst_7130:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907fe000; valaddr_reg:x3; val_offset:21390*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21390*0 + 3*218*FLEN/8, x4, x1, x2)

inst_7131:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907ff000; valaddr_reg:x3; val_offset:21393*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21393*0 + 3*219*FLEN/8, x4, x1, x2)

inst_7132:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907ff800; valaddr_reg:x3; val_offset:21396*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21396*0 + 3*220*FLEN/8, x4, x1, x2)

inst_7133:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907ffc00; valaddr_reg:x3; val_offset:21399*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21399*0 + 3*221*FLEN/8, x4, x1, x2)

inst_7134:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907ffe00; valaddr_reg:x3; val_offset:21402*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21402*0 + 3*222*FLEN/8, x4, x1, x2)

inst_7135:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907fff00; valaddr_reg:x3; val_offset:21405*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21405*0 + 3*223*FLEN/8, x4, x1, x2)

inst_7136:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907fff80; valaddr_reg:x3; val_offset:21408*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21408*0 + 3*224*FLEN/8, x4, x1, x2)

inst_7137:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907fffc0; valaddr_reg:x3; val_offset:21411*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21411*0 + 3*225*FLEN/8, x4, x1, x2)

inst_7138:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907fffe0; valaddr_reg:x3; val_offset:21414*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21414*0 + 3*226*FLEN/8, x4, x1, x2)

inst_7139:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907ffff0; valaddr_reg:x3; val_offset:21417*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21417*0 + 3*227*FLEN/8, x4, x1, x2)

inst_7140:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907ffff8; valaddr_reg:x3; val_offset:21420*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21420*0 + 3*228*FLEN/8, x4, x1, x2)

inst_7141:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907ffffc; valaddr_reg:x3; val_offset:21423*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21423*0 + 3*229*FLEN/8, x4, x1, x2)

inst_7142:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907ffffe; valaddr_reg:x3; val_offset:21426*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21426*0 + 3*230*FLEN/8, x4, x1, x2)

inst_7143:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d4d97 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x20 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1d4d97; op2val:0x80000000;
op3val:0x907fffff; valaddr_reg:x3; val_offset:21429*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21429*0 + 3*231*FLEN/8, x4, x1, x2)

inst_7144:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b000000; valaddr_reg:x3; val_offset:21432*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21432*0 + 3*232*FLEN/8, x4, x1, x2)

inst_7145:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b000001; valaddr_reg:x3; val_offset:21435*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21435*0 + 3*233*FLEN/8, x4, x1, x2)

inst_7146:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b000003; valaddr_reg:x3; val_offset:21438*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21438*0 + 3*234*FLEN/8, x4, x1, x2)

inst_7147:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b000007; valaddr_reg:x3; val_offset:21441*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21441*0 + 3*235*FLEN/8, x4, x1, x2)

inst_7148:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b00000f; valaddr_reg:x3; val_offset:21444*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21444*0 + 3*236*FLEN/8, x4, x1, x2)

inst_7149:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b00001f; valaddr_reg:x3; val_offset:21447*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21447*0 + 3*237*FLEN/8, x4, x1, x2)

inst_7150:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b00003f; valaddr_reg:x3; val_offset:21450*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21450*0 + 3*238*FLEN/8, x4, x1, x2)

inst_7151:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b00007f; valaddr_reg:x3; val_offset:21453*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21453*0 + 3*239*FLEN/8, x4, x1, x2)

inst_7152:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b0000ff; valaddr_reg:x3; val_offset:21456*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21456*0 + 3*240*FLEN/8, x4, x1, x2)

inst_7153:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b0001ff; valaddr_reg:x3; val_offset:21459*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21459*0 + 3*241*FLEN/8, x4, x1, x2)

inst_7154:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b0003ff; valaddr_reg:x3; val_offset:21462*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21462*0 + 3*242*FLEN/8, x4, x1, x2)

inst_7155:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b0007ff; valaddr_reg:x3; val_offset:21465*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21465*0 + 3*243*FLEN/8, x4, x1, x2)

inst_7156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b000fff; valaddr_reg:x3; val_offset:21468*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21468*0 + 3*244*FLEN/8, x4, x1, x2)

inst_7157:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b001fff; valaddr_reg:x3; val_offset:21471*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21471*0 + 3*245*FLEN/8, x4, x1, x2)

inst_7158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b003fff; valaddr_reg:x3; val_offset:21474*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21474*0 + 3*246*FLEN/8, x4, x1, x2)

inst_7159:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b007fff; valaddr_reg:x3; val_offset:21477*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21477*0 + 3*247*FLEN/8, x4, x1, x2)

inst_7160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b00ffff; valaddr_reg:x3; val_offset:21480*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21480*0 + 3*248*FLEN/8, x4, x1, x2)

inst_7161:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b01ffff; valaddr_reg:x3; val_offset:21483*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21483*0 + 3*249*FLEN/8, x4, x1, x2)

inst_7162:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b03ffff; valaddr_reg:x3; val_offset:21486*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21486*0 + 3*250*FLEN/8, x4, x1, x2)

inst_7163:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b07ffff; valaddr_reg:x3; val_offset:21489*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21489*0 + 3*251*FLEN/8, x4, x1, x2)

inst_7164:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b0fffff; valaddr_reg:x3; val_offset:21492*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21492*0 + 3*252*FLEN/8, x4, x1, x2)

inst_7165:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b1fffff; valaddr_reg:x3; val_offset:21495*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21495*0 + 3*253*FLEN/8, x4, x1, x2)

inst_7166:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b3fffff; valaddr_reg:x3; val_offset:21498*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21498*0 + 3*254*FLEN/8, x4, x1, x2)

inst_7167:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b400000; valaddr_reg:x3; val_offset:21501*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21501*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_7168:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b600000; valaddr_reg:x3; val_offset:21504*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21504*0 + 3*256*FLEN/8, x4, x1, x2)

inst_7169:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b700000; valaddr_reg:x3; val_offset:21507*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21507*0 + 3*257*FLEN/8, x4, x1, x2)

inst_7170:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b780000; valaddr_reg:x3; val_offset:21510*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21510*0 + 3*258*FLEN/8, x4, x1, x2)

inst_7171:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7c0000; valaddr_reg:x3; val_offset:21513*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21513*0 + 3*259*FLEN/8, x4, x1, x2)

inst_7172:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7e0000; valaddr_reg:x3; val_offset:21516*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21516*0 + 3*260*FLEN/8, x4, x1, x2)

inst_7173:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7f0000; valaddr_reg:x3; val_offset:21519*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21519*0 + 3*261*FLEN/8, x4, x1, x2)

inst_7174:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7f8000; valaddr_reg:x3; val_offset:21522*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21522*0 + 3*262*FLEN/8, x4, x1, x2)

inst_7175:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7fc000; valaddr_reg:x3; val_offset:21525*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21525*0 + 3*263*FLEN/8, x4, x1, x2)

inst_7176:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7fe000; valaddr_reg:x3; val_offset:21528*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21528*0 + 3*264*FLEN/8, x4, x1, x2)

inst_7177:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7ff000; valaddr_reg:x3; val_offset:21531*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21531*0 + 3*265*FLEN/8, x4, x1, x2)

inst_7178:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7ff800; valaddr_reg:x3; val_offset:21534*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21534*0 + 3*266*FLEN/8, x4, x1, x2)

inst_7179:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7ffc00; valaddr_reg:x3; val_offset:21537*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21537*0 + 3*267*FLEN/8, x4, x1, x2)

inst_7180:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7ffe00; valaddr_reg:x3; val_offset:21540*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21540*0 + 3*268*FLEN/8, x4, x1, x2)

inst_7181:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7fff00; valaddr_reg:x3; val_offset:21543*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21543*0 + 3*269*FLEN/8, x4, x1, x2)

inst_7182:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7fff80; valaddr_reg:x3; val_offset:21546*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21546*0 + 3*270*FLEN/8, x4, x1, x2)

inst_7183:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7fffc0; valaddr_reg:x3; val_offset:21549*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21549*0 + 3*271*FLEN/8, x4, x1, x2)

inst_7184:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7fffe0; valaddr_reg:x3; val_offset:21552*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21552*0 + 3*272*FLEN/8, x4, x1, x2)

inst_7185:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7ffff0; valaddr_reg:x3; val_offset:21555*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21555*0 + 3*273*FLEN/8, x4, x1, x2)

inst_7186:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7ffff8; valaddr_reg:x3; val_offset:21558*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21558*0 + 3*274*FLEN/8, x4, x1, x2)

inst_7187:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7ffffc; valaddr_reg:x3; val_offset:21561*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21561*0 + 3*275*FLEN/8, x4, x1, x2)

inst_7188:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7ffffe; valaddr_reg:x3; val_offset:21564*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21564*0 + 3*276*FLEN/8, x4, x1, x2)

inst_7189:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x56 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x2b7fffff; valaddr_reg:x3; val_offset:21567*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21567*0 + 3*277*FLEN/8, x4, x1, x2)

inst_7190:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3f800001; valaddr_reg:x3; val_offset:21570*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21570*0 + 3*278*FLEN/8, x4, x1, x2)

inst_7191:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3f800003; valaddr_reg:x3; val_offset:21573*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21573*0 + 3*279*FLEN/8, x4, x1, x2)

inst_7192:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3f800007; valaddr_reg:x3; val_offset:21576*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21576*0 + 3*280*FLEN/8, x4, x1, x2)

inst_7193:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3f999999; valaddr_reg:x3; val_offset:21579*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21579*0 + 3*281*FLEN/8, x4, x1, x2)

inst_7194:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:21582*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21582*0 + 3*282*FLEN/8, x4, x1, x2)

inst_7195:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:21585*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21585*0 + 3*283*FLEN/8, x4, x1, x2)

inst_7196:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:21588*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21588*0 + 3*284*FLEN/8, x4, x1, x2)

inst_7197:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:21591*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21591*0 + 3*285*FLEN/8, x4, x1, x2)

inst_7198:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:21594*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21594*0 + 3*286*FLEN/8, x4, x1, x2)

inst_7199:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:21597*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21597*0 + 3*287*FLEN/8, x4, x1, x2)

inst_7200:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:21600*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21600*0 + 3*288*FLEN/8, x4, x1, x2)

inst_7201:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:21603*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21603*0 + 3*289*FLEN/8, x4, x1, x2)

inst_7202:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:21606*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21606*0 + 3*290*FLEN/8, x4, x1, x2)

inst_7203:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:21609*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21609*0 + 3*291*FLEN/8, x4, x1, x2)

inst_7204:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:21612*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21612*0 + 3*292*FLEN/8, x4, x1, x2)

inst_7205:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1dd00b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x4fa37a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1dd00b; op2val:0xcfa37a;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:21615*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21615*0 + 3*293*FLEN/8, x4, x1, x2)

inst_7206:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff000000; valaddr_reg:x3; val_offset:21618*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21618*0 + 3*294*FLEN/8, x4, x1, x2)

inst_7207:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff000001; valaddr_reg:x3; val_offset:21621*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21621*0 + 3*295*FLEN/8, x4, x1, x2)

inst_7208:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff000003; valaddr_reg:x3; val_offset:21624*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21624*0 + 3*296*FLEN/8, x4, x1, x2)

inst_7209:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff000007; valaddr_reg:x3; val_offset:21627*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21627*0 + 3*297*FLEN/8, x4, x1, x2)

inst_7210:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff00000f; valaddr_reg:x3; val_offset:21630*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21630*0 + 3*298*FLEN/8, x4, x1, x2)

inst_7211:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff00001f; valaddr_reg:x3; val_offset:21633*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21633*0 + 3*299*FLEN/8, x4, x1, x2)

inst_7212:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff00003f; valaddr_reg:x3; val_offset:21636*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21636*0 + 3*300*FLEN/8, x4, x1, x2)

inst_7213:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff00007f; valaddr_reg:x3; val_offset:21639*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21639*0 + 3*301*FLEN/8, x4, x1, x2)

inst_7214:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff0000ff; valaddr_reg:x3; val_offset:21642*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21642*0 + 3*302*FLEN/8, x4, x1, x2)

inst_7215:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff0001ff; valaddr_reg:x3; val_offset:21645*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21645*0 + 3*303*FLEN/8, x4, x1, x2)

inst_7216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff0003ff; valaddr_reg:x3; val_offset:21648*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21648*0 + 3*304*FLEN/8, x4, x1, x2)

inst_7217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff0007ff; valaddr_reg:x3; val_offset:21651*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21651*0 + 3*305*FLEN/8, x4, x1, x2)

inst_7218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff000fff; valaddr_reg:x3; val_offset:21654*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21654*0 + 3*306*FLEN/8, x4, x1, x2)

inst_7219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff001fff; valaddr_reg:x3; val_offset:21657*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21657*0 + 3*307*FLEN/8, x4, x1, x2)

inst_7220:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff003fff; valaddr_reg:x3; val_offset:21660*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21660*0 + 3*308*FLEN/8, x4, x1, x2)

inst_7221:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff007fff; valaddr_reg:x3; val_offset:21663*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21663*0 + 3*309*FLEN/8, x4, x1, x2)

inst_7222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff00ffff; valaddr_reg:x3; val_offset:21666*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21666*0 + 3*310*FLEN/8, x4, x1, x2)

inst_7223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff01ffff; valaddr_reg:x3; val_offset:21669*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21669*0 + 3*311*FLEN/8, x4, x1, x2)

inst_7224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff03ffff; valaddr_reg:x3; val_offset:21672*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21672*0 + 3*312*FLEN/8, x4, x1, x2)

inst_7225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff07ffff; valaddr_reg:x3; val_offset:21675*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21675*0 + 3*313*FLEN/8, x4, x1, x2)

inst_7226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff0fffff; valaddr_reg:x3; val_offset:21678*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21678*0 + 3*314*FLEN/8, x4, x1, x2)

inst_7227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff199999; valaddr_reg:x3; val_offset:21681*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21681*0 + 3*315*FLEN/8, x4, x1, x2)

inst_7228:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff1fffff; valaddr_reg:x3; val_offset:21684*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21684*0 + 3*316*FLEN/8, x4, x1, x2)

inst_7229:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff249249; valaddr_reg:x3; val_offset:21687*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21687*0 + 3*317*FLEN/8, x4, x1, x2)

inst_7230:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff333333; valaddr_reg:x3; val_offset:21690*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21690*0 + 3*318*FLEN/8, x4, x1, x2)

inst_7231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:21693*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21693*0 + 3*319*FLEN/8, x4, x1, x2)

inst_7232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:21696*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21696*0 + 3*320*FLEN/8, x4, x1, x2)

inst_7233:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff3fffff; valaddr_reg:x3; val_offset:21699*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21699*0 + 3*321*FLEN/8, x4, x1, x2)

inst_7234:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff400000; valaddr_reg:x3; val_offset:21702*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21702*0 + 3*322*FLEN/8, x4, x1, x2)

inst_7235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff444444; valaddr_reg:x3; val_offset:21705*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21705*0 + 3*323*FLEN/8, x4, x1, x2)

inst_7236:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:21708*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21708*0 + 3*324*FLEN/8, x4, x1, x2)

inst_7237:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:21711*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21711*0 + 3*325*FLEN/8, x4, x1, x2)

inst_7238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff600000; valaddr_reg:x3; val_offset:21714*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21714*0 + 3*326*FLEN/8, x4, x1, x2)

inst_7239:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff666666; valaddr_reg:x3; val_offset:21717*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21717*0 + 3*327*FLEN/8, x4, x1, x2)

inst_7240:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:21720*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21720*0 + 3*328*FLEN/8, x4, x1, x2)

inst_7241:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff700000; valaddr_reg:x3; val_offset:21723*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21723*0 + 3*329*FLEN/8, x4, x1, x2)

inst_7242:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff780000; valaddr_reg:x3; val_offset:21726*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21726*0 + 3*330*FLEN/8, x4, x1, x2)

inst_7243:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7c0000; valaddr_reg:x3; val_offset:21729*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21729*0 + 3*331*FLEN/8, x4, x1, x2)

inst_7244:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7e0000; valaddr_reg:x3; val_offset:21732*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21732*0 + 3*332*FLEN/8, x4, x1, x2)

inst_7245:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7f0000; valaddr_reg:x3; val_offset:21735*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21735*0 + 3*333*FLEN/8, x4, x1, x2)

inst_7246:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7f8000; valaddr_reg:x3; val_offset:21738*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21738*0 + 3*334*FLEN/8, x4, x1, x2)

inst_7247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7fc000; valaddr_reg:x3; val_offset:21741*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21741*0 + 3*335*FLEN/8, x4, x1, x2)

inst_7248:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7fe000; valaddr_reg:x3; val_offset:21744*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21744*0 + 3*336*FLEN/8, x4, x1, x2)

inst_7249:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7ff000; valaddr_reg:x3; val_offset:21747*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21747*0 + 3*337*FLEN/8, x4, x1, x2)

inst_7250:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7ff800; valaddr_reg:x3; val_offset:21750*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21750*0 + 3*338*FLEN/8, x4, x1, x2)

inst_7251:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7ffc00; valaddr_reg:x3; val_offset:21753*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21753*0 + 3*339*FLEN/8, x4, x1, x2)

inst_7252:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7ffe00; valaddr_reg:x3; val_offset:21756*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21756*0 + 3*340*FLEN/8, x4, x1, x2)

inst_7253:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7fff00; valaddr_reg:x3; val_offset:21759*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21759*0 + 3*341*FLEN/8, x4, x1, x2)

inst_7254:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7fff80; valaddr_reg:x3; val_offset:21762*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21762*0 + 3*342*FLEN/8, x4, x1, x2)

inst_7255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7fffc0; valaddr_reg:x3; val_offset:21765*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21765*0 + 3*343*FLEN/8, x4, x1, x2)

inst_7256:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7fffe0; valaddr_reg:x3; val_offset:21768*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21768*0 + 3*344*FLEN/8, x4, x1, x2)

inst_7257:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7ffff0; valaddr_reg:x3; val_offset:21771*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21771*0 + 3*345*FLEN/8, x4, x1, x2)

inst_7258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:21774*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21774*0 + 3*346*FLEN/8, x4, x1, x2)

inst_7259:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:21777*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21777*0 + 3*347*FLEN/8, x4, x1, x2)

inst_7260:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:21780*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21780*0 + 3*348*FLEN/8, x4, x1, x2)

inst_7261:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e5a70 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4eee01 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e1e5a70; op2val:0xc0ceee01;
op3val:0xff7fffff; valaddr_reg:x3; val_offset:21783*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21783*0 + 3*349*FLEN/8, x4, x1, x2)

inst_7262:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:21786*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21786*0 + 3*350*FLEN/8, x4, x1, x2)

inst_7263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:21789*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21789*0 + 3*351*FLEN/8, x4, x1, x2)

inst_7264:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:21792*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21792*0 + 3*352*FLEN/8, x4, x1, x2)

inst_7265:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:21795*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21795*0 + 3*353*FLEN/8, x4, x1, x2)

inst_7266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:21798*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21798*0 + 3*354*FLEN/8, x4, x1, x2)

inst_7267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:21801*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21801*0 + 3*355*FLEN/8, x4, x1, x2)

inst_7268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:21804*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21804*0 + 3*356*FLEN/8, x4, x1, x2)

inst_7269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:21807*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21807*0 + 3*357*FLEN/8, x4, x1, x2)

inst_7270:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:21810*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21810*0 + 3*358*FLEN/8, x4, x1, x2)

inst_7271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:21813*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21813*0 + 3*359*FLEN/8, x4, x1, x2)

inst_7272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:21816*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21816*0 + 3*360*FLEN/8, x4, x1, x2)

inst_7273:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:21819*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21819*0 + 3*361*FLEN/8, x4, x1, x2)

inst_7274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:21822*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21822*0 + 3*362*FLEN/8, x4, x1, x2)

inst_7275:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:21825*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21825*0 + 3*363*FLEN/8, x4, x1, x2)

inst_7276:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:21828*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21828*0 + 3*364*FLEN/8, x4, x1, x2)

inst_7277:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:21831*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21831*0 + 3*365*FLEN/8, x4, x1, x2)

inst_7278:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f000000; valaddr_reg:x3; val_offset:21834*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21834*0 + 3*366*FLEN/8, x4, x1, x2)

inst_7279:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f000001; valaddr_reg:x3; val_offset:21837*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21837*0 + 3*367*FLEN/8, x4, x1, x2)

inst_7280:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f000003; valaddr_reg:x3; val_offset:21840*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21840*0 + 3*368*FLEN/8, x4, x1, x2)

inst_7281:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f000007; valaddr_reg:x3; val_offset:21843*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21843*0 + 3*369*FLEN/8, x4, x1, x2)

inst_7282:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f00000f; valaddr_reg:x3; val_offset:21846*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21846*0 + 3*370*FLEN/8, x4, x1, x2)

inst_7283:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f00001f; valaddr_reg:x3; val_offset:21849*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21849*0 + 3*371*FLEN/8, x4, x1, x2)

inst_7284:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f00003f; valaddr_reg:x3; val_offset:21852*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21852*0 + 3*372*FLEN/8, x4, x1, x2)

inst_7285:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f00007f; valaddr_reg:x3; val_offset:21855*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21855*0 + 3*373*FLEN/8, x4, x1, x2)

inst_7286:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f0000ff; valaddr_reg:x3; val_offset:21858*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21858*0 + 3*374*FLEN/8, x4, x1, x2)

inst_7287:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f0001ff; valaddr_reg:x3; val_offset:21861*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21861*0 + 3*375*FLEN/8, x4, x1, x2)

inst_7288:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f0003ff; valaddr_reg:x3; val_offset:21864*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21864*0 + 3*376*FLEN/8, x4, x1, x2)

inst_7289:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f0007ff; valaddr_reg:x3; val_offset:21867*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21867*0 + 3*377*FLEN/8, x4, x1, x2)

inst_7290:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f000fff; valaddr_reg:x3; val_offset:21870*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21870*0 + 3*378*FLEN/8, x4, x1, x2)

inst_7291:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f001fff; valaddr_reg:x3; val_offset:21873*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21873*0 + 3*379*FLEN/8, x4, x1, x2)

inst_7292:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f003fff; valaddr_reg:x3; val_offset:21876*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21876*0 + 3*380*FLEN/8, x4, x1, x2)

inst_7293:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f007fff; valaddr_reg:x3; val_offset:21879*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21879*0 + 3*381*FLEN/8, x4, x1, x2)

inst_7294:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f00ffff; valaddr_reg:x3; val_offset:21882*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21882*0 + 3*382*FLEN/8, x4, x1, x2)

inst_7295:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f01ffff; valaddr_reg:x3; val_offset:21885*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21885*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_7296:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f03ffff; valaddr_reg:x3; val_offset:21888*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21888*0 + 3*384*FLEN/8, x4, x1, x2)

inst_7297:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f07ffff; valaddr_reg:x3; val_offset:21891*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21891*0 + 3*385*FLEN/8, x4, x1, x2)

inst_7298:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f0fffff; valaddr_reg:x3; val_offset:21894*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21894*0 + 3*386*FLEN/8, x4, x1, x2)

inst_7299:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f1fffff; valaddr_reg:x3; val_offset:21897*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21897*0 + 3*387*FLEN/8, x4, x1, x2)

inst_7300:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f3fffff; valaddr_reg:x3; val_offset:21900*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21900*0 + 3*388*FLEN/8, x4, x1, x2)

inst_7301:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f400000; valaddr_reg:x3; val_offset:21903*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21903*0 + 3*389*FLEN/8, x4, x1, x2)

inst_7302:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f600000; valaddr_reg:x3; val_offset:21906*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21906*0 + 3*390*FLEN/8, x4, x1, x2)

inst_7303:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f700000; valaddr_reg:x3; val_offset:21909*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21909*0 + 3*391*FLEN/8, x4, x1, x2)

inst_7304:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f780000; valaddr_reg:x3; val_offset:21912*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21912*0 + 3*392*FLEN/8, x4, x1, x2)

inst_7305:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7c0000; valaddr_reg:x3; val_offset:21915*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21915*0 + 3*393*FLEN/8, x4, x1, x2)

inst_7306:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7e0000; valaddr_reg:x3; val_offset:21918*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21918*0 + 3*394*FLEN/8, x4, x1, x2)

inst_7307:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7f0000; valaddr_reg:x3; val_offset:21921*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21921*0 + 3*395*FLEN/8, x4, x1, x2)

inst_7308:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7f8000; valaddr_reg:x3; val_offset:21924*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21924*0 + 3*396*FLEN/8, x4, x1, x2)

inst_7309:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7fc000; valaddr_reg:x3; val_offset:21927*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21927*0 + 3*397*FLEN/8, x4, x1, x2)

inst_7310:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7fe000; valaddr_reg:x3; val_offset:21930*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21930*0 + 3*398*FLEN/8, x4, x1, x2)

inst_7311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7ff000; valaddr_reg:x3; val_offset:21933*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21933*0 + 3*399*FLEN/8, x4, x1, x2)

inst_7312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7ff800; valaddr_reg:x3; val_offset:21936*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21936*0 + 3*400*FLEN/8, x4, x1, x2)

inst_7313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7ffc00; valaddr_reg:x3; val_offset:21939*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21939*0 + 3*401*FLEN/8, x4, x1, x2)

inst_7314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7ffe00; valaddr_reg:x3; val_offset:21942*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21942*0 + 3*402*FLEN/8, x4, x1, x2)

inst_7315:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7fff00; valaddr_reg:x3; val_offset:21945*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21945*0 + 3*403*FLEN/8, x4, x1, x2)

inst_7316:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7fff80; valaddr_reg:x3; val_offset:21948*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21948*0 + 3*404*FLEN/8, x4, x1, x2)

inst_7317:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7fffc0; valaddr_reg:x3; val_offset:21951*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21951*0 + 3*405*FLEN/8, x4, x1, x2)

inst_7318:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7fffe0; valaddr_reg:x3; val_offset:21954*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21954*0 + 3*406*FLEN/8, x4, x1, x2)

inst_7319:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7ffff0; valaddr_reg:x3; val_offset:21957*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21957*0 + 3*407*FLEN/8, x4, x1, x2)

inst_7320:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7ffff8; valaddr_reg:x3; val_offset:21960*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21960*0 + 3*408*FLEN/8, x4, x1, x2)

inst_7321:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7ffffc; valaddr_reg:x3; val_offset:21963*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21963*0 + 3*409*FLEN/8, x4, x1, x2)

inst_7322:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7ffffe; valaddr_reg:x3; val_offset:21966*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21966*0 + 3*410*FLEN/8, x4, x1, x2)

inst_7323:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20784d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e20784d; op2val:0x80000000;
op3val:0x8f7fffff; valaddr_reg:x3; val_offset:21969*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21969*0 + 3*411*FLEN/8, x4, x1, x2)

inst_7324:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:21972*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21972*0 + 3*412*FLEN/8, x4, x1, x2)

inst_7325:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:21975*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21975*0 + 3*413*FLEN/8, x4, x1, x2)

inst_7326:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:21978*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21978*0 + 3*414*FLEN/8, x4, x1, x2)

inst_7327:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:21981*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21981*0 + 3*415*FLEN/8, x4, x1, x2)

inst_7328:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:21984*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21984*0 + 3*416*FLEN/8, x4, x1, x2)

inst_7329:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:21987*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21987*0 + 3*417*FLEN/8, x4, x1, x2)

inst_7330:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:21990*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21990*0 + 3*418*FLEN/8, x4, x1, x2)

inst_7331:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:21993*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21993*0 + 3*419*FLEN/8, x4, x1, x2)

inst_7332:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:21996*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21996*0 + 3*420*FLEN/8, x4, x1, x2)

inst_7333:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:21999*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 21999*0 + 3*421*FLEN/8, x4, x1, x2)

inst_7334:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:22002*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22002*0 + 3*422*FLEN/8, x4, x1, x2)

inst_7335:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:22005*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22005*0 + 3*423*FLEN/8, x4, x1, x2)

inst_7336:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:22008*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22008*0 + 3*424*FLEN/8, x4, x1, x2)

inst_7337:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:22011*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22011*0 + 3*425*FLEN/8, x4, x1, x2)

inst_7338:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:22014*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22014*0 + 3*426*FLEN/8, x4, x1, x2)

inst_7339:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:22017*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22017*0 + 3*427*FLEN/8, x4, x1, x2)

inst_7340:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2800000; valaddr_reg:x3; val_offset:22020*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22020*0 + 3*428*FLEN/8, x4, x1, x2)

inst_7341:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2800001; valaddr_reg:x3; val_offset:22023*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22023*0 + 3*429*FLEN/8, x4, x1, x2)

inst_7342:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2800003; valaddr_reg:x3; val_offset:22026*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22026*0 + 3*430*FLEN/8, x4, x1, x2)

inst_7343:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2800007; valaddr_reg:x3; val_offset:22029*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22029*0 + 3*431*FLEN/8, x4, x1, x2)

inst_7344:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x280000f; valaddr_reg:x3; val_offset:22032*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22032*0 + 3*432*FLEN/8, x4, x1, x2)

inst_7345:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x280001f; valaddr_reg:x3; val_offset:22035*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22035*0 + 3*433*FLEN/8, x4, x1, x2)

inst_7346:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x280003f; valaddr_reg:x3; val_offset:22038*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22038*0 + 3*434*FLEN/8, x4, x1, x2)

inst_7347:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x280007f; valaddr_reg:x3; val_offset:22041*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22041*0 + 3*435*FLEN/8, x4, x1, x2)

inst_7348:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x28000ff; valaddr_reg:x3; val_offset:22044*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22044*0 + 3*436*FLEN/8, x4, x1, x2)

inst_7349:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x28001ff; valaddr_reg:x3; val_offset:22047*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22047*0 + 3*437*FLEN/8, x4, x1, x2)

inst_7350:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x28003ff; valaddr_reg:x3; val_offset:22050*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22050*0 + 3*438*FLEN/8, x4, x1, x2)

inst_7351:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x28007ff; valaddr_reg:x3; val_offset:22053*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22053*0 + 3*439*FLEN/8, x4, x1, x2)

inst_7352:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2800fff; valaddr_reg:x3; val_offset:22056*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22056*0 + 3*440*FLEN/8, x4, x1, x2)

inst_7353:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2801fff; valaddr_reg:x3; val_offset:22059*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22059*0 + 3*441*FLEN/8, x4, x1, x2)

inst_7354:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2803fff; valaddr_reg:x3; val_offset:22062*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22062*0 + 3*442*FLEN/8, x4, x1, x2)

inst_7355:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2807fff; valaddr_reg:x3; val_offset:22065*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22065*0 + 3*443*FLEN/8, x4, x1, x2)

inst_7356:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x280ffff; valaddr_reg:x3; val_offset:22068*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22068*0 + 3*444*FLEN/8, x4, x1, x2)

inst_7357:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x281ffff; valaddr_reg:x3; val_offset:22071*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22071*0 + 3*445*FLEN/8, x4, x1, x2)

inst_7358:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x283ffff; valaddr_reg:x3; val_offset:22074*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22074*0 + 3*446*FLEN/8, x4, x1, x2)

inst_7359:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x287ffff; valaddr_reg:x3; val_offset:22077*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22077*0 + 3*447*FLEN/8, x4, x1, x2)

inst_7360:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x28fffff; valaddr_reg:x3; val_offset:22080*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22080*0 + 3*448*FLEN/8, x4, x1, x2)

inst_7361:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x29fffff; valaddr_reg:x3; val_offset:22083*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22083*0 + 3*449*FLEN/8, x4, x1, x2)

inst_7362:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2bfffff; valaddr_reg:x3; val_offset:22086*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22086*0 + 3*450*FLEN/8, x4, x1, x2)

inst_7363:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2c00000; valaddr_reg:x3; val_offset:22089*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22089*0 + 3*451*FLEN/8, x4, x1, x2)

inst_7364:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2e00000; valaddr_reg:x3; val_offset:22092*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22092*0 + 3*452*FLEN/8, x4, x1, x2)

inst_7365:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2f00000; valaddr_reg:x3; val_offset:22095*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22095*0 + 3*453*FLEN/8, x4, x1, x2)

inst_7366:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2f80000; valaddr_reg:x3; val_offset:22098*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22098*0 + 3*454*FLEN/8, x4, x1, x2)

inst_7367:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fc0000; valaddr_reg:x3; val_offset:22101*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22101*0 + 3*455*FLEN/8, x4, x1, x2)

inst_7368:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fe0000; valaddr_reg:x3; val_offset:22104*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22104*0 + 3*456*FLEN/8, x4, x1, x2)

inst_7369:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2ff0000; valaddr_reg:x3; val_offset:22107*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22107*0 + 3*457*FLEN/8, x4, x1, x2)

inst_7370:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2ff8000; valaddr_reg:x3; val_offset:22110*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22110*0 + 3*458*FLEN/8, x4, x1, x2)

inst_7371:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2ffc000; valaddr_reg:x3; val_offset:22113*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22113*0 + 3*459*FLEN/8, x4, x1, x2)

inst_7372:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2ffe000; valaddr_reg:x3; val_offset:22116*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22116*0 + 3*460*FLEN/8, x4, x1, x2)

inst_7373:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fff000; valaddr_reg:x3; val_offset:22119*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22119*0 + 3*461*FLEN/8, x4, x1, x2)

inst_7374:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fff800; valaddr_reg:x3; val_offset:22122*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22122*0 + 3*462*FLEN/8, x4, x1, x2)

inst_7375:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fffc00; valaddr_reg:x3; val_offset:22125*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22125*0 + 3*463*FLEN/8, x4, x1, x2)

inst_7376:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fffe00; valaddr_reg:x3; val_offset:22128*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22128*0 + 3*464*FLEN/8, x4, x1, x2)

inst_7377:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2ffff00; valaddr_reg:x3; val_offset:22131*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22131*0 + 3*465*FLEN/8, x4, x1, x2)

inst_7378:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2ffff80; valaddr_reg:x3; val_offset:22134*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22134*0 + 3*466*FLEN/8, x4, x1, x2)

inst_7379:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2ffffc0; valaddr_reg:x3; val_offset:22137*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22137*0 + 3*467*FLEN/8, x4, x1, x2)

inst_7380:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2ffffe0; valaddr_reg:x3; val_offset:22140*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22140*0 + 3*468*FLEN/8, x4, x1, x2)

inst_7381:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fffff0; valaddr_reg:x3; val_offset:22143*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22143*0 + 3*469*FLEN/8, x4, x1, x2)

inst_7382:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fffff8; valaddr_reg:x3; val_offset:22146*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22146*0 + 3*470*FLEN/8, x4, x1, x2)

inst_7383:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fffffc; valaddr_reg:x3; val_offset:22149*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22149*0 + 3*471*FLEN/8, x4, x1, x2)

inst_7384:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2fffffe; valaddr_reg:x3; val_offset:22152*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22152*0 + 3*472*FLEN/8, x4, x1, x2)

inst_7385:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x213eca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x05 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e213eca; op2val:0x0;
op3val:0x2ffffff; valaddr_reg:x3; val_offset:22155*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22155*0 + 3*473*FLEN/8, x4, x1, x2)

inst_7386:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:22158*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22158*0 + 3*474*FLEN/8, x4, x1, x2)

inst_7387:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:22161*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22161*0 + 3*475*FLEN/8, x4, x1, x2)

inst_7388:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:22164*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22164*0 + 3*476*FLEN/8, x4, x1, x2)

inst_7389:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:22167*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22167*0 + 3*477*FLEN/8, x4, x1, x2)

inst_7390:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:22170*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22170*0 + 3*478*FLEN/8, x4, x1, x2)

inst_7391:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:22173*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22173*0 + 3*479*FLEN/8, x4, x1, x2)

inst_7392:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:22176*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22176*0 + 3*480*FLEN/8, x4, x1, x2)

inst_7393:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:22179*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22179*0 + 3*481*FLEN/8, x4, x1, x2)

inst_7394:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:22182*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22182*0 + 3*482*FLEN/8, x4, x1, x2)

inst_7395:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:22185*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22185*0 + 3*483*FLEN/8, x4, x1, x2)

inst_7396:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:22188*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22188*0 + 3*484*FLEN/8, x4, x1, x2)

inst_7397:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:22191*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22191*0 + 3*485*FLEN/8, x4, x1, x2)

inst_7398:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:22194*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22194*0 + 3*486*FLEN/8, x4, x1, x2)

inst_7399:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:22197*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22197*0 + 3*487*FLEN/8, x4, x1, x2)

inst_7400:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:22200*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22200*0 + 3*488*FLEN/8, x4, x1, x2)

inst_7401:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:22203*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22203*0 + 3*489*FLEN/8, x4, x1, x2)

inst_7402:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81000000; valaddr_reg:x3; val_offset:22206*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22206*0 + 3*490*FLEN/8, x4, x1, x2)

inst_7403:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81000001; valaddr_reg:x3; val_offset:22209*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22209*0 + 3*491*FLEN/8, x4, x1, x2)

inst_7404:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81000003; valaddr_reg:x3; val_offset:22212*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22212*0 + 3*492*FLEN/8, x4, x1, x2)

inst_7405:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81000007; valaddr_reg:x3; val_offset:22215*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22215*0 + 3*493*FLEN/8, x4, x1, x2)

inst_7406:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x8100000f; valaddr_reg:x3; val_offset:22218*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22218*0 + 3*494*FLEN/8, x4, x1, x2)

inst_7407:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x8100001f; valaddr_reg:x3; val_offset:22221*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22221*0 + 3*495*FLEN/8, x4, x1, x2)

inst_7408:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x8100003f; valaddr_reg:x3; val_offset:22224*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22224*0 + 3*496*FLEN/8, x4, x1, x2)

inst_7409:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x8100007f; valaddr_reg:x3; val_offset:22227*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22227*0 + 3*497*FLEN/8, x4, x1, x2)

inst_7410:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x810000ff; valaddr_reg:x3; val_offset:22230*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22230*0 + 3*498*FLEN/8, x4, x1, x2)

inst_7411:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x810001ff; valaddr_reg:x3; val_offset:22233*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22233*0 + 3*499*FLEN/8, x4, x1, x2)

inst_7412:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x810003ff; valaddr_reg:x3; val_offset:22236*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22236*0 + 3*500*FLEN/8, x4, x1, x2)

inst_7413:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x810007ff; valaddr_reg:x3; val_offset:22239*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22239*0 + 3*501*FLEN/8, x4, x1, x2)

inst_7414:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81000fff; valaddr_reg:x3; val_offset:22242*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22242*0 + 3*502*FLEN/8, x4, x1, x2)

inst_7415:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81001fff; valaddr_reg:x3; val_offset:22245*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22245*0 + 3*503*FLEN/8, x4, x1, x2)

inst_7416:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81003fff; valaddr_reg:x3; val_offset:22248*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22248*0 + 3*504*FLEN/8, x4, x1, x2)

inst_7417:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81007fff; valaddr_reg:x3; val_offset:22251*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22251*0 + 3*505*FLEN/8, x4, x1, x2)

inst_7418:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x8100ffff; valaddr_reg:x3; val_offset:22254*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22254*0 + 3*506*FLEN/8, x4, x1, x2)

inst_7419:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x8101ffff; valaddr_reg:x3; val_offset:22257*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22257*0 + 3*507*FLEN/8, x4, x1, x2)

inst_7420:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x8103ffff; valaddr_reg:x3; val_offset:22260*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22260*0 + 3*508*FLEN/8, x4, x1, x2)

inst_7421:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x8107ffff; valaddr_reg:x3; val_offset:22263*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22263*0 + 3*509*FLEN/8, x4, x1, x2)

inst_7422:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x810fffff; valaddr_reg:x3; val_offset:22266*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22266*0 + 3*510*FLEN/8, x4, x1, x2)

inst_7423:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x811fffff; valaddr_reg:x3; val_offset:22269*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22269*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_7424:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x813fffff; valaddr_reg:x3; val_offset:22272*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22272*0 + 3*512*FLEN/8, x4, x1, x2)

inst_7425:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81400000; valaddr_reg:x3; val_offset:22275*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22275*0 + 3*513*FLEN/8, x4, x1, x2)

inst_7426:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81600000; valaddr_reg:x3; val_offset:22278*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22278*0 + 3*514*FLEN/8, x4, x1, x2)

inst_7427:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81700000; valaddr_reg:x3; val_offset:22281*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22281*0 + 3*515*FLEN/8, x4, x1, x2)

inst_7428:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x81780000; valaddr_reg:x3; val_offset:22284*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22284*0 + 3*516*FLEN/8, x4, x1, x2)

inst_7429:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817c0000; valaddr_reg:x3; val_offset:22287*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22287*0 + 3*517*FLEN/8, x4, x1, x2)

inst_7430:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817e0000; valaddr_reg:x3; val_offset:22290*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22290*0 + 3*518*FLEN/8, x4, x1, x2)

inst_7431:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817f0000; valaddr_reg:x3; val_offset:22293*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22293*0 + 3*519*FLEN/8, x4, x1, x2)

inst_7432:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817f8000; valaddr_reg:x3; val_offset:22296*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22296*0 + 3*520*FLEN/8, x4, x1, x2)

inst_7433:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817fc000; valaddr_reg:x3; val_offset:22299*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22299*0 + 3*521*FLEN/8, x4, x1, x2)

inst_7434:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817fe000; valaddr_reg:x3; val_offset:22302*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22302*0 + 3*522*FLEN/8, x4, x1, x2)

inst_7435:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817ff000; valaddr_reg:x3; val_offset:22305*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22305*0 + 3*523*FLEN/8, x4, x1, x2)

inst_7436:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817ff800; valaddr_reg:x3; val_offset:22308*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22308*0 + 3*524*FLEN/8, x4, x1, x2)

inst_7437:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817ffc00; valaddr_reg:x3; val_offset:22311*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22311*0 + 3*525*FLEN/8, x4, x1, x2)

inst_7438:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817ffe00; valaddr_reg:x3; val_offset:22314*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22314*0 + 3*526*FLEN/8, x4, x1, x2)

inst_7439:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817fff00; valaddr_reg:x3; val_offset:22317*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22317*0 + 3*527*FLEN/8, x4, x1, x2)

inst_7440:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817fff80; valaddr_reg:x3; val_offset:22320*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22320*0 + 3*528*FLEN/8, x4, x1, x2)

inst_7441:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817fffc0; valaddr_reg:x3; val_offset:22323*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22323*0 + 3*529*FLEN/8, x4, x1, x2)

inst_7442:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817fffe0; valaddr_reg:x3; val_offset:22326*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22326*0 + 3*530*FLEN/8, x4, x1, x2)

inst_7443:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817ffff0; valaddr_reg:x3; val_offset:22329*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22329*0 + 3*531*FLEN/8, x4, x1, x2)

inst_7444:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817ffff8; valaddr_reg:x3; val_offset:22332*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22332*0 + 3*532*FLEN/8, x4, x1, x2)

inst_7445:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817ffffc; valaddr_reg:x3; val_offset:22335*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22335*0 + 3*533*FLEN/8, x4, x1, x2)

inst_7446:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817ffffe; valaddr_reg:x3; val_offset:22338*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22338*0 + 3*534*FLEN/8, x4, x1, x2)

inst_7447:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22d3de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x02 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22d3de; op2val:0x80000000;
op3val:0x817fffff; valaddr_reg:x3; val_offset:22341*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22341*0 + 3*535*FLEN/8, x4, x1, x2)

inst_7448:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3f800001; valaddr_reg:x3; val_offset:22344*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22344*0 + 3*536*FLEN/8, x4, x1, x2)

inst_7449:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3f800003; valaddr_reg:x3; val_offset:22347*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22347*0 + 3*537*FLEN/8, x4, x1, x2)

inst_7450:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3f800007; valaddr_reg:x3; val_offset:22350*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22350*0 + 3*538*FLEN/8, x4, x1, x2)

inst_7451:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3f999999; valaddr_reg:x3; val_offset:22353*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22353*0 + 3*539*FLEN/8, x4, x1, x2)

inst_7452:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:22356*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22356*0 + 3*540*FLEN/8, x4, x1, x2)

inst_7453:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:22359*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22359*0 + 3*541*FLEN/8, x4, x1, x2)

inst_7454:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:22362*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22362*0 + 3*542*FLEN/8, x4, x1, x2)

inst_7455:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:22365*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22365*0 + 3*543*FLEN/8, x4, x1, x2)

inst_7456:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:22368*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22368*0 + 3*544*FLEN/8, x4, x1, x2)

inst_7457:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:22371*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22371*0 + 3*545*FLEN/8, x4, x1, x2)

inst_7458:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:22374*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22374*0 + 3*546*FLEN/8, x4, x1, x2)

inst_7459:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:22377*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22377*0 + 3*547*FLEN/8, x4, x1, x2)

inst_7460:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:22380*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22380*0 + 3*548*FLEN/8, x4, x1, x2)

inst_7461:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:22383*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22383*0 + 3*549*FLEN/8, x4, x1, x2)

inst_7462:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:22386*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22386*0 + 3*550*FLEN/8, x4, x1, x2)

inst_7463:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:22389*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22389*0 + 3*551*FLEN/8, x4, x1, x2)

inst_7464:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f000000; valaddr_reg:x3; val_offset:22392*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22392*0 + 3*552*FLEN/8, x4, x1, x2)

inst_7465:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f000001; valaddr_reg:x3; val_offset:22395*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22395*0 + 3*553*FLEN/8, x4, x1, x2)

inst_7466:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f000003; valaddr_reg:x3; val_offset:22398*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22398*0 + 3*554*FLEN/8, x4, x1, x2)

inst_7467:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f000007; valaddr_reg:x3; val_offset:22401*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22401*0 + 3*555*FLEN/8, x4, x1, x2)

inst_7468:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f00000f; valaddr_reg:x3; val_offset:22404*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22404*0 + 3*556*FLEN/8, x4, x1, x2)

inst_7469:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f00001f; valaddr_reg:x3; val_offset:22407*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22407*0 + 3*557*FLEN/8, x4, x1, x2)

inst_7470:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f00003f; valaddr_reg:x3; val_offset:22410*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22410*0 + 3*558*FLEN/8, x4, x1, x2)

inst_7471:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f00007f; valaddr_reg:x3; val_offset:22413*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22413*0 + 3*559*FLEN/8, x4, x1, x2)

inst_7472:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f0000ff; valaddr_reg:x3; val_offset:22416*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22416*0 + 3*560*FLEN/8, x4, x1, x2)

inst_7473:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f0001ff; valaddr_reg:x3; val_offset:22419*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22419*0 + 3*561*FLEN/8, x4, x1, x2)

inst_7474:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f0003ff; valaddr_reg:x3; val_offset:22422*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22422*0 + 3*562*FLEN/8, x4, x1, x2)

inst_7475:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f0007ff; valaddr_reg:x3; val_offset:22425*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22425*0 + 3*563*FLEN/8, x4, x1, x2)

inst_7476:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f000fff; valaddr_reg:x3; val_offset:22428*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22428*0 + 3*564*FLEN/8, x4, x1, x2)

inst_7477:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f001fff; valaddr_reg:x3; val_offset:22431*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22431*0 + 3*565*FLEN/8, x4, x1, x2)

inst_7478:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f003fff; valaddr_reg:x3; val_offset:22434*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22434*0 + 3*566*FLEN/8, x4, x1, x2)

inst_7479:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f007fff; valaddr_reg:x3; val_offset:22437*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22437*0 + 3*567*FLEN/8, x4, x1, x2)

inst_7480:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f00ffff; valaddr_reg:x3; val_offset:22440*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22440*0 + 3*568*FLEN/8, x4, x1, x2)

inst_7481:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f01ffff; valaddr_reg:x3; val_offset:22443*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22443*0 + 3*569*FLEN/8, x4, x1, x2)

inst_7482:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f03ffff; valaddr_reg:x3; val_offset:22446*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22446*0 + 3*570*FLEN/8, x4, x1, x2)

inst_7483:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f07ffff; valaddr_reg:x3; val_offset:22449*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22449*0 + 3*571*FLEN/8, x4, x1, x2)

inst_7484:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f0fffff; valaddr_reg:x3; val_offset:22452*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22452*0 + 3*572*FLEN/8, x4, x1, x2)

inst_7485:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f1fffff; valaddr_reg:x3; val_offset:22455*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22455*0 + 3*573*FLEN/8, x4, x1, x2)

inst_7486:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f3fffff; valaddr_reg:x3; val_offset:22458*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22458*0 + 3*574*FLEN/8, x4, x1, x2)

inst_7487:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f400000; valaddr_reg:x3; val_offset:22461*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22461*0 + 3*575*FLEN/8, x4, x1, x2)

inst_7488:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f600000; valaddr_reg:x3; val_offset:22464*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22464*0 + 3*576*FLEN/8, x4, x1, x2)

inst_7489:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f700000; valaddr_reg:x3; val_offset:22467*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22467*0 + 3*577*FLEN/8, x4, x1, x2)

inst_7490:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f780000; valaddr_reg:x3; val_offset:22470*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22470*0 + 3*578*FLEN/8, x4, x1, x2)

inst_7491:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7c0000; valaddr_reg:x3; val_offset:22473*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22473*0 + 3*579*FLEN/8, x4, x1, x2)

inst_7492:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7e0000; valaddr_reg:x3; val_offset:22476*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22476*0 + 3*580*FLEN/8, x4, x1, x2)

inst_7493:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7f0000; valaddr_reg:x3; val_offset:22479*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22479*0 + 3*581*FLEN/8, x4, x1, x2)

inst_7494:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7f8000; valaddr_reg:x3; val_offset:22482*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22482*0 + 3*582*FLEN/8, x4, x1, x2)

inst_7495:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7fc000; valaddr_reg:x3; val_offset:22485*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22485*0 + 3*583*FLEN/8, x4, x1, x2)

inst_7496:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7fe000; valaddr_reg:x3; val_offset:22488*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22488*0 + 3*584*FLEN/8, x4, x1, x2)

inst_7497:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7ff000; valaddr_reg:x3; val_offset:22491*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22491*0 + 3*585*FLEN/8, x4, x1, x2)

inst_7498:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7ff800; valaddr_reg:x3; val_offset:22494*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22494*0 + 3*586*FLEN/8, x4, x1, x2)

inst_7499:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7ffc00; valaddr_reg:x3; val_offset:22497*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22497*0 + 3*587*FLEN/8, x4, x1, x2)

inst_7500:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7ffe00; valaddr_reg:x3; val_offset:22500*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22500*0 + 3*588*FLEN/8, x4, x1, x2)

inst_7501:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7fff00; valaddr_reg:x3; val_offset:22503*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22503*0 + 3*589*FLEN/8, x4, x1, x2)

inst_7502:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7fff80; valaddr_reg:x3; val_offset:22506*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22506*0 + 3*590*FLEN/8, x4, x1, x2)

inst_7503:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7fffc0; valaddr_reg:x3; val_offset:22509*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22509*0 + 3*591*FLEN/8, x4, x1, x2)

inst_7504:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7fffe0; valaddr_reg:x3; val_offset:22512*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22512*0 + 3*592*FLEN/8, x4, x1, x2)

inst_7505:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7ffff0; valaddr_reg:x3; val_offset:22515*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22515*0 + 3*593*FLEN/8, x4, x1, x2)

inst_7506:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7ffff8; valaddr_reg:x3; val_offset:22518*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22518*0 + 3*594*FLEN/8, x4, x1, x2)

inst_7507:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7ffffc; valaddr_reg:x3; val_offset:22521*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22521*0 + 3*595*FLEN/8, x4, x1, x2)

inst_7508:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7ffffe; valaddr_reg:x3; val_offset:22524*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22524*0 + 3*596*FLEN/8, x4, x1, x2)

inst_7509:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x22eac9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x492207 and fs3 == 0 and fe3 == 0x9e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e22eac9; op2val:0xc92207;
op3val:0x4f7fffff; valaddr_reg:x3; val_offset:22527*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22527*0 + 3*597*FLEN/8, x4, x1, x2)

inst_7510:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:22530*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22530*0 + 3*598*FLEN/8, x4, x1, x2)

inst_7511:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:22533*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22533*0 + 3*599*FLEN/8, x4, x1, x2)

inst_7512:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:22536*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22536*0 + 3*600*FLEN/8, x4, x1, x2)

inst_7513:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:22539*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22539*0 + 3*601*FLEN/8, x4, x1, x2)

inst_7514:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:22542*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22542*0 + 3*602*FLEN/8, x4, x1, x2)

inst_7515:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:22545*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22545*0 + 3*603*FLEN/8, x4, x1, x2)

inst_7516:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:22548*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22548*0 + 3*604*FLEN/8, x4, x1, x2)

inst_7517:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:22551*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22551*0 + 3*605*FLEN/8, x4, x1, x2)

inst_7518:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:22554*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22554*0 + 3*606*FLEN/8, x4, x1, x2)

inst_7519:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:22557*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22557*0 + 3*607*FLEN/8, x4, x1, x2)

inst_7520:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:22560*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22560*0 + 3*608*FLEN/8, x4, x1, x2)

inst_7521:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:22563*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22563*0 + 3*609*FLEN/8, x4, x1, x2)

inst_7522:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:22566*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22566*0 + 3*610*FLEN/8, x4, x1, x2)

inst_7523:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:22569*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22569*0 + 3*611*FLEN/8, x4, x1, x2)

inst_7524:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:22572*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22572*0 + 3*612*FLEN/8, x4, x1, x2)

inst_7525:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:22575*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22575*0 + 3*613*FLEN/8, x4, x1, x2)

inst_7526:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8000000; valaddr_reg:x3; val_offset:22578*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22578*0 + 3*614*FLEN/8, x4, x1, x2)

inst_7527:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8000001; valaddr_reg:x3; val_offset:22581*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22581*0 + 3*615*FLEN/8, x4, x1, x2)

inst_7528:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8000003; valaddr_reg:x3; val_offset:22584*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22584*0 + 3*616*FLEN/8, x4, x1, x2)

inst_7529:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8000007; valaddr_reg:x3; val_offset:22587*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22587*0 + 3*617*FLEN/8, x4, x1, x2)

inst_7530:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x800000f; valaddr_reg:x3; val_offset:22590*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22590*0 + 3*618*FLEN/8, x4, x1, x2)

inst_7531:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x800001f; valaddr_reg:x3; val_offset:22593*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22593*0 + 3*619*FLEN/8, x4, x1, x2)

inst_7532:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x800003f; valaddr_reg:x3; val_offset:22596*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22596*0 + 3*620*FLEN/8, x4, x1, x2)

inst_7533:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x800007f; valaddr_reg:x3; val_offset:22599*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22599*0 + 3*621*FLEN/8, x4, x1, x2)

inst_7534:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x80000ff; valaddr_reg:x3; val_offset:22602*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22602*0 + 3*622*FLEN/8, x4, x1, x2)

inst_7535:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x80001ff; valaddr_reg:x3; val_offset:22605*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22605*0 + 3*623*FLEN/8, x4, x1, x2)

inst_7536:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x80003ff; valaddr_reg:x3; val_offset:22608*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22608*0 + 3*624*FLEN/8, x4, x1, x2)

inst_7537:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x80007ff; valaddr_reg:x3; val_offset:22611*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22611*0 + 3*625*FLEN/8, x4, x1, x2)

inst_7538:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8000fff; valaddr_reg:x3; val_offset:22614*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22614*0 + 3*626*FLEN/8, x4, x1, x2)

inst_7539:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8001fff; valaddr_reg:x3; val_offset:22617*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22617*0 + 3*627*FLEN/8, x4, x1, x2)

inst_7540:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8003fff; valaddr_reg:x3; val_offset:22620*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22620*0 + 3*628*FLEN/8, x4, x1, x2)

inst_7541:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8007fff; valaddr_reg:x3; val_offset:22623*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22623*0 + 3*629*FLEN/8, x4, x1, x2)

inst_7542:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x800ffff; valaddr_reg:x3; val_offset:22626*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22626*0 + 3*630*FLEN/8, x4, x1, x2)

inst_7543:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x801ffff; valaddr_reg:x3; val_offset:22629*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22629*0 + 3*631*FLEN/8, x4, x1, x2)

inst_7544:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x803ffff; valaddr_reg:x3; val_offset:22632*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22632*0 + 3*632*FLEN/8, x4, x1, x2)

inst_7545:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x807ffff; valaddr_reg:x3; val_offset:22635*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22635*0 + 3*633*FLEN/8, x4, x1, x2)

inst_7546:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x80fffff; valaddr_reg:x3; val_offset:22638*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22638*0 + 3*634*FLEN/8, x4, x1, x2)

inst_7547:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x81fffff; valaddr_reg:x3; val_offset:22641*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22641*0 + 3*635*FLEN/8, x4, x1, x2)

inst_7548:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x83fffff; valaddr_reg:x3; val_offset:22644*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22644*0 + 3*636*FLEN/8, x4, x1, x2)

inst_7549:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8400000; valaddr_reg:x3; val_offset:22647*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22647*0 + 3*637*FLEN/8, x4, x1, x2)

inst_7550:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8600000; valaddr_reg:x3; val_offset:22650*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22650*0 + 3*638*FLEN/8, x4, x1, x2)

inst_7551:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8700000; valaddr_reg:x3; val_offset:22653*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22653*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_7552:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x8780000; valaddr_reg:x3; val_offset:22656*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22656*0 + 3*640*FLEN/8, x4, x1, x2)

inst_7553:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87c0000; valaddr_reg:x3; val_offset:22659*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22659*0 + 3*641*FLEN/8, x4, x1, x2)

inst_7554:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87e0000; valaddr_reg:x3; val_offset:22662*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22662*0 + 3*642*FLEN/8, x4, x1, x2)

inst_7555:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87f0000; valaddr_reg:x3; val_offset:22665*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22665*0 + 3*643*FLEN/8, x4, x1, x2)

inst_7556:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87f8000; valaddr_reg:x3; val_offset:22668*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22668*0 + 3*644*FLEN/8, x4, x1, x2)

inst_7557:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87fc000; valaddr_reg:x3; val_offset:22671*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22671*0 + 3*645*FLEN/8, x4, x1, x2)

inst_7558:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87fe000; valaddr_reg:x3; val_offset:22674*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22674*0 + 3*646*FLEN/8, x4, x1, x2)

inst_7559:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87ff000; valaddr_reg:x3; val_offset:22677*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22677*0 + 3*647*FLEN/8, x4, x1, x2)

inst_7560:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87ff800; valaddr_reg:x3; val_offset:22680*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22680*0 + 3*648*FLEN/8, x4, x1, x2)

inst_7561:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87ffc00; valaddr_reg:x3; val_offset:22683*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22683*0 + 3*649*FLEN/8, x4, x1, x2)

inst_7562:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87ffe00; valaddr_reg:x3; val_offset:22686*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22686*0 + 3*650*FLEN/8, x4, x1, x2)

inst_7563:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87fff00; valaddr_reg:x3; val_offset:22689*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22689*0 + 3*651*FLEN/8, x4, x1, x2)

inst_7564:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87fff80; valaddr_reg:x3; val_offset:22692*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22692*0 + 3*652*FLEN/8, x4, x1, x2)

inst_7565:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87fffc0; valaddr_reg:x3; val_offset:22695*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22695*0 + 3*653*FLEN/8, x4, x1, x2)

inst_7566:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87fffe0; valaddr_reg:x3; val_offset:22698*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22698*0 + 3*654*FLEN/8, x4, x1, x2)

inst_7567:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87ffff0; valaddr_reg:x3; val_offset:22701*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22701*0 + 3*655*FLEN/8, x4, x1, x2)

inst_7568:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87ffff8; valaddr_reg:x3; val_offset:22704*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22704*0 + 3*656*FLEN/8, x4, x1, x2)

inst_7569:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87ffffc; valaddr_reg:x3; val_offset:22707*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22707*0 + 3*657*FLEN/8, x4, x1, x2)

inst_7570:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87ffffe; valaddr_reg:x3; val_offset:22710*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22710*0 + 3*658*FLEN/8, x4, x1, x2)

inst_7571:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2544b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x10 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e2544b7; op2val:0x0;
op3val:0x87fffff; valaddr_reg:x3; val_offset:22713*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22713*0 + 3*659*FLEN/8, x4, x1, x2)

inst_7572:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800000; valaddr_reg:x3; val_offset:22716*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22716*0 + 3*660*FLEN/8, x4, x1, x2)

inst_7573:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800001; valaddr_reg:x3; val_offset:22719*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22719*0 + 3*661*FLEN/8, x4, x1, x2)

inst_7574:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800003; valaddr_reg:x3; val_offset:22722*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22722*0 + 3*662*FLEN/8, x4, x1, x2)

inst_7575:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800007; valaddr_reg:x3; val_offset:22725*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22725*0 + 3*663*FLEN/8, x4, x1, x2)

inst_7576:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280000f; valaddr_reg:x3; val_offset:22728*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22728*0 + 3*664*FLEN/8, x4, x1, x2)

inst_7577:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280001f; valaddr_reg:x3; val_offset:22731*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22731*0 + 3*665*FLEN/8, x4, x1, x2)

inst_7578:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280003f; valaddr_reg:x3; val_offset:22734*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22734*0 + 3*666*FLEN/8, x4, x1, x2)

inst_7579:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280007f; valaddr_reg:x3; val_offset:22737*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22737*0 + 3*667*FLEN/8, x4, x1, x2)

inst_7580:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28000ff; valaddr_reg:x3; val_offset:22740*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22740*0 + 3*668*FLEN/8, x4, x1, x2)

inst_7581:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28001ff; valaddr_reg:x3; val_offset:22743*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22743*0 + 3*669*FLEN/8, x4, x1, x2)

inst_7582:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28003ff; valaddr_reg:x3; val_offset:22746*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22746*0 + 3*670*FLEN/8, x4, x1, x2)

inst_7583:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28007ff; valaddr_reg:x3; val_offset:22749*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22749*0 + 3*671*FLEN/8, x4, x1, x2)

inst_7584:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800fff; valaddr_reg:x3; val_offset:22752*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22752*0 + 3*672*FLEN/8, x4, x1, x2)

inst_7585:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2801fff; valaddr_reg:x3; val_offset:22755*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22755*0 + 3*673*FLEN/8, x4, x1, x2)

inst_7586:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2803fff; valaddr_reg:x3; val_offset:22758*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22758*0 + 3*674*FLEN/8, x4, x1, x2)

inst_7587:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2807fff; valaddr_reg:x3; val_offset:22761*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22761*0 + 3*675*FLEN/8, x4, x1, x2)

inst_7588:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280ffff; valaddr_reg:x3; val_offset:22764*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22764*0 + 3*676*FLEN/8, x4, x1, x2)

inst_7589:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa281ffff; valaddr_reg:x3; val_offset:22767*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22767*0 + 3*677*FLEN/8, x4, x1, x2)

inst_7590:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa283ffff; valaddr_reg:x3; val_offset:22770*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22770*0 + 3*678*FLEN/8, x4, x1, x2)

inst_7591:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa287ffff; valaddr_reg:x3; val_offset:22773*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22773*0 + 3*679*FLEN/8, x4, x1, x2)

inst_7592:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28fffff; valaddr_reg:x3; val_offset:22776*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22776*0 + 3*680*FLEN/8, x4, x1, x2)

inst_7593:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa29fffff; valaddr_reg:x3; val_offset:22779*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22779*0 + 3*681*FLEN/8, x4, x1, x2)

inst_7594:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2bfffff; valaddr_reg:x3; val_offset:22782*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22782*0 + 3*682*FLEN/8, x4, x1, x2)

inst_7595:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2c00000; valaddr_reg:x3; val_offset:22785*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22785*0 + 3*683*FLEN/8, x4, x1, x2)

inst_7596:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2e00000; valaddr_reg:x3; val_offset:22788*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22788*0 + 3*684*FLEN/8, x4, x1, x2)

inst_7597:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2f00000; valaddr_reg:x3; val_offset:22791*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22791*0 + 3*685*FLEN/8, x4, x1, x2)

inst_7598:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2f80000; valaddr_reg:x3; val_offset:22794*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22794*0 + 3*686*FLEN/8, x4, x1, x2)

inst_7599:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fc0000; valaddr_reg:x3; val_offset:22797*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22797*0 + 3*687*FLEN/8, x4, x1, x2)

inst_7600:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fe0000; valaddr_reg:x3; val_offset:22800*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22800*0 + 3*688*FLEN/8, x4, x1, x2)

inst_7601:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ff0000; valaddr_reg:x3; val_offset:22803*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22803*0 + 3*689*FLEN/8, x4, x1, x2)

inst_7602:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ff8000; valaddr_reg:x3; val_offset:22806*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22806*0 + 3*690*FLEN/8, x4, x1, x2)

inst_7603:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffc000; valaddr_reg:x3; val_offset:22809*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22809*0 + 3*691*FLEN/8, x4, x1, x2)

inst_7604:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffe000; valaddr_reg:x3; val_offset:22812*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22812*0 + 3*692*FLEN/8, x4, x1, x2)

inst_7605:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fff000; valaddr_reg:x3; val_offset:22815*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22815*0 + 3*693*FLEN/8, x4, x1, x2)

inst_7606:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fff800; valaddr_reg:x3; val_offset:22818*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22818*0 + 3*694*FLEN/8, x4, x1, x2)

inst_7607:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffc00; valaddr_reg:x3; val_offset:22821*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22821*0 + 3*695*FLEN/8, x4, x1, x2)

inst_7608:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffe00; valaddr_reg:x3; val_offset:22824*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22824*0 + 3*696*FLEN/8, x4, x1, x2)

inst_7609:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffff00; valaddr_reg:x3; val_offset:22827*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22827*0 + 3*697*FLEN/8, x4, x1, x2)

inst_7610:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffff80; valaddr_reg:x3; val_offset:22830*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22830*0 + 3*698*FLEN/8, x4, x1, x2)

inst_7611:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffffc0; valaddr_reg:x3; val_offset:22833*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22833*0 + 3*699*FLEN/8, x4, x1, x2)

inst_7612:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffffe0; valaddr_reg:x3; val_offset:22836*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22836*0 + 3*700*FLEN/8, x4, x1, x2)

inst_7613:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffff0; valaddr_reg:x3; val_offset:22839*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22839*0 + 3*701*FLEN/8, x4, x1, x2)

inst_7614:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffff8; valaddr_reg:x3; val_offset:22842*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22842*0 + 3*702*FLEN/8, x4, x1, x2)

inst_7615:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffffc; valaddr_reg:x3; val_offset:22845*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22845*0 + 3*703*FLEN/8, x4, x1, x2)

inst_7616:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffffe; valaddr_reg:x3; val_offset:22848*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22848*0 + 3*704*FLEN/8, x4, x1, x2)

inst_7617:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffffff; valaddr_reg:x3; val_offset:22851*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22851*0 + 3*705*FLEN/8, x4, x1, x2)

inst_7618:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbf800001; valaddr_reg:x3; val_offset:22854*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22854*0 + 3*706*FLEN/8, x4, x1, x2)

inst_7619:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbf800003; valaddr_reg:x3; val_offset:22857*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22857*0 + 3*707*FLEN/8, x4, x1, x2)

inst_7620:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbf800007; valaddr_reg:x3; val_offset:22860*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22860*0 + 3*708*FLEN/8, x4, x1, x2)

inst_7621:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbf999999; valaddr_reg:x3; val_offset:22863*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22863*0 + 3*709*FLEN/8, x4, x1, x2)

inst_7622:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:22866*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22866*0 + 3*710*FLEN/8, x4, x1, x2)

inst_7623:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:22869*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22869*0 + 3*711*FLEN/8, x4, x1, x2)

inst_7624:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:22872*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22872*0 + 3*712*FLEN/8, x4, x1, x2)

inst_7625:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:22875*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22875*0 + 3*713*FLEN/8, x4, x1, x2)

inst_7626:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:22878*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22878*0 + 3*714*FLEN/8, x4, x1, x2)

inst_7627:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:22881*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22881*0 + 3*715*FLEN/8, x4, x1, x2)

inst_7628:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:22884*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22884*0 + 3*716*FLEN/8, x4, x1, x2)

inst_7629:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:22887*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22887*0 + 3*717*FLEN/8, x4, x1, x2)

inst_7630:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:22890*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22890*0 + 3*718*FLEN/8, x4, x1, x2)

inst_7631:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:22893*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22893*0 + 3*719*FLEN/8, x4, x1, x2)

inst_7632:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:22896*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22896*0 + 3*720*FLEN/8, x4, x1, x2)

inst_7633:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:22899*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22899*0 + 3*721*FLEN/8, x4, x1, x2)

inst_7634:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:22902*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22902*0 + 3*722*FLEN/8, x4, x1, x2)

inst_7635:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:22905*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22905*0 + 3*723*FLEN/8, x4, x1, x2)

inst_7636:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:22908*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22908*0 + 3*724*FLEN/8, x4, x1, x2)

inst_7637:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:22911*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22911*0 + 3*725*FLEN/8, x4, x1, x2)

inst_7638:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:22914*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22914*0 + 3*726*FLEN/8, x4, x1, x2)

inst_7639:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:22917*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22917*0 + 3*727*FLEN/8, x4, x1, x2)

inst_7640:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:22920*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22920*0 + 3*728*FLEN/8, x4, x1, x2)

inst_7641:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:22923*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22923*0 + 3*729*FLEN/8, x4, x1, x2)

inst_7642:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:22926*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22926*0 + 3*730*FLEN/8, x4, x1, x2)

inst_7643:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:22929*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22929*0 + 3*731*FLEN/8, x4, x1, x2)

inst_7644:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:22932*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22932*0 + 3*732*FLEN/8, x4, x1, x2)

inst_7645:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:22935*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22935*0 + 3*733*FLEN/8, x4, x1, x2)

inst_7646:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:22938*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22938*0 + 3*734*FLEN/8, x4, x1, x2)

inst_7647:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:22941*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22941*0 + 3*735*FLEN/8, x4, x1, x2)

inst_7648:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:22944*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22944*0 + 3*736*FLEN/8, x4, x1, x2)

inst_7649:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:22947*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22947*0 + 3*737*FLEN/8, x4, x1, x2)

inst_7650:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3000000; valaddr_reg:x3; val_offset:22950*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22950*0 + 3*738*FLEN/8, x4, x1, x2)

inst_7651:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3000001; valaddr_reg:x3; val_offset:22953*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22953*0 + 3*739*FLEN/8, x4, x1, x2)

inst_7652:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3000003; valaddr_reg:x3; val_offset:22956*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22956*0 + 3*740*FLEN/8, x4, x1, x2)

inst_7653:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3000007; valaddr_reg:x3; val_offset:22959*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22959*0 + 3*741*FLEN/8, x4, x1, x2)

inst_7654:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x300000f; valaddr_reg:x3; val_offset:22962*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22962*0 + 3*742*FLEN/8, x4, x1, x2)

inst_7655:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x300001f; valaddr_reg:x3; val_offset:22965*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22965*0 + 3*743*FLEN/8, x4, x1, x2)

inst_7656:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x300003f; valaddr_reg:x3; val_offset:22968*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22968*0 + 3*744*FLEN/8, x4, x1, x2)

inst_7657:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x300007f; valaddr_reg:x3; val_offset:22971*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22971*0 + 3*745*FLEN/8, x4, x1, x2)

inst_7658:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x30000ff; valaddr_reg:x3; val_offset:22974*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22974*0 + 3*746*FLEN/8, x4, x1, x2)

inst_7659:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x30001ff; valaddr_reg:x3; val_offset:22977*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22977*0 + 3*747*FLEN/8, x4, x1, x2)

inst_7660:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x30003ff; valaddr_reg:x3; val_offset:22980*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22980*0 + 3*748*FLEN/8, x4, x1, x2)

inst_7661:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x30007ff; valaddr_reg:x3; val_offset:22983*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22983*0 + 3*749*FLEN/8, x4, x1, x2)

inst_7662:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3000fff; valaddr_reg:x3; val_offset:22986*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22986*0 + 3*750*FLEN/8, x4, x1, x2)

inst_7663:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3001fff; valaddr_reg:x3; val_offset:22989*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22989*0 + 3*751*FLEN/8, x4, x1, x2)

inst_7664:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3003fff; valaddr_reg:x3; val_offset:22992*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22992*0 + 3*752*FLEN/8, x4, x1, x2)

inst_7665:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3007fff; valaddr_reg:x3; val_offset:22995*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22995*0 + 3*753*FLEN/8, x4, x1, x2)

inst_7666:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x300ffff; valaddr_reg:x3; val_offset:22998*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 22998*0 + 3*754*FLEN/8, x4, x1, x2)

inst_7667:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x301ffff; valaddr_reg:x3; val_offset:23001*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23001*0 + 3*755*FLEN/8, x4, x1, x2)

inst_7668:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x303ffff; valaddr_reg:x3; val_offset:23004*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23004*0 + 3*756*FLEN/8, x4, x1, x2)

inst_7669:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x307ffff; valaddr_reg:x3; val_offset:23007*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23007*0 + 3*757*FLEN/8, x4, x1, x2)

inst_7670:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x30fffff; valaddr_reg:x3; val_offset:23010*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23010*0 + 3*758*FLEN/8, x4, x1, x2)

inst_7671:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x31fffff; valaddr_reg:x3; val_offset:23013*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23013*0 + 3*759*FLEN/8, x4, x1, x2)

inst_7672:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x33fffff; valaddr_reg:x3; val_offset:23016*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23016*0 + 3*760*FLEN/8, x4, x1, x2)

inst_7673:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3400000; valaddr_reg:x3; val_offset:23019*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23019*0 + 3*761*FLEN/8, x4, x1, x2)

inst_7674:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3600000; valaddr_reg:x3; val_offset:23022*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23022*0 + 3*762*FLEN/8, x4, x1, x2)

inst_7675:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3700000; valaddr_reg:x3; val_offset:23025*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23025*0 + 3*763*FLEN/8, x4, x1, x2)

inst_7676:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x3780000; valaddr_reg:x3; val_offset:23028*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23028*0 + 3*764*FLEN/8, x4, x1, x2)

inst_7677:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x37c0000; valaddr_reg:x3; val_offset:23031*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23031*0 + 3*765*FLEN/8, x4, x1, x2)

inst_7678:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x37e0000; valaddr_reg:x3; val_offset:23034*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23034*0 + 3*766*FLEN/8, x4, x1, x2)

inst_7679:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x272192 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7e272192; op2val:0x0;
op3val:0x37f0000; valaddr_reg:x3; val_offset:23037*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, f31, f30, f29, f28, dyn, 0, 0, x3, 23037*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867200,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867201,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867203,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867207,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867215,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867231,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867263,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867327,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867455,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306867711,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306868223,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306869247,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306871295,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306875391,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306883583,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306899967,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306932735,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2306998271,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307129343,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307391487,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2307915775,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2308964351,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061503,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2311061504,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2313158656,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314207232,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314731520,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2314993664,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315124736,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315190272,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315223040,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315239424,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315247616,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315251712,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315253760,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315254784,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255296,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255552,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255680,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255744,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255776,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255792,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255800,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255804,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255806,32,FLEN)
NAN_BOXED(2115629447,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2315255807,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364672,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364673,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364675,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364679,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364687,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364703,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364735,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364799,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382364927,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382365183,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382365695,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382366719,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382368767,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382372863,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382381055,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382397439,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382430207,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382495743,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382626815,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2382888959,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2383413247,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2384461823,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2386558975,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2386558976,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2388656128,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2389704704,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390228992,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390491136,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390622208,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390687744,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390720512,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390736896,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390745088,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390749184,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390751232,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390752256,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390752768,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753024,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753152,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753216,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753248,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753264,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753272,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753276,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753278,32,FLEN)
NAN_BOXED(2115800423,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2390753279,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607680,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607681,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607683,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607687,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607695,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607711,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607743,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607807,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607935,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761608191,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761608703,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761609727,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761611775,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761615871,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761624063,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761640447,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761673215,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761738751,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761869823,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1762131967,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1762656255,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1763704831,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1765801983,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1765801984,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1767899136,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1768947712,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769472000,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769734144,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769865216,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769930752,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769963520,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769979904,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769988096,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769992192,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769994240,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769995264,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769995776,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996032,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996160,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996224,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996256,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996272,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996280,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996284,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996286,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996287,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919104,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919105,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919107,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919111,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919119,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919135,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919167,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919231,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919359,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415919615,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415920127,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415921151,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415923199,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415927295,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415935487,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415951871,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2415984639,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416050175,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416181247,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416443391,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2416967679,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2418016255,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113407,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2420113408,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2422210560,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423259136,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2423783424,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424045568,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424176640,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424242176,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424274944,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424291328,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424299520,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424303616,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424305664,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424306688,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307200,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307456,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307584,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307648,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307680,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307696,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307704,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307708,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307710,32,FLEN)
NAN_BOXED(2115849623,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2424307711,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420288,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420289,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420291,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420295,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420303,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420319,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420351,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420415,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420543,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721420799,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721421311,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721422335,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721424383,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721428479,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721436671,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721453055,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721485823,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721551359,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721682431,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(721944575,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(722468863,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(723517439,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(725614591,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(725614592,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(727711744,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(728760320,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729284608,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729546752,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729677824,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729743360,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729776128,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729792512,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729800704,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729804800,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729806848,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729807872,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808384,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808640,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808768,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808832,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808864,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808880,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808888,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808892,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808894,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(729808895,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2115883019,32,FLEN)
NAN_BOXED(13607802,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190080,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190095,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190111,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190143,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190207,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190335,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278190591,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278191103,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278192127,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278194175,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278198271,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278206463,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278222847,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278255615,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278321151,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278452223,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4278714367,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4279238655,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4280287231,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4282384383,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4282384384,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4284481536,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4285530112,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286054400,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286316544,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286447616,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286513152,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286545920,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286562304,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286570496,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286574592,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286576640,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286577664,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578176,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578432,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578560,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578624,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578656,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578672,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2115918448,32,FLEN)
NAN_BOXED(3234786817,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141888,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141889,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141891,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141895,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141903,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141919,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399141951,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142015,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142143,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142399,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399142911,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399143935,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399145983,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399150079,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399158271,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399174655,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399207423,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399272959,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399404031,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2399666175,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2400190463,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2401239039,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336191,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2403336192,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2405433344,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2406481920,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407006208,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407268352,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407399424,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407464960,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407497728,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407514112,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407522304,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407526400,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407528448,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529472,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407529984,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530240,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530368,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530432,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530464,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530480,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530488,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530492,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530494,32,FLEN)
NAN_BOXED(2116057165,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2407530495,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943040,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943041,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943043,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943047,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943055,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943071,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943103,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943167,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943295,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41943551,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41944063,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41945087,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41947135,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41951231,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41959423,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(41975807,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42008575,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42074111,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42205183,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42467327,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(42991615,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(44040191,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(46137343,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(46137344,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(48234496,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(49283072,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(49807360,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50069504,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50200576,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50266112,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50298880,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50315264,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50323456,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50327552,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50329600,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50330624,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331136,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331392,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331520,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331584,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331616,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331632,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331640,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331644,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331646,32,FLEN)
NAN_BOXED(2116107978,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331647,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872257,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872259,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872263,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2157549977,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2158269001,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159227699,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159467373,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2159786939,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160346180,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2160905420,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2161864118,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2162583142,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2163062491,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260856,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260860,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260862,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260864,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260865,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260867,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260871,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260879,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260895,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260927,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164260991,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261119,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261375,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164261887,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164262911,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164264959,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164269055,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164277247,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164293631,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164326399,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164391935,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164523007,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2164785151,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2165309439,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2166358015,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455167,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2168455168,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2170552320,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2171600896,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172125184,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172387328,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172518400,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172583936,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172616704,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172633088,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172641280,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172645376,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172647424,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648448,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172648960,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649216,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649344,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649408,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649440,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649456,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649464,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649468,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649470,32,FLEN)
NAN_BOXED(2116211678,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649471,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400064,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400065,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400067,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400071,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400079,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400095,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400127,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400191,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400319,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325400575,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325401087,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325402111,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325404159,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325408255,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325416447,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325432831,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325465599,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325531135,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325662207,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1325924351,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1326448639,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1327497215,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1329594367,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1329594368,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1331691520,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1332740096,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333264384,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333526528,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333657600,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333723136,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333755904,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333772288,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333780480,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333784576,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333786624,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333787648,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788160,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788416,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788544,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788608,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788640,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788656,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788664,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788668,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788670,32,FLEN)
NAN_BOXED(2116217545,32,FLEN)
NAN_BOXED(13181447,32,FLEN)
NAN_BOXED(1333788671,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1677721,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2396745,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3355443,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3595117,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(3914683,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4473924,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5033164,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(5991862,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(6710886,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(7190235,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388600,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388604,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388606,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217728,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217729,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217731,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217735,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217743,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217759,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217791,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217855,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134217983,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134218239,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134218751,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134219775,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134221823,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134225919,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134234111,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134250495,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134283263,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134348799,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134479871,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(134742015,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(135266303,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(136314879,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(138412031,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(138412032,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(140509184,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(141557760,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142082048,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142344192,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142475264,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142540800,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142573568,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142589952,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142598144,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142602240,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142604288,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142605312,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142605824,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606080,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606208,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606272,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606304,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606320,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606328,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606332,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606334,32,FLEN)
NAN_BOXED(2116371639,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(142606335,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297600,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297601,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297603,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297607,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297615,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297631,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297663,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297727,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297855,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726298111,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726298623,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726299647,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726301695,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726305791,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726313983,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726330367,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726363135,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726428671,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726559743,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726821887,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2727346175,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2728394751,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2730491903,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2730491904,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2732589056,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2733637632,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734161920,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734424064,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734555136,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734620672,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734653440,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734669824,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734678016,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734682112,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734684160,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734685184,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734685696,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734685952,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686080,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686144,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686176,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686192,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686200,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686204,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686206,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686207,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388609,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388611,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(8388615,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10066329,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(10785353,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11744051,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(11983725,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12303291,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(12862532,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(13421772,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(14380470,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15099494,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(15578843,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777208,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777212,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(16777214,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331648,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331649,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331651,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331655,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331663,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331679,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331711,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331775,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50331903,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50332159,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50332671,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50333695,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50335743,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50339839,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50348031,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50364415,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50397183,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50462719,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50593791,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(50855935,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(51380223,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(52428799,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(54525951,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(54525952,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(56623104,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(57671680,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58195968,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58458112,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58589184,32,FLEN)
NAN_BOXED(2116493714,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(58654720,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
